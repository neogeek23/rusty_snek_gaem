var N = null;var searchIndex = {};
searchIndex["adler32"]={"doc":"A minimal implementation of Adler32 for Rust.","items":[[3,"RollingAdler32","adler32","A rolling version of the Adler32 hash, which can 'forget' past bytes.",N,N],[5,"adler32","","Consume a Read object and returns the Adler32 hash.",N,[[["r"]],["result",["u32"]]]],[11,"new","","Creates an empty Adler32 context (with hash 1).",0,[[],["rollingadler32"]]],[11,"from_value","","Creates an Adler32 context with the given initial value.",0,[[["u32"]],["rollingadler32"]]],[11,"from_buffer","","Convenience function initializing a context from the hash of a buffer.",0,N],[11,"hash","","Returns the current hash.",0,[[["self"]],["u32"]]],[11,"remove","","Removes the given `byte` that was fed to the algorithm `size` bytes ago.",0,[[["self"],["usize"],["u8"]]]],[11,"update","","Feeds a new `byte` to the algorithm to update the hash.",0,[[["self"],["u8"]]]],[11,"update_buffer","","Feeds a vector of bytes to the algorithm to update the hash.",0,N]],"paths":[[3,"RollingAdler32"]]};
searchIndex["arrayvec"]={"doc":"arrayvec provides the types `ArrayVec` and `ArrayString`:  array-backed vector and string types, which store their contents inline.","items":[[3,"ArrayString","arrayvec","A string with a fixed capacity.",N,N],[3,"CapacityError","","Error value indicating insufficient capacity",N,N],[3,"ArrayVec","","A vector with a fixed capacity.",N,N],[3,"IntoIter","","By-value iterator for `ArrayVec`.",N,N],[3,"Drain","","A draining iterator for `ArrayVec`.",N,N],[11,"default","","Return an empty `ArrayString`",0,[[],["arraystring"]]],[11,"new","","Create a new empty `ArrayString`.",0,[[],["arraystring"]]],[11,"from","","Create a new `ArrayString` from a `str`.",0,[[["str"]],["result",["capacityerror"]]]],[11,"from_byte_string","","Create a new `ArrayString` from a byte string literal.",0,[[["a"]],["result",["utf8error"]]]],[11,"capacity","","Return the capacity of the `ArrayString`.",0,[[["self"]],["usize"]]],[11,"is_full","","Return if the `ArrayString` is completely filled.",0,[[["self"]],["bool"]]],[11,"push","","Adds the given char to the end of the string.",0,[[["self"],["char"]]]],[11,"try_push","","Adds the given char to the end of the string.",0,[[["self"],["char"]],["result",["capacityerror"]]]],[11,"push_str","","Adds the given string slice to the end of the string.",0,[[["self"],["str"]]]],[11,"try_push_str","","Adds the given string slice to the end of the string.",0,[[["self"],["str"]],["result",["capacityerror"]]]],[11,"pop","","Removes the last character from the string and returns it.",0,[[["self"]],["option",["char"]]]],[11,"truncate","","Shortens this `ArrayString` to the specified length.",0,[[["self"],["usize"]]]],[11,"remove","","Removes a `char` from this `ArrayString` at a byte position and returns it.",0,[[["self"],["usize"]],["char"]]],[11,"clear","","Make the string empty.",0,[[["self"]]]],[11,"set_len","","Set the strings’s length.",0,[[["self"],["usize"]]]],[11,"as_str","","Return a string slice of the whole `ArrayString`.",0,[[["self"]],["str"]]],[11,"deref","","",0,[[["self"]],["str"]]],[11,"deref_mut","","",0,[[["self"]],["str"]]],[11,"eq","","",0,[[["self"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["str"]],["bool"]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"borrow","","",0,[[["self"]],["str"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"write_char","","",0,[[["self"],["char"]],["result"]]],[11,"write_str","","",0,[[["self"],["str"]],["result"]]],[11,"clone","","",0,[[["self"]],["arraystring"]]],[11,"clone_from","","",0,[[["self"],["self"]]]],[11,"partial_cmp","","",0,[[["self"],["self"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["self"]],["bool"]]],[11,"le","","",0,[[["self"],["self"]],["bool"]]],[11,"gt","","",0,[[["self"],["self"]],["bool"]]],[11,"ge","","",0,[[["self"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["str"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["str"]],["bool"]]],[11,"le","","",0,[[["self"],["str"]],["bool"]]],[11,"gt","","",0,[[["self"],["str"]],["bool"]]],[11,"ge","","",0,[[["self"],["str"]],["bool"]]],[11,"cmp","","",0,[[["self"],["self"]],["ordering"]]],[11,"clone","","",1,[[["self"]],["capacityerror"]]],[11,"cmp","","",1,[[["self"],["capacityerror"]],["ordering"]]],[11,"eq","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"ne","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["capacityerror"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"le","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"gt","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"ge","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"new","","Create a new `CapacityError` from `element`.",1,[[["t"]],["capacityerror"]]],[11,"element","","Extract the overflowing element",1,[[["self"]],["t"]]],[11,"simplify","","Convert into a `CapacityError` that does not carry an element.",1,[[["self"]],["capacityerror"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[8,"Array","","Trait for fixed size arrays.",N,N],[16,"Item","","The array’s element type",2,N],[8,"RangeArgument","","`RangeArgument` is implemented by Rust's built-in range types, produced by range syntax like `..`, `a..`, `..b` or `c..d`.",N,N],[11,"start","","Start index (inclusive)",3,[[["self"]],["option",["usize"]]]],[11,"end","","End index (exclusive)",3,[[["self"]],["option",["usize"]]]],[11,"drop","","",4,[[["self"]]]],[11,"new","","Create a new empty `ArrayVec`.",4,[[],["arrayvec"]]],[11,"len","","Return the number of elements in the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,"capacity","","Return the capacity of the `ArrayVec`.",4,[[["self"]],["usize"]]],[11,"is_full","","Return if the `ArrayVec` is completely filled.",4,[[["self"]],["bool"]]],[11,"push","","Push `element` to the end of the vector.",4,N],[11,"try_push","","Push `element` to the end of the vector.",4,N],[11,"push_unchecked","","Push `element` to the end of the vector without checking the capacity.",4,N],[11,"insert","","Insert `element` at position `index`.",4,N],[11,"try_insert","","Insert `element` at position `index`.",4,N],[11,"pop","","Remove the last element in the vector and return it.",4,[[["self"]],["option"]]],[11,"swap_remove","","Remove the element at `index` and swap the last element into its place.",4,N],[11,"swap_pop","","Remove the element at `index` and swap the last element into its place.",4,[[["self"],["usize"]],["option"]]],[11,"remove","","Remove the element at `index` and shift down the following elements.",4,N],[11,"pop_at","","Remove the element at `index` and shift down the following elements.",4,[[["self"],["usize"]],["option"]]],[11,"truncate","","Shortens the vector, keeping the first `len` elements and dropping the rest.",4,[[["self"],["usize"]]]],[11,"clear","","Remove all elements in the vector.",4,[[["self"]]]],[11,"retain","","Retains only the elements specified by the predicate.",4,[[["self"],["f"]]]],[11,"set_len","","Set the vector’s length without dropping or moving out elements",4,[[["self"],["usize"]]]],[11,"drain","","Create a draining iterator that removes the specified range in the vector and yields the removed items from start to end. The element range is removed even if the iterator is not consumed until the end.",4,[[["self"],["r"]],["drain"]]],[11,"into_inner","","Return the inner fixed size array, if it is full to its capacity.",4,[[["self"]],["result"]]],[11,"dispose","","Dispose of `self` without the overwriting that is needed in Drop.",4,[[["self"]]]],[11,"as_slice","","Return a slice containing all elements of the vector.",4,N],[11,"as_mut_slice","","Return a mutable slice containing all elements of the vector.",4,N],[11,"deref","","",4,N],[11,"deref_mut","","",4,N],[11,"from","","",4,[[["a"]],["self"]]],[11,"into_iter","","",4,[[["self"]],["intoiter"]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,N],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"drop","","",5,[[["self"]]]],[11,"next","","",6,[[["self"]],["option"]]],[11,"size_hint","","",6,N],[11,"next_back","","",6,[[["self"]],["option"]]],[11,"drop","","",6,[[["self"]]]],[11,"extend","","",4,[[["self"],["t"]]]],[11,"from_iter","","",4,[[["t"]],["self"]]],[11,"clone","","",4,[[["self"]],["self"]]],[11,"clone_from","","",4,[[["self"],["self"]]]],[11,"hash","","",4,[[["self"],["h"]]]],[11,"eq","","",4,[[["self"],["self"]],["bool"]]],[11,"eq","","",4,N],[11,"borrow","","",4,N],[11,"borrow_mut","","",4,N],[11,"as_ref","","",4,N],[11,"as_mut","","",4,N],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"default","","Return an empty array",4,[[],["arrayvec"]]],[11,"partial_cmp","","",4,[[["self"],["arrayvec"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["self"]],["bool"]]],[11,"le","","",4,[[["self"],["self"]],["bool"]]],[11,"ge","","",4,[[["self"],["self"]],["bool"]]],[11,"gt","","",4,[[["self"],["self"]],["bool"]]],[11,"cmp","","",4,[[["self"],["arrayvec"]],["ordering"]]],[11,"write","","",4,N],[11,"flush","","",4,[[["self"]],["result"]]],[11,"start","","Start index (inclusive)",3,[[["self"]],["option",["usize"]]]],[11,"end","","End index (exclusive)",3,[[["self"]],["option",["usize"]]]]],"paths":[[3,"ArrayString"],[3,"CapacityError"],[8,"Array"],[8,"RangeArgument"],[3,"ArrayVec"],[3,"IntoIter"],[3,"Drain"]]};
searchIndex["bitflags"]={"doc":"A typesafe bitmask flag generator useful for sets of C-style bitmask flags. It can be used for creating typesafe wrappers around C APIs.","items":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",N,N]],"paths":[]};
searchIndex["byteorder"]={"doc":"This crate provides convenience methods for encoding and decoding numbers in either [big-endian or little-endian order].","items":[[4,"BigEndian","byteorder","Defines big-endian serialization.",N,N],[4,"LittleEndian","","Defines little-endian serialization.",N,N],[6,"BE","","A type alias for [`BigEndian`].",N,N],[6,"LE","","A type alias for [`LittleEndian`].",N,N],[6,"NetworkEndian","","Defines network byte order serialization.",N,N],[6,"NativeEndian","","Defines system native-endian serialization.",N,N],[8,"ReadBytesExt","","Extends [`Read`] with methods for reading numbers. (For `std::io`.)",N,N],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],["result",["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],["result",["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],["result",["u16"]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],["result",["i16"]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["u64"]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["i64"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,[[["self"]],["result",["f32"]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,[[["self"]],["result",["f64"]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the underlying reader.",0,N],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the underlying reader.",0,N],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the underlying reader.",0,N],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the underlying reader.",0,N],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the underlying reader.",0,N],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the underlying reader.",0,N],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) floating point numbers from the underlying reader.",0,N],[11,"read_f32_into_unchecked","","DEPRECATED.",0,N],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) floating point numbers from the underlying reader.",0,N],[11,"read_f64_into_unchecked","","DEPRECATED.",0,N],[8,"WriteBytesExt","","Extends [`Write`] with methods for writing numbers. (For `std::io`.)",N,N],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["self"],["u16"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i64"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,[[["self"],["f32"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,[[["self"],["f64"]],["result"]]],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as bytes.",N,N],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,N],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,N],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,N],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,N],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,N],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,N],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,N],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in u32.",2,N],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,N],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in u64.",2,N],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,N],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,N],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,N],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,N],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,N],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",2,N],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,N],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,N],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number.",2,N],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number.",2,N],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,N],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,N],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,N],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,N],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,N],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,N],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number.",2,N],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number.",2,N],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,N],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,N],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,N],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,N],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,N],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,N],[11,"read_f32_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,N],[11,"read_f64_into_unchecked","","Reads IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,N],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,N],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,N],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,N],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,N],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,N],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,N],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point numbers from `src` into `dst`.",2,N],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point numbers from `src` into `dst`.",2,N],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a particular endianness.",2,N],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a particular endianness.",2,N],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a particular endianness.",2,N],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a particular endianness.",2,N],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a particular endianness.",2,N],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a particular endianness.",2,N],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4 bytes) floating point numbers to a particular endianness.",2,N],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8 bytes) floating point numbers to a particular endianness.",2,N],[11,"clone","","",3,[[["self"]],["bigendian"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"hash","","",3,N],[11,"cmp","","",3,[[["self"],["bigendian"]],["ordering"]]],[11,"eq","","",3,[[["self"],["bigendian"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["bigendian"]],["option",["ordering"]]]],[11,"default","","",3,[[],["bigendian"]]],[11,"clone","","",4,[[["self"]],["littleendian"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",4,N],[11,"cmp","","",4,[[["self"],["littleendian"]],["ordering"]]],[11,"eq","","",4,[[["self"],["littleendian"]],["bool"]]],[11,"partial_cmp","","",4,[[["self"],["littleendian"]],["option",["ordering"]]]],[11,"default","","",4,[[],["littleendian"]]],[11,"read_u16","","",3,N],[11,"read_u32","","",3,N],[11,"read_u64","","",3,N],[11,"read_uint","","",3,N],[11,"write_u16","","",3,N],[11,"write_u32","","",3,N],[11,"write_u64","","",3,N],[11,"write_uint","","",3,N],[11,"read_u16_into","","",3,N],[11,"read_u32_into","","",3,N],[11,"read_u64_into","","",3,N],[11,"write_u16_into","","",3,N],[11,"write_u32_into","","",3,N],[11,"write_u64_into","","",3,N],[11,"from_slice_u16","","",3,N],[11,"from_slice_u32","","",3,N],[11,"from_slice_u64","","",3,N],[11,"from_slice_f32","","",3,N],[11,"from_slice_f64","","",3,N],[11,"read_u16","","",4,N],[11,"read_u32","","",4,N],[11,"read_u64","","",4,N],[11,"read_uint","","",4,N],[11,"write_u16","","",4,N],[11,"write_u32","","",4,N],[11,"write_u64","","",4,N],[11,"write_uint","","",4,N],[11,"read_u16_into","","",4,N],[11,"read_u32_into","","",4,N],[11,"read_u64_into","","",4,N],[11,"write_u16_into","","",4,N],[11,"write_u32_into","","",4,N],[11,"write_u64_into","","",4,N],[11,"from_slice_u16","","",4,N],[11,"from_slice_u32","","",4,N],[11,"from_slice_u64","","",4,N],[11,"from_slice_f32","","",4,N],[11,"from_slice_f64","","",4,N],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],["result",["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],["result",["i8"]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],["result",["u16"]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],["result",["i16"]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],["result",["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],["result",["i32"]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],["result",["u64"]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],["result",["i64"]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["u64"]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],["result",["i64"]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point number from the underlying reader.",0,[[["self"]],["result",["f32"]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point number from the underlying reader.",0,[[["self"]],["result",["f64"]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the underlying reader.",0,N],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the underlying reader.",0,N],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the underlying reader.",0,N],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the underlying reader.",0,N],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the underlying reader.",0,N],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the underlying reader.",0,N],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes) floating point numbers from the underlying reader.",0,N],[11,"read_f32_into_unchecked","","DEPRECATED.",0,N],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes) floating point numbers from the underlying reader.",0,N],[11,"read_f64_into_unchecked","","DEPRECATED.",0,N],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["self"],["u16"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["self"],["i64"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i64"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point number to the underlying writer.",1,[[["self"],["f32"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point number to the underlying writer.",1,[[["self"],["f64"]],["result"]]]],"paths":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["cfg_if"]={"doc":"A macro for defining `#[cfg]` if-else statements.","items":[[14,"cfg_if","cfg_if","",N,N]],"paths":[]};
searchIndex["color_quant"]={"doc":"Color quantization library This library provides a color quantizer based on the NEUQUANT quantization algorithm by Anthony Dekker. ### Usage `let data = vec![0; 40]; let nq = color_quant::NeuQuant::new(10, 256, &data); let indixes: Vec<u8> = data.chunks(4).map(|pix| nq.index_of(pix) as u8).collect(); let color_map = nq.color_map_rgba();`","items":[[3,"NeuQuant","color_quant","Neural network based color quantizer.",N,N],[11,"new","","Creates a new neuronal network and trains it with the supplied data.",0,N],[11,"init","","Initializes the neuronal network and trains it with the supplied data.",0,N],[11,"map_pixel","","Maps the rgba-pixel in-place to the best-matching color in the color map.",0,N],[11,"index_of","","Finds the best-matching index in the color map.",0,N],[11,"color_map_rgba","","Returns the RGBA color map calculated from the sample. ",0,[[["self"]],["vec",["u8"]]]],[11,"color_map_rgb","","Returns the RGBA color map calculated from the sample. ",0,[[["self"]],["vec",["u8"]]]]],"paths":[[3,"NeuQuant"]]};
searchIndex["crossbeam_deque"]={"doc":"A concurrent work-stealing deque.","items":[[3,"Deque","crossbeam_deque","A concurrent work-stealing deque.",N,N],[3,"Stealer","","A stealer that steals elements from the top of a deque.",N,N],[4,"Steal","","Possible outcomes of a steal operation.",N,N],[13,"Empty","","The deque was empty at the time of stealing.",0,N],[13,"Data","","Some data has been successfully stolen.",0,N],[13,"Retry","","Lost the race for stealing data to another concurrent operation. Try again.",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["steal"]],["bool"]]],[11,"ne","","",0,[[["self"],["steal"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["steal"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["steal"]],["bool"]]],[11,"le","","",0,[[["self"],["steal"]],["bool"]]],[11,"gt","","",0,[[["self"],["steal"]],["bool"]]],[11,"ge","","",0,[[["self"],["steal"]],["bool"]]],[11,"cmp","","",0,[[["self"],["steal"]],["ordering"]]],[11,"clone","","",0,[[["self"]],["steal"]]],[11,"new","","Returns a new deque.",1,[[],["deque"]]],[11,"with_min_capacity","","Returns a new deque with the specified minimum capacity.",1,[[["usize"]],["deque"]]],[11,"is_empty","","Returns `true` if the deque is empty.",1,[[["self"]],["bool"]]],[11,"len","","Returns the number of elements in the deque.",1,[[["self"]],["usize"]]],[11,"push","","Pushes an element into the bottom of the deque.",1,[[["self"],["t"]]]],[11,"pop","","Pops an element from the bottom of the deque.",1,[[["self"]],["option"]]],[11,"steal","","Steals an element from the top of the deque.",1,[[["self"]],["steal"]]],[11,"stealer","","Creates a stealer that can be shared with other threads.",1,[[["self"]],["stealer"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"default","","",1,[[],["deque"]]],[11,"is_empty","","Returns `true` if the deque is empty.",2,[[["self"]],["bool"]]],[11,"len","","Returns the number of elements in the deque.",2,[[["self"]],["usize"]]],[11,"steal","","Steals an element from the top of the deque.",2,[[["self"]],["steal"]]],[11,"clone","","Creates another stealer.",2,[[["self"]],["stealer"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"Steal"],[3,"Deque"],[3,"Stealer"]]};
searchIndex["crossbeam_epoch"]={"doc":"Epoch-based memory reclamation.","items":[[3,"Atomic","crossbeam_epoch","An atomic pointer that can be safely shared between threads.",N,N],[3,"CompareAndSetError","","The error returned on failed compare-and-set operation.",N,N],[12,"current","","The value in the atomic pointer at the time of the failed operation.",0,N],[12,"new","","The new value, which the operation failed to store.",0,N],[3,"Owned","","An owned heap-allocated object.",N,N],[3,"Shared","","A pointer to an object protected by the epoch GC.",N,N],[3,"Guard","","A guard that keeps the current thread pinned.",N,N],[3,"Collector","","An epoch-based garbage collector.",N,N],[3,"Handle","","A handle to a garbage collector.",N,N],[5,"unprotected","","Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.",N,[[],["guard"]]],[5,"default_handle","","Returns the default handle associated with the current thread.",N,[[],["handle"]]],[5,"is_pinned","","Returns `true` if the current thread is pinned.",N,[[],["bool"]]],[5,"pin","","Pins the current thread.",N,[[],["guard"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"null","","Returns a new null atomic pointer.",1,[[],["atomic"]]],[11,"new","","Allocates `value` on the heap and returns a new atomic pointer pointing to it.",1,[[["t"]],["atomic"]]],[11,"load","","Loads a `Shared` from the atomic pointer.",1,[[["self"],["ordering"],["guard"]],["shared"]]],[11,"store","","Stores a `Shared` or `Owned` pointer into the atomic pointer.",1,[[["self"],["p"],["ordering"]]]],[11,"swap","","Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous `Shared`.",1,[[["self"],["p"],["ordering"],["guard"]],["shared"]]],[11,"compare_and_set","","Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current value is the same as `current`. The tag is also taken into account, so two pointers to the same object, but with different tags, will not be considered equal.",1,[[["self"],["shared"],["p"],["o"],["guard"]],["result",["shared","compareandseterror"]]]],[11,"compare_and_set_weak","","Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current value is the same as `current`. The tag is also taken into account, so two pointers to the same object, but with different tags, will not be considered equal.",1,[[["self"],["shared"],["p"],["o"],["guard"]],["result",["shared","compareandseterror"]]]],[11,"fetch_and","","Bitwise \"and\" with the current tag.",1,[[["self"],["usize"],["ordering"],["guard"]],["shared"]]],[11,"fetch_or","","Bitwise \"or\" with the current tag.",1,[[["self"],["usize"],["ordering"],["guard"]],["shared"]]],[11,"fetch_xor","","Bitwise \"xor\" with the current tag.",1,[[["self"],["usize"],["ordering"],["guard"]],["shared"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","Returns a copy of the atomic value.",1,[[["self"]],["self"]]],[11,"default","","",1,[[],["self"]]],[11,"from","","Returns a new atomic pointer pointing to `owned`.",1,[[["owned"]],["self"]]],[11,"from","","",1,[[["box"]],["self"]]],[11,"from","","",1,[[["t"]],["self"]]],[11,"from","","Returns a new atomic pointer pointing to `ptr`.",1,[[["shared"]],["self"]]],[11,"from","","Returns a new atomic pointer pointing to `raw`.",1,N],[11,"new","","Allocates `value` on the heap and returns a new owned pointer pointing to it.",2,[[["t"]],["owned"]]],[11,"from_raw","","Returns a new owned pointer pointing to `raw`.",2,N],[11,"into_shared","","Converts the owned pointer into a [`Shared`].",2,[[["self"],["guard"]],["shared"]]],[11,"into_box","","Converts the owned pointer into a `Box`.",2,[[["self"]],["box"]]],[11,"tag","","Returns the tag stored within the pointer.",2,[[["self"]],["usize"]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the unused bits of the pointer to `T`.",2,[[["self"],["usize"]],["owned"]]],[11,"drop","","",2,[[["self"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"deref_mut","","",2,[[["self"]],["t"]]],[11,"from","","",2,[[["t"]],["self"]]],[11,"from","","Returns a new owned pointer pointing to `b`.",2,[[["box"]],["self"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"as_ref","","",2,[[["self"]],["t"]]],[11,"as_mut","","",2,[[["self"]],["t"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"null","","Returns a new null pointer.",3,[[],["shared"]]],[11,"is_null","","Returns `true` if the pointer is null.",3,[[["self"]],["bool"]]],[11,"as_raw","","Converts the pointer to a raw pointer (without the tag).",3,N],[11,"deref","","Dereferences the pointer.",3,[[["self"]],["t"]]],[11,"as_ref","","Converts the pointer to a reference.",3,[[["self"]],["option"]]],[11,"into_owned","","Takes ownership of the pointee.",3,[[["self"]],["owned"]]],[11,"tag","","Returns the tag stored within the pointer.",3,[[["self"]],["usize"]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the unused bits of the pointer to `T`.",3,[[["self"],["usize"]],["shared"]]],[11,"from","","Returns a new pointer pointing to `raw`.",3,N],[11,"eq","","",3,[[["self"],["self"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["self"]],["option",["ordering"]]]],[11,"cmp","","",3,[[["self"],["self"]],["ordering"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"default","","",3,[[],["self"]]],[11,"new","","Creates a new collector.",4,[[],["self"]]],[11,"handle","","Creates a new handle for the collector.",4,[[["self"]],["handle"]]],[11,"clone","","Creates another reference to the same garbage collector.",4,[[["self"]],["self"]]],[11,"pin","","Pins the handle.",5,[[["self"]],["guard"]]],[11,"is_pinned","","Returns `true` if the handle is pinned.",5,[[["self"]],["bool"]]],[11,"drop","","",5,[[["self"]]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"defer","","Stores a function so that it can be executed at some point after all currently pinned threads get unpinned.",6,[[["self"],["f"]]]],[11,"flush","","Clears up the thread-local cache of deferred functions by executing them or moving into the global cache.",6,[[["self"]]]],[11,"repin","","Unpins and then immediately re-pins the thread.",6,[[["self"]]]],[11,"repin_after","","Temporarily unpins the thread, executes the given function and then re-pins the thread.",6,[[["self"],["f"]],["r"]]],[11,"drop","","",6,[[["self"]]]],[11,"clone","","",6,[[["self"]],["guard"]]],[8,"CompareAndSetOrdering","","Memory orderings for compare-and-set operations.",N,N],[10,"success","","The ordering of the operation when it succeeds.",7,[[["self"]],["ordering"]]],[10,"failure","","The ordering of the operation when it fails.",7,[[["self"]],["ordering"]]]],"paths":[[3,"CompareAndSetError"],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,"Collector"],[3,"Handle"],[3,"Guard"],[8,"CompareAndSetOrdering"]]};
searchIndex["crossbeam_utils"]={"doc":"","items":[[0,"cache_padded","crossbeam_utils","",N,N],[3,"CachePadded","crossbeam_utils::cache_padded","Pads `T` to the length of a cache line.",N,N],[11,"drop","","",0,[[["self"]]]],[11,"new","","Pads a value to the length of a cache line.",0,[[["t"]],["cachepadded"]]],[11,"deref","","",0,[[["self"]],["t"]]],[11,"deref_mut","","",0,[[["self"]],["t"]]],[11,"default","","",0,[[],["self"]]],[11,"clone","","",0,[[["self"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"from","","",0,[[["t"]],["self"]]],[0,"atomic_option","crossbeam_utils","",N,N],[3,"AtomicOption","crossbeam_utils::atomic_option","",N,N],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"drop","","",1,[[["self"]]]],[11,"new","","",1,[[],["self"]]],[11,"swap_box","","",1,[[["self"],["box"],["ordering"]],["option",["box"]]]],[11,"swap","","",1,[[["self"],["t"],["ordering"]],["option"]]],[11,"take","","",1,[[["self"],["ordering"]],["option"]]],[11,"default","","",1,[[],["self"]]],[0,"scoped","crossbeam_utils","",N,N],[3,"Scope","crossbeam_utils::scoped","",N,N],[3,"ScopedJoinHandle","","A handle to a scoped thread",N,N],[3,"ScopedThreadBuilder","","Scoped thread configuration. Provides detailed control over the properties and behavior of new scoped threads.",N,N],[5,"spawn_unsafe","","Like `std::thread::spawn`, but without the closure bounds.",N,[[["f"]],["joinhandle"]]],[5,"builder_spawn_unsafe","","Like `std::thread::Builder::spawn`, but without the closure bounds.",N,[[["builder"],["f"]],["result",["joinhandle"]]]],[5,"scope","","Create a new `scope`, for deferred destructors.",N,[[["f"]],["r"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"defer","","Schedule code to be executed when exiting the scope.",2,[[["self"],["f"]]]],[11,"spawn","","Create a scoped thread.",2,[[["self"],["f"]],["scopedjoinhandle"]]],[11,"builder","","Generates the base configuration for spawning a scoped thread, from which configuration methods can be chained.",2,[[["self"]],["scopedthreadbuilder"]]],[11,"name","","Names the thread-to-be. Currently the name is used for identification only in panic messages.",4,[[["self"],["string"]],["scopedthreadbuilder"]]],[11,"stack_size","","Sets the size of the stack for the new thread.",4,[[["self"],["usize"]],["scopedthreadbuilder"]]],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",4,[[["self"],["f"]],["result",["scopedjoinhandle"]]]],[11,"join","","Join the scoped thread, returning the result it produced.",3,[[["self"]],["t"]]],[11,"thread","","Get the underlying thread handle.",3,[[["self"]],["thread"]]],[11,"drop","","",2,[[["self"]]]]],"paths":[[3,"CachePadded"],[3,"AtomicOption"],[3,"Scope"],[3,"ScopedJoinHandle"],[3,"ScopedThreadBuilder"]]};
searchIndex["deflate"]={"doc":"An implementation an encoder using DEFLATE compression algorightm in pure rust.","items":[[3,"CompressionOptions","deflate","A struct describing the options for a compressor or compression function.",N,N],[12,"max_hash_checks","","The maximum number of checks to make in the hash table for matches.",0,N],[12,"lazy_if_less_than","","Only lazy match if we have a length less than this value.",0,N],[12,"matching_type","","Whether to use lazy or greedy matching.",0,N],[12,"special","","Force fixed/stored blocks (Not implemented yet). * Default value: `SpecialOptions::Normal`",0,N],[4,"SpecialOptions","","Enum allowing some special options (not implemented yet)!",N,N],[13,"Normal","","Compress normally.",1,N],[13,"_ForceFixed","","Force fixed huffman tables. (Unimplemented!).",1,N],[13,"_ForceStored","","Force stored (uncompressed) blocks only. (Unimplemented!).",1,N],[4,"Compression","","An enum describing the level of compression to be used by the encoder",N,N],[13,"Fast","","Fast minimal compression (`CompressionOptions::fast()`).",2,N],[13,"Default","","Default level (`CompressionOptions::default()`).",2,N],[13,"Best","","Higher compression level (`CompressionOptions::high()`).",2,N],[4,"MatchingType","","An enum describing whether we use lazy or greedy matching.",N,N],[13,"Greedy","","Use greedy matching: the matching algorithm simply uses a match right away if found.",3,N],[13,"Lazy","","Use lazy matching: after finding a match, the next input byte is checked, to see if there is a better match starting at that byte.",3,N],[5,"deflate_bytes_conf","","Compress the given slice of bytes with DEFLATE compression.",N,N],[5,"deflate_bytes","","Compress the given slice of bytes with DEFLATE compression using the default compression level.",N,N],[5,"deflate_bytes_zlib_conf","","Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer.",N,N],[5,"deflate_bytes_zlib","","Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer, using the default compression level.",N,N],[11,"clone","","",2,[[["self"]],["compression"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"eq","","",2,[[["self"],["compression"]],["bool"]]],[11,"cmp","","",2,[[["self"],["compression"]],["ordering"]]],[11,"partial_cmp","","",2,[[["self"],["compression"]],["option",["ordering"]]]],[11,"hash","","",2,N],[11,"default","","",2,[[],["compression"]]],[11,"clone","","",1,[[["self"]],["specialoptions"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",1,[[["self"],["specialoptions"]],["bool"]]],[11,"hash","","",1,N],[11,"default","","",1,[[],["specialoptions"]]],[11,"clone","","",0,[[["self"]],["compressionoptions"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["compressionoptions"]],["bool"]]],[11,"ne","","",0,[[["self"],["compressionoptions"]],["bool"]]],[11,"hash","","",0,N],[11,"high","","Returns compression settings rouhgly corresponding to the `HIGH(9)` setting in miniz.",0,[[],["compressionoptions"]]],[11,"fast","","Returns  a fast set of compression settings",0,[[],["compressionoptions"]]],[11,"huffman_only","","Returns a set of compression settings that makes the compressor only compress using huffman coding. (Ignoring any length/distance matching)",0,[[],["compressionoptions"]]],[11,"rle","","Returns a set of compression settings that makes the compressor compress only using run-length encoding (i.e only looking for matches one byte back).",0,[[],["compressionoptions"]]],[11,"default","","Returns the options describing the default compression level.",0,[[],["compressionoptions"]]],[11,"from","","",0,[[["compression"]],["compressionoptions"]]],[11,"clone","","",3,[[["self"]],["matchingtype"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"eq","","",3,[[["self"],["matchingtype"]],["bool"]]],[11,"cmp","","",3,[[["self"],["matchingtype"]],["ordering"]]],[11,"partial_cmp","","",3,[[["self"],["matchingtype"]],["option",["ordering"]]]],[11,"hash","","",3,N],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[0,"write","","Encoders implementing a `Write` interface.",N,N],[3,"DeflateEncoder","deflate::write","A DEFLATE encoder/compressor.",N,N],[3,"ZlibEncoder","","A Zlib encoder/compressor.",N,N],[11,"new","","Creates a new encoder using the provided compression options.",4,[[["w"],["o"]],["deflateencoder"]]],[11,"finish","","Encode all pending data to the contained writer, consume this `DeflateEncoder`, and return the contained writer if writing succeeds.",4,[[["self"]],["result"]]],[11,"reset","","Resets the encoder (except the compression options), replacing the current writer with a new one, returning the old one.",4,[[["self"],["w"]],["result"]]],[11,"write","","",4,N],[11,"flush","","Flush the encoder.",4,[[["self"]],["result"]]],[11,"drop","","When the encoder is dropped, output the rest of the data.",4,[[["self"]]]],[11,"new","","Create a new `ZlibEncoder` using the provided compression options.",5,[[["w"],["o"]],["zlibencoder"]]],[11,"finish","","Encode all pending data to the contained writer, consume this `ZlibEncoder`, and return the contained writer if writing succeeds.",5,[[["self"]],["result"]]],[11,"reset","","Resets the encoder (except the compression options), replacing the current writer with a new one, returning the old one.",5,[[["self"],["w"]],["result"]]],[11,"checksum","","Return the adler32 checksum of the currently consumed data.",5,[[["self"]],["u32"]]],[11,"write","","",5,N],[11,"flush","","Flush the encoder.",5,[[["self"]],["result"]]],[11,"drop","","When the encoder is dropped, output the rest of the data.",5,[[["self"]]]]],"paths":[[3,"CompressionOptions"],[4,"SpecialOptions"],[4,"Compression"],[4,"MatchingType"],[3,"DeflateEncoder"],[3,"ZlibEncoder"]]};
searchIndex["dlib"]={"doc":"","items":[[3,"Library","dlib","A loaded dynamic library.",N,N],[3,"Symbol","","Symbol from a library.",N,N],[4,"DlError","","",N,N],[13,"NotFound","","",0,N],[13,"MissingSymbol","","",0,N],[14,"ffi_dispatch","","",N,N],[14,"ffi_dispatch_static","","",N,N],[14,"link_external_library","","",N,N],[14,"dlopen_external_library","","",N,N],[14,"external_library","","",N,N],[11,"new","","Find and load a dynamic library.",1,[[["p"]],["result",["library","error"]]]],[11,"get","","Get a pointer to function or static variable by symbol name.",1,N],[11,"clone","","",2,[[["self"]],["symbol"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"from","","",1,[[["library"]],["library"]]],[11,"into_raw","","Extract the wrapped `os::platform::Symbol`.",2,[[["self"]],["symbol"]]],[11,"from_raw","","Wrap the `os::platform::Symbol` into this safe wrapper.",2,[[["symbol"],["l"]],["symbol"]]],[11,"lift_option","","Lift Option out of the symbol.",2,[[["self"]],["option",["symbol"]]]]],"paths":[[4,"DlError"],[3,"Library"],[3,"Symbol"]]};
searchIndex["downcast_rs"]={"doc":"Rust enums are great for types where all variations are known beforehand. But in the case where you want to implement a container of user-defined types, an open-ended type like a trait object is needed. In some cases, it is useful to cast the trait object back into its original concrete type to access additional functionality and performant inlined implementations.","items":[[8,"Downcast","downcast_rs","Supports conversion to `Any`. Traits to be extended by `impl_downcast!` must extend `Downcast`.",N,N],[10,"into_any","","Convert `Box<Trait>` (where `Trait: Downcast`) to `Box<Any>`. `Box<Any>` can then be further `downcast` into `Box<ConcreteType>` where `ConcreteType` implements `Trait`.",0,[[["box"]],["box",["any"]]]],[10,"as_any","","Convert `&Trait` (where `Trait: Downcast`) to `&Any`. This is needed since Rust cannot generate `&Any`'s vtable from `&Trait`'s.",0,[[["self"]],["any"]]],[10,"as_any_mut","","Convert `&mut Trait` (where `Trait: Downcast`) to `&Any`. This is needed since Rust cannot generate `&mut Any`'s vtable from `&mut Trait`'s.",0,[[["self"]],["any"]]],[14,"impl_downcast","","Adds downcasting support to traits that extend `downcast::Downcast` by defining forwarding methods to the corresponding implementations on `std::any::Any` in the standard library.",N,N]],"paths":[[8,"Downcast"]]};
searchIndex["either"]={"doc":"The enum [`Either`] with variants `Left` and `Right` is a general purpose sum type with two cases.","items":[[4,"Either","either","The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.",N,N],[13,"Left","","A value of type `L`.",0,N],[13,"Right","","A value of type `R`.",0,N],[11,"clone","","",0,[[["self"]],["either"]]],[11,"eq","","",0,[[["self"],["either"]],["bool"]]],[11,"ne","","",0,[[["self"],["either"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["either"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["either"]],["bool"]]],[11,"le","","",0,[[["self"],["either"]],["bool"]]],[11,"gt","","",0,[[["self"],["either"]],["bool"]]],[11,"ge","","",0,[[["self"],["either"]],["bool"]]],[11,"cmp","","",0,[[["self"],["either"]],["ordering"]]],[11,"hash","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"is_left","","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[["self"]],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[["self"]],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],["either"]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],["either"]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[["self"]],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant if it is present rewrapping the result in `Left`.",0,[[["self"],["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant if it is present rewrapping the result in `Right`.",0,[[["self"],["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying their result. If the value is `Left(L)` then the first function `f` is applied; if it is `Right(R)` then the second function `g` is applied.",0,[[["self"],["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of the functions ends up being called.",0,[[["self"],["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant if it is present.",0,[[["self"],["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant if it is present.",0,[[["self"],["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[["self"]],["either"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,N],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[["self"]],["t"]]],[11,"from","","",0,[[["result"]],["self"]]],[11,"into","","",0,[[["self"]],["result"]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,N],[11,"fold","","",0,[[["self"],["acc"],["g"]],["acc"]]],[11,"count","","",0,[[["self"]],["usize"]]],[11,"last","","",0,[[["self"]],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[["self"]],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"deref","","",0,N],[11,"deref_mut","","",0,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[14,"try_left","","Macro for unwrapping the left side of an `Either`, which fails early with the opposite side. Can only be used in functions that return `Either` because of the early return of `Right` that it provides.",N,N],[14,"try_right","","Dual to `try_left!`, see its documentation for more information.",N,N]],"paths":[[4,"Either"]]};
searchIndex["event_loop"]={"doc":"A Piston event loop for games and interactive applications","items":[[3,"EventSettings","event_loop","Stores event loop settings.",N,N],[12,"max_fps","","The maximum number of frames per second",0,N],[12,"ups","","The number of updates per second",0,N],[12,"ups_reset","","The number of delayed updates before skipping them to catch up. When set to `0`, it will always try to catch up.",0,N],[12,"swap_buffers","","Enable or disable automatic swapping of buffers.",0,N],[12,"bench_mode","","Enable or disable benchmark mode. When enabled, it will render and update without sleep and ignore input. Used to test performance by playing through as fast as possible. Requires `lazy` to be set to `false`.",0,N],[12,"lazy","","Enable or disable rendering only when receiving input. When enabled, update and idle events are disabled.",0,N],[3,"Events","","An event loop iterator",N,N],[17,"DEFAULT_UPS","","The default updates per second.",N,N],[17,"DEFAULT_UPS_RESET","","The default delayed updates reset.",N,N],[17,"DEFAULT_MAX_FPS","","The default maximum frames per second.",N,N],[8,"EventLoop","","Methods implemented for changing event loop settings.",N,N],[10,"get_event_settings","","Returns event loop settings.",1,[[["self"]],["eventsettings"]]],[10,"set_event_settings","","Sets event loop settings.",1,[[["self"],["eventsettings"]]]],[11,"set_ups","","The number of updates per second",1,[[["self"],["u64"]]]],[11,"ups","","The number of updates per second",1,[[["self"],["u64"]],["self"]]],[11,"set_ups_reset","","The number of delayed updates before skipping them to catch up. When set to `0`, it will always try to catch up.",1,[[["self"],["u64"]]]],[11,"ups_reset","","The number of delayed updates before skipping them to catch up. When set to `0`, it will always try to catch up.",1,[[["self"],["u64"]],["self"]]],[11,"set_max_fps","","The maximum number of frames per second",1,[[["self"],["u64"]]]],[11,"max_fps","","The maximum number of frames per second",1,[[["self"],["u64"]],["self"]]],[11,"set_swap_buffers","","Enable or disable automatic swapping of buffers.",1,[[["self"],["bool"]]]],[11,"swap_buffers","","Enable or disable automatic swapping of buffers.",1,[[["self"],["bool"]],["self"]]],[11,"set_bench_mode","","Enable or disable benchmark mode. When enabled, it will render and update without sleep and ignore input. Used to test performance by playing through as fast as possible. Requires `lazy` to be set to `false`.",1,[[["self"],["bool"]]]],[11,"bench_mode","","Enable or disable benchmark mode. When enabled, it will render and update without sleep and ignore input. Used to test performance by playing through as fast as possible. Requires `lazy` to be set to `false`.",1,[[["self"],["bool"]],["self"]]],[11,"set_lazy","","Enable or disable rendering only when receiving input. When enabled, update events are disabled. Idle events are emitted while receiving input.",1,[[["self"],["bool"]]]],[11,"lazy","","Enable or disable rendering only when receiving input. When enabled, update events are disabled. Idle events are emitted while receiving input.",1,[[["self"],["bool"]],["self"]]],[11,"clone","","",0,[[["self"]],["eventsettings"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates new with default settings.",0,[[],["eventsettings"]]],[11,"default","","",0,[[],["eventsettings"]]],[11,"clone","","",2,[[["self"]],["events"]]],[11,"new","","Creates a new event iterator with default UPS and FPS settings.",2,[[["eventsettings"]],["events"]]],[11,"next","","Returns the next event.",2,[[["self"],["w"]],["option",["event"]]]],[11,"get_event_settings","","",0,[[["self"]],["self"]]],[11,"set_event_settings","","",0,[[["self"],["self"]]]],[11,"get_event_settings","","",2,[[["self"]],["eventsettings"]]],[11,"set_event_settings","","",2,[[["self"],["eventsettings"]]]]],"paths":[[3,"EventSettings"],[8,"EventLoop"],[3,"Events"]]};
searchIndex["float"]={"doc":"Traits for generic floats in game programming","items":[[8,"Float","float","Convenience trait for floats.",N,N],[8,"Min","","Minimum value.",N,N],[10,"min","","Returns the minimum value of self or other.",0,[[["self"],["self"]],["self"]]],[8,"Max","","Maximum value.",N,N],[10,"max","","Returns the maximum value of self or other.",1,[[["self"],["self"]],["self"]]],[8,"Signum","","The sign of the number.",N,N],[10,"signum","","Returns number representing the sign of self",2,[[["self"]],["self"]]],[8,"Powf","","Floating number power.",N,N],[10,"powf","","Returns floating power of the number.",3,[[["self"],["self"]],["self"]]],[8,"Radians","","Useful constants for radians.",N,N],[10,"_90","","Returns radians corresponding to 90 degrees.",4,[[],["self"]]],[10,"_180","","Returns radians corresponding to 180 degrees.",4,[[],["self"]]],[10,"_360","","Returns radians corresponding to 360 degrees.",4,[[],["self"]]],[10,"deg_to_rad","","Convert a value to radians from degrees. Equivalent to `value * (π / 180)`.",4,[[["self"]],["self"]]],[10,"rad_to_deg","","Convert a value to degrees from radians. Equivalent to `value * (180 / π)`.",4,[[["self"]],["self"]]],[8,"One","","Number 1.",N,N],[10,"one","","Returns 1.",5,[[],["self"]]],[8,"Zero","","Number 0.",N,N],[10,"zero","","Returns 0.",6,[[],["self"]]],[8,"Sqrt","","Square root.",N,N],[10,"sqrt","","Returns square root.",7,[[["self"]],["self"]]],[8,"Trig","","Basic trigonometry functions",N,N],[10,"sin","","Returns sine of self.",8,[[["self"]],["self"]]],[10,"cos","","Returns cosine of self.",8,[[["self"]],["self"]]],[10,"tan","","Returns tangent of self.",8,[[["self"]],["self"]]],[10,"asin","","Returns inverse sine of self.",8,[[["self"]],["self"]]],[10,"acos","","Returns inverse cosine of self.",8,[[["self"]],["self"]]],[10,"atan","","Returns inverse tangent of self.",8,[[["self"]],["self"]]],[10,"atan2","","Returns the four quadrant arctangent of self (y) and other (x).",8,[[["self"],["self"]],["self"]]],[10,"sinh","","Returns hyperbolic sine of self.",8,[[["self"]],["self"]]],[10,"cosh","","Returns hyperbolic cosine of self.",8,[[["self"]],["self"]]],[10,"tanh","","Returns hyperbolic tangent of self.",8,[[["self"]],["self"]]],[10,"asinh","","Returns inverse hyperbolic sine of self.",8,[[["self"]],["self"]]],[10,"acosh","","Returns inverse hyperbolic cosine of self.",8,[[["self"]],["self"]]],[10,"atanh","","Returns inverse hyperbolic tangent of self.",8,[[["self"]],["self"]]],[8,"Cast","","Casts into another type.",N,N],[10,"cast","","Casts into other type.",9,[[["self"]],["t"]]],[8,"FromPrimitive","","Trait for converting from different numeric types",N,N],[10,"from_f64","","from a f64",10,[[["f64"]],["self"]]],[10,"from_f32","","from a f32",10,[[["f32"]],["self"]]],[10,"from_isize","","from a isze",10,[[["isize"]],["self"]]],[10,"from_u32","","from a u32",10,[[["u32"]],["self"]]],[10,"from_i32","","from a i32",10,[[["i32"]],["self"]]]],"paths":[[8,"Min"],[8,"Max"],[8,"Signum"],[8,"Powf"],[8,"Radians"],[8,"One"],[8,"Zero"],[8,"Sqrt"],[8,"Trig"],[8,"Cast"],[8,"FromPrimitive"]]};
searchIndex["fnv"]={"doc":"An implementation of the [Fowler–Noll–Vo hash function][chongo].","items":[[3,"FnvHasher","fnv","An implementation of the Fowler–Noll–Vo hash function.",N,N],[6,"FnvBuildHasher","","A builder for default FNV hashers.",N,N],[6,"FnvHashMap","","A `HashMap` using a default FNV hasher.",N,N],[6,"FnvHashSet","","A `HashSet` using a default FNV hasher.",N,N],[11,"default","","",0,[[],["fnvhasher"]]],[11,"with_key","","Create an FNV hasher starting with a state corresponding to the hash `key`.",0,[[["u64"]],["fnvhasher"]]],[11,"finish","","",0,[[["self"]],["u64"]]],[11,"write","","",0,N]],"paths":[[3,"FnvHasher"]]};
searchIndex["gif"]={"doc":"GIF en- and decoding library Build Status","items":[[3,"Frame","gif","A GIF frame",N,N],[12,"delay","","Frame delay in units of 10 ms.",0,N],[12,"dispose","","Disposal method.",0,N],[12,"transparent","","Transparent index (if available).",0,N],[12,"needs_user_input","","True if the frame needs user input to be displayed.",0,N],[12,"top","","Offset from the top border of the canvas.",0,N],[12,"left","","Offset from the left border of the canvas.",0,N],[12,"width","","Width of the frame.",0,N],[12,"height","","Height of the frame.",0,N],[12,"interlaced","","True if the image is interlaced.",0,N],[12,"palette","","Frame local color palette if available.",0,N],[12,"buffer","","Buffer containing the image data. Only indices unless configured differently.",0,N],[3,"StreamingDecoder","","GIF decoder which supports streaming",N,N],[3,"MemoryLimit","","Memory limit in bytes. `MemoryLimit::Some(0)` means that there is no memory limit set.",N,N],[12,"0","","",1,N],[3,"Reader","","GIF decoder",N,N],[3,"Decoder","","GIF decoder",N,N],[3,"Encoder","","GIF encoder.",N,N],[4,"Block","","Known GIF block types",N,N],[13,"Image","","Image block.",2,N],[13,"Extension","","Extension block.",2,N],[13,"Trailer","","Image trailer.",2,N],[4,"Extension","","Known GIF extensions",N,N],[13,"Text","","Text extension.",3,N],[13,"Control","","Control extension.",3,N],[13,"Comment","","Comment extension.",3,N],[13,"Application","","Application extension.",3,N],[4,"DisposalMethod","","Disposal method",N,N],[13,"Any","","StreamingDecoder is not required to take any action.",4,N],[13,"Keep","","Do not dispose.",4,N],[13,"Background","","Restore to background color.",4,N],[13,"Previous","","Restore to previous.",4,N],[4,"Decoded","","Indicates whether a certain object has been decoded",N,N],[13,"Nothing","","Decoded nothing.",5,N],[13,"GlobalPalette","","Global palette.",5,N],[13,"BackgroundColor","","Index of the background color in the global palette.",5,N],[13,"Trailer","","Decoded the image trailer.",5,N],[13,"BlockStart","","The start of a block.",5,N],[13,"SubBlockFinished","","Decoded a sub-block. More sub-block are available.",5,N],[13,"BlockFinished","","Decoded the last (or only) sub-block of a block.",5,N],[13,"Frame","","Decoded all information of the next frame. The returned frame does not any image data.",5,N],[13,"Data","","Decoded some data of the current frame.",5,N],[13,"DataEnd","","No more data available the current frame.",5,N],[4,"DecodingError","","Decoding error.",N,N],[13,"Format","","Returned if the image is found to be malformed.",6,N],[13,"Internal","","Internal (logic) error.",6,N],[13,"Io","","Wraps `std::io::Error`.",6,N],[4,"ColorOutput","","Output mode for the image data",N,N],[13,"RGBA","","The decoder expands the image data to 32bit RGBA. This affects:",7,N],[13,"Indexed","","The decoder returns the raw indexed data.",7,N],[4,"Extensions","","Configures how extensions should be handled",N,N],[13,"Save","","Saves all extention data",8,N],[13,"Skip","","Skips the data of unknown extensions and extracts the data from known ones",8,N],[4,"ExtensionData","","Extension data.",N,N],[13,"Control","","Control extension. Use `ExtensionData::new_control_ext` to construct.",9,N],[12,"flags","gif::ExtensionData","Flags.",9,N],[12,"delay","","Frame delay.",9,N],[12,"trns","","Transparent index.",9,N],[13,"Repetitions","gif","Sets the number of repetitions",9,N],[4,"Repeat","","Number of repetitions",N,N],[13,"Finite","","Finite number of repetitions",10,N],[13,"Infinite","","Infinite number of repetitions",10,N],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"clone","","",4,[[["self"]],["disposalmethod"]]],[11,"eq","","",4,[[["self"],["disposalmethod"]],["bool"]]],[11,"from_u8","","Converts `u8` to `Option<Self>`",4,[[["u8"]],["option",["disposalmethod"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"clone","","",2,[[["self"]],["block"]]],[11,"eq","","",2,[[["self"],["block"]],["bool"]]],[11,"from_u8","","Converts `u8` to `Option<Self>`",2,[[["u8"]],["option",["block"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"clone","","",3,[[["self"]],["extension"]]],[11,"eq","","",3,[[["self"],["extension"]],["bool"]]],[11,"from_u8","","Converts `u8` to `Option<Self>`",3,[[["u8"]],["option",["extension"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["frame"]]],[11,"default","","",0,[[],["frame"]]],[11,"from_rgba","","Creates a frame from pixels in RGBA format.",0,N],[11,"from_palette_pixels","","Creates a frame from a palette and indexed pixels",0,N],[11,"from_indexed_pixels","","Creates a frame from indexed pixels in the global palette",0,N],[11,"from_rgb","","Creates a frame from pixels in RGB format.",0,N],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"description","","",6,[[["self"]],["str"]]],[11,"cause","","",6,[[["self"]],["option",["error"]]]],[11,"from","","",6,[[["error"]],["self"]]],[11,"eq","","",8,[[["self"],["extensions"]],["bool"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"set_param","","",8,[[["self"],["streamingdecoder"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new streaming decoder",11,[[],["streamingdecoder"]]],[11,"update","","Updates the internal state of the decoder. ",11,N],[11,"last_ext","","Returns the data of the last extension that has been decoded.",11,N],[11,"current_frame_mut","","Current frame info as a mutable ref.",11,[[["self"]],["frame"]]],[11,"current_frame","","Current frame info as a ref.",11,[[["self"]],["frame"]]],[11,"width","","Width of the image",11,[[["self"]],["u16"]]],[11,"height","","Height of the image",11,[[["self"]],["u16"]]],[11,"eq","","",7,[[["self"],["coloroutput"]],["bool"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"set_param","","",7,[[["self"],["decoder"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"set_param","","",1,[[["self"],["decoder"]]]],[11,"new","","Creates a new decoder builder",12,[[["r"]],["decoder"]]],[11,"read_info","","Reads the logical screen descriptor including the global color palette",12,[[["self"]],["result",["reader","decodingerror"]]]],[11,"next_frame_info","","Returns the next frame info",13,[[["self"]],["result",["option","decodingerror"]]]],[11,"read_next_frame","","Reads the next frame from the image.",13,[[["self"]],["result",["option","decodingerror"]]]],[11,"read_into_buffer","","Reads the data of the current frame into a pre-allocated buffer.",13,N],[11,"fill_buffer","","Reads data of the current frame into a pre-allocated buffer until the buffer has been filled completely.",13,N],[11,"buffer_size","","Output buffer size",13,[[["self"]],["usize"]]],[11,"line_length","","Line length of the current frame",13,[[["self"]],["usize"]]],[11,"palette","","Returns the color palette relevant for the current (next) frame",13,[[["self"]],["result",["decodingerror"]]]],[11,"global_palette","","The global color palette",13,[[["self"]],["option"]]],[11,"width","","Width of the image",13,[[["self"]],["u16"]]],[11,"height","","Height of the image",13,[[["self"]],["u16"]]],[11,"bg_color","","Index of the background color in the global palette",13,[[["self"]],["option",["usize"]]]],[11,"set_param","","",10,N],[11,"new_control_ext","","Constructor for control extension data.",9,[[["u16"],["disposalmethod"],["bool"],["option",["u8"]]],["extensiondata"]]],[11,"new","","Creates a new encoder.",14,N],[11,"write_global_palette","","Writes the global color palette.",14,N],[11,"write_frame","","Writes a frame to the image.",14,[[["self"],["frame"]],["result"]]],[11,"write_extension","","Writes an extension to the image.",14,[[["self"],["extensiondata"]],["result"]]],[11,"write_raw_extension","","Writes a raw extension to the image.",14,N],[11,"drop","","",14,[[["self"]]]],[8,"SetParameter","","Implemented for objects that have parameters.",N,N],[11,"set","","Sets `value` as a parameter of `self`.",15,N],[8,"Parameter","","Configuration parameter trait.",N,N],[16,"Result","","Result type of `set_param`.",16,N],[10,"set_param","","Sets `self` as a parameter of `Object`.",16,N],[11,"set","","Sets `value` as a parameter of `self`.",15,N]],"paths":[[3,"Frame"],[3,"MemoryLimit"],[4,"Block"],[4,"Extension"],[4,"DisposalMethod"],[4,"Decoded"],[4,"DecodingError"],[4,"ColorOutput"],[4,"Extensions"],[4,"ExtensionData"],[4,"Repeat"],[3,"StreamingDecoder"],[3,"Decoder"],[3,"Reader"],[3,"Encoder"],[8,"SetParameter"],[8,"Parameter"]]};
searchIndex["gl"]={"doc":"Usage","items":[[3,"FnPtr","gl","",N,N],[5,"ActiveShaderProgram","","",N,N],[5,"ActiveTexture","","Fallbacks: ActiveTextureARB",N,N],[5,"AttachShader","","Fallbacks: AttachObjectARB",N,N],[5,"BeginConditionalRender","","Fallbacks: BeginConditionalRenderNV",N,N],[5,"BeginQuery","","Fallbacks: BeginQueryARB",N,N],[5,"BeginQueryIndexed","","",N,N],[5,"BeginTransformFeedback","","Fallbacks: BeginTransformFeedbackEXT, BeginTransformFeedbackNV",N,N],[5,"BindAttribLocation","","Fallbacks: BindAttribLocationARB",N,N],[5,"BindBuffer","","Fallbacks: BindBufferARB",N,N],[5,"BindBufferBase","","Fallbacks: BindBufferBaseEXT, BindBufferBaseNV",N,N],[5,"BindBufferRange","","Fallbacks: BindBufferRangeEXT, BindBufferRangeNV",N,N],[5,"BindBuffersBase","","",N,N],[5,"BindBuffersRange","","",N,N],[5,"BindFragDataLocation","","Fallbacks: BindFragDataLocationEXT",N,N],[5,"BindFragDataLocationIndexed","","Fallbacks: BindFragDataLocationIndexedEXT",N,N],[5,"BindFramebuffer","","",N,N],[5,"BindImageTexture","","",N,N],[5,"BindImageTextures","","",N,N],[5,"BindProgramPipeline","","",N,N],[5,"BindRenderbuffer","","",N,N],[5,"BindSampler","","",N,N],[5,"BindSamplers","","",N,N],[5,"BindTexture","","Fallbacks: BindTextureEXT",N,N],[5,"BindTextureUnit","","",N,N],[5,"BindTextures","","",N,N],[5,"BindTransformFeedback","","",N,N],[5,"BindVertexArray","","Fallbacks: BindVertexArrayOES",N,N],[5,"BindVertexBuffer","","",N,N],[5,"BindVertexBuffers","","",N,N],[5,"BlendColor","","Fallbacks: BlendColorEXT",N,N],[5,"BlendEquation","","Fallbacks: BlendEquationEXT",N,N],[5,"BlendEquationSeparate","","Fallbacks: BlendEquationSeparateEXT",N,N],[5,"BlendEquationSeparatei","","Fallbacks: BlendEquationSeparateIndexedAMD, BlendEquationSeparateiARB, BlendEquationSeparateiEXT, BlendEquationSeparateiOES",N,N],[5,"BlendEquationi","","Fallbacks: BlendEquationIndexedAMD, BlendEquationiARB, BlendEquationiEXT, BlendEquationiOES",N,N],[5,"BlendFunc","","",N,N],[5,"BlendFuncSeparate","","Fallbacks: BlendFuncSeparateEXT, BlendFuncSeparateINGR",N,N],[5,"BlendFuncSeparatei","","Fallbacks: BlendFuncSeparateIndexedAMD, BlendFuncSeparateiARB, BlendFuncSeparateiEXT, BlendFuncSeparateiOES",N,N],[5,"BlendFunci","","Fallbacks: BlendFuncIndexedAMD, BlendFunciARB, BlendFunciEXT, BlendFunciOES",N,N],[5,"BlitFramebuffer","","Fallbacks: BlitFramebufferEXT, BlitFramebufferNV",N,N],[5,"BlitNamedFramebuffer","","",N,N],[5,"BufferData","","Fallbacks: BufferDataARB",N,N],[5,"BufferStorage","","Fallbacks: BufferStorageEXT",N,N],[5,"BufferSubData","","Fallbacks: BufferSubDataARB",N,N],[5,"CheckFramebufferStatus","","Fallbacks: CheckFramebufferStatusEXT",N,[[["glenum"]],["glenum"]]],[5,"CheckNamedFramebufferStatus","","",N,[[["gluint"],["glenum"]],["glenum"]]],[5,"ClampColor","","Fallbacks: ClampColorARB",N,N],[5,"Clear","","",N,N],[5,"ClearBufferData","","",N,N],[5,"ClearBufferSubData","","",N,N],[5,"ClearBufferfi","","",N,N],[5,"ClearBufferfv","","",N,N],[5,"ClearBufferiv","","",N,N],[5,"ClearBufferuiv","","",N,N],[5,"ClearColor","","",N,N],[5,"ClearDepth","","",N,N],[5,"ClearDepthf","","Fallbacks: ClearDepthfOES",N,N],[5,"ClearNamedBufferData","","",N,N],[5,"ClearNamedBufferSubData","","",N,N],[5,"ClearNamedFramebufferfi","","",N,N],[5,"ClearNamedFramebufferfv","","",N,N],[5,"ClearNamedFramebufferiv","","",N,N],[5,"ClearNamedFramebufferuiv","","",N,N],[5,"ClearStencil","","",N,N],[5,"ClearTexImage","","Fallbacks: ClearTexImageEXT",N,N],[5,"ClearTexSubImage","","Fallbacks: ClearTexSubImageEXT",N,N],[5,"ClientWaitSync","","Fallbacks: ClientWaitSyncAPPLE",N,[[["glsync"],["glbitfield"],["gluint64"]],["glenum"]]],[5,"ClipControl","","",N,N],[5,"ColorMask","","",N,N],[5,"ColorMaski","","Fallbacks: ColorMaskIndexedEXT, ColorMaskiEXT, ColorMaskiOES",N,N],[5,"ColorP3ui","","",N,N],[5,"ColorP3uiv","","",N,N],[5,"ColorP4ui","","",N,N],[5,"ColorP4uiv","","",N,N],[5,"CompileShader","","Fallbacks: CompileShaderARB",N,N],[5,"CompressedTexImage1D","","Fallbacks: CompressedTexImage1DARB",N,N],[5,"CompressedTexImage2D","","Fallbacks: CompressedTexImage2DARB",N,N],[5,"CompressedTexImage3D","","Fallbacks: CompressedTexImage3DARB",N,N],[5,"CompressedTexSubImage1D","","Fallbacks: CompressedTexSubImage1DARB",N,N],[5,"CompressedTexSubImage2D","","Fallbacks: CompressedTexSubImage2DARB",N,N],[5,"CompressedTexSubImage3D","","Fallbacks: CompressedTexSubImage3DARB",N,N],[5,"CompressedTextureSubImage1D","","",N,N],[5,"CompressedTextureSubImage2D","","",N,N],[5,"CompressedTextureSubImage3D","","",N,N],[5,"CopyBufferSubData","","Fallbacks: CopyBufferSubDataNV",N,N],[5,"CopyImageSubData","","Fallbacks: CopyImageSubDataEXT, CopyImageSubDataOES",N,N],[5,"CopyNamedBufferSubData","","",N,N],[5,"CopyTexImage1D","","Fallbacks: CopyTexImage1DEXT",N,N],[5,"CopyTexImage2D","","Fallbacks: CopyTexImage2DEXT",N,N],[5,"CopyTexSubImage1D","","Fallbacks: CopyTexSubImage1DEXT",N,N],[5,"CopyTexSubImage2D","","Fallbacks: CopyTexSubImage2DEXT",N,N],[5,"CopyTexSubImage3D","","Fallbacks: CopyTexSubImage3DEXT",N,N],[5,"CopyTextureSubImage1D","","",N,N],[5,"CopyTextureSubImage2D","","",N,N],[5,"CopyTextureSubImage3D","","",N,N],[5,"CreateBuffers","","",N,N],[5,"CreateFramebuffers","","",N,N],[5,"CreateProgram","","Fallbacks: CreateProgramObjectARB",N,[[],["gluint"]]],[5,"CreateProgramPipelines","","",N,N],[5,"CreateQueries","","",N,N],[5,"CreateRenderbuffers","","",N,N],[5,"CreateSamplers","","",N,N],[5,"CreateShader","","Fallbacks: CreateShaderObjectARB",N,[[["glenum"]],["gluint"]]],[5,"CreateShaderProgramv","","",N,N],[5,"CreateTextures","","",N,N],[5,"CreateTransformFeedbacks","","",N,N],[5,"CreateVertexArrays","","",N,N],[5,"CullFace","","",N,N],[5,"DebugMessageCallback","","Fallbacks: DebugMessageCallbackARB, DebugMessageCallbackKHR",N,N],[5,"DebugMessageControl","","Fallbacks: DebugMessageControlARB, DebugMessageControlKHR",N,N],[5,"DebugMessageInsert","","Fallbacks: DebugMessageInsertARB, DebugMessageInsertKHR",N,N],[5,"DeleteBuffers","","Fallbacks: DeleteBuffersARB",N,N],[5,"DeleteFramebuffers","","Fallbacks: DeleteFramebuffersEXT",N,N],[5,"DeleteProgram","","",N,N],[5,"DeleteProgramPipelines","","",N,N],[5,"DeleteQueries","","Fallbacks: DeleteQueriesARB",N,N],[5,"DeleteRenderbuffers","","Fallbacks: DeleteRenderbuffersEXT",N,N],[5,"DeleteSamplers","","",N,N],[5,"DeleteShader","","",N,N],[5,"DeleteSync","","Fallbacks: DeleteSyncAPPLE",N,N],[5,"DeleteTextures","","",N,N],[5,"DeleteTransformFeedbacks","","Fallbacks: DeleteTransformFeedbacksNV",N,N],[5,"DeleteVertexArrays","","Fallbacks: DeleteVertexArraysAPPLE, DeleteVertexArraysOES",N,N],[5,"DepthFunc","","",N,N],[5,"DepthMask","","",N,N],[5,"DepthRange","","",N,N],[5,"DepthRangeArrayv","","",N,N],[5,"DepthRangeIndexed","","",N,N],[5,"DepthRangef","","Fallbacks: DepthRangefOES",N,N],[5,"DetachShader","","Fallbacks: DetachObjectARB",N,N],[5,"Disable","","",N,N],[5,"DisableVertexArrayAttrib","","",N,N],[5,"DisableVertexAttribArray","","Fallbacks: DisableVertexAttribArrayARB",N,N],[5,"Disablei","","Fallbacks: DisableIndexedEXT, DisableiEXT, DisableiNV, DisableiOES",N,N],[5,"DispatchCompute","","",N,N],[5,"DispatchComputeIndirect","","",N,N],[5,"DrawArrays","","Fallbacks: DrawArraysEXT",N,N],[5,"DrawArraysIndirect","","",N,N],[5,"DrawArraysInstanced","","Fallbacks: DrawArraysInstancedANGLE, DrawArraysInstancedARB, DrawArraysInstancedEXT, DrawArraysInstancedNV",N,N],[5,"DrawArraysInstancedBaseInstance","","Fallbacks: DrawArraysInstancedBaseInstanceEXT",N,N],[5,"DrawBuffer","","",N,N],[5,"DrawBuffers","","Fallbacks: DrawBuffersARB, DrawBuffersATI, DrawBuffersEXT",N,N],[5,"DrawElements","","",N,N],[5,"DrawElementsBaseVertex","","Fallbacks: DrawElementsBaseVertexEXT, DrawElementsBaseVertexOES",N,N],[5,"DrawElementsIndirect","","",N,N],[5,"DrawElementsInstanced","","Fallbacks: DrawElementsInstancedANGLE, DrawElementsInstancedARB, DrawElementsInstancedEXT, DrawElementsInstancedNV",N,N],[5,"DrawElementsInstancedBaseInstance","","Fallbacks: DrawElementsInstancedBaseInstanceEXT",N,N],[5,"DrawElementsInstancedBaseVertex","","Fallbacks: DrawElementsInstancedBaseVertexEXT, DrawElementsInstancedBaseVertexOES",N,N],[5,"DrawElementsInstancedBaseVertexBaseInstance","","Fallbacks: DrawElementsInstancedBaseVertexBaseInstanceEXT",N,N],[5,"DrawRangeElements","","Fallbacks: DrawRangeElementsEXT",N,N],[5,"DrawRangeElementsBaseVertex","","Fallbacks: DrawRangeElementsBaseVertexEXT, DrawRangeElementsBaseVertexOES",N,N],[5,"DrawTransformFeedback","","Fallbacks: DrawTransformFeedbackEXT, DrawTransformFeedbackNV",N,N],[5,"DrawTransformFeedbackInstanced","","Fallbacks: DrawTransformFeedbackInstancedEXT",N,N],[5,"DrawTransformFeedbackStream","","",N,N],[5,"DrawTransformFeedbackStreamInstanced","","",N,N],[5,"Enable","","",N,N],[5,"EnableVertexArrayAttrib","","",N,N],[5,"EnableVertexAttribArray","","Fallbacks: EnableVertexAttribArrayARB",N,N],[5,"Enablei","","Fallbacks: EnableIndexedEXT, EnableiEXT, EnableiNV, EnableiOES",N,N],[5,"EndConditionalRender","","Fallbacks: EndConditionalRenderNV, EndConditionalRenderNVX",N,N],[5,"EndQuery","","Fallbacks: EndQueryARB",N,N],[5,"EndQueryIndexed","","",N,N],[5,"EndTransformFeedback","","Fallbacks: EndTransformFeedbackEXT, EndTransformFeedbackNV",N,N],[5,"FenceSync","","Fallbacks: FenceSyncAPPLE",N,[[["glenum"],["glbitfield"]],["glsync"]]],[5,"Finish","","",N,N],[5,"Flush","","",N,N],[5,"FlushMappedBufferRange","","Fallbacks: FlushMappedBufferRangeAPPLE, FlushMappedBufferRangeEXT",N,N],[5,"FlushMappedNamedBufferRange","","",N,N],[5,"FramebufferParameteri","","",N,N],[5,"FramebufferRenderbuffer","","Fallbacks: FramebufferRenderbufferEXT",N,N],[5,"FramebufferTexture","","Fallbacks: FramebufferTextureARB, FramebufferTextureEXT, FramebufferTextureOES",N,N],[5,"FramebufferTexture1D","","Fallbacks: FramebufferTexture1DEXT",N,N],[5,"FramebufferTexture2D","","Fallbacks: FramebufferTexture2DEXT",N,N],[5,"FramebufferTexture3D","","Fallbacks: FramebufferTexture3DEXT",N,N],[5,"FramebufferTextureLayer","","Fallbacks: FramebufferTextureLayerARB, FramebufferTextureLayerEXT",N,N],[5,"FrontFace","","",N,N],[5,"GenBuffers","","Fallbacks: GenBuffersARB",N,N],[5,"GenFramebuffers","","Fallbacks: GenFramebuffersEXT",N,N],[5,"GenProgramPipelines","","",N,N],[5,"GenQueries","","Fallbacks: GenQueriesARB",N,N],[5,"GenRenderbuffers","","Fallbacks: GenRenderbuffersEXT",N,N],[5,"GenSamplers","","",N,N],[5,"GenTextures","","",N,N],[5,"GenTransformFeedbacks","","Fallbacks: GenTransformFeedbacksNV",N,N],[5,"GenVertexArrays","","Fallbacks: GenVertexArraysAPPLE, GenVertexArraysOES",N,N],[5,"GenerateMipmap","","Fallbacks: GenerateMipmapEXT",N,N],[5,"GenerateTextureMipmap","","",N,N],[5,"GetActiveAtomicCounterBufferiv","","",N,N],[5,"GetActiveAttrib","","Fallbacks: GetActiveAttribARB",N,N],[5,"GetActiveSubroutineName","","",N,N],[5,"GetActiveSubroutineUniformName","","",N,N],[5,"GetActiveSubroutineUniformiv","","",N,N],[5,"GetActiveUniform","","Fallbacks: GetActiveUniformARB",N,N],[5,"GetActiveUniformBlockName","","",N,N],[5,"GetActiveUniformBlockiv","","",N,N],[5,"GetActiveUniformName","","",N,N],[5,"GetActiveUniformsiv","","",N,N],[5,"GetAttachedShaders","","",N,N],[5,"GetAttribLocation","","Fallbacks: GetAttribLocationARB",N,N],[5,"GetBooleani_v","","Fallbacks: GetBooleanIndexedvEXT",N,N],[5,"GetBooleanv","","",N,N],[5,"GetBufferParameteri64v","","",N,N],[5,"GetBufferParameteriv","","Fallbacks: GetBufferParameterivARB",N,N],[5,"GetBufferPointerv","","Fallbacks: GetBufferPointervARB, GetBufferPointervOES",N,N],[5,"GetBufferSubData","","Fallbacks: GetBufferSubDataARB",N,N],[5,"GetCompressedTexImage","","Fallbacks: GetCompressedTexImageARB",N,N],[5,"GetCompressedTextureImage","","",N,N],[5,"GetCompressedTextureSubImage","","",N,N],[5,"GetDebugMessageLog","","Fallbacks: GetDebugMessageLogARB, GetDebugMessageLogKHR",N,N],[5,"GetDoublei_v","","Fallbacks: GetDoubleIndexedvEXT, GetDoublei_vEXT",N,N],[5,"GetDoublev","","",N,N],[5,"GetError","","",N,[[],["glenum"]]],[5,"GetFloati_v","","Fallbacks: GetFloatIndexedvEXT, GetFloati_vEXT, GetFloati_vNV, GetFloati_vOES",N,N],[5,"GetFloatv","","",N,N],[5,"GetFragDataIndex","","Fallbacks: GetFragDataIndexEXT",N,N],[5,"GetFragDataLocation","","Fallbacks: GetFragDataLocationEXT",N,N],[5,"GetFramebufferAttachmentParameteriv","","Fallbacks: GetFramebufferAttachmentParameterivEXT",N,N],[5,"GetFramebufferParameteriv","","",N,N],[5,"GetGraphicsResetStatus","","Fallbacks: GetGraphicsResetStatusKHR",N,[[],["glenum"]]],[5,"GetInteger64i_v","","",N,N],[5,"GetInteger64v","","Fallbacks: GetInteger64vAPPLE",N,N],[5,"GetIntegeri_v","","Fallbacks: GetIntegerIndexedvEXT",N,N],[5,"GetIntegerv","","",N,N],[5,"GetInternalformati64v","","",N,N],[5,"GetInternalformativ","","",N,N],[5,"GetMultisamplefv","","Fallbacks: GetMultisamplefvNV",N,N],[5,"GetNamedBufferParameteri64v","","",N,N],[5,"GetNamedBufferParameteriv","","",N,N],[5,"GetNamedBufferPointerv","","",N,N],[5,"GetNamedBufferSubData","","",N,N],[5,"GetNamedFramebufferAttachmentParameteriv","","",N,N],[5,"GetNamedFramebufferParameteriv","","",N,N],[5,"GetNamedRenderbufferParameteriv","","",N,N],[5,"GetObjectLabel","","Fallbacks: GetObjectLabelKHR",N,N],[5,"GetObjectPtrLabel","","Fallbacks: GetObjectPtrLabelKHR",N,N],[5,"GetPointerv","","Fallbacks: GetPointervEXT, GetPointervKHR",N,N],[5,"GetProgramBinary","","Fallbacks: GetProgramBinaryOES",N,N],[5,"GetProgramInfoLog","","",N,N],[5,"GetProgramInterfaceiv","","",N,N],[5,"GetProgramPipelineInfoLog","","",N,N],[5,"GetProgramPipelineiv","","",N,N],[5,"GetProgramResourceIndex","","",N,N],[5,"GetProgramResourceLocation","","",N,N],[5,"GetProgramResourceLocationIndex","","",N,N],[5,"GetProgramResourceName","","",N,N],[5,"GetProgramResourceiv","","",N,N],[5,"GetProgramStageiv","","",N,N],[5,"GetProgramiv","","",N,N],[5,"GetQueryBufferObjecti64v","","",N,N],[5,"GetQueryBufferObjectiv","","",N,N],[5,"GetQueryBufferObjectui64v","","",N,N],[5,"GetQueryBufferObjectuiv","","",N,N],[5,"GetQueryIndexediv","","",N,N],[5,"GetQueryObjecti64v","","Fallbacks: GetQueryObjecti64vEXT",N,N],[5,"GetQueryObjectiv","","Fallbacks: GetQueryObjectivARB, GetQueryObjectivEXT",N,N],[5,"GetQueryObjectui64v","","Fallbacks: GetQueryObjectui64vEXT",N,N],[5,"GetQueryObjectuiv","","Fallbacks: GetQueryObjectuivARB",N,N],[5,"GetQueryiv","","Fallbacks: GetQueryivARB",N,N],[5,"GetRenderbufferParameteriv","","Fallbacks: GetRenderbufferParameterivEXT",N,N],[5,"GetSamplerParameterIiv","","Fallbacks: GetSamplerParameterIivEXT, GetSamplerParameterIivOES",N,N],[5,"GetSamplerParameterIuiv","","Fallbacks: GetSamplerParameterIuivEXT, GetSamplerParameterIuivOES",N,N],[5,"GetSamplerParameterfv","","",N,N],[5,"GetSamplerParameteriv","","",N,N],[5,"GetShaderInfoLog","","",N,N],[5,"GetShaderPrecisionFormat","","",N,N],[5,"GetShaderSource","","Fallbacks: GetShaderSourceARB",N,N],[5,"GetShaderiv","","",N,N],[5,"GetString","","",N,N],[5,"GetStringi","","",N,N],[5,"GetSubroutineIndex","","",N,N],[5,"GetSubroutineUniformLocation","","",N,N],[5,"GetSynciv","","Fallbacks: GetSyncivAPPLE",N,N],[5,"GetTexImage","","",N,N],[5,"GetTexLevelParameterfv","","",N,N],[5,"GetTexLevelParameteriv","","",N,N],[5,"GetTexParameterIiv","","Fallbacks: GetTexParameterIivEXT, GetTexParameterIivOES",N,N],[5,"GetTexParameterIuiv","","Fallbacks: GetTexParameterIuivEXT, GetTexParameterIuivOES",N,N],[5,"GetTexParameterfv","","",N,N],[5,"GetTexParameteriv","","",N,N],[5,"GetTextureImage","","",N,N],[5,"GetTextureLevelParameterfv","","",N,N],[5,"GetTextureLevelParameteriv","","",N,N],[5,"GetTextureParameterIiv","","",N,N],[5,"GetTextureParameterIuiv","","",N,N],[5,"GetTextureParameterfv","","",N,N],[5,"GetTextureParameteriv","","",N,N],[5,"GetTextureSubImage","","",N,N],[5,"GetTransformFeedbackVarying","","Fallbacks: GetTransformFeedbackVaryingEXT",N,N],[5,"GetTransformFeedbacki64_v","","",N,N],[5,"GetTransformFeedbacki_v","","",N,N],[5,"GetTransformFeedbackiv","","",N,N],[5,"GetUniformBlockIndex","","",N,N],[5,"GetUniformIndices","","",N,N],[5,"GetUniformLocation","","Fallbacks: GetUniformLocationARB",N,N],[5,"GetUniformSubroutineuiv","","",N,N],[5,"GetUniformdv","","",N,N],[5,"GetUniformfv","","Fallbacks: GetUniformfvARB",N,N],[5,"GetUniformiv","","Fallbacks: GetUniformivARB",N,N],[5,"GetUniformuiv","","Fallbacks: GetUniformuivEXT",N,N],[5,"GetVertexArrayIndexed64iv","","",N,N],[5,"GetVertexArrayIndexediv","","",N,N],[5,"GetVertexArrayiv","","",N,N],[5,"GetVertexAttribIiv","","Fallbacks: GetVertexAttribIivEXT",N,N],[5,"GetVertexAttribIuiv","","Fallbacks: GetVertexAttribIuivEXT",N,N],[5,"GetVertexAttribLdv","","Fallbacks: GetVertexAttribLdvEXT",N,N],[5,"GetVertexAttribPointerv","","Fallbacks: GetVertexAttribPointervARB, GetVertexAttribPointervNV",N,N],[5,"GetVertexAttribdv","","Fallbacks: GetVertexAttribdvARB, GetVertexAttribdvNV",N,N],[5,"GetVertexAttribfv","","Fallbacks: GetVertexAttribfvARB, GetVertexAttribfvNV",N,N],[5,"GetVertexAttribiv","","Fallbacks: GetVertexAttribivARB, GetVertexAttribivNV",N,N],[5,"GetnColorTable","","",N,N],[5,"GetnCompressedTexImage","","",N,N],[5,"GetnConvolutionFilter","","",N,N],[5,"GetnHistogram","","",N,N],[5,"GetnMapdv","","",N,N],[5,"GetnMapfv","","",N,N],[5,"GetnMapiv","","",N,N],[5,"GetnMinmax","","",N,N],[5,"GetnPixelMapfv","","",N,N],[5,"GetnPixelMapuiv","","",N,N],[5,"GetnPixelMapusv","","",N,N],[5,"GetnPolygonStipple","","",N,N],[5,"GetnSeparableFilter","","",N,N],[5,"GetnTexImage","","",N,N],[5,"GetnUniformdv","","",N,N],[5,"GetnUniformfv","","Fallbacks: GetnUniformfvEXT, GetnUniformfvKHR",N,N],[5,"GetnUniformiv","","Fallbacks: GetnUniformivEXT, GetnUniformivKHR",N,N],[5,"GetnUniformuiv","","Fallbacks: GetnUniformuivKHR",N,N],[5,"Hint","","",N,N],[5,"InvalidateBufferData","","",N,N],[5,"InvalidateBufferSubData","","",N,N],[5,"InvalidateFramebuffer","","",N,N],[5,"InvalidateNamedFramebufferData","","",N,N],[5,"InvalidateNamedFramebufferSubData","","",N,N],[5,"InvalidateSubFramebuffer","","",N,N],[5,"InvalidateTexImage","","",N,N],[5,"InvalidateTexSubImage","","",N,N],[5,"IsBuffer","","Fallbacks: IsBufferARB",N,[[["gluint"]],["glboolean"]]],[5,"IsEnabled","","",N,[[["glenum"]],["glboolean"]]],[5,"IsEnabledi","","Fallbacks: IsEnabledIndexedEXT, IsEnablediEXT, IsEnablediNV, IsEnablediOES",N,[[["glenum"],["gluint"]],["glboolean"]]],[5,"IsFramebuffer","","Fallbacks: IsFramebufferEXT",N,[[["gluint"]],["glboolean"]]],[5,"IsProgram","","",N,[[["gluint"]],["glboolean"]]],[5,"IsProgramPipeline","","",N,[[["gluint"]],["glboolean"]]],[5,"IsQuery","","Fallbacks: IsQueryARB",N,[[["gluint"]],["glboolean"]]],[5,"IsRenderbuffer","","Fallbacks: IsRenderbufferEXT",N,[[["gluint"]],["glboolean"]]],[5,"IsSampler","","",N,[[["gluint"]],["glboolean"]]],[5,"IsShader","","",N,[[["gluint"]],["glboolean"]]],[5,"IsSync","","Fallbacks: IsSyncAPPLE",N,[[["glsync"]],["glboolean"]]],[5,"IsTexture","","",N,[[["gluint"]],["glboolean"]]],[5,"IsTransformFeedback","","Fallbacks: IsTransformFeedbackNV",N,[[["gluint"]],["glboolean"]]],[5,"IsVertexArray","","Fallbacks: IsVertexArrayAPPLE, IsVertexArrayOES",N,[[["gluint"]],["glboolean"]]],[5,"LineWidth","","",N,N],[5,"LinkProgram","","Fallbacks: LinkProgramARB",N,N],[5,"LogicOp","","",N,N],[5,"MapBuffer","","Fallbacks: MapBufferARB, MapBufferOES",N,N],[5,"MapBufferRange","","Fallbacks: MapBufferRangeEXT",N,N],[5,"MapNamedBuffer","","",N,N],[5,"MapNamedBufferRange","","",N,N],[5,"MemoryBarrier","","Fallbacks: MemoryBarrierEXT",N,N],[5,"MemoryBarrierByRegion","","",N,N],[5,"MinSampleShading","","Fallbacks: MinSampleShadingARB, MinSampleShadingOES",N,N],[5,"MultiDrawArrays","","Fallbacks: MultiDrawArraysEXT",N,N],[5,"MultiDrawArraysIndirect","","Fallbacks: MultiDrawArraysIndirectAMD, MultiDrawArraysIndirectEXT",N,N],[5,"MultiDrawElements","","Fallbacks: MultiDrawElementsEXT",N,N],[5,"MultiDrawElementsBaseVertex","","Fallbacks: MultiDrawElementsBaseVertexEXT",N,N],[5,"MultiDrawElementsIndirect","","Fallbacks: MultiDrawElementsIndirectAMD, MultiDrawElementsIndirectEXT",N,N],[5,"MultiTexCoordP1ui","","",N,N],[5,"MultiTexCoordP1uiv","","",N,N],[5,"MultiTexCoordP2ui","","",N,N],[5,"MultiTexCoordP2uiv","","",N,N],[5,"MultiTexCoordP3ui","","",N,N],[5,"MultiTexCoordP3uiv","","",N,N],[5,"MultiTexCoordP4ui","","",N,N],[5,"MultiTexCoordP4uiv","","",N,N],[5,"NamedBufferData","","",N,N],[5,"NamedBufferStorage","","Fallbacks: NamedBufferStorageEXT",N,N],[5,"NamedBufferSubData","","Fallbacks: NamedBufferSubDataEXT",N,N],[5,"NamedFramebufferDrawBuffer","","",N,N],[5,"NamedFramebufferDrawBuffers","","",N,N],[5,"NamedFramebufferParameteri","","",N,N],[5,"NamedFramebufferReadBuffer","","",N,N],[5,"NamedFramebufferRenderbuffer","","",N,N],[5,"NamedFramebufferTexture","","",N,N],[5,"NamedFramebufferTextureLayer","","",N,N],[5,"NamedRenderbufferStorage","","",N,N],[5,"NamedRenderbufferStorageMultisample","","",N,N],[5,"NormalP3ui","","",N,N],[5,"NormalP3uiv","","",N,N],[5,"ObjectLabel","","Fallbacks: ObjectLabelKHR",N,N],[5,"ObjectPtrLabel","","Fallbacks: ObjectPtrLabelKHR",N,N],[5,"PatchParameterfv","","",N,N],[5,"PatchParameteri","","Fallbacks: PatchParameteriEXT, PatchParameteriOES",N,N],[5,"PauseTransformFeedback","","Fallbacks: PauseTransformFeedbackNV",N,N],[5,"PixelStoref","","",N,N],[5,"PixelStorei","","",N,N],[5,"PointParameterf","","Fallbacks: PointParameterfARB, PointParameterfEXT, PointParameterfSGIS",N,N],[5,"PointParameterfv","","Fallbacks: PointParameterfvARB, PointParameterfvEXT, PointParameterfvSGIS",N,N],[5,"PointParameteri","","Fallbacks: PointParameteriNV",N,N],[5,"PointParameteriv","","Fallbacks: PointParameterivNV",N,N],[5,"PointSize","","",N,N],[5,"PolygonMode","","Fallbacks: PolygonModeNV",N,N],[5,"PolygonOffset","","",N,N],[5,"PopDebugGroup","","Fallbacks: PopDebugGroupKHR",N,N],[5,"PrimitiveRestartIndex","","",N,N],[5,"ProgramBinary","","Fallbacks: ProgramBinaryOES",N,N],[5,"ProgramParameteri","","Fallbacks: ProgramParameteriARB, ProgramParameteriEXT",N,N],[5,"ProgramUniform1d","","",N,N],[5,"ProgramUniform1dv","","",N,N],[5,"ProgramUniform1f","","Fallbacks: ProgramUniform1fEXT",N,N],[5,"ProgramUniform1fv","","Fallbacks: ProgramUniform1fvEXT",N,N],[5,"ProgramUniform1i","","Fallbacks: ProgramUniform1iEXT",N,N],[5,"ProgramUniform1iv","","Fallbacks: ProgramUniform1ivEXT",N,N],[5,"ProgramUniform1ui","","Fallbacks: ProgramUniform1uiEXT",N,N],[5,"ProgramUniform1uiv","","Fallbacks: ProgramUniform1uivEXT",N,N],[5,"ProgramUniform2d","","",N,N],[5,"ProgramUniform2dv","","",N,N],[5,"ProgramUniform2f","","Fallbacks: ProgramUniform2fEXT",N,N],[5,"ProgramUniform2fv","","Fallbacks: ProgramUniform2fvEXT",N,N],[5,"ProgramUniform2i","","Fallbacks: ProgramUniform2iEXT",N,N],[5,"ProgramUniform2iv","","Fallbacks: ProgramUniform2ivEXT",N,N],[5,"ProgramUniform2ui","","Fallbacks: ProgramUniform2uiEXT",N,N],[5,"ProgramUniform2uiv","","Fallbacks: ProgramUniform2uivEXT",N,N],[5,"ProgramUniform3d","","",N,N],[5,"ProgramUniform3dv","","",N,N],[5,"ProgramUniform3f","","Fallbacks: ProgramUniform3fEXT",N,N],[5,"ProgramUniform3fv","","Fallbacks: ProgramUniform3fvEXT",N,N],[5,"ProgramUniform3i","","Fallbacks: ProgramUniform3iEXT",N,N],[5,"ProgramUniform3iv","","Fallbacks: ProgramUniform3ivEXT",N,N],[5,"ProgramUniform3ui","","Fallbacks: ProgramUniform3uiEXT",N,N],[5,"ProgramUniform3uiv","","Fallbacks: ProgramUniform3uivEXT",N,N],[5,"ProgramUniform4d","","",N,N],[5,"ProgramUniform4dv","","",N,N],[5,"ProgramUniform4f","","Fallbacks: ProgramUniform4fEXT",N,N],[5,"ProgramUniform4fv","","Fallbacks: ProgramUniform4fvEXT",N,N],[5,"ProgramUniform4i","","Fallbacks: ProgramUniform4iEXT",N,N],[5,"ProgramUniform4iv","","Fallbacks: ProgramUniform4ivEXT",N,N],[5,"ProgramUniform4ui","","Fallbacks: ProgramUniform4uiEXT",N,N],[5,"ProgramUniform4uiv","","Fallbacks: ProgramUniform4uivEXT",N,N],[5,"ProgramUniformMatrix2dv","","",N,N],[5,"ProgramUniformMatrix2fv","","Fallbacks: ProgramUniformMatrix2fvEXT",N,N],[5,"ProgramUniformMatrix2x3dv","","",N,N],[5,"ProgramUniformMatrix2x3fv","","Fallbacks: ProgramUniformMatrix2x3fvEXT",N,N],[5,"ProgramUniformMatrix2x4dv","","",N,N],[5,"ProgramUniformMatrix2x4fv","","Fallbacks: ProgramUniformMatrix2x4fvEXT",N,N],[5,"ProgramUniformMatrix3dv","","",N,N],[5,"ProgramUniformMatrix3fv","","Fallbacks: ProgramUniformMatrix3fvEXT",N,N],[5,"ProgramUniformMatrix3x2dv","","",N,N],[5,"ProgramUniformMatrix3x2fv","","Fallbacks: ProgramUniformMatrix3x2fvEXT",N,N],[5,"ProgramUniformMatrix3x4dv","","",N,N],[5,"ProgramUniformMatrix3x4fv","","Fallbacks: ProgramUniformMatrix3x4fvEXT",N,N],[5,"ProgramUniformMatrix4dv","","",N,N],[5,"ProgramUniformMatrix4fv","","Fallbacks: ProgramUniformMatrix4fvEXT",N,N],[5,"ProgramUniformMatrix4x2dv","","",N,N],[5,"ProgramUniformMatrix4x2fv","","Fallbacks: ProgramUniformMatrix4x2fvEXT",N,N],[5,"ProgramUniformMatrix4x3dv","","",N,N],[5,"ProgramUniformMatrix4x3fv","","Fallbacks: ProgramUniformMatrix4x3fvEXT",N,N],[5,"ProvokingVertex","","Fallbacks: ProvokingVertexEXT",N,N],[5,"PushDebugGroup","","Fallbacks: PushDebugGroupKHR",N,N],[5,"QueryCounter","","Fallbacks: QueryCounterEXT",N,N],[5,"ReadBuffer","","",N,N],[5,"ReadPixels","","",N,N],[5,"ReadnPixels","","Fallbacks: ReadnPixelsARB, ReadnPixelsEXT, ReadnPixelsKHR",N,N],[5,"ReleaseShaderCompiler","","",N,N],[5,"RenderbufferStorage","","Fallbacks: RenderbufferStorageEXT",N,N],[5,"RenderbufferStorageMultisample","","Fallbacks: RenderbufferStorageMultisampleEXT, RenderbufferStorageMultisampleNV",N,N],[5,"ResumeTransformFeedback","","Fallbacks: ResumeTransformFeedbackNV",N,N],[5,"SampleCoverage","","Fallbacks: SampleCoverageARB",N,N],[5,"SampleMaski","","",N,N],[5,"SamplerParameterIiv","","Fallbacks: SamplerParameterIivEXT, SamplerParameterIivOES",N,N],[5,"SamplerParameterIuiv","","Fallbacks: SamplerParameterIuivEXT, SamplerParameterIuivOES",N,N],[5,"SamplerParameterf","","",N,N],[5,"SamplerParameterfv","","",N,N],[5,"SamplerParameteri","","",N,N],[5,"SamplerParameteriv","","",N,N],[5,"Scissor","","",N,N],[5,"ScissorArrayv","","Fallbacks: ScissorArrayvNV, ScissorArrayvOES",N,N],[5,"ScissorIndexed","","Fallbacks: ScissorIndexedNV, ScissorIndexedOES",N,N],[5,"ScissorIndexedv","","Fallbacks: ScissorIndexedvNV, ScissorIndexedvOES",N,N],[5,"SecondaryColorP3ui","","",N,N],[5,"SecondaryColorP3uiv","","",N,N],[5,"ShaderBinary","","",N,N],[5,"ShaderSource","","Fallbacks: ShaderSourceARB",N,N],[5,"ShaderStorageBlockBinding","","",N,N],[5,"StencilFunc","","",N,N],[5,"StencilFuncSeparate","","",N,N],[5,"StencilMask","","",N,N],[5,"StencilMaskSeparate","","",N,N],[5,"StencilOp","","",N,N],[5,"StencilOpSeparate","","Fallbacks: StencilOpSeparateATI",N,N],[5,"TexBuffer","","Fallbacks: TexBufferARB, TexBufferEXT, TexBufferOES",N,N],[5,"TexBufferRange","","Fallbacks: TexBufferRangeEXT, TexBufferRangeOES",N,N],[5,"TexCoordP1ui","","",N,N],[5,"TexCoordP1uiv","","",N,N],[5,"TexCoordP2ui","","",N,N],[5,"TexCoordP2uiv","","",N,N],[5,"TexCoordP3ui","","",N,N],[5,"TexCoordP3uiv","","",N,N],[5,"TexCoordP4ui","","",N,N],[5,"TexCoordP4uiv","","",N,N],[5,"TexImage1D","","",N,N],[5,"TexImage2D","","",N,N],[5,"TexImage2DMultisample","","",N,N],[5,"TexImage3D","","Fallbacks: TexImage3DEXT",N,N],[5,"TexImage3DMultisample","","",N,N],[5,"TexParameterIiv","","Fallbacks: TexParameterIivEXT, TexParameterIivOES",N,N],[5,"TexParameterIuiv","","Fallbacks: TexParameterIuivEXT, TexParameterIuivOES",N,N],[5,"TexParameterf","","",N,N],[5,"TexParameterfv","","",N,N],[5,"TexParameteri","","",N,N],[5,"TexParameteriv","","",N,N],[5,"TexStorage1D","","Fallbacks: TexStorage1DEXT",N,N],[5,"TexStorage2D","","Fallbacks: TexStorage2DEXT",N,N],[5,"TexStorage2DMultisample","","",N,N],[5,"TexStorage3D","","Fallbacks: TexStorage3DEXT",N,N],[5,"TexStorage3DMultisample","","Fallbacks: TexStorage3DMultisampleOES",N,N],[5,"TexSubImage1D","","Fallbacks: TexSubImage1DEXT",N,N],[5,"TexSubImage2D","","Fallbacks: TexSubImage2DEXT",N,N],[5,"TexSubImage3D","","Fallbacks: TexSubImage3DEXT",N,N],[5,"TextureBarrier","","",N,N],[5,"TextureBuffer","","",N,N],[5,"TextureBufferRange","","",N,N],[5,"TextureParameterIiv","","",N,N],[5,"TextureParameterIuiv","","",N,N],[5,"TextureParameterf","","",N,N],[5,"TextureParameterfv","","",N,N],[5,"TextureParameteri","","",N,N],[5,"TextureParameteriv","","",N,N],[5,"TextureStorage1D","","",N,N],[5,"TextureStorage2D","","",N,N],[5,"TextureStorage2DMultisample","","",N,N],[5,"TextureStorage3D","","",N,N],[5,"TextureStorage3DMultisample","","",N,N],[5,"TextureSubImage1D","","",N,N],[5,"TextureSubImage2D","","",N,N],[5,"TextureSubImage3D","","",N,N],[5,"TextureView","","Fallbacks: TextureViewEXT, TextureViewOES",N,N],[5,"TransformFeedbackBufferBase","","",N,N],[5,"TransformFeedbackBufferRange","","",N,N],[5,"TransformFeedbackVaryings","","Fallbacks: TransformFeedbackVaryingsEXT",N,N],[5,"Uniform1d","","",N,N],[5,"Uniform1dv","","",N,N],[5,"Uniform1f","","Fallbacks: Uniform1fARB",N,N],[5,"Uniform1fv","","Fallbacks: Uniform1fvARB",N,N],[5,"Uniform1i","","Fallbacks: Uniform1iARB",N,N],[5,"Uniform1iv","","Fallbacks: Uniform1ivARB",N,N],[5,"Uniform1ui","","Fallbacks: Uniform1uiEXT",N,N],[5,"Uniform1uiv","","Fallbacks: Uniform1uivEXT",N,N],[5,"Uniform2d","","",N,N],[5,"Uniform2dv","","",N,N],[5,"Uniform2f","","Fallbacks: Uniform2fARB",N,N],[5,"Uniform2fv","","Fallbacks: Uniform2fvARB",N,N],[5,"Uniform2i","","Fallbacks: Uniform2iARB",N,N],[5,"Uniform2iv","","Fallbacks: Uniform2ivARB",N,N],[5,"Uniform2ui","","Fallbacks: Uniform2uiEXT",N,N],[5,"Uniform2uiv","","Fallbacks: Uniform2uivEXT",N,N],[5,"Uniform3d","","",N,N],[5,"Uniform3dv","","",N,N],[5,"Uniform3f","","Fallbacks: Uniform3fARB",N,N],[5,"Uniform3fv","","Fallbacks: Uniform3fvARB",N,N],[5,"Uniform3i","","Fallbacks: Uniform3iARB",N,N],[5,"Uniform3iv","","Fallbacks: Uniform3ivARB",N,N],[5,"Uniform3ui","","Fallbacks: Uniform3uiEXT",N,N],[5,"Uniform3uiv","","Fallbacks: Uniform3uivEXT",N,N],[5,"Uniform4d","","",N,N],[5,"Uniform4dv","","",N,N],[5,"Uniform4f","","Fallbacks: Uniform4fARB",N,N],[5,"Uniform4fv","","Fallbacks: Uniform4fvARB",N,N],[5,"Uniform4i","","Fallbacks: Uniform4iARB",N,N],[5,"Uniform4iv","","Fallbacks: Uniform4ivARB",N,N],[5,"Uniform4ui","","Fallbacks: Uniform4uiEXT",N,N],[5,"Uniform4uiv","","Fallbacks: Uniform4uivEXT",N,N],[5,"UniformBlockBinding","","",N,N],[5,"UniformMatrix2dv","","",N,N],[5,"UniformMatrix2fv","","Fallbacks: UniformMatrix2fvARB",N,N],[5,"UniformMatrix2x3dv","","",N,N],[5,"UniformMatrix2x3fv","","Fallbacks: UniformMatrix2x3fvNV",N,N],[5,"UniformMatrix2x4dv","","",N,N],[5,"UniformMatrix2x4fv","","Fallbacks: UniformMatrix2x4fvNV",N,N],[5,"UniformMatrix3dv","","",N,N],[5,"UniformMatrix3fv","","Fallbacks: UniformMatrix3fvARB",N,N],[5,"UniformMatrix3x2dv","","",N,N],[5,"UniformMatrix3x2fv","","Fallbacks: UniformMatrix3x2fvNV",N,N],[5,"UniformMatrix3x4dv","","",N,N],[5,"UniformMatrix3x4fv","","Fallbacks: UniformMatrix3x4fvNV",N,N],[5,"UniformMatrix4dv","","",N,N],[5,"UniformMatrix4fv","","Fallbacks: UniformMatrix4fvARB",N,N],[5,"UniformMatrix4x2dv","","",N,N],[5,"UniformMatrix4x2fv","","Fallbacks: UniformMatrix4x2fvNV",N,N],[5,"UniformMatrix4x3dv","","",N,N],[5,"UniformMatrix4x3fv","","Fallbacks: UniformMatrix4x3fvNV",N,N],[5,"UniformSubroutinesuiv","","",N,N],[5,"UnmapBuffer","","Fallbacks: UnmapBufferARB, UnmapBufferOES",N,[[["glenum"]],["glboolean"]]],[5,"UnmapNamedBuffer","","",N,[[["gluint"]],["glboolean"]]],[5,"UseProgram","","Fallbacks: UseProgramObjectARB",N,N],[5,"UseProgramStages","","",N,N],[5,"ValidateProgram","","Fallbacks: ValidateProgramARB",N,N],[5,"ValidateProgramPipeline","","",N,N],[5,"VertexArrayAttribBinding","","",N,N],[5,"VertexArrayAttribFormat","","",N,N],[5,"VertexArrayAttribIFormat","","",N,N],[5,"VertexArrayAttribLFormat","","",N,N],[5,"VertexArrayBindingDivisor","","",N,N],[5,"VertexArrayElementBuffer","","",N,N],[5,"VertexArrayVertexBuffer","","",N,N],[5,"VertexArrayVertexBuffers","","",N,N],[5,"VertexAttrib1d","","Fallbacks: VertexAttrib1dARB, VertexAttrib1dNV",N,N],[5,"VertexAttrib1dv","","Fallbacks: VertexAttrib1dvARB, VertexAttrib1dvNV",N,N],[5,"VertexAttrib1f","","Fallbacks: VertexAttrib1fARB, VertexAttrib1fNV",N,N],[5,"VertexAttrib1fv","","Fallbacks: VertexAttrib1fvARB, VertexAttrib1fvNV",N,N],[5,"VertexAttrib1s","","Fallbacks: VertexAttrib1sARB, VertexAttrib1sNV",N,N],[5,"VertexAttrib1sv","","Fallbacks: VertexAttrib1svARB, VertexAttrib1svNV",N,N],[5,"VertexAttrib2d","","Fallbacks: VertexAttrib2dARB, VertexAttrib2dNV",N,N],[5,"VertexAttrib2dv","","Fallbacks: VertexAttrib2dvARB, VertexAttrib2dvNV",N,N],[5,"VertexAttrib2f","","Fallbacks: VertexAttrib2fARB, VertexAttrib2fNV",N,N],[5,"VertexAttrib2fv","","Fallbacks: VertexAttrib2fvARB, VertexAttrib2fvNV",N,N],[5,"VertexAttrib2s","","Fallbacks: VertexAttrib2sARB, VertexAttrib2sNV",N,N],[5,"VertexAttrib2sv","","Fallbacks: VertexAttrib2svARB, VertexAttrib2svNV",N,N],[5,"VertexAttrib3d","","Fallbacks: VertexAttrib3dARB, VertexAttrib3dNV",N,N],[5,"VertexAttrib3dv","","Fallbacks: VertexAttrib3dvARB, VertexAttrib3dvNV",N,N],[5,"VertexAttrib3f","","Fallbacks: VertexAttrib3fARB, VertexAttrib3fNV",N,N],[5,"VertexAttrib3fv","","Fallbacks: VertexAttrib3fvARB, VertexAttrib3fvNV",N,N],[5,"VertexAttrib3s","","Fallbacks: VertexAttrib3sARB, VertexAttrib3sNV",N,N],[5,"VertexAttrib3sv","","Fallbacks: VertexAttrib3svARB, VertexAttrib3svNV",N,N],[5,"VertexAttrib4Nbv","","Fallbacks: VertexAttrib4NbvARB",N,N],[5,"VertexAttrib4Niv","","Fallbacks: VertexAttrib4NivARB",N,N],[5,"VertexAttrib4Nsv","","Fallbacks: VertexAttrib4NsvARB",N,N],[5,"VertexAttrib4Nub","","Fallbacks: VertexAttrib4NubARB, VertexAttrib4ubNV",N,N],[5,"VertexAttrib4Nubv","","Fallbacks: VertexAttrib4NubvARB, VertexAttrib4ubvNV",N,N],[5,"VertexAttrib4Nuiv","","Fallbacks: VertexAttrib4NuivARB",N,N],[5,"VertexAttrib4Nusv","","Fallbacks: VertexAttrib4NusvARB",N,N],[5,"VertexAttrib4bv","","Fallbacks: VertexAttrib4bvARB",N,N],[5,"VertexAttrib4d","","Fallbacks: VertexAttrib4dARB, VertexAttrib4dNV",N,N],[5,"VertexAttrib4dv","","Fallbacks: VertexAttrib4dvARB, VertexAttrib4dvNV",N,N],[5,"VertexAttrib4f","","Fallbacks: VertexAttrib4fARB, VertexAttrib4fNV",N,N],[5,"VertexAttrib4fv","","Fallbacks: VertexAttrib4fvARB, VertexAttrib4fvNV",N,N],[5,"VertexAttrib4iv","","Fallbacks: VertexAttrib4ivARB",N,N],[5,"VertexAttrib4s","","Fallbacks: VertexAttrib4sARB, VertexAttrib4sNV",N,N],[5,"VertexAttrib4sv","","Fallbacks: VertexAttrib4svARB, VertexAttrib4svNV",N,N],[5,"VertexAttrib4ubv","","Fallbacks: VertexAttrib4ubvARB",N,N],[5,"VertexAttrib4uiv","","Fallbacks: VertexAttrib4uivARB",N,N],[5,"VertexAttrib4usv","","Fallbacks: VertexAttrib4usvARB",N,N],[5,"VertexAttribBinding","","",N,N],[5,"VertexAttribDivisor","","Fallbacks: VertexAttribDivisorANGLE, VertexAttribDivisorARB, VertexAttribDivisorEXT, VertexAttribDivisorNV",N,N],[5,"VertexAttribFormat","","",N,N],[5,"VertexAttribI1i","","Fallbacks: VertexAttribI1iEXT",N,N],[5,"VertexAttribI1iv","","Fallbacks: VertexAttribI1ivEXT",N,N],[5,"VertexAttribI1ui","","Fallbacks: VertexAttribI1uiEXT",N,N],[5,"VertexAttribI1uiv","","Fallbacks: VertexAttribI1uivEXT",N,N],[5,"VertexAttribI2i","","Fallbacks: VertexAttribI2iEXT",N,N],[5,"VertexAttribI2iv","","Fallbacks: VertexAttribI2ivEXT",N,N],[5,"VertexAttribI2ui","","Fallbacks: VertexAttribI2uiEXT",N,N],[5,"VertexAttribI2uiv","","Fallbacks: VertexAttribI2uivEXT",N,N],[5,"VertexAttribI3i","","Fallbacks: VertexAttribI3iEXT",N,N],[5,"VertexAttribI3iv","","Fallbacks: VertexAttribI3ivEXT",N,N],[5,"VertexAttribI3ui","","Fallbacks: VertexAttribI3uiEXT",N,N],[5,"VertexAttribI3uiv","","Fallbacks: VertexAttribI3uivEXT",N,N],[5,"VertexAttribI4bv","","Fallbacks: VertexAttribI4bvEXT",N,N],[5,"VertexAttribI4i","","Fallbacks: VertexAttribI4iEXT",N,N],[5,"VertexAttribI4iv","","Fallbacks: VertexAttribI4ivEXT",N,N],[5,"VertexAttribI4sv","","Fallbacks: VertexAttribI4svEXT",N,N],[5,"VertexAttribI4ubv","","Fallbacks: VertexAttribI4ubvEXT",N,N],[5,"VertexAttribI4ui","","Fallbacks: VertexAttribI4uiEXT",N,N],[5,"VertexAttribI4uiv","","Fallbacks: VertexAttribI4uivEXT",N,N],[5,"VertexAttribI4usv","","Fallbacks: VertexAttribI4usvEXT",N,N],[5,"VertexAttribIFormat","","",N,N],[5,"VertexAttribIPointer","","Fallbacks: VertexAttribIPointerEXT",N,N],[5,"VertexAttribL1d","","Fallbacks: VertexAttribL1dEXT",N,N],[5,"VertexAttribL1dv","","Fallbacks: VertexAttribL1dvEXT",N,N],[5,"VertexAttribL2d","","Fallbacks: VertexAttribL2dEXT",N,N],[5,"VertexAttribL2dv","","Fallbacks: VertexAttribL2dvEXT",N,N],[5,"VertexAttribL3d","","Fallbacks: VertexAttribL3dEXT",N,N],[5,"VertexAttribL3dv","","Fallbacks: VertexAttribL3dvEXT",N,N],[5,"VertexAttribL4d","","Fallbacks: VertexAttribL4dEXT",N,N],[5,"VertexAttribL4dv","","Fallbacks: VertexAttribL4dvEXT",N,N],[5,"VertexAttribLFormat","","",N,N],[5,"VertexAttribLPointer","","Fallbacks: VertexAttribLPointerEXT",N,N],[5,"VertexAttribP1ui","","",N,N],[5,"VertexAttribP1uiv","","",N,N],[5,"VertexAttribP2ui","","",N,N],[5,"VertexAttribP2uiv","","",N,N],[5,"VertexAttribP3ui","","",N,N],[5,"VertexAttribP3uiv","","",N,N],[5,"VertexAttribP4ui","","",N,N],[5,"VertexAttribP4uiv","","",N,N],[5,"VertexAttribPointer","","Fallbacks: VertexAttribPointerARB",N,N],[5,"VertexBindingDivisor","","",N,N],[5,"VertexP2ui","","",N,N],[5,"VertexP2uiv","","",N,N],[5,"VertexP3ui","","",N,N],[5,"VertexP3uiv","","",N,N],[5,"VertexP4ui","","",N,N],[5,"VertexP4uiv","","",N,N],[5,"Viewport","","",N,N],[5,"ViewportArrayv","","Fallbacks: ViewportArrayvNV, ViewportArrayvOES",N,N],[5,"ViewportIndexedf","","Fallbacks: ViewportIndexedfOES, ViewportIndexedfNV",N,N],[5,"ViewportIndexedfv","","Fallbacks: ViewportIndexedfvOES, ViewportIndexedfvNV",N,N],[5,"WaitSync","","Fallbacks: WaitSyncAPPLE",N,N],[5,"load_with","","Load each OpenGL symbol using a custom load function. This allows for the use of functions like `glfwGetProcAddress` or `SDL_GL_GetProcAddress`. ~~~ignore gl::load_with(|s| glfw.get_proc_address(s)); ~~~",N,[[["f"]]]],[0,"types","","",N,N],[4,"__GLsync","gl::types","",N,N],[4,"_cl_context","","",N,N],[4,"_cl_event","","",N,N],[6,"GLenum","","",N,N],[6,"GLboolean","","",N,N],[6,"GLbitfield","","",N,N],[6,"GLvoid","","",N,N],[6,"GLbyte","","",N,N],[6,"GLshort","","",N,N],[6,"GLint","","",N,N],[6,"GLclampx","","",N,N],[6,"GLubyte","","",N,N],[6,"GLushort","","",N,N],[6,"GLuint","","",N,N],[6,"GLsizei","","",N,N],[6,"GLfloat","","",N,N],[6,"GLclampf","","",N,N],[6,"GLdouble","","",N,N],[6,"GLclampd","","",N,N],[6,"GLeglImageOES","","",N,N],[6,"GLchar","","",N,N],[6,"GLcharARB","","",N,N],[6,"GLhandleARB","","",N,N],[6,"GLhalfARB","","",N,N],[6,"GLhalf","","",N,N],[6,"GLfixed","","",N,N],[6,"GLintptr","","",N,N],[6,"GLsizeiptr","","",N,N],[6,"GLint64","","",N,N],[6,"GLuint64","","",N,N],[6,"GLintptrARB","","",N,N],[6,"GLsizeiptrARB","","",N,N],[6,"GLint64EXT","","",N,N],[6,"GLuint64EXT","","",N,N],[6,"GLsync","","",N,N],[6,"GLDEBUGPROC","","",N,N],[6,"GLDEBUGPROCARB","","",N,N],[6,"GLDEBUGPROCKHR","","",N,N],[6,"GLDEBUGPROCAMD","","",N,N],[6,"GLhalfNV","","",N,N],[6,"GLvdpauSurfaceNV","","",N,N],[0,"ActiveShaderProgram","gl","",N,N],[5,"is_loaded","gl::ActiveShaderProgram","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ActiveTexture","gl","",N,N],[5,"is_loaded","gl::ActiveTexture","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"AttachShader","gl","",N,N],[5,"is_loaded","gl::AttachShader","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BeginConditionalRender","gl","",N,N],[5,"is_loaded","gl::BeginConditionalRender","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BeginQuery","gl","",N,N],[5,"is_loaded","gl::BeginQuery","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BeginQueryIndexed","gl","",N,N],[5,"is_loaded","gl::BeginQueryIndexed","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BeginTransformFeedback","gl","",N,N],[5,"is_loaded","gl::BeginTransformFeedback","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindAttribLocation","gl","",N,N],[5,"is_loaded","gl::BindAttribLocation","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindBuffer","gl","",N,N],[5,"is_loaded","gl::BindBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindBufferBase","gl","",N,N],[5,"is_loaded","gl::BindBufferBase","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindBufferRange","gl","",N,N],[5,"is_loaded","gl::BindBufferRange","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindBuffersBase","gl","",N,N],[5,"is_loaded","gl::BindBuffersBase","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindBuffersRange","gl","",N,N],[5,"is_loaded","gl::BindBuffersRange","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindFragDataLocation","gl","",N,N],[5,"is_loaded","gl::BindFragDataLocation","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindFragDataLocationIndexed","gl","",N,N],[5,"is_loaded","gl::BindFragDataLocationIndexed","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindFramebuffer","gl","",N,N],[5,"is_loaded","gl::BindFramebuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindImageTexture","gl","",N,N],[5,"is_loaded","gl::BindImageTexture","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindImageTextures","gl","",N,N],[5,"is_loaded","gl::BindImageTextures","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindProgramPipeline","gl","",N,N],[5,"is_loaded","gl::BindProgramPipeline","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindRenderbuffer","gl","",N,N],[5,"is_loaded","gl::BindRenderbuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindSampler","gl","",N,N],[5,"is_loaded","gl::BindSampler","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindSamplers","gl","",N,N],[5,"is_loaded","gl::BindSamplers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindTexture","gl","",N,N],[5,"is_loaded","gl::BindTexture","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindTextureUnit","gl","",N,N],[5,"is_loaded","gl::BindTextureUnit","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindTextures","gl","",N,N],[5,"is_loaded","gl::BindTextures","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindTransformFeedback","gl","",N,N],[5,"is_loaded","gl::BindTransformFeedback","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindVertexArray","gl","",N,N],[5,"is_loaded","gl::BindVertexArray","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindVertexBuffer","gl","",N,N],[5,"is_loaded","gl::BindVertexBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BindVertexBuffers","gl","",N,N],[5,"is_loaded","gl::BindVertexBuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BlendColor","gl","",N,N],[5,"is_loaded","gl::BlendColor","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BlendEquation","gl","",N,N],[5,"is_loaded","gl::BlendEquation","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BlendEquationSeparate","gl","",N,N],[5,"is_loaded","gl::BlendEquationSeparate","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BlendEquationSeparatei","gl","",N,N],[5,"is_loaded","gl::BlendEquationSeparatei","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BlendEquationi","gl","",N,N],[5,"is_loaded","gl::BlendEquationi","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BlendFunc","gl","",N,N],[5,"is_loaded","gl::BlendFunc","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BlendFuncSeparate","gl","",N,N],[5,"is_loaded","gl::BlendFuncSeparate","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BlendFuncSeparatei","gl","",N,N],[5,"is_loaded","gl::BlendFuncSeparatei","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BlendFunci","gl","",N,N],[5,"is_loaded","gl::BlendFunci","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BlitFramebuffer","gl","",N,N],[5,"is_loaded","gl::BlitFramebuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BlitNamedFramebuffer","gl","",N,N],[5,"is_loaded","gl::BlitNamedFramebuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BufferData","gl","",N,N],[5,"is_loaded","gl::BufferData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BufferStorage","gl","",N,N],[5,"is_loaded","gl::BufferStorage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"BufferSubData","gl","",N,N],[5,"is_loaded","gl::BufferSubData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CheckFramebufferStatus","gl","",N,N],[5,"is_loaded","gl::CheckFramebufferStatus","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CheckNamedFramebufferStatus","gl","",N,N],[5,"is_loaded","gl::CheckNamedFramebufferStatus","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClampColor","gl","",N,N],[5,"is_loaded","gl::ClampColor","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Clear","gl","",N,N],[5,"is_loaded","gl::Clear","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearBufferData","gl","",N,N],[5,"is_loaded","gl::ClearBufferData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearBufferSubData","gl","",N,N],[5,"is_loaded","gl::ClearBufferSubData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearBufferfi","gl","",N,N],[5,"is_loaded","gl::ClearBufferfi","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearBufferfv","gl","",N,N],[5,"is_loaded","gl::ClearBufferfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearBufferiv","gl","",N,N],[5,"is_loaded","gl::ClearBufferiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearBufferuiv","gl","",N,N],[5,"is_loaded","gl::ClearBufferuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearColor","gl","",N,N],[5,"is_loaded","gl::ClearColor","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearDepth","gl","",N,N],[5,"is_loaded","gl::ClearDepth","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearDepthf","gl","",N,N],[5,"is_loaded","gl::ClearDepthf","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearNamedBufferData","gl","",N,N],[5,"is_loaded","gl::ClearNamedBufferData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearNamedBufferSubData","gl","",N,N],[5,"is_loaded","gl::ClearNamedBufferSubData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearNamedFramebufferfi","gl","",N,N],[5,"is_loaded","gl::ClearNamedFramebufferfi","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearNamedFramebufferfv","gl","",N,N],[5,"is_loaded","gl::ClearNamedFramebufferfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearNamedFramebufferiv","gl","",N,N],[5,"is_loaded","gl::ClearNamedFramebufferiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearNamedFramebufferuiv","gl","",N,N],[5,"is_loaded","gl::ClearNamedFramebufferuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearStencil","gl","",N,N],[5,"is_loaded","gl::ClearStencil","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearTexImage","gl","",N,N],[5,"is_loaded","gl::ClearTexImage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClearTexSubImage","gl","",N,N],[5,"is_loaded","gl::ClearTexSubImage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClientWaitSync","gl","",N,N],[5,"is_loaded","gl::ClientWaitSync","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ClipControl","gl","",N,N],[5,"is_loaded","gl::ClipControl","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ColorMask","gl","",N,N],[5,"is_loaded","gl::ColorMask","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ColorMaski","gl","",N,N],[5,"is_loaded","gl::ColorMaski","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ColorP3ui","gl","",N,N],[5,"is_loaded","gl::ColorP3ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ColorP3uiv","gl","",N,N],[5,"is_loaded","gl::ColorP3uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ColorP4ui","gl","",N,N],[5,"is_loaded","gl::ColorP4ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ColorP4uiv","gl","",N,N],[5,"is_loaded","gl::ColorP4uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CompileShader","gl","",N,N],[5,"is_loaded","gl::CompileShader","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CompressedTexImage1D","gl","",N,N],[5,"is_loaded","gl::CompressedTexImage1D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CompressedTexImage2D","gl","",N,N],[5,"is_loaded","gl::CompressedTexImage2D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CompressedTexImage3D","gl","",N,N],[5,"is_loaded","gl::CompressedTexImage3D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CompressedTexSubImage1D","gl","",N,N],[5,"is_loaded","gl::CompressedTexSubImage1D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CompressedTexSubImage2D","gl","",N,N],[5,"is_loaded","gl::CompressedTexSubImage2D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CompressedTexSubImage3D","gl","",N,N],[5,"is_loaded","gl::CompressedTexSubImage3D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CompressedTextureSubImage1D","gl","",N,N],[5,"is_loaded","gl::CompressedTextureSubImage1D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CompressedTextureSubImage2D","gl","",N,N],[5,"is_loaded","gl::CompressedTextureSubImage2D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CompressedTextureSubImage3D","gl","",N,N],[5,"is_loaded","gl::CompressedTextureSubImage3D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CopyBufferSubData","gl","",N,N],[5,"is_loaded","gl::CopyBufferSubData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CopyImageSubData","gl","",N,N],[5,"is_loaded","gl::CopyImageSubData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CopyNamedBufferSubData","gl","",N,N],[5,"is_loaded","gl::CopyNamedBufferSubData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CopyTexImage1D","gl","",N,N],[5,"is_loaded","gl::CopyTexImage1D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CopyTexImage2D","gl","",N,N],[5,"is_loaded","gl::CopyTexImage2D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CopyTexSubImage1D","gl","",N,N],[5,"is_loaded","gl::CopyTexSubImage1D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CopyTexSubImage2D","gl","",N,N],[5,"is_loaded","gl::CopyTexSubImage2D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CopyTexSubImage3D","gl","",N,N],[5,"is_loaded","gl::CopyTexSubImage3D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CopyTextureSubImage1D","gl","",N,N],[5,"is_loaded","gl::CopyTextureSubImage1D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CopyTextureSubImage2D","gl","",N,N],[5,"is_loaded","gl::CopyTextureSubImage2D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CopyTextureSubImage3D","gl","",N,N],[5,"is_loaded","gl::CopyTextureSubImage3D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CreateBuffers","gl","",N,N],[5,"is_loaded","gl::CreateBuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CreateFramebuffers","gl","",N,N],[5,"is_loaded","gl::CreateFramebuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CreateProgram","gl","",N,N],[5,"is_loaded","gl::CreateProgram","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CreateProgramPipelines","gl","",N,N],[5,"is_loaded","gl::CreateProgramPipelines","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CreateQueries","gl","",N,N],[5,"is_loaded","gl::CreateQueries","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CreateRenderbuffers","gl","",N,N],[5,"is_loaded","gl::CreateRenderbuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CreateSamplers","gl","",N,N],[5,"is_loaded","gl::CreateSamplers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CreateShader","gl","",N,N],[5,"is_loaded","gl::CreateShader","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CreateShaderProgramv","gl","",N,N],[5,"is_loaded","gl::CreateShaderProgramv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CreateTextures","gl","",N,N],[5,"is_loaded","gl::CreateTextures","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CreateTransformFeedbacks","gl","",N,N],[5,"is_loaded","gl::CreateTransformFeedbacks","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CreateVertexArrays","gl","",N,N],[5,"is_loaded","gl::CreateVertexArrays","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"CullFace","gl","",N,N],[5,"is_loaded","gl::CullFace","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DebugMessageCallback","gl","",N,N],[5,"is_loaded","gl::DebugMessageCallback","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DebugMessageControl","gl","",N,N],[5,"is_loaded","gl::DebugMessageControl","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DebugMessageInsert","gl","",N,N],[5,"is_loaded","gl::DebugMessageInsert","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DeleteBuffers","gl","",N,N],[5,"is_loaded","gl::DeleteBuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DeleteFramebuffers","gl","",N,N],[5,"is_loaded","gl::DeleteFramebuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DeleteProgram","gl","",N,N],[5,"is_loaded","gl::DeleteProgram","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DeleteProgramPipelines","gl","",N,N],[5,"is_loaded","gl::DeleteProgramPipelines","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DeleteQueries","gl","",N,N],[5,"is_loaded","gl::DeleteQueries","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DeleteRenderbuffers","gl","",N,N],[5,"is_loaded","gl::DeleteRenderbuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DeleteSamplers","gl","",N,N],[5,"is_loaded","gl::DeleteSamplers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DeleteShader","gl","",N,N],[5,"is_loaded","gl::DeleteShader","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DeleteSync","gl","",N,N],[5,"is_loaded","gl::DeleteSync","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DeleteTextures","gl","",N,N],[5,"is_loaded","gl::DeleteTextures","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DeleteTransformFeedbacks","gl","",N,N],[5,"is_loaded","gl::DeleteTransformFeedbacks","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DeleteVertexArrays","gl","",N,N],[5,"is_loaded","gl::DeleteVertexArrays","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DepthFunc","gl","",N,N],[5,"is_loaded","gl::DepthFunc","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DepthMask","gl","",N,N],[5,"is_loaded","gl::DepthMask","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DepthRange","gl","",N,N],[5,"is_loaded","gl::DepthRange","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DepthRangeArrayv","gl","",N,N],[5,"is_loaded","gl::DepthRangeArrayv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DepthRangeIndexed","gl","",N,N],[5,"is_loaded","gl::DepthRangeIndexed","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DepthRangef","gl","",N,N],[5,"is_loaded","gl::DepthRangef","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DetachShader","gl","",N,N],[5,"is_loaded","gl::DetachShader","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Disable","gl","",N,N],[5,"is_loaded","gl::Disable","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DisableVertexArrayAttrib","gl","",N,N],[5,"is_loaded","gl::DisableVertexArrayAttrib","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DisableVertexAttribArray","gl","",N,N],[5,"is_loaded","gl::DisableVertexAttribArray","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Disablei","gl","",N,N],[5,"is_loaded","gl::Disablei","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DispatchCompute","gl","",N,N],[5,"is_loaded","gl::DispatchCompute","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DispatchComputeIndirect","gl","",N,N],[5,"is_loaded","gl::DispatchComputeIndirect","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawArrays","gl","",N,N],[5,"is_loaded","gl::DrawArrays","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawArraysIndirect","gl","",N,N],[5,"is_loaded","gl::DrawArraysIndirect","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawArraysInstanced","gl","",N,N],[5,"is_loaded","gl::DrawArraysInstanced","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawArraysInstancedBaseInstance","gl","",N,N],[5,"is_loaded","gl::DrawArraysInstancedBaseInstance","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawBuffer","gl","",N,N],[5,"is_loaded","gl::DrawBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawBuffers","gl","",N,N],[5,"is_loaded","gl::DrawBuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawElements","gl","",N,N],[5,"is_loaded","gl::DrawElements","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawElementsBaseVertex","gl","",N,N],[5,"is_loaded","gl::DrawElementsBaseVertex","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawElementsIndirect","gl","",N,N],[5,"is_loaded","gl::DrawElementsIndirect","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawElementsInstanced","gl","",N,N],[5,"is_loaded","gl::DrawElementsInstanced","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawElementsInstancedBaseInstance","gl","",N,N],[5,"is_loaded","gl::DrawElementsInstancedBaseInstance","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawElementsInstancedBaseVertex","gl","",N,N],[5,"is_loaded","gl::DrawElementsInstancedBaseVertex","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawElementsInstancedBaseVertexBaseInstance","gl","",N,N],[5,"is_loaded","gl::DrawElementsInstancedBaseVertexBaseInstance","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawRangeElements","gl","",N,N],[5,"is_loaded","gl::DrawRangeElements","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawRangeElementsBaseVertex","gl","",N,N],[5,"is_loaded","gl::DrawRangeElementsBaseVertex","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawTransformFeedback","gl","",N,N],[5,"is_loaded","gl::DrawTransformFeedback","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawTransformFeedbackInstanced","gl","",N,N],[5,"is_loaded","gl::DrawTransformFeedbackInstanced","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawTransformFeedbackStream","gl","",N,N],[5,"is_loaded","gl::DrawTransformFeedbackStream","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"DrawTransformFeedbackStreamInstanced","gl","",N,N],[5,"is_loaded","gl::DrawTransformFeedbackStreamInstanced","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Enable","gl","",N,N],[5,"is_loaded","gl::Enable","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"EnableVertexArrayAttrib","gl","",N,N],[5,"is_loaded","gl::EnableVertexArrayAttrib","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"EnableVertexAttribArray","gl","",N,N],[5,"is_loaded","gl::EnableVertexAttribArray","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Enablei","gl","",N,N],[5,"is_loaded","gl::Enablei","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"EndConditionalRender","gl","",N,N],[5,"is_loaded","gl::EndConditionalRender","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"EndQuery","gl","",N,N],[5,"is_loaded","gl::EndQuery","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"EndQueryIndexed","gl","",N,N],[5,"is_loaded","gl::EndQueryIndexed","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"EndTransformFeedback","gl","",N,N],[5,"is_loaded","gl::EndTransformFeedback","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"FenceSync","gl","",N,N],[5,"is_loaded","gl::FenceSync","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Finish","gl","",N,N],[5,"is_loaded","gl::Finish","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Flush","gl","",N,N],[5,"is_loaded","gl::Flush","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"FlushMappedBufferRange","gl","",N,N],[5,"is_loaded","gl::FlushMappedBufferRange","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"FlushMappedNamedBufferRange","gl","",N,N],[5,"is_loaded","gl::FlushMappedNamedBufferRange","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"FramebufferParameteri","gl","",N,N],[5,"is_loaded","gl::FramebufferParameteri","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"FramebufferRenderbuffer","gl","",N,N],[5,"is_loaded","gl::FramebufferRenderbuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"FramebufferTexture","gl","",N,N],[5,"is_loaded","gl::FramebufferTexture","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"FramebufferTexture1D","gl","",N,N],[5,"is_loaded","gl::FramebufferTexture1D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"FramebufferTexture2D","gl","",N,N],[5,"is_loaded","gl::FramebufferTexture2D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"FramebufferTexture3D","gl","",N,N],[5,"is_loaded","gl::FramebufferTexture3D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"FramebufferTextureLayer","gl","",N,N],[5,"is_loaded","gl::FramebufferTextureLayer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"FrontFace","gl","",N,N],[5,"is_loaded","gl::FrontFace","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GenBuffers","gl","",N,N],[5,"is_loaded","gl::GenBuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GenFramebuffers","gl","",N,N],[5,"is_loaded","gl::GenFramebuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GenProgramPipelines","gl","",N,N],[5,"is_loaded","gl::GenProgramPipelines","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GenQueries","gl","",N,N],[5,"is_loaded","gl::GenQueries","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GenRenderbuffers","gl","",N,N],[5,"is_loaded","gl::GenRenderbuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GenSamplers","gl","",N,N],[5,"is_loaded","gl::GenSamplers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GenTextures","gl","",N,N],[5,"is_loaded","gl::GenTextures","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GenTransformFeedbacks","gl","",N,N],[5,"is_loaded","gl::GenTransformFeedbacks","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GenVertexArrays","gl","",N,N],[5,"is_loaded","gl::GenVertexArrays","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GenerateMipmap","gl","",N,N],[5,"is_loaded","gl::GenerateMipmap","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GenerateTextureMipmap","gl","",N,N],[5,"is_loaded","gl::GenerateTextureMipmap","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetActiveAtomicCounterBufferiv","gl","",N,N],[5,"is_loaded","gl::GetActiveAtomicCounterBufferiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetActiveAttrib","gl","",N,N],[5,"is_loaded","gl::GetActiveAttrib","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetActiveSubroutineName","gl","",N,N],[5,"is_loaded","gl::GetActiveSubroutineName","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetActiveSubroutineUniformName","gl","",N,N],[5,"is_loaded","gl::GetActiveSubroutineUniformName","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetActiveSubroutineUniformiv","gl","",N,N],[5,"is_loaded","gl::GetActiveSubroutineUniformiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetActiveUniform","gl","",N,N],[5,"is_loaded","gl::GetActiveUniform","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetActiveUniformBlockName","gl","",N,N],[5,"is_loaded","gl::GetActiveUniformBlockName","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetActiveUniformBlockiv","gl","",N,N],[5,"is_loaded","gl::GetActiveUniformBlockiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetActiveUniformName","gl","",N,N],[5,"is_loaded","gl::GetActiveUniformName","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetActiveUniformsiv","gl","",N,N],[5,"is_loaded","gl::GetActiveUniformsiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetAttachedShaders","gl","",N,N],[5,"is_loaded","gl::GetAttachedShaders","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetAttribLocation","gl","",N,N],[5,"is_loaded","gl::GetAttribLocation","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetBooleani_v","gl","",N,N],[5,"is_loaded","gl::GetBooleani_v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetBooleanv","gl","",N,N],[5,"is_loaded","gl::GetBooleanv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetBufferParameteri64v","gl","",N,N],[5,"is_loaded","gl::GetBufferParameteri64v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetBufferParameteriv","gl","",N,N],[5,"is_loaded","gl::GetBufferParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetBufferPointerv","gl","",N,N],[5,"is_loaded","gl::GetBufferPointerv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetBufferSubData","gl","",N,N],[5,"is_loaded","gl::GetBufferSubData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetCompressedTexImage","gl","",N,N],[5,"is_loaded","gl::GetCompressedTexImage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetCompressedTextureImage","gl","",N,N],[5,"is_loaded","gl::GetCompressedTextureImage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetCompressedTextureSubImage","gl","",N,N],[5,"is_loaded","gl::GetCompressedTextureSubImage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetDebugMessageLog","gl","",N,N],[5,"is_loaded","gl::GetDebugMessageLog","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetDoublei_v","gl","",N,N],[5,"is_loaded","gl::GetDoublei_v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetDoublev","gl","",N,N],[5,"is_loaded","gl::GetDoublev","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetError","gl","",N,N],[5,"is_loaded","gl::GetError","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetFloati_v","gl","",N,N],[5,"is_loaded","gl::GetFloati_v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetFloatv","gl","",N,N],[5,"is_loaded","gl::GetFloatv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetFragDataIndex","gl","",N,N],[5,"is_loaded","gl::GetFragDataIndex","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetFragDataLocation","gl","",N,N],[5,"is_loaded","gl::GetFragDataLocation","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetFramebufferAttachmentParameteriv","gl","",N,N],[5,"is_loaded","gl::GetFramebufferAttachmentParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetFramebufferParameteriv","gl","",N,N],[5,"is_loaded","gl::GetFramebufferParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetGraphicsResetStatus","gl","",N,N],[5,"is_loaded","gl::GetGraphicsResetStatus","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetInteger64i_v","gl","",N,N],[5,"is_loaded","gl::GetInteger64i_v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetInteger64v","gl","",N,N],[5,"is_loaded","gl::GetInteger64v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetIntegeri_v","gl","",N,N],[5,"is_loaded","gl::GetIntegeri_v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetIntegerv","gl","",N,N],[5,"is_loaded","gl::GetIntegerv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetInternalformati64v","gl","",N,N],[5,"is_loaded","gl::GetInternalformati64v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetInternalformativ","gl","",N,N],[5,"is_loaded","gl::GetInternalformativ","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetMultisamplefv","gl","",N,N],[5,"is_loaded","gl::GetMultisamplefv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetNamedBufferParameteri64v","gl","",N,N],[5,"is_loaded","gl::GetNamedBufferParameteri64v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetNamedBufferParameteriv","gl","",N,N],[5,"is_loaded","gl::GetNamedBufferParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetNamedBufferPointerv","gl","",N,N],[5,"is_loaded","gl::GetNamedBufferPointerv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetNamedBufferSubData","gl","",N,N],[5,"is_loaded","gl::GetNamedBufferSubData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetNamedFramebufferAttachmentParameteriv","gl","",N,N],[5,"is_loaded","gl::GetNamedFramebufferAttachmentParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetNamedFramebufferParameteriv","gl","",N,N],[5,"is_loaded","gl::GetNamedFramebufferParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetNamedRenderbufferParameteriv","gl","",N,N],[5,"is_loaded","gl::GetNamedRenderbufferParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetObjectLabel","gl","",N,N],[5,"is_loaded","gl::GetObjectLabel","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetObjectPtrLabel","gl","",N,N],[5,"is_loaded","gl::GetObjectPtrLabel","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetPointerv","gl","",N,N],[5,"is_loaded","gl::GetPointerv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetProgramBinary","gl","",N,N],[5,"is_loaded","gl::GetProgramBinary","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetProgramInfoLog","gl","",N,N],[5,"is_loaded","gl::GetProgramInfoLog","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetProgramInterfaceiv","gl","",N,N],[5,"is_loaded","gl::GetProgramInterfaceiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetProgramPipelineInfoLog","gl","",N,N],[5,"is_loaded","gl::GetProgramPipelineInfoLog","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetProgramPipelineiv","gl","",N,N],[5,"is_loaded","gl::GetProgramPipelineiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetProgramResourceIndex","gl","",N,N],[5,"is_loaded","gl::GetProgramResourceIndex","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetProgramResourceLocation","gl","",N,N],[5,"is_loaded","gl::GetProgramResourceLocation","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetProgramResourceLocationIndex","gl","",N,N],[5,"is_loaded","gl::GetProgramResourceLocationIndex","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetProgramResourceName","gl","",N,N],[5,"is_loaded","gl::GetProgramResourceName","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetProgramResourceiv","gl","",N,N],[5,"is_loaded","gl::GetProgramResourceiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetProgramStageiv","gl","",N,N],[5,"is_loaded","gl::GetProgramStageiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetProgramiv","gl","",N,N],[5,"is_loaded","gl::GetProgramiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetQueryBufferObjecti64v","gl","",N,N],[5,"is_loaded","gl::GetQueryBufferObjecti64v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetQueryBufferObjectiv","gl","",N,N],[5,"is_loaded","gl::GetQueryBufferObjectiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetQueryBufferObjectui64v","gl","",N,N],[5,"is_loaded","gl::GetQueryBufferObjectui64v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetQueryBufferObjectuiv","gl","",N,N],[5,"is_loaded","gl::GetQueryBufferObjectuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetQueryIndexediv","gl","",N,N],[5,"is_loaded","gl::GetQueryIndexediv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetQueryObjecti64v","gl","",N,N],[5,"is_loaded","gl::GetQueryObjecti64v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetQueryObjectiv","gl","",N,N],[5,"is_loaded","gl::GetQueryObjectiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetQueryObjectui64v","gl","",N,N],[5,"is_loaded","gl::GetQueryObjectui64v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetQueryObjectuiv","gl","",N,N],[5,"is_loaded","gl::GetQueryObjectuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetQueryiv","gl","",N,N],[5,"is_loaded","gl::GetQueryiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetRenderbufferParameteriv","gl","",N,N],[5,"is_loaded","gl::GetRenderbufferParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetSamplerParameterIiv","gl","",N,N],[5,"is_loaded","gl::GetSamplerParameterIiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetSamplerParameterIuiv","gl","",N,N],[5,"is_loaded","gl::GetSamplerParameterIuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetSamplerParameterfv","gl","",N,N],[5,"is_loaded","gl::GetSamplerParameterfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetSamplerParameteriv","gl","",N,N],[5,"is_loaded","gl::GetSamplerParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetShaderInfoLog","gl","",N,N],[5,"is_loaded","gl::GetShaderInfoLog","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetShaderPrecisionFormat","gl","",N,N],[5,"is_loaded","gl::GetShaderPrecisionFormat","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetShaderSource","gl","",N,N],[5,"is_loaded","gl::GetShaderSource","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetShaderiv","gl","",N,N],[5,"is_loaded","gl::GetShaderiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetString","gl","",N,N],[5,"is_loaded","gl::GetString","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetStringi","gl","",N,N],[5,"is_loaded","gl::GetStringi","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetSubroutineIndex","gl","",N,N],[5,"is_loaded","gl::GetSubroutineIndex","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetSubroutineUniformLocation","gl","",N,N],[5,"is_loaded","gl::GetSubroutineUniformLocation","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetSynciv","gl","",N,N],[5,"is_loaded","gl::GetSynciv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTexImage","gl","",N,N],[5,"is_loaded","gl::GetTexImage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTexLevelParameterfv","gl","",N,N],[5,"is_loaded","gl::GetTexLevelParameterfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTexLevelParameteriv","gl","",N,N],[5,"is_loaded","gl::GetTexLevelParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTexParameterIiv","gl","",N,N],[5,"is_loaded","gl::GetTexParameterIiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTexParameterIuiv","gl","",N,N],[5,"is_loaded","gl::GetTexParameterIuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTexParameterfv","gl","",N,N],[5,"is_loaded","gl::GetTexParameterfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTexParameteriv","gl","",N,N],[5,"is_loaded","gl::GetTexParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTextureImage","gl","",N,N],[5,"is_loaded","gl::GetTextureImage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTextureLevelParameterfv","gl","",N,N],[5,"is_loaded","gl::GetTextureLevelParameterfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTextureLevelParameteriv","gl","",N,N],[5,"is_loaded","gl::GetTextureLevelParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTextureParameterIiv","gl","",N,N],[5,"is_loaded","gl::GetTextureParameterIiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTextureParameterIuiv","gl","",N,N],[5,"is_loaded","gl::GetTextureParameterIuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTextureParameterfv","gl","",N,N],[5,"is_loaded","gl::GetTextureParameterfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTextureParameteriv","gl","",N,N],[5,"is_loaded","gl::GetTextureParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTextureSubImage","gl","",N,N],[5,"is_loaded","gl::GetTextureSubImage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTransformFeedbackVarying","gl","",N,N],[5,"is_loaded","gl::GetTransformFeedbackVarying","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTransformFeedbacki64_v","gl","",N,N],[5,"is_loaded","gl::GetTransformFeedbacki64_v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTransformFeedbacki_v","gl","",N,N],[5,"is_loaded","gl::GetTransformFeedbacki_v","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetTransformFeedbackiv","gl","",N,N],[5,"is_loaded","gl::GetTransformFeedbackiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetUniformBlockIndex","gl","",N,N],[5,"is_loaded","gl::GetUniformBlockIndex","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetUniformIndices","gl","",N,N],[5,"is_loaded","gl::GetUniformIndices","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetUniformLocation","gl","",N,N],[5,"is_loaded","gl::GetUniformLocation","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetUniformSubroutineuiv","gl","",N,N],[5,"is_loaded","gl::GetUniformSubroutineuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetUniformdv","gl","",N,N],[5,"is_loaded","gl::GetUniformdv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetUniformfv","gl","",N,N],[5,"is_loaded","gl::GetUniformfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetUniformiv","gl","",N,N],[5,"is_loaded","gl::GetUniformiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetUniformuiv","gl","",N,N],[5,"is_loaded","gl::GetUniformuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetVertexArrayIndexed64iv","gl","",N,N],[5,"is_loaded","gl::GetVertexArrayIndexed64iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetVertexArrayIndexediv","gl","",N,N],[5,"is_loaded","gl::GetVertexArrayIndexediv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetVertexArrayiv","gl","",N,N],[5,"is_loaded","gl::GetVertexArrayiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetVertexAttribIiv","gl","",N,N],[5,"is_loaded","gl::GetVertexAttribIiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetVertexAttribIuiv","gl","",N,N],[5,"is_loaded","gl::GetVertexAttribIuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetVertexAttribLdv","gl","",N,N],[5,"is_loaded","gl::GetVertexAttribLdv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetVertexAttribPointerv","gl","",N,N],[5,"is_loaded","gl::GetVertexAttribPointerv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetVertexAttribdv","gl","",N,N],[5,"is_loaded","gl::GetVertexAttribdv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetVertexAttribfv","gl","",N,N],[5,"is_loaded","gl::GetVertexAttribfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetVertexAttribiv","gl","",N,N],[5,"is_loaded","gl::GetVertexAttribiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnColorTable","gl","",N,N],[5,"is_loaded","gl::GetnColorTable","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnCompressedTexImage","gl","",N,N],[5,"is_loaded","gl::GetnCompressedTexImage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnConvolutionFilter","gl","",N,N],[5,"is_loaded","gl::GetnConvolutionFilter","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnHistogram","gl","",N,N],[5,"is_loaded","gl::GetnHistogram","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnMapdv","gl","",N,N],[5,"is_loaded","gl::GetnMapdv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnMapfv","gl","",N,N],[5,"is_loaded","gl::GetnMapfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnMapiv","gl","",N,N],[5,"is_loaded","gl::GetnMapiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnMinmax","gl","",N,N],[5,"is_loaded","gl::GetnMinmax","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnPixelMapfv","gl","",N,N],[5,"is_loaded","gl::GetnPixelMapfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnPixelMapuiv","gl","",N,N],[5,"is_loaded","gl::GetnPixelMapuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnPixelMapusv","gl","",N,N],[5,"is_loaded","gl::GetnPixelMapusv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnPolygonStipple","gl","",N,N],[5,"is_loaded","gl::GetnPolygonStipple","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnSeparableFilter","gl","",N,N],[5,"is_loaded","gl::GetnSeparableFilter","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnTexImage","gl","",N,N],[5,"is_loaded","gl::GetnTexImage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnUniformdv","gl","",N,N],[5,"is_loaded","gl::GetnUniformdv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnUniformfv","gl","",N,N],[5,"is_loaded","gl::GetnUniformfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnUniformiv","gl","",N,N],[5,"is_loaded","gl::GetnUniformiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"GetnUniformuiv","gl","",N,N],[5,"is_loaded","gl::GetnUniformuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Hint","gl","",N,N],[5,"is_loaded","gl::Hint","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"InvalidateBufferData","gl","",N,N],[5,"is_loaded","gl::InvalidateBufferData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"InvalidateBufferSubData","gl","",N,N],[5,"is_loaded","gl::InvalidateBufferSubData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"InvalidateFramebuffer","gl","",N,N],[5,"is_loaded","gl::InvalidateFramebuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"InvalidateNamedFramebufferData","gl","",N,N],[5,"is_loaded","gl::InvalidateNamedFramebufferData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"InvalidateNamedFramebufferSubData","gl","",N,N],[5,"is_loaded","gl::InvalidateNamedFramebufferSubData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"InvalidateSubFramebuffer","gl","",N,N],[5,"is_loaded","gl::InvalidateSubFramebuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"InvalidateTexImage","gl","",N,N],[5,"is_loaded","gl::InvalidateTexImage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"InvalidateTexSubImage","gl","",N,N],[5,"is_loaded","gl::InvalidateTexSubImage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsBuffer","gl","",N,N],[5,"is_loaded","gl::IsBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsEnabled","gl","",N,N],[5,"is_loaded","gl::IsEnabled","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsEnabledi","gl","",N,N],[5,"is_loaded","gl::IsEnabledi","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsFramebuffer","gl","",N,N],[5,"is_loaded","gl::IsFramebuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsProgram","gl","",N,N],[5,"is_loaded","gl::IsProgram","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsProgramPipeline","gl","",N,N],[5,"is_loaded","gl::IsProgramPipeline","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsQuery","gl","",N,N],[5,"is_loaded","gl::IsQuery","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsRenderbuffer","gl","",N,N],[5,"is_loaded","gl::IsRenderbuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsSampler","gl","",N,N],[5,"is_loaded","gl::IsSampler","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsShader","gl","",N,N],[5,"is_loaded","gl::IsShader","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsSync","gl","",N,N],[5,"is_loaded","gl::IsSync","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsTexture","gl","",N,N],[5,"is_loaded","gl::IsTexture","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsTransformFeedback","gl","",N,N],[5,"is_loaded","gl::IsTransformFeedback","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"IsVertexArray","gl","",N,N],[5,"is_loaded","gl::IsVertexArray","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"LineWidth","gl","",N,N],[5,"is_loaded","gl::LineWidth","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"LinkProgram","gl","",N,N],[5,"is_loaded","gl::LinkProgram","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"LogicOp","gl","",N,N],[5,"is_loaded","gl::LogicOp","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MapBuffer","gl","",N,N],[5,"is_loaded","gl::MapBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MapBufferRange","gl","",N,N],[5,"is_loaded","gl::MapBufferRange","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MapNamedBuffer","gl","",N,N],[5,"is_loaded","gl::MapNamedBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MapNamedBufferRange","gl","",N,N],[5,"is_loaded","gl::MapNamedBufferRange","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MemoryBarrier","gl","",N,N],[5,"is_loaded","gl::MemoryBarrier","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MemoryBarrierByRegion","gl","",N,N],[5,"is_loaded","gl::MemoryBarrierByRegion","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MinSampleShading","gl","",N,N],[5,"is_loaded","gl::MinSampleShading","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiDrawArrays","gl","",N,N],[5,"is_loaded","gl::MultiDrawArrays","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiDrawArraysIndirect","gl","",N,N],[5,"is_loaded","gl::MultiDrawArraysIndirect","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiDrawElements","gl","",N,N],[5,"is_loaded","gl::MultiDrawElements","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiDrawElementsBaseVertex","gl","",N,N],[5,"is_loaded","gl::MultiDrawElementsBaseVertex","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiDrawElementsIndirect","gl","",N,N],[5,"is_loaded","gl::MultiDrawElementsIndirect","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiTexCoordP1ui","gl","",N,N],[5,"is_loaded","gl::MultiTexCoordP1ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiTexCoordP1uiv","gl","",N,N],[5,"is_loaded","gl::MultiTexCoordP1uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiTexCoordP2ui","gl","",N,N],[5,"is_loaded","gl::MultiTexCoordP2ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiTexCoordP2uiv","gl","",N,N],[5,"is_loaded","gl::MultiTexCoordP2uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiTexCoordP3ui","gl","",N,N],[5,"is_loaded","gl::MultiTexCoordP3ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiTexCoordP3uiv","gl","",N,N],[5,"is_loaded","gl::MultiTexCoordP3uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiTexCoordP4ui","gl","",N,N],[5,"is_loaded","gl::MultiTexCoordP4ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"MultiTexCoordP4uiv","gl","",N,N],[5,"is_loaded","gl::MultiTexCoordP4uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NamedBufferData","gl","",N,N],[5,"is_loaded","gl::NamedBufferData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NamedBufferStorage","gl","",N,N],[5,"is_loaded","gl::NamedBufferStorage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NamedBufferSubData","gl","",N,N],[5,"is_loaded","gl::NamedBufferSubData","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NamedFramebufferDrawBuffer","gl","",N,N],[5,"is_loaded","gl::NamedFramebufferDrawBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NamedFramebufferDrawBuffers","gl","",N,N],[5,"is_loaded","gl::NamedFramebufferDrawBuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NamedFramebufferParameteri","gl","",N,N],[5,"is_loaded","gl::NamedFramebufferParameteri","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NamedFramebufferReadBuffer","gl","",N,N],[5,"is_loaded","gl::NamedFramebufferReadBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NamedFramebufferRenderbuffer","gl","",N,N],[5,"is_loaded","gl::NamedFramebufferRenderbuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NamedFramebufferTexture","gl","",N,N],[5,"is_loaded","gl::NamedFramebufferTexture","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NamedFramebufferTextureLayer","gl","",N,N],[5,"is_loaded","gl::NamedFramebufferTextureLayer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NamedRenderbufferStorage","gl","",N,N],[5,"is_loaded","gl::NamedRenderbufferStorage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NamedRenderbufferStorageMultisample","gl","",N,N],[5,"is_loaded","gl::NamedRenderbufferStorageMultisample","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NormalP3ui","gl","",N,N],[5,"is_loaded","gl::NormalP3ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"NormalP3uiv","gl","",N,N],[5,"is_loaded","gl::NormalP3uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ObjectLabel","gl","",N,N],[5,"is_loaded","gl::ObjectLabel","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ObjectPtrLabel","gl","",N,N],[5,"is_loaded","gl::ObjectPtrLabel","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PatchParameterfv","gl","",N,N],[5,"is_loaded","gl::PatchParameterfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PatchParameteri","gl","",N,N],[5,"is_loaded","gl::PatchParameteri","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PauseTransformFeedback","gl","",N,N],[5,"is_loaded","gl::PauseTransformFeedback","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PixelStoref","gl","",N,N],[5,"is_loaded","gl::PixelStoref","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PixelStorei","gl","",N,N],[5,"is_loaded","gl::PixelStorei","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PointParameterf","gl","",N,N],[5,"is_loaded","gl::PointParameterf","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PointParameterfv","gl","",N,N],[5,"is_loaded","gl::PointParameterfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PointParameteri","gl","",N,N],[5,"is_loaded","gl::PointParameteri","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PointParameteriv","gl","",N,N],[5,"is_loaded","gl::PointParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PointSize","gl","",N,N],[5,"is_loaded","gl::PointSize","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PolygonMode","gl","",N,N],[5,"is_loaded","gl::PolygonMode","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PolygonOffset","gl","",N,N],[5,"is_loaded","gl::PolygonOffset","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PopDebugGroup","gl","",N,N],[5,"is_loaded","gl::PopDebugGroup","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PrimitiveRestartIndex","gl","",N,N],[5,"is_loaded","gl::PrimitiveRestartIndex","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramBinary","gl","",N,N],[5,"is_loaded","gl::ProgramBinary","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramParameteri","gl","",N,N],[5,"is_loaded","gl::ProgramParameteri","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform1d","gl","",N,N],[5,"is_loaded","gl::ProgramUniform1d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform1dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform1dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform1f","gl","",N,N],[5,"is_loaded","gl::ProgramUniform1f","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform1fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform1fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform1i","gl","",N,N],[5,"is_loaded","gl::ProgramUniform1i","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform1iv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform1iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform1ui","gl","",N,N],[5,"is_loaded","gl::ProgramUniform1ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform1uiv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform1uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform2d","gl","",N,N],[5,"is_loaded","gl::ProgramUniform2d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform2dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform2dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform2f","gl","",N,N],[5,"is_loaded","gl::ProgramUniform2f","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform2fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform2fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform2i","gl","",N,N],[5,"is_loaded","gl::ProgramUniform2i","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform2iv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform2iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform2ui","gl","",N,N],[5,"is_loaded","gl::ProgramUniform2ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform2uiv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform2uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform3d","gl","",N,N],[5,"is_loaded","gl::ProgramUniform3d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform3dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform3dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform3f","gl","",N,N],[5,"is_loaded","gl::ProgramUniform3f","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform3fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform3fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform3i","gl","",N,N],[5,"is_loaded","gl::ProgramUniform3i","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform3iv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform3iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform3ui","gl","",N,N],[5,"is_loaded","gl::ProgramUniform3ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform3uiv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform3uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform4d","gl","",N,N],[5,"is_loaded","gl::ProgramUniform4d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform4dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform4dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform4f","gl","",N,N],[5,"is_loaded","gl::ProgramUniform4f","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform4fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform4fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform4i","gl","",N,N],[5,"is_loaded","gl::ProgramUniform4i","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform4iv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform4iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform4ui","gl","",N,N],[5,"is_loaded","gl::ProgramUniform4ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniform4uiv","gl","",N,N],[5,"is_loaded","gl::ProgramUniform4uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix2dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix2dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix2fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix2fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix2x3dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix2x3dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix2x3fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix2x3fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix2x4dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix2x4dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix2x4fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix2x4fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix3dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix3dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix3fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix3fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix3x2dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix3x2dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix3x2fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix3x2fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix3x4dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix3x4dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix3x4fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix3x4fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix4dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix4dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix4fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix4fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix4x2dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix4x2dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix4x2fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix4x2fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix4x3dv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix4x3dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProgramUniformMatrix4x3fv","gl","",N,N],[5,"is_loaded","gl::ProgramUniformMatrix4x3fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ProvokingVertex","gl","",N,N],[5,"is_loaded","gl::ProvokingVertex","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"PushDebugGroup","gl","",N,N],[5,"is_loaded","gl::PushDebugGroup","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"QueryCounter","gl","",N,N],[5,"is_loaded","gl::QueryCounter","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ReadBuffer","gl","",N,N],[5,"is_loaded","gl::ReadBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ReadPixels","gl","",N,N],[5,"is_loaded","gl::ReadPixels","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ReadnPixels","gl","",N,N],[5,"is_loaded","gl::ReadnPixels","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ReleaseShaderCompiler","gl","",N,N],[5,"is_loaded","gl::ReleaseShaderCompiler","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"RenderbufferStorage","gl","",N,N],[5,"is_loaded","gl::RenderbufferStorage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"RenderbufferStorageMultisample","gl","",N,N],[5,"is_loaded","gl::RenderbufferStorageMultisample","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ResumeTransformFeedback","gl","",N,N],[5,"is_loaded","gl::ResumeTransformFeedback","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"SampleCoverage","gl","",N,N],[5,"is_loaded","gl::SampleCoverage","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"SampleMaski","gl","",N,N],[5,"is_loaded","gl::SampleMaski","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"SamplerParameterIiv","gl","",N,N],[5,"is_loaded","gl::SamplerParameterIiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"SamplerParameterIuiv","gl","",N,N],[5,"is_loaded","gl::SamplerParameterIuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"SamplerParameterf","gl","",N,N],[5,"is_loaded","gl::SamplerParameterf","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"SamplerParameterfv","gl","",N,N],[5,"is_loaded","gl::SamplerParameterfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"SamplerParameteri","gl","",N,N],[5,"is_loaded","gl::SamplerParameteri","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"SamplerParameteriv","gl","",N,N],[5,"is_loaded","gl::SamplerParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Scissor","gl","",N,N],[5,"is_loaded","gl::Scissor","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ScissorArrayv","gl","",N,N],[5,"is_loaded","gl::ScissorArrayv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ScissorIndexed","gl","",N,N],[5,"is_loaded","gl::ScissorIndexed","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ScissorIndexedv","gl","",N,N],[5,"is_loaded","gl::ScissorIndexedv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"SecondaryColorP3ui","gl","",N,N],[5,"is_loaded","gl::SecondaryColorP3ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"SecondaryColorP3uiv","gl","",N,N],[5,"is_loaded","gl::SecondaryColorP3uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ShaderBinary","gl","",N,N],[5,"is_loaded","gl::ShaderBinary","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ShaderSource","gl","",N,N],[5,"is_loaded","gl::ShaderSource","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ShaderStorageBlockBinding","gl","",N,N],[5,"is_loaded","gl::ShaderStorageBlockBinding","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"StencilFunc","gl","",N,N],[5,"is_loaded","gl::StencilFunc","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"StencilFuncSeparate","gl","",N,N],[5,"is_loaded","gl::StencilFuncSeparate","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"StencilMask","gl","",N,N],[5,"is_loaded","gl::StencilMask","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"StencilMaskSeparate","gl","",N,N],[5,"is_loaded","gl::StencilMaskSeparate","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"StencilOp","gl","",N,N],[5,"is_loaded","gl::StencilOp","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"StencilOpSeparate","gl","",N,N],[5,"is_loaded","gl::StencilOpSeparate","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexBuffer","gl","",N,N],[5,"is_loaded","gl::TexBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexBufferRange","gl","",N,N],[5,"is_loaded","gl::TexBufferRange","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexCoordP1ui","gl","",N,N],[5,"is_loaded","gl::TexCoordP1ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexCoordP1uiv","gl","",N,N],[5,"is_loaded","gl::TexCoordP1uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexCoordP2ui","gl","",N,N],[5,"is_loaded","gl::TexCoordP2ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexCoordP2uiv","gl","",N,N],[5,"is_loaded","gl::TexCoordP2uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexCoordP3ui","gl","",N,N],[5,"is_loaded","gl::TexCoordP3ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexCoordP3uiv","gl","",N,N],[5,"is_loaded","gl::TexCoordP3uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexCoordP4ui","gl","",N,N],[5,"is_loaded","gl::TexCoordP4ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexCoordP4uiv","gl","",N,N],[5,"is_loaded","gl::TexCoordP4uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexImage1D","gl","",N,N],[5,"is_loaded","gl::TexImage1D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexImage2D","gl","",N,N],[5,"is_loaded","gl::TexImage2D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexImage2DMultisample","gl","",N,N],[5,"is_loaded","gl::TexImage2DMultisample","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexImage3D","gl","",N,N],[5,"is_loaded","gl::TexImage3D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexImage3DMultisample","gl","",N,N],[5,"is_loaded","gl::TexImage3DMultisample","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexParameterIiv","gl","",N,N],[5,"is_loaded","gl::TexParameterIiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexParameterIuiv","gl","",N,N],[5,"is_loaded","gl::TexParameterIuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexParameterf","gl","",N,N],[5,"is_loaded","gl::TexParameterf","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexParameterfv","gl","",N,N],[5,"is_loaded","gl::TexParameterfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexParameteri","gl","",N,N],[5,"is_loaded","gl::TexParameteri","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexParameteriv","gl","",N,N],[5,"is_loaded","gl::TexParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexStorage1D","gl","",N,N],[5,"is_loaded","gl::TexStorage1D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexStorage2D","gl","",N,N],[5,"is_loaded","gl::TexStorage2D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexStorage2DMultisample","gl","",N,N],[5,"is_loaded","gl::TexStorage2DMultisample","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexStorage3D","gl","",N,N],[5,"is_loaded","gl::TexStorage3D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexStorage3DMultisample","gl","",N,N],[5,"is_loaded","gl::TexStorage3DMultisample","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexSubImage1D","gl","",N,N],[5,"is_loaded","gl::TexSubImage1D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexSubImage2D","gl","",N,N],[5,"is_loaded","gl::TexSubImage2D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TexSubImage3D","gl","",N,N],[5,"is_loaded","gl::TexSubImage3D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureBarrier","gl","",N,N],[5,"is_loaded","gl::TextureBarrier","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureBuffer","gl","",N,N],[5,"is_loaded","gl::TextureBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureBufferRange","gl","",N,N],[5,"is_loaded","gl::TextureBufferRange","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureParameterIiv","gl","",N,N],[5,"is_loaded","gl::TextureParameterIiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureParameterIuiv","gl","",N,N],[5,"is_loaded","gl::TextureParameterIuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureParameterf","gl","",N,N],[5,"is_loaded","gl::TextureParameterf","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureParameterfv","gl","",N,N],[5,"is_loaded","gl::TextureParameterfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureParameteri","gl","",N,N],[5,"is_loaded","gl::TextureParameteri","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureParameteriv","gl","",N,N],[5,"is_loaded","gl::TextureParameteriv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureStorage1D","gl","",N,N],[5,"is_loaded","gl::TextureStorage1D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureStorage2D","gl","",N,N],[5,"is_loaded","gl::TextureStorage2D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureStorage2DMultisample","gl","",N,N],[5,"is_loaded","gl::TextureStorage2DMultisample","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureStorage3D","gl","",N,N],[5,"is_loaded","gl::TextureStorage3D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureStorage3DMultisample","gl","",N,N],[5,"is_loaded","gl::TextureStorage3DMultisample","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureSubImage1D","gl","",N,N],[5,"is_loaded","gl::TextureSubImage1D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureSubImage2D","gl","",N,N],[5,"is_loaded","gl::TextureSubImage2D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureSubImage3D","gl","",N,N],[5,"is_loaded","gl::TextureSubImage3D","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TextureView","gl","",N,N],[5,"is_loaded","gl::TextureView","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TransformFeedbackBufferBase","gl","",N,N],[5,"is_loaded","gl::TransformFeedbackBufferBase","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TransformFeedbackBufferRange","gl","",N,N],[5,"is_loaded","gl::TransformFeedbackBufferRange","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"TransformFeedbackVaryings","gl","",N,N],[5,"is_loaded","gl::TransformFeedbackVaryings","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform1d","gl","",N,N],[5,"is_loaded","gl::Uniform1d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform1dv","gl","",N,N],[5,"is_loaded","gl::Uniform1dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform1f","gl","",N,N],[5,"is_loaded","gl::Uniform1f","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform1fv","gl","",N,N],[5,"is_loaded","gl::Uniform1fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform1i","gl","",N,N],[5,"is_loaded","gl::Uniform1i","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform1iv","gl","",N,N],[5,"is_loaded","gl::Uniform1iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform1ui","gl","",N,N],[5,"is_loaded","gl::Uniform1ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform1uiv","gl","",N,N],[5,"is_loaded","gl::Uniform1uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform2d","gl","",N,N],[5,"is_loaded","gl::Uniform2d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform2dv","gl","",N,N],[5,"is_loaded","gl::Uniform2dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform2f","gl","",N,N],[5,"is_loaded","gl::Uniform2f","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform2fv","gl","",N,N],[5,"is_loaded","gl::Uniform2fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform2i","gl","",N,N],[5,"is_loaded","gl::Uniform2i","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform2iv","gl","",N,N],[5,"is_loaded","gl::Uniform2iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform2ui","gl","",N,N],[5,"is_loaded","gl::Uniform2ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform2uiv","gl","",N,N],[5,"is_loaded","gl::Uniform2uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform3d","gl","",N,N],[5,"is_loaded","gl::Uniform3d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform3dv","gl","",N,N],[5,"is_loaded","gl::Uniform3dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform3f","gl","",N,N],[5,"is_loaded","gl::Uniform3f","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform3fv","gl","",N,N],[5,"is_loaded","gl::Uniform3fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform3i","gl","",N,N],[5,"is_loaded","gl::Uniform3i","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform3iv","gl","",N,N],[5,"is_loaded","gl::Uniform3iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform3ui","gl","",N,N],[5,"is_loaded","gl::Uniform3ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform3uiv","gl","",N,N],[5,"is_loaded","gl::Uniform3uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform4d","gl","",N,N],[5,"is_loaded","gl::Uniform4d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform4dv","gl","",N,N],[5,"is_loaded","gl::Uniform4dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform4f","gl","",N,N],[5,"is_loaded","gl::Uniform4f","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform4fv","gl","",N,N],[5,"is_loaded","gl::Uniform4fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform4i","gl","",N,N],[5,"is_loaded","gl::Uniform4i","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform4iv","gl","",N,N],[5,"is_loaded","gl::Uniform4iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform4ui","gl","",N,N],[5,"is_loaded","gl::Uniform4ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Uniform4uiv","gl","",N,N],[5,"is_loaded","gl::Uniform4uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformBlockBinding","gl","",N,N],[5,"is_loaded","gl::UniformBlockBinding","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix2dv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix2dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix2fv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix2fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix2x3dv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix2x3dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix2x3fv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix2x3fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix2x4dv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix2x4dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix2x4fv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix2x4fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix3dv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix3dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix3fv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix3fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix3x2dv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix3x2dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix3x2fv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix3x2fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix3x4dv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix3x4dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix3x4fv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix3x4fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix4dv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix4dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix4fv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix4fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix4x2dv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix4x2dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix4x2fv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix4x2fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix4x3dv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix4x3dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformMatrix4x3fv","gl","",N,N],[5,"is_loaded","gl::UniformMatrix4x3fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UniformSubroutinesuiv","gl","",N,N],[5,"is_loaded","gl::UniformSubroutinesuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UnmapBuffer","gl","",N,N],[5,"is_loaded","gl::UnmapBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UnmapNamedBuffer","gl","",N,N],[5,"is_loaded","gl::UnmapNamedBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UseProgram","gl","",N,N],[5,"is_loaded","gl::UseProgram","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"UseProgramStages","gl","",N,N],[5,"is_loaded","gl::UseProgramStages","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ValidateProgram","gl","",N,N],[5,"is_loaded","gl::ValidateProgram","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ValidateProgramPipeline","gl","",N,N],[5,"is_loaded","gl::ValidateProgramPipeline","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexArrayAttribBinding","gl","",N,N],[5,"is_loaded","gl::VertexArrayAttribBinding","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexArrayAttribFormat","gl","",N,N],[5,"is_loaded","gl::VertexArrayAttribFormat","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexArrayAttribIFormat","gl","",N,N],[5,"is_loaded","gl::VertexArrayAttribIFormat","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexArrayAttribLFormat","gl","",N,N],[5,"is_loaded","gl::VertexArrayAttribLFormat","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexArrayBindingDivisor","gl","",N,N],[5,"is_loaded","gl::VertexArrayBindingDivisor","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexArrayElementBuffer","gl","",N,N],[5,"is_loaded","gl::VertexArrayElementBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexArrayVertexBuffer","gl","",N,N],[5,"is_loaded","gl::VertexArrayVertexBuffer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexArrayVertexBuffers","gl","",N,N],[5,"is_loaded","gl::VertexArrayVertexBuffers","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib1d","gl","",N,N],[5,"is_loaded","gl::VertexAttrib1d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib1dv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib1dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib1f","gl","",N,N],[5,"is_loaded","gl::VertexAttrib1f","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib1fv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib1fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib1s","gl","",N,N],[5,"is_loaded","gl::VertexAttrib1s","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib1sv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib1sv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib2d","gl","",N,N],[5,"is_loaded","gl::VertexAttrib2d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib2dv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib2dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib2f","gl","",N,N],[5,"is_loaded","gl::VertexAttrib2f","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib2fv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib2fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib2s","gl","",N,N],[5,"is_loaded","gl::VertexAttrib2s","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib2sv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib2sv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib3d","gl","",N,N],[5,"is_loaded","gl::VertexAttrib3d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib3dv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib3dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib3f","gl","",N,N],[5,"is_loaded","gl::VertexAttrib3f","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib3fv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib3fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib3s","gl","",N,N],[5,"is_loaded","gl::VertexAttrib3s","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib3sv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib3sv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4Nbv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4Nbv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4Niv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4Niv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4Nsv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4Nsv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4Nub","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4Nub","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4Nubv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4Nubv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4Nuiv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4Nuiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4Nusv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4Nusv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4bv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4bv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4d","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4dv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4f","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4f","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4fv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4fv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4iv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4s","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4s","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4sv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4sv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4ubv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4ubv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4uiv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttrib4usv","gl","",N,N],[5,"is_loaded","gl::VertexAttrib4usv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribBinding","gl","",N,N],[5,"is_loaded","gl::VertexAttribBinding","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribDivisor","gl","",N,N],[5,"is_loaded","gl::VertexAttribDivisor","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribFormat","gl","",N,N],[5,"is_loaded","gl::VertexAttribFormat","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI1i","gl","",N,N],[5,"is_loaded","gl::VertexAttribI1i","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI1iv","gl","",N,N],[5,"is_loaded","gl::VertexAttribI1iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI1ui","gl","",N,N],[5,"is_loaded","gl::VertexAttribI1ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI1uiv","gl","",N,N],[5,"is_loaded","gl::VertexAttribI1uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI2i","gl","",N,N],[5,"is_loaded","gl::VertexAttribI2i","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI2iv","gl","",N,N],[5,"is_loaded","gl::VertexAttribI2iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI2ui","gl","",N,N],[5,"is_loaded","gl::VertexAttribI2ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI2uiv","gl","",N,N],[5,"is_loaded","gl::VertexAttribI2uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI3i","gl","",N,N],[5,"is_loaded","gl::VertexAttribI3i","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI3iv","gl","",N,N],[5,"is_loaded","gl::VertexAttribI3iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI3ui","gl","",N,N],[5,"is_loaded","gl::VertexAttribI3ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI3uiv","gl","",N,N],[5,"is_loaded","gl::VertexAttribI3uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI4bv","gl","",N,N],[5,"is_loaded","gl::VertexAttribI4bv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI4i","gl","",N,N],[5,"is_loaded","gl::VertexAttribI4i","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI4iv","gl","",N,N],[5,"is_loaded","gl::VertexAttribI4iv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI4sv","gl","",N,N],[5,"is_loaded","gl::VertexAttribI4sv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI4ubv","gl","",N,N],[5,"is_loaded","gl::VertexAttribI4ubv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI4ui","gl","",N,N],[5,"is_loaded","gl::VertexAttribI4ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI4uiv","gl","",N,N],[5,"is_loaded","gl::VertexAttribI4uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribI4usv","gl","",N,N],[5,"is_loaded","gl::VertexAttribI4usv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribIFormat","gl","",N,N],[5,"is_loaded","gl::VertexAttribIFormat","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribIPointer","gl","",N,N],[5,"is_loaded","gl::VertexAttribIPointer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribL1d","gl","",N,N],[5,"is_loaded","gl::VertexAttribL1d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribL1dv","gl","",N,N],[5,"is_loaded","gl::VertexAttribL1dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribL2d","gl","",N,N],[5,"is_loaded","gl::VertexAttribL2d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribL2dv","gl","",N,N],[5,"is_loaded","gl::VertexAttribL2dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribL3d","gl","",N,N],[5,"is_loaded","gl::VertexAttribL3d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribL3dv","gl","",N,N],[5,"is_loaded","gl::VertexAttribL3dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribL4d","gl","",N,N],[5,"is_loaded","gl::VertexAttribL4d","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribL4dv","gl","",N,N],[5,"is_loaded","gl::VertexAttribL4dv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribLFormat","gl","",N,N],[5,"is_loaded","gl::VertexAttribLFormat","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribLPointer","gl","",N,N],[5,"is_loaded","gl::VertexAttribLPointer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribP1ui","gl","",N,N],[5,"is_loaded","gl::VertexAttribP1ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribP1uiv","gl","",N,N],[5,"is_loaded","gl::VertexAttribP1uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribP2ui","gl","",N,N],[5,"is_loaded","gl::VertexAttribP2ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribP2uiv","gl","",N,N],[5,"is_loaded","gl::VertexAttribP2uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribP3ui","gl","",N,N],[5,"is_loaded","gl::VertexAttribP3ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribP3uiv","gl","",N,N],[5,"is_loaded","gl::VertexAttribP3uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribP4ui","gl","",N,N],[5,"is_loaded","gl::VertexAttribP4ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribP4uiv","gl","",N,N],[5,"is_loaded","gl::VertexAttribP4uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexAttribPointer","gl","",N,N],[5,"is_loaded","gl::VertexAttribPointer","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexBindingDivisor","gl","",N,N],[5,"is_loaded","gl::VertexBindingDivisor","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexP2ui","gl","",N,N],[5,"is_loaded","gl::VertexP2ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexP2uiv","gl","",N,N],[5,"is_loaded","gl::VertexP2uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexP3ui","gl","",N,N],[5,"is_loaded","gl::VertexP3ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexP3uiv","gl","",N,N],[5,"is_loaded","gl::VertexP3uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexP4ui","gl","",N,N],[5,"is_loaded","gl::VertexP4ui","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"VertexP4uiv","gl","",N,N],[5,"is_loaded","gl::VertexP4uiv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"Viewport","gl","",N,N],[5,"is_loaded","gl::Viewport","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ViewportArrayv","gl","",N,N],[5,"is_loaded","gl::ViewportArrayv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ViewportIndexedf","gl","",N,N],[5,"is_loaded","gl::ViewportIndexedf","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"ViewportIndexedfv","gl","",N,N],[5,"is_loaded","gl::ViewportIndexedfv","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[0,"WaitSync","gl","",N,N],[5,"is_loaded","gl::WaitSync","",N,[[],["bool"]]],[5,"load_with","","",N,[[["f"]]]],[17,"ACTIVE_ATOMIC_COUNTER_BUFFERS","gl","",N,N],[17,"ACTIVE_ATTRIBUTES","","",N,N],[17,"ACTIVE_ATTRIBUTE_MAX_LENGTH","","",N,N],[17,"ACTIVE_PROGRAM","","",N,N],[17,"ACTIVE_RESOURCES","","",N,N],[17,"ACTIVE_SUBROUTINES","","",N,N],[17,"ACTIVE_SUBROUTINE_MAX_LENGTH","","",N,N],[17,"ACTIVE_SUBROUTINE_UNIFORMS","","",N,N],[17,"ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS","","",N,N],[17,"ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH","","",N,N],[17,"ACTIVE_TEXTURE","","",N,N],[17,"ACTIVE_UNIFORMS","","",N,N],[17,"ACTIVE_UNIFORM_BLOCKS","","",N,N],[17,"ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH","","",N,N],[17,"ACTIVE_UNIFORM_MAX_LENGTH","","",N,N],[17,"ACTIVE_VARIABLES","","",N,N],[17,"ALIASED_LINE_WIDTH_RANGE","","",N,N],[17,"ALL_BARRIER_BITS","","",N,N],[17,"ALL_SHADER_BITS","","",N,N],[17,"ALPHA","","",N,N],[17,"ALREADY_SIGNALED","","",N,N],[17,"ALWAYS","","",N,N],[17,"AND","","",N,N],[17,"AND_INVERTED","","",N,N],[17,"AND_REVERSE","","",N,N],[17,"ANY_SAMPLES_PASSED","","",N,N],[17,"ANY_SAMPLES_PASSED_CONSERVATIVE","","",N,N],[17,"ARRAY_BUFFER","","",N,N],[17,"ARRAY_BUFFER_BINDING","","",N,N],[17,"ARRAY_SIZE","","",N,N],[17,"ARRAY_STRIDE","","",N,N],[17,"ATOMIC_COUNTER_BARRIER_BIT","","",N,N],[17,"ATOMIC_COUNTER_BUFFER","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_BINDING","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_DATA_SIZE","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_INDEX","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_SIZE","","",N,N],[17,"ATOMIC_COUNTER_BUFFER_START","","",N,N],[17,"ATTACHED_SHADERS","","",N,N],[17,"AUTO_GENERATE_MIPMAP","","",N,N],[17,"BACK","","",N,N],[17,"BACK_LEFT","","",N,N],[17,"BACK_RIGHT","","",N,N],[17,"BGR","","",N,N],[17,"BGRA","","",N,N],[17,"BGRA_INTEGER","","",N,N],[17,"BGR_INTEGER","","",N,N],[17,"BLEND","","",N,N],[17,"BLEND_COLOR","","",N,N],[17,"BLEND_DST","","",N,N],[17,"BLEND_DST_ALPHA","","",N,N],[17,"BLEND_DST_RGB","","",N,N],[17,"BLEND_EQUATION","","",N,N],[17,"BLEND_EQUATION_ALPHA","","",N,N],[17,"BLEND_EQUATION_RGB","","",N,N],[17,"BLEND_SRC","","",N,N],[17,"BLEND_SRC_ALPHA","","",N,N],[17,"BLEND_SRC_RGB","","",N,N],[17,"BLOCK_INDEX","","",N,N],[17,"BLUE","","",N,N],[17,"BLUE_INTEGER","","",N,N],[17,"BOOL","","",N,N],[17,"BOOL_VEC2","","",N,N],[17,"BOOL_VEC3","","",N,N],[17,"BOOL_VEC4","","",N,N],[17,"BUFFER","","",N,N],[17,"BUFFER_ACCESS","","",N,N],[17,"BUFFER_ACCESS_FLAGS","","",N,N],[17,"BUFFER_BINDING","","",N,N],[17,"BUFFER_DATA_SIZE","","",N,N],[17,"BUFFER_IMMUTABLE_STORAGE","","",N,N],[17,"BUFFER_MAPPED","","",N,N],[17,"BUFFER_MAP_LENGTH","","",N,N],[17,"BUFFER_MAP_OFFSET","","",N,N],[17,"BUFFER_MAP_POINTER","","",N,N],[17,"BUFFER_SIZE","","",N,N],[17,"BUFFER_STORAGE_FLAGS","","",N,N],[17,"BUFFER_UPDATE_BARRIER_BIT","","",N,N],[17,"BUFFER_USAGE","","",N,N],[17,"BUFFER_VARIABLE","","",N,N],[17,"BYTE","","",N,N],[17,"CAVEAT_SUPPORT","","",N,N],[17,"CCW","","",N,N],[17,"CLAMP_READ_COLOR","","",N,N],[17,"CLAMP_TO_BORDER","","",N,N],[17,"CLAMP_TO_EDGE","","",N,N],[17,"CLEAR","","",N,N],[17,"CLEAR_BUFFER","","",N,N],[17,"CLEAR_TEXTURE","","",N,N],[17,"CLIENT_MAPPED_BUFFER_BARRIER_BIT","","",N,N],[17,"CLIENT_STORAGE_BIT","","",N,N],[17,"CLIP_DEPTH_MODE","","",N,N],[17,"CLIP_DISTANCE0","","",N,N],[17,"CLIP_DISTANCE1","","",N,N],[17,"CLIP_DISTANCE2","","",N,N],[17,"CLIP_DISTANCE3","","",N,N],[17,"CLIP_DISTANCE4","","",N,N],[17,"CLIP_DISTANCE5","","",N,N],[17,"CLIP_DISTANCE6","","",N,N],[17,"CLIP_DISTANCE7","","",N,N],[17,"CLIP_ORIGIN","","",N,N],[17,"COLOR","","",N,N],[17,"COLOR_ATTACHMENT0","","",N,N],[17,"COLOR_ATTACHMENT1","","",N,N],[17,"COLOR_ATTACHMENT10","","",N,N],[17,"COLOR_ATTACHMENT11","","",N,N],[17,"COLOR_ATTACHMENT12","","",N,N],[17,"COLOR_ATTACHMENT13","","",N,N],[17,"COLOR_ATTACHMENT14","","",N,N],[17,"COLOR_ATTACHMENT15","","",N,N],[17,"COLOR_ATTACHMENT16","","",N,N],[17,"COLOR_ATTACHMENT17","","",N,N],[17,"COLOR_ATTACHMENT18","","",N,N],[17,"COLOR_ATTACHMENT19","","",N,N],[17,"COLOR_ATTACHMENT2","","",N,N],[17,"COLOR_ATTACHMENT20","","",N,N],[17,"COLOR_ATTACHMENT21","","",N,N],[17,"COLOR_ATTACHMENT22","","",N,N],[17,"COLOR_ATTACHMENT23","","",N,N],[17,"COLOR_ATTACHMENT24","","",N,N],[17,"COLOR_ATTACHMENT25","","",N,N],[17,"COLOR_ATTACHMENT26","","",N,N],[17,"COLOR_ATTACHMENT27","","",N,N],[17,"COLOR_ATTACHMENT28","","",N,N],[17,"COLOR_ATTACHMENT29","","",N,N],[17,"COLOR_ATTACHMENT3","","",N,N],[17,"COLOR_ATTACHMENT30","","",N,N],[17,"COLOR_ATTACHMENT31","","",N,N],[17,"COLOR_ATTACHMENT4","","",N,N],[17,"COLOR_ATTACHMENT5","","",N,N],[17,"COLOR_ATTACHMENT6","","",N,N],[17,"COLOR_ATTACHMENT7","","",N,N],[17,"COLOR_ATTACHMENT8","","",N,N],[17,"COLOR_ATTACHMENT9","","",N,N],[17,"COLOR_BUFFER_BIT","","",N,N],[17,"COLOR_CLEAR_VALUE","","",N,N],[17,"COLOR_COMPONENTS","","",N,N],[17,"COLOR_ENCODING","","",N,N],[17,"COLOR_LOGIC_OP","","",N,N],[17,"COLOR_RENDERABLE","","",N,N],[17,"COLOR_WRITEMASK","","",N,N],[17,"COMMAND_BARRIER_BIT","","",N,N],[17,"COMPARE_REF_TO_TEXTURE","","",N,N],[17,"COMPATIBLE_SUBROUTINES","","",N,N],[17,"COMPILE_STATUS","","",N,N],[17,"COMPRESSED_R11_EAC","","",N,N],[17,"COMPRESSED_RED","","",N,N],[17,"COMPRESSED_RED_RGTC1","","",N,N],[17,"COMPRESSED_RG","","",N,N],[17,"COMPRESSED_RG11_EAC","","",N,N],[17,"COMPRESSED_RGB","","",N,N],[17,"COMPRESSED_RGB8_ETC2","","",N,N],[17,"COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","","",N,N],[17,"COMPRESSED_RGBA","","",N,N],[17,"COMPRESSED_RGBA8_ETC2_EAC","","",N,N],[17,"COMPRESSED_RGBA_BPTC_UNORM","","",N,N],[17,"COMPRESSED_RGB_BPTC_SIGNED_FLOAT","","",N,N],[17,"COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT","","",N,N],[17,"COMPRESSED_RG_RGTC2","","",N,N],[17,"COMPRESSED_SIGNED_R11_EAC","","",N,N],[17,"COMPRESSED_SIGNED_RED_RGTC1","","",N,N],[17,"COMPRESSED_SIGNED_RG11_EAC","","",N,N],[17,"COMPRESSED_SIGNED_RG_RGTC2","","",N,N],[17,"COMPRESSED_SRGB","","",N,N],[17,"COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","","",N,N],[17,"COMPRESSED_SRGB8_ETC2","","",N,N],[17,"COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","","",N,N],[17,"COMPRESSED_SRGB_ALPHA","","",N,N],[17,"COMPRESSED_SRGB_ALPHA_BPTC_UNORM","","",N,N],[17,"COMPRESSED_TEXTURE_FORMATS","","",N,N],[17,"COMPUTE_SHADER","","",N,N],[17,"COMPUTE_SHADER_BIT","","",N,N],[17,"COMPUTE_SUBROUTINE","","",N,N],[17,"COMPUTE_SUBROUTINE_UNIFORM","","",N,N],[17,"COMPUTE_TEXTURE","","",N,N],[17,"COMPUTE_WORK_GROUP_SIZE","","",N,N],[17,"CONDITION_SATISFIED","","",N,N],[17,"CONSTANT_ALPHA","","",N,N],[17,"CONSTANT_COLOR","","",N,N],[17,"CONTEXT_COMPATIBILITY_PROFILE_BIT","","",N,N],[17,"CONTEXT_CORE_PROFILE_BIT","","",N,N],[17,"CONTEXT_FLAGS","","",N,N],[17,"CONTEXT_FLAG_DEBUG_BIT","","",N,N],[17,"CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT","","",N,N],[17,"CONTEXT_FLAG_ROBUST_ACCESS_BIT","","",N,N],[17,"CONTEXT_LOST","","",N,N],[17,"CONTEXT_PROFILE_MASK","","",N,N],[17,"CONTEXT_RELEASE_BEHAVIOR","","",N,N],[17,"CONTEXT_RELEASE_BEHAVIOR_FLUSH","","",N,N],[17,"COPY","","",N,N],[17,"COPY_INVERTED","","",N,N],[17,"COPY_READ_BUFFER","","",N,N],[17,"COPY_READ_BUFFER_BINDING","","",N,N],[17,"COPY_WRITE_BUFFER","","",N,N],[17,"COPY_WRITE_BUFFER_BINDING","","",N,N],[17,"CULL_FACE","","",N,N],[17,"CULL_FACE_MODE","","",N,N],[17,"CURRENT_PROGRAM","","",N,N],[17,"CURRENT_QUERY","","",N,N],[17,"CURRENT_VERTEX_ATTRIB","","",N,N],[17,"CW","","",N,N],[17,"DEBUG_CALLBACK_FUNCTION","","",N,N],[17,"DEBUG_CALLBACK_USER_PARAM","","",N,N],[17,"DEBUG_GROUP_STACK_DEPTH","","",N,N],[17,"DEBUG_LOGGED_MESSAGES","","",N,N],[17,"DEBUG_NEXT_LOGGED_MESSAGE_LENGTH","","",N,N],[17,"DEBUG_OUTPUT","","",N,N],[17,"DEBUG_OUTPUT_SYNCHRONOUS","","",N,N],[17,"DEBUG_SEVERITY_HIGH","","",N,N],[17,"DEBUG_SEVERITY_LOW","","",N,N],[17,"DEBUG_SEVERITY_MEDIUM","","",N,N],[17,"DEBUG_SEVERITY_NOTIFICATION","","",N,N],[17,"DEBUG_SOURCE_API","","",N,N],[17,"DEBUG_SOURCE_APPLICATION","","",N,N],[17,"DEBUG_SOURCE_OTHER","","",N,N],[17,"DEBUG_SOURCE_SHADER_COMPILER","","",N,N],[17,"DEBUG_SOURCE_THIRD_PARTY","","",N,N],[17,"DEBUG_SOURCE_WINDOW_SYSTEM","","",N,N],[17,"DEBUG_TYPE_DEPRECATED_BEHAVIOR","","",N,N],[17,"DEBUG_TYPE_ERROR","","",N,N],[17,"DEBUG_TYPE_MARKER","","",N,N],[17,"DEBUG_TYPE_OTHER","","",N,N],[17,"DEBUG_TYPE_PERFORMANCE","","",N,N],[17,"DEBUG_TYPE_POP_GROUP","","",N,N],[17,"DEBUG_TYPE_PORTABILITY","","",N,N],[17,"DEBUG_TYPE_PUSH_GROUP","","",N,N],[17,"DEBUG_TYPE_UNDEFINED_BEHAVIOR","","",N,N],[17,"DECR","","",N,N],[17,"DECR_WRAP","","",N,N],[17,"DELETE_STATUS","","",N,N],[17,"DEPTH","","",N,N],[17,"DEPTH24_STENCIL8","","",N,N],[17,"DEPTH32F_STENCIL8","","",N,N],[17,"DEPTH_ATTACHMENT","","",N,N],[17,"DEPTH_BUFFER_BIT","","",N,N],[17,"DEPTH_CLAMP","","",N,N],[17,"DEPTH_CLEAR_VALUE","","",N,N],[17,"DEPTH_COMPONENT","","",N,N],[17,"DEPTH_COMPONENT16","","",N,N],[17,"DEPTH_COMPONENT24","","",N,N],[17,"DEPTH_COMPONENT32","","",N,N],[17,"DEPTH_COMPONENT32F","","",N,N],[17,"DEPTH_COMPONENTS","","",N,N],[17,"DEPTH_FUNC","","",N,N],[17,"DEPTH_RANGE","","",N,N],[17,"DEPTH_RENDERABLE","","",N,N],[17,"DEPTH_STENCIL","","",N,N],[17,"DEPTH_STENCIL_ATTACHMENT","","",N,N],[17,"DEPTH_STENCIL_TEXTURE_MODE","","",N,N],[17,"DEPTH_TEST","","",N,N],[17,"DEPTH_WRITEMASK","","",N,N],[17,"DISPATCH_INDIRECT_BUFFER","","",N,N],[17,"DISPATCH_INDIRECT_BUFFER_BINDING","","",N,N],[17,"DISPLAY_LIST","","",N,N],[17,"DITHER","","",N,N],[17,"DONT_CARE","","",N,N],[17,"DOUBLE","","",N,N],[17,"DOUBLEBUFFER","","",N,N],[17,"DOUBLE_MAT2","","",N,N],[17,"DOUBLE_MAT2x3","","",N,N],[17,"DOUBLE_MAT2x4","","",N,N],[17,"DOUBLE_MAT3","","",N,N],[17,"DOUBLE_MAT3x2","","",N,N],[17,"DOUBLE_MAT3x4","","",N,N],[17,"DOUBLE_MAT4","","",N,N],[17,"DOUBLE_MAT4x2","","",N,N],[17,"DOUBLE_MAT4x3","","",N,N],[17,"DOUBLE_VEC2","","",N,N],[17,"DOUBLE_VEC3","","",N,N],[17,"DOUBLE_VEC4","","",N,N],[17,"DRAW_BUFFER","","",N,N],[17,"DRAW_BUFFER0","","",N,N],[17,"DRAW_BUFFER1","","",N,N],[17,"DRAW_BUFFER10","","",N,N],[17,"DRAW_BUFFER11","","",N,N],[17,"DRAW_BUFFER12","","",N,N],[17,"DRAW_BUFFER13","","",N,N],[17,"DRAW_BUFFER14","","",N,N],[17,"DRAW_BUFFER15","","",N,N],[17,"DRAW_BUFFER2","","",N,N],[17,"DRAW_BUFFER3","","",N,N],[17,"DRAW_BUFFER4","","",N,N],[17,"DRAW_BUFFER5","","",N,N],[17,"DRAW_BUFFER6","","",N,N],[17,"DRAW_BUFFER7","","",N,N],[17,"DRAW_BUFFER8","","",N,N],[17,"DRAW_BUFFER9","","",N,N],[17,"DRAW_FRAMEBUFFER","","",N,N],[17,"DRAW_FRAMEBUFFER_BINDING","","",N,N],[17,"DRAW_INDIRECT_BUFFER","","",N,N],[17,"DRAW_INDIRECT_BUFFER_BINDING","","",N,N],[17,"DST_ALPHA","","",N,N],[17,"DST_COLOR","","",N,N],[17,"DYNAMIC_COPY","","",N,N],[17,"DYNAMIC_DRAW","","",N,N],[17,"DYNAMIC_READ","","",N,N],[17,"DYNAMIC_STORAGE_BIT","","",N,N],[17,"ELEMENT_ARRAY_BARRIER_BIT","","",N,N],[17,"ELEMENT_ARRAY_BUFFER","","",N,N],[17,"ELEMENT_ARRAY_BUFFER_BINDING","","",N,N],[17,"EQUAL","","",N,N],[17,"EQUIV","","",N,N],[17,"EXTENSIONS","","",N,N],[17,"FALSE","","",N,N],[17,"FASTEST","","",N,N],[17,"FILL","","",N,N],[17,"FILTER","","",N,N],[17,"FIRST_VERTEX_CONVENTION","","",N,N],[17,"FIXED","","",N,N],[17,"FIXED_ONLY","","",N,N],[17,"FLOAT","","",N,N],[17,"FLOAT_32_UNSIGNED_INT_24_8_REV","","",N,N],[17,"FLOAT_MAT2","","",N,N],[17,"FLOAT_MAT2x3","","",N,N],[17,"FLOAT_MAT2x4","","",N,N],[17,"FLOAT_MAT3","","",N,N],[17,"FLOAT_MAT3x2","","",N,N],[17,"FLOAT_MAT3x4","","",N,N],[17,"FLOAT_MAT4","","",N,N],[17,"FLOAT_MAT4x2","","",N,N],[17,"FLOAT_MAT4x3","","",N,N],[17,"FLOAT_VEC2","","",N,N],[17,"FLOAT_VEC3","","",N,N],[17,"FLOAT_VEC4","","",N,N],[17,"FRACTIONAL_EVEN","","",N,N],[17,"FRACTIONAL_ODD","","",N,N],[17,"FRAGMENT_INTERPOLATION_OFFSET_BITS","","",N,N],[17,"FRAGMENT_SHADER","","",N,N],[17,"FRAGMENT_SHADER_BIT","","",N,N],[17,"FRAGMENT_SHADER_DERIVATIVE_HINT","","",N,N],[17,"FRAGMENT_SUBROUTINE","","",N,N],[17,"FRAGMENT_SUBROUTINE_UNIFORM","","",N,N],[17,"FRAGMENT_TEXTURE","","",N,N],[17,"FRAMEBUFFER","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_BLUE_SIZE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_GREEN_SIZE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_LAYERED","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_RED_SIZE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER","","",N,N],[17,"FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL","","",N,N],[17,"FRAMEBUFFER_BARRIER_BIT","","",N,N],[17,"FRAMEBUFFER_BINDING","","",N,N],[17,"FRAMEBUFFER_BLEND","","",N,N],[17,"FRAMEBUFFER_COMPLETE","","",N,N],[17,"FRAMEBUFFER_DEFAULT","","",N,N],[17,"FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS","","",N,N],[17,"FRAMEBUFFER_DEFAULT_HEIGHT","","",N,N],[17,"FRAMEBUFFER_DEFAULT_LAYERS","","",N,N],[17,"FRAMEBUFFER_DEFAULT_SAMPLES","","",N,N],[17,"FRAMEBUFFER_DEFAULT_WIDTH","","",N,N],[17,"FRAMEBUFFER_INCOMPLETE_ATTACHMENT","","",N,N],[17,"FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER","","",N,N],[17,"FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS","","",N,N],[17,"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","","",N,N],[17,"FRAMEBUFFER_INCOMPLETE_MULTISAMPLE","","",N,N],[17,"FRAMEBUFFER_INCOMPLETE_READ_BUFFER","","",N,N],[17,"FRAMEBUFFER_RENDERABLE","","",N,N],[17,"FRAMEBUFFER_RENDERABLE_LAYERED","","",N,N],[17,"FRAMEBUFFER_SRGB","","",N,N],[17,"FRAMEBUFFER_UNDEFINED","","",N,N],[17,"FRAMEBUFFER_UNSUPPORTED","","",N,N],[17,"FRONT","","",N,N],[17,"FRONT_AND_BACK","","",N,N],[17,"FRONT_FACE","","",N,N],[17,"FRONT_LEFT","","",N,N],[17,"FRONT_RIGHT","","",N,N],[17,"FULL_SUPPORT","","",N,N],[17,"FUNC_ADD","","",N,N],[17,"FUNC_REVERSE_SUBTRACT","","",N,N],[17,"FUNC_SUBTRACT","","",N,N],[17,"GEOMETRY_INPUT_TYPE","","",N,N],[17,"GEOMETRY_OUTPUT_TYPE","","",N,N],[17,"GEOMETRY_SHADER","","",N,N],[17,"GEOMETRY_SHADER_BIT","","",N,N],[17,"GEOMETRY_SHADER_INVOCATIONS","","",N,N],[17,"GEOMETRY_SUBROUTINE","","",N,N],[17,"GEOMETRY_SUBROUTINE_UNIFORM","","",N,N],[17,"GEOMETRY_TEXTURE","","",N,N],[17,"GEOMETRY_VERTICES_OUT","","",N,N],[17,"GEQUAL","","",N,N],[17,"GET_TEXTURE_IMAGE_FORMAT","","",N,N],[17,"GET_TEXTURE_IMAGE_TYPE","","",N,N],[17,"GREATER","","",N,N],[17,"GREEN","","",N,N],[17,"GREEN_INTEGER","","",N,N],[17,"GUILTY_CONTEXT_RESET","","",N,N],[17,"HALF_FLOAT","","",N,N],[17,"HIGH_FLOAT","","",N,N],[17,"HIGH_INT","","",N,N],[17,"IMAGE_1D","","",N,N],[17,"IMAGE_1D_ARRAY","","",N,N],[17,"IMAGE_2D","","",N,N],[17,"IMAGE_2D_ARRAY","","",N,N],[17,"IMAGE_2D_MULTISAMPLE","","",N,N],[17,"IMAGE_2D_MULTISAMPLE_ARRAY","","",N,N],[17,"IMAGE_2D_RECT","","",N,N],[17,"IMAGE_3D","","",N,N],[17,"IMAGE_BINDING_ACCESS","","",N,N],[17,"IMAGE_BINDING_FORMAT","","",N,N],[17,"IMAGE_BINDING_LAYER","","",N,N],[17,"IMAGE_BINDING_LAYERED","","",N,N],[17,"IMAGE_BINDING_LEVEL","","",N,N],[17,"IMAGE_BINDING_NAME","","",N,N],[17,"IMAGE_BUFFER","","",N,N],[17,"IMAGE_CLASS_10_10_10_2","","",N,N],[17,"IMAGE_CLASS_11_11_10","","",N,N],[17,"IMAGE_CLASS_1_X_16","","",N,N],[17,"IMAGE_CLASS_1_X_32","","",N,N],[17,"IMAGE_CLASS_1_X_8","","",N,N],[17,"IMAGE_CLASS_2_X_16","","",N,N],[17,"IMAGE_CLASS_2_X_32","","",N,N],[17,"IMAGE_CLASS_2_X_8","","",N,N],[17,"IMAGE_CLASS_4_X_16","","",N,N],[17,"IMAGE_CLASS_4_X_32","","",N,N],[17,"IMAGE_CLASS_4_X_8","","",N,N],[17,"IMAGE_COMPATIBILITY_CLASS","","",N,N],[17,"IMAGE_CUBE","","",N,N],[17,"IMAGE_CUBE_MAP_ARRAY","","",N,N],[17,"IMAGE_FORMAT_COMPATIBILITY_BY_CLASS","","",N,N],[17,"IMAGE_FORMAT_COMPATIBILITY_BY_SIZE","","",N,N],[17,"IMAGE_FORMAT_COMPATIBILITY_TYPE","","",N,N],[17,"IMAGE_PIXEL_FORMAT","","",N,N],[17,"IMAGE_PIXEL_TYPE","","",N,N],[17,"IMAGE_TEXEL_SIZE","","",N,N],[17,"IMPLEMENTATION_COLOR_READ_FORMAT","","",N,N],[17,"IMPLEMENTATION_COLOR_READ_TYPE","","",N,N],[17,"INCR","","",N,N],[17,"INCR_WRAP","","",N,N],[17,"INDEX","","",N,N],[17,"INFO_LOG_LENGTH","","",N,N],[17,"INNOCENT_CONTEXT_RESET","","",N,N],[17,"INT","","",N,N],[17,"INTERLEAVED_ATTRIBS","","",N,N],[17,"INTERNALFORMAT_ALPHA_SIZE","","",N,N],[17,"INTERNALFORMAT_ALPHA_TYPE","","",N,N],[17,"INTERNALFORMAT_BLUE_SIZE","","",N,N],[17,"INTERNALFORMAT_BLUE_TYPE","","",N,N],[17,"INTERNALFORMAT_DEPTH_SIZE","","",N,N],[17,"INTERNALFORMAT_DEPTH_TYPE","","",N,N],[17,"INTERNALFORMAT_GREEN_SIZE","","",N,N],[17,"INTERNALFORMAT_GREEN_TYPE","","",N,N],[17,"INTERNALFORMAT_PREFERRED","","",N,N],[17,"INTERNALFORMAT_RED_SIZE","","",N,N],[17,"INTERNALFORMAT_RED_TYPE","","",N,N],[17,"INTERNALFORMAT_SHARED_SIZE","","",N,N],[17,"INTERNALFORMAT_STENCIL_SIZE","","",N,N],[17,"INTERNALFORMAT_STENCIL_TYPE","","",N,N],[17,"INTERNALFORMAT_SUPPORTED","","",N,N],[17,"INT_2_10_10_10_REV","","",N,N],[17,"INT_IMAGE_1D","","",N,N],[17,"INT_IMAGE_1D_ARRAY","","",N,N],[17,"INT_IMAGE_2D","","",N,N],[17,"INT_IMAGE_2D_ARRAY","","",N,N],[17,"INT_IMAGE_2D_MULTISAMPLE","","",N,N],[17,"INT_IMAGE_2D_MULTISAMPLE_ARRAY","","",N,N],[17,"INT_IMAGE_2D_RECT","","",N,N],[17,"INT_IMAGE_3D","","",N,N],[17,"INT_IMAGE_BUFFER","","",N,N],[17,"INT_IMAGE_CUBE","","",N,N],[17,"INT_IMAGE_CUBE_MAP_ARRAY","","",N,N],[17,"INT_SAMPLER_1D","","",N,N],[17,"INT_SAMPLER_1D_ARRAY","","",N,N],[17,"INT_SAMPLER_2D","","",N,N],[17,"INT_SAMPLER_2D_ARRAY","","",N,N],[17,"INT_SAMPLER_2D_MULTISAMPLE","","",N,N],[17,"INT_SAMPLER_2D_MULTISAMPLE_ARRAY","","",N,N],[17,"INT_SAMPLER_2D_RECT","","",N,N],[17,"INT_SAMPLER_3D","","",N,N],[17,"INT_SAMPLER_BUFFER","","",N,N],[17,"INT_SAMPLER_CUBE","","",N,N],[17,"INT_SAMPLER_CUBE_MAP_ARRAY","","",N,N],[17,"INT_VEC2","","",N,N],[17,"INT_VEC3","","",N,N],[17,"INT_VEC4","","",N,N],[17,"INVALID_ENUM","","",N,N],[17,"INVALID_FRAMEBUFFER_OPERATION","","",N,N],[17,"INVALID_INDEX","","",N,N],[17,"INVALID_OPERATION","","",N,N],[17,"INVALID_VALUE","","",N,N],[17,"INVERT","","",N,N],[17,"ISOLINES","","",N,N],[17,"IS_PER_PATCH","","",N,N],[17,"IS_ROW_MAJOR","","",N,N],[17,"KEEP","","",N,N],[17,"LAST_VERTEX_CONVENTION","","",N,N],[17,"LAYER_PROVOKING_VERTEX","","",N,N],[17,"LEFT","","",N,N],[17,"LEQUAL","","",N,N],[17,"LESS","","",N,N],[17,"LINE","","",N,N],[17,"LINEAR","","",N,N],[17,"LINEAR_MIPMAP_LINEAR","","",N,N],[17,"LINEAR_MIPMAP_NEAREST","","",N,N],[17,"LINES","","",N,N],[17,"LINES_ADJACENCY","","",N,N],[17,"LINE_LOOP","","",N,N],[17,"LINE_SMOOTH","","",N,N],[17,"LINE_SMOOTH_HINT","","",N,N],[17,"LINE_STRIP","","",N,N],[17,"LINE_STRIP_ADJACENCY","","",N,N],[17,"LINE_WIDTH","","",N,N],[17,"LINE_WIDTH_GRANULARITY","","",N,N],[17,"LINE_WIDTH_RANGE","","",N,N],[17,"LINK_STATUS","","",N,N],[17,"LOCATION","","",N,N],[17,"LOCATION_COMPONENT","","",N,N],[17,"LOCATION_INDEX","","",N,N],[17,"LOGIC_OP_MODE","","",N,N],[17,"LOSE_CONTEXT_ON_RESET","","",N,N],[17,"LOWER_LEFT","","",N,N],[17,"LOW_FLOAT","","",N,N],[17,"LOW_INT","","",N,N],[17,"MAJOR_VERSION","","",N,N],[17,"MANUAL_GENERATE_MIPMAP","","",N,N],[17,"MAP_COHERENT_BIT","","",N,N],[17,"MAP_FLUSH_EXPLICIT_BIT","","",N,N],[17,"MAP_INVALIDATE_BUFFER_BIT","","",N,N],[17,"MAP_INVALIDATE_RANGE_BIT","","",N,N],[17,"MAP_PERSISTENT_BIT","","",N,N],[17,"MAP_READ_BIT","","",N,N],[17,"MAP_UNSYNCHRONIZED_BIT","","",N,N],[17,"MAP_WRITE_BIT","","",N,N],[17,"MATRIX_STRIDE","","",N,N],[17,"MAX","","",N,N],[17,"MAX_3D_TEXTURE_SIZE","","",N,N],[17,"MAX_ARRAY_TEXTURE_LAYERS","","",N,N],[17,"MAX_ATOMIC_COUNTER_BUFFER_BINDINGS","","",N,N],[17,"MAX_ATOMIC_COUNTER_BUFFER_SIZE","","",N,N],[17,"MAX_CLIP_DISTANCES","","",N,N],[17,"MAX_COLOR_ATTACHMENTS","","",N,N],[17,"MAX_COLOR_TEXTURE_SAMPLES","","",N,N],[17,"MAX_COMBINED_ATOMIC_COUNTERS","","",N,N],[17,"MAX_COMBINED_ATOMIC_COUNTER_BUFFERS","","",N,N],[17,"MAX_COMBINED_CLIP_AND_CULL_DISTANCES","","",N,N],[17,"MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_COMBINED_DIMENSIONS","","",N,N],[17,"MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_COMBINED_IMAGE_UNIFORMS","","",N,N],[17,"MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS","","",N,N],[17,"MAX_COMBINED_SHADER_OUTPUT_RESOURCES","","",N,N],[17,"MAX_COMBINED_SHADER_STORAGE_BLOCKS","","",N,N],[17,"MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_COMBINED_TEXTURE_IMAGE_UNITS","","",N,N],[17,"MAX_COMBINED_UNIFORM_BLOCKS","","",N,N],[17,"MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_COMPUTE_ATOMIC_COUNTERS","","",N,N],[17,"MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS","","",N,N],[17,"MAX_COMPUTE_IMAGE_UNIFORMS","","",N,N],[17,"MAX_COMPUTE_SHADER_STORAGE_BLOCKS","","",N,N],[17,"MAX_COMPUTE_SHARED_MEMORY_SIZE","","",N,N],[17,"MAX_COMPUTE_TEXTURE_IMAGE_UNITS","","",N,N],[17,"MAX_COMPUTE_UNIFORM_BLOCKS","","",N,N],[17,"MAX_COMPUTE_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_COMPUTE_WORK_GROUP_COUNT","","",N,N],[17,"MAX_COMPUTE_WORK_GROUP_INVOCATIONS","","",N,N],[17,"MAX_COMPUTE_WORK_GROUP_SIZE","","",N,N],[17,"MAX_CUBE_MAP_TEXTURE_SIZE","","",N,N],[17,"MAX_CULL_DISTANCES","","",N,N],[17,"MAX_DEBUG_GROUP_STACK_DEPTH","","",N,N],[17,"MAX_DEBUG_LOGGED_MESSAGES","","",N,N],[17,"MAX_DEBUG_MESSAGE_LENGTH","","",N,N],[17,"MAX_DEPTH","","",N,N],[17,"MAX_DEPTH_TEXTURE_SAMPLES","","",N,N],[17,"MAX_DRAW_BUFFERS","","",N,N],[17,"MAX_DUAL_SOURCE_DRAW_BUFFERS","","",N,N],[17,"MAX_ELEMENTS_INDICES","","",N,N],[17,"MAX_ELEMENTS_VERTICES","","",N,N],[17,"MAX_ELEMENT_INDEX","","",N,N],[17,"MAX_FRAGMENT_ATOMIC_COUNTERS","","",N,N],[17,"MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS","","",N,N],[17,"MAX_FRAGMENT_IMAGE_UNIFORMS","","",N,N],[17,"MAX_FRAGMENT_INPUT_COMPONENTS","","",N,N],[17,"MAX_FRAGMENT_INTERPOLATION_OFFSET","","",N,N],[17,"MAX_FRAGMENT_SHADER_STORAGE_BLOCKS","","",N,N],[17,"MAX_FRAGMENT_UNIFORM_BLOCKS","","",N,N],[17,"MAX_FRAGMENT_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_FRAGMENT_UNIFORM_VECTORS","","",N,N],[17,"MAX_FRAMEBUFFER_HEIGHT","","",N,N],[17,"MAX_FRAMEBUFFER_LAYERS","","",N,N],[17,"MAX_FRAMEBUFFER_SAMPLES","","",N,N],[17,"MAX_FRAMEBUFFER_WIDTH","","",N,N],[17,"MAX_GEOMETRY_ATOMIC_COUNTERS","","",N,N],[17,"MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS","","",N,N],[17,"MAX_GEOMETRY_IMAGE_UNIFORMS","","",N,N],[17,"MAX_GEOMETRY_INPUT_COMPONENTS","","",N,N],[17,"MAX_GEOMETRY_OUTPUT_COMPONENTS","","",N,N],[17,"MAX_GEOMETRY_OUTPUT_VERTICES","","",N,N],[17,"MAX_GEOMETRY_SHADER_INVOCATIONS","","",N,N],[17,"MAX_GEOMETRY_SHADER_STORAGE_BLOCKS","","",N,N],[17,"MAX_GEOMETRY_TEXTURE_IMAGE_UNITS","","",N,N],[17,"MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS","","",N,N],[17,"MAX_GEOMETRY_UNIFORM_BLOCKS","","",N,N],[17,"MAX_GEOMETRY_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_HEIGHT","","",N,N],[17,"MAX_IMAGE_SAMPLES","","",N,N],[17,"MAX_IMAGE_UNITS","","",N,N],[17,"MAX_INTEGER_SAMPLES","","",N,N],[17,"MAX_LABEL_LENGTH","","",N,N],[17,"MAX_LAYERS","","",N,N],[17,"MAX_NAME_LENGTH","","",N,N],[17,"MAX_NUM_ACTIVE_VARIABLES","","",N,N],[17,"MAX_NUM_COMPATIBLE_SUBROUTINES","","",N,N],[17,"MAX_PATCH_VERTICES","","",N,N],[17,"MAX_PROGRAM_TEXEL_OFFSET","","",N,N],[17,"MAX_PROGRAM_TEXTURE_GATHER_OFFSET","","",N,N],[17,"MAX_RECTANGLE_TEXTURE_SIZE","","",N,N],[17,"MAX_RENDERBUFFER_SIZE","","",N,N],[17,"MAX_SAMPLES","","",N,N],[17,"MAX_SAMPLE_MASK_WORDS","","",N,N],[17,"MAX_SERVER_WAIT_TIMEOUT","","",N,N],[17,"MAX_SHADER_STORAGE_BLOCK_SIZE","","",N,N],[17,"MAX_SHADER_STORAGE_BUFFER_BINDINGS","","",N,N],[17,"MAX_SUBROUTINES","","",N,N],[17,"MAX_SUBROUTINE_UNIFORM_LOCATIONS","","",N,N],[17,"MAX_TESS_CONTROL_ATOMIC_COUNTERS","","",N,N],[17,"MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS","","",N,N],[17,"MAX_TESS_CONTROL_IMAGE_UNIFORMS","","",N,N],[17,"MAX_TESS_CONTROL_INPUT_COMPONENTS","","",N,N],[17,"MAX_TESS_CONTROL_OUTPUT_COMPONENTS","","",N,N],[17,"MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS","","",N,N],[17,"MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS","","",N,N],[17,"MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS","","",N,N],[17,"MAX_TESS_CONTROL_UNIFORM_BLOCKS","","",N,N],[17,"MAX_TESS_CONTROL_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_TESS_EVALUATION_ATOMIC_COUNTERS","","",N,N],[17,"MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS","","",N,N],[17,"MAX_TESS_EVALUATION_IMAGE_UNIFORMS","","",N,N],[17,"MAX_TESS_EVALUATION_INPUT_COMPONENTS","","",N,N],[17,"MAX_TESS_EVALUATION_OUTPUT_COMPONENTS","","",N,N],[17,"MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS","","",N,N],[17,"MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS","","",N,N],[17,"MAX_TESS_EVALUATION_UNIFORM_BLOCKS","","",N,N],[17,"MAX_TESS_EVALUATION_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_TESS_GEN_LEVEL","","",N,N],[17,"MAX_TESS_PATCH_COMPONENTS","","",N,N],[17,"MAX_TEXTURE_BUFFER_SIZE","","",N,N],[17,"MAX_TEXTURE_IMAGE_UNITS","","",N,N],[17,"MAX_TEXTURE_LOD_BIAS","","",N,N],[17,"MAX_TEXTURE_SIZE","","",N,N],[17,"MAX_TRANSFORM_FEEDBACK_BUFFERS","","",N,N],[17,"MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","","",N,N],[17,"MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","","",N,N],[17,"MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","","",N,N],[17,"MAX_UNIFORM_BLOCK_SIZE","","",N,N],[17,"MAX_UNIFORM_BUFFER_BINDINGS","","",N,N],[17,"MAX_UNIFORM_LOCATIONS","","",N,N],[17,"MAX_VARYING_COMPONENTS","","",N,N],[17,"MAX_VARYING_FLOATS","","",N,N],[17,"MAX_VARYING_VECTORS","","",N,N],[17,"MAX_VERTEX_ATOMIC_COUNTERS","","",N,N],[17,"MAX_VERTEX_ATOMIC_COUNTER_BUFFERS","","",N,N],[17,"MAX_VERTEX_ATTRIBS","","",N,N],[17,"MAX_VERTEX_ATTRIB_BINDINGS","","",N,N],[17,"MAX_VERTEX_ATTRIB_RELATIVE_OFFSET","","",N,N],[17,"MAX_VERTEX_ATTRIB_STRIDE","","",N,N],[17,"MAX_VERTEX_IMAGE_UNIFORMS","","",N,N],[17,"MAX_VERTEX_OUTPUT_COMPONENTS","","",N,N],[17,"MAX_VERTEX_SHADER_STORAGE_BLOCKS","","",N,N],[17,"MAX_VERTEX_STREAMS","","",N,N],[17,"MAX_VERTEX_TEXTURE_IMAGE_UNITS","","",N,N],[17,"MAX_VERTEX_UNIFORM_BLOCKS","","",N,N],[17,"MAX_VERTEX_UNIFORM_COMPONENTS","","",N,N],[17,"MAX_VERTEX_UNIFORM_VECTORS","","",N,N],[17,"MAX_VIEWPORTS","","",N,N],[17,"MAX_VIEWPORT_DIMS","","",N,N],[17,"MAX_WIDTH","","",N,N],[17,"MEDIUM_FLOAT","","",N,N],[17,"MEDIUM_INT","","",N,N],[17,"MIN","","",N,N],[17,"MINOR_VERSION","","",N,N],[17,"MIN_FRAGMENT_INTERPOLATION_OFFSET","","",N,N],[17,"MIN_MAP_BUFFER_ALIGNMENT","","",N,N],[17,"MIN_PROGRAM_TEXEL_OFFSET","","",N,N],[17,"MIN_PROGRAM_TEXTURE_GATHER_OFFSET","","",N,N],[17,"MIN_SAMPLE_SHADING_VALUE","","",N,N],[17,"MIPMAP","","",N,N],[17,"MIRRORED_REPEAT","","",N,N],[17,"MIRROR_CLAMP_TO_EDGE","","",N,N],[17,"MULTISAMPLE","","",N,N],[17,"NAME_LENGTH","","",N,N],[17,"NAND","","",N,N],[17,"NEAREST","","",N,N],[17,"NEAREST_MIPMAP_LINEAR","","",N,N],[17,"NEAREST_MIPMAP_NEAREST","","",N,N],[17,"NEGATIVE_ONE_TO_ONE","","",N,N],[17,"NEVER","","",N,N],[17,"NICEST","","",N,N],[17,"NONE","","",N,N],[17,"NOOP","","",N,N],[17,"NOR","","",N,N],[17,"NOTEQUAL","","",N,N],[17,"NO_ERROR","","",N,N],[17,"NO_RESET_NOTIFICATION","","",N,N],[17,"NUM_ACTIVE_VARIABLES","","",N,N],[17,"NUM_COMPATIBLE_SUBROUTINES","","",N,N],[17,"NUM_COMPRESSED_TEXTURE_FORMATS","","",N,N],[17,"NUM_EXTENSIONS","","",N,N],[17,"NUM_PROGRAM_BINARY_FORMATS","","",N,N],[17,"NUM_SAMPLE_COUNTS","","",N,N],[17,"NUM_SHADER_BINARY_FORMATS","","",N,N],[17,"NUM_SHADING_LANGUAGE_VERSIONS","","",N,N],[17,"OBJECT_TYPE","","",N,N],[17,"OFFSET","","",N,N],[17,"ONE","","",N,N],[17,"ONE_MINUS_CONSTANT_ALPHA","","",N,N],[17,"ONE_MINUS_CONSTANT_COLOR","","",N,N],[17,"ONE_MINUS_DST_ALPHA","","",N,N],[17,"ONE_MINUS_DST_COLOR","","",N,N],[17,"ONE_MINUS_SRC1_ALPHA","","",N,N],[17,"ONE_MINUS_SRC1_COLOR","","",N,N],[17,"ONE_MINUS_SRC_ALPHA","","",N,N],[17,"ONE_MINUS_SRC_COLOR","","",N,N],[17,"OR","","",N,N],[17,"OR_INVERTED","","",N,N],[17,"OR_REVERSE","","",N,N],[17,"OUT_OF_MEMORY","","",N,N],[17,"PACK_ALIGNMENT","","",N,N],[17,"PACK_COMPRESSED_BLOCK_DEPTH","","",N,N],[17,"PACK_COMPRESSED_BLOCK_HEIGHT","","",N,N],[17,"PACK_COMPRESSED_BLOCK_SIZE","","",N,N],[17,"PACK_COMPRESSED_BLOCK_WIDTH","","",N,N],[17,"PACK_IMAGE_HEIGHT","","",N,N],[17,"PACK_LSB_FIRST","","",N,N],[17,"PACK_ROW_LENGTH","","",N,N],[17,"PACK_SKIP_IMAGES","","",N,N],[17,"PACK_SKIP_PIXELS","","",N,N],[17,"PACK_SKIP_ROWS","","",N,N],[17,"PACK_SWAP_BYTES","","",N,N],[17,"PATCHES","","",N,N],[17,"PATCH_DEFAULT_INNER_LEVEL","","",N,N],[17,"PATCH_DEFAULT_OUTER_LEVEL","","",N,N],[17,"PATCH_VERTICES","","",N,N],[17,"PIXEL_BUFFER_BARRIER_BIT","","",N,N],[17,"PIXEL_PACK_BUFFER","","",N,N],[17,"PIXEL_PACK_BUFFER_BINDING","","",N,N],[17,"PIXEL_UNPACK_BUFFER","","",N,N],[17,"PIXEL_UNPACK_BUFFER_BINDING","","",N,N],[17,"POINT","","",N,N],[17,"POINTS","","",N,N],[17,"POINT_FADE_THRESHOLD_SIZE","","",N,N],[17,"POINT_SIZE","","",N,N],[17,"POINT_SIZE_GRANULARITY","","",N,N],[17,"POINT_SIZE_RANGE","","",N,N],[17,"POINT_SPRITE_COORD_ORIGIN","","",N,N],[17,"POLYGON_MODE","","",N,N],[17,"POLYGON_OFFSET_FACTOR","","",N,N],[17,"POLYGON_OFFSET_FILL","","",N,N],[17,"POLYGON_OFFSET_LINE","","",N,N],[17,"POLYGON_OFFSET_POINT","","",N,N],[17,"POLYGON_OFFSET_UNITS","","",N,N],[17,"POLYGON_SMOOTH","","",N,N],[17,"POLYGON_SMOOTH_HINT","","",N,N],[17,"PRIMITIVES_GENERATED","","",N,N],[17,"PRIMITIVE_RESTART","","",N,N],[17,"PRIMITIVE_RESTART_FIXED_INDEX","","",N,N],[17,"PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED","","",N,N],[17,"PRIMITIVE_RESTART_INDEX","","",N,N],[17,"PROGRAM","","",N,N],[17,"PROGRAM_BINARY_FORMATS","","",N,N],[17,"PROGRAM_BINARY_LENGTH","","",N,N],[17,"PROGRAM_BINARY_RETRIEVABLE_HINT","","",N,N],[17,"PROGRAM_INPUT","","",N,N],[17,"PROGRAM_OUTPUT","","",N,N],[17,"PROGRAM_PIPELINE","","",N,N],[17,"PROGRAM_PIPELINE_BINDING","","",N,N],[17,"PROGRAM_POINT_SIZE","","",N,N],[17,"PROGRAM_SEPARABLE","","",N,N],[17,"PROVOKING_VERTEX","","",N,N],[17,"PROXY_TEXTURE_1D","","",N,N],[17,"PROXY_TEXTURE_1D_ARRAY","","",N,N],[17,"PROXY_TEXTURE_2D","","",N,N],[17,"PROXY_TEXTURE_2D_ARRAY","","",N,N],[17,"PROXY_TEXTURE_2D_MULTISAMPLE","","",N,N],[17,"PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY","","",N,N],[17,"PROXY_TEXTURE_3D","","",N,N],[17,"PROXY_TEXTURE_CUBE_MAP","","",N,N],[17,"PROXY_TEXTURE_CUBE_MAP_ARRAY","","",N,N],[17,"PROXY_TEXTURE_RECTANGLE","","",N,N],[17,"QUADS","","",N,N],[17,"QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION","","",N,N],[17,"QUERY","","",N,N],[17,"QUERY_BUFFER","","",N,N],[17,"QUERY_BUFFER_BARRIER_BIT","","",N,N],[17,"QUERY_BUFFER_BINDING","","",N,N],[17,"QUERY_BY_REGION_NO_WAIT","","",N,N],[17,"QUERY_BY_REGION_NO_WAIT_INVERTED","","",N,N],[17,"QUERY_BY_REGION_WAIT","","",N,N],[17,"QUERY_BY_REGION_WAIT_INVERTED","","",N,N],[17,"QUERY_COUNTER_BITS","","",N,N],[17,"QUERY_NO_WAIT","","",N,N],[17,"QUERY_NO_WAIT_INVERTED","","",N,N],[17,"QUERY_RESULT","","",N,N],[17,"QUERY_RESULT_AVAILABLE","","",N,N],[17,"QUERY_RESULT_NO_WAIT","","",N,N],[17,"QUERY_TARGET","","",N,N],[17,"QUERY_WAIT","","",N,N],[17,"QUERY_WAIT_INVERTED","","",N,N],[17,"R11F_G11F_B10F","","",N,N],[17,"R16","","",N,N],[17,"R16F","","",N,N],[17,"R16I","","",N,N],[17,"R16UI","","",N,N],[17,"R16_SNORM","","",N,N],[17,"R32F","","",N,N],[17,"R32I","","",N,N],[17,"R32UI","","",N,N],[17,"R3_G3_B2","","",N,N],[17,"R8","","",N,N],[17,"R8I","","",N,N],[17,"R8UI","","",N,N],[17,"R8_SNORM","","",N,N],[17,"RASTERIZER_DISCARD","","",N,N],[17,"READ_BUFFER","","",N,N],[17,"READ_FRAMEBUFFER","","",N,N],[17,"READ_FRAMEBUFFER_BINDING","","",N,N],[17,"READ_ONLY","","",N,N],[17,"READ_PIXELS","","",N,N],[17,"READ_PIXELS_FORMAT","","",N,N],[17,"READ_PIXELS_TYPE","","",N,N],[17,"READ_WRITE","","",N,N],[17,"RED","","",N,N],[17,"RED_INTEGER","","",N,N],[17,"REFERENCED_BY_COMPUTE_SHADER","","",N,N],[17,"REFERENCED_BY_FRAGMENT_SHADER","","",N,N],[17,"REFERENCED_BY_GEOMETRY_SHADER","","",N,N],[17,"REFERENCED_BY_TESS_CONTROL_SHADER","","",N,N],[17,"REFERENCED_BY_TESS_EVALUATION_SHADER","","",N,N],[17,"REFERENCED_BY_VERTEX_SHADER","","",N,N],[17,"RENDERBUFFER","","",N,N],[17,"RENDERBUFFER_ALPHA_SIZE","","",N,N],[17,"RENDERBUFFER_BINDING","","",N,N],[17,"RENDERBUFFER_BLUE_SIZE","","",N,N],[17,"RENDERBUFFER_DEPTH_SIZE","","",N,N],[17,"RENDERBUFFER_GREEN_SIZE","","",N,N],[17,"RENDERBUFFER_HEIGHT","","",N,N],[17,"RENDERBUFFER_INTERNAL_FORMAT","","",N,N],[17,"RENDERBUFFER_RED_SIZE","","",N,N],[17,"RENDERBUFFER_SAMPLES","","",N,N],[17,"RENDERBUFFER_STENCIL_SIZE","","",N,N],[17,"RENDERBUFFER_WIDTH","","",N,N],[17,"RENDERER","","",N,N],[17,"REPEAT","","",N,N],[17,"REPLACE","","",N,N],[17,"RESET_NOTIFICATION_STRATEGY","","",N,N],[17,"RG","","",N,N],[17,"RG16","","",N,N],[17,"RG16F","","",N,N],[17,"RG16I","","",N,N],[17,"RG16UI","","",N,N],[17,"RG16_SNORM","","",N,N],[17,"RG32F","","",N,N],[17,"RG32I","","",N,N],[17,"RG32UI","","",N,N],[17,"RG8","","",N,N],[17,"RG8I","","",N,N],[17,"RG8UI","","",N,N],[17,"RG8_SNORM","","",N,N],[17,"RGB","","",N,N],[17,"RGB10","","",N,N],[17,"RGB10_A2","","",N,N],[17,"RGB10_A2UI","","",N,N],[17,"RGB12","","",N,N],[17,"RGB16","","",N,N],[17,"RGB16F","","",N,N],[17,"RGB16I","","",N,N],[17,"RGB16UI","","",N,N],[17,"RGB16_SNORM","","",N,N],[17,"RGB32F","","",N,N],[17,"RGB32I","","",N,N],[17,"RGB32UI","","",N,N],[17,"RGB4","","",N,N],[17,"RGB5","","",N,N],[17,"RGB565","","",N,N],[17,"RGB5_A1","","",N,N],[17,"RGB8","","",N,N],[17,"RGB8I","","",N,N],[17,"RGB8UI","","",N,N],[17,"RGB8_SNORM","","",N,N],[17,"RGB9_E5","","",N,N],[17,"RGBA","","",N,N],[17,"RGBA12","","",N,N],[17,"RGBA16","","",N,N],[17,"RGBA16F","","",N,N],[17,"RGBA16I","","",N,N],[17,"RGBA16UI","","",N,N],[17,"RGBA16_SNORM","","",N,N],[17,"RGBA2","","",N,N],[17,"RGBA32F","","",N,N],[17,"RGBA32I","","",N,N],[17,"RGBA32UI","","",N,N],[17,"RGBA4","","",N,N],[17,"RGBA8","","",N,N],[17,"RGBA8I","","",N,N],[17,"RGBA8UI","","",N,N],[17,"RGBA8_SNORM","","",N,N],[17,"RGBA_INTEGER","","",N,N],[17,"RGB_INTEGER","","",N,N],[17,"RG_INTEGER","","",N,N],[17,"RIGHT","","",N,N],[17,"SAMPLER","","",N,N],[17,"SAMPLER_1D","","",N,N],[17,"SAMPLER_1D_ARRAY","","",N,N],[17,"SAMPLER_1D_ARRAY_SHADOW","","",N,N],[17,"SAMPLER_1D_SHADOW","","",N,N],[17,"SAMPLER_2D","","",N,N],[17,"SAMPLER_2D_ARRAY","","",N,N],[17,"SAMPLER_2D_ARRAY_SHADOW","","",N,N],[17,"SAMPLER_2D_MULTISAMPLE","","",N,N],[17,"SAMPLER_2D_MULTISAMPLE_ARRAY","","",N,N],[17,"SAMPLER_2D_RECT","","",N,N],[17,"SAMPLER_2D_RECT_SHADOW","","",N,N],[17,"SAMPLER_2D_SHADOW","","",N,N],[17,"SAMPLER_3D","","",N,N],[17,"SAMPLER_BINDING","","",N,N],[17,"SAMPLER_BUFFER","","",N,N],[17,"SAMPLER_CUBE","","",N,N],[17,"SAMPLER_CUBE_MAP_ARRAY","","",N,N],[17,"SAMPLER_CUBE_MAP_ARRAY_SHADOW","","",N,N],[17,"SAMPLER_CUBE_SHADOW","","",N,N],[17,"SAMPLES","","",N,N],[17,"SAMPLES_PASSED","","",N,N],[17,"SAMPLE_ALPHA_TO_COVERAGE","","",N,N],[17,"SAMPLE_ALPHA_TO_ONE","","",N,N],[17,"SAMPLE_BUFFERS","","",N,N],[17,"SAMPLE_COVERAGE","","",N,N],[17,"SAMPLE_COVERAGE_INVERT","","",N,N],[17,"SAMPLE_COVERAGE_VALUE","","",N,N],[17,"SAMPLE_MASK","","",N,N],[17,"SAMPLE_MASK_VALUE","","",N,N],[17,"SAMPLE_POSITION","","",N,N],[17,"SAMPLE_SHADING","","",N,N],[17,"SCISSOR_BOX","","",N,N],[17,"SCISSOR_TEST","","",N,N],[17,"SEPARATE_ATTRIBS","","",N,N],[17,"SET","","",N,N],[17,"SHADER","","",N,N],[17,"SHADER_BINARY_FORMATS","","",N,N],[17,"SHADER_COMPILER","","",N,N],[17,"SHADER_IMAGE_ACCESS_BARRIER_BIT","","",N,N],[17,"SHADER_IMAGE_ATOMIC","","",N,N],[17,"SHADER_IMAGE_LOAD","","",N,N],[17,"SHADER_IMAGE_STORE","","",N,N],[17,"SHADER_SOURCE_LENGTH","","",N,N],[17,"SHADER_STORAGE_BARRIER_BIT","","",N,N],[17,"SHADER_STORAGE_BLOCK","","",N,N],[17,"SHADER_STORAGE_BUFFER","","",N,N],[17,"SHADER_STORAGE_BUFFER_BINDING","","",N,N],[17,"SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT","","",N,N],[17,"SHADER_STORAGE_BUFFER_SIZE","","",N,N],[17,"SHADER_STORAGE_BUFFER_START","","",N,N],[17,"SHADER_TYPE","","",N,N],[17,"SHADING_LANGUAGE_VERSION","","",N,N],[17,"SHORT","","",N,N],[17,"SIGNALED","","",N,N],[17,"SIGNED_NORMALIZED","","",N,N],[17,"SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST","","",N,N],[17,"SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE","","",N,N],[17,"SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST","","",N,N],[17,"SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE","","",N,N],[17,"SMOOTH_LINE_WIDTH_GRANULARITY","","",N,N],[17,"SMOOTH_LINE_WIDTH_RANGE","","",N,N],[17,"SMOOTH_POINT_SIZE_GRANULARITY","","",N,N],[17,"SMOOTH_POINT_SIZE_RANGE","","",N,N],[17,"SRC1_ALPHA","","",N,N],[17,"SRC1_COLOR","","",N,N],[17,"SRC_ALPHA","","",N,N],[17,"SRC_ALPHA_SATURATE","","",N,N],[17,"SRC_COLOR","","",N,N],[17,"SRGB","","",N,N],[17,"SRGB8","","",N,N],[17,"SRGB8_ALPHA8","","",N,N],[17,"SRGB_ALPHA","","",N,N],[17,"SRGB_READ","","",N,N],[17,"SRGB_WRITE","","",N,N],[17,"STACK_OVERFLOW","","",N,N],[17,"STACK_UNDERFLOW","","",N,N],[17,"STATIC_COPY","","",N,N],[17,"STATIC_DRAW","","",N,N],[17,"STATIC_READ","","",N,N],[17,"STENCIL","","",N,N],[17,"STENCIL_ATTACHMENT","","",N,N],[17,"STENCIL_BACK_FAIL","","",N,N],[17,"STENCIL_BACK_FUNC","","",N,N],[17,"STENCIL_BACK_PASS_DEPTH_FAIL","","",N,N],[17,"STENCIL_BACK_PASS_DEPTH_PASS","","",N,N],[17,"STENCIL_BACK_REF","","",N,N],[17,"STENCIL_BACK_VALUE_MASK","","",N,N],[17,"STENCIL_BACK_WRITEMASK","","",N,N],[17,"STENCIL_BUFFER_BIT","","",N,N],[17,"STENCIL_CLEAR_VALUE","","",N,N],[17,"STENCIL_COMPONENTS","","",N,N],[17,"STENCIL_FAIL","","",N,N],[17,"STENCIL_FUNC","","",N,N],[17,"STENCIL_INDEX","","",N,N],[17,"STENCIL_INDEX1","","",N,N],[17,"STENCIL_INDEX16","","",N,N],[17,"STENCIL_INDEX4","","",N,N],[17,"STENCIL_INDEX8","","",N,N],[17,"STENCIL_PASS_DEPTH_FAIL","","",N,N],[17,"STENCIL_PASS_DEPTH_PASS","","",N,N],[17,"STENCIL_REF","","",N,N],[17,"STENCIL_RENDERABLE","","",N,N],[17,"STENCIL_TEST","","",N,N],[17,"STENCIL_VALUE_MASK","","",N,N],[17,"STENCIL_WRITEMASK","","",N,N],[17,"STEREO","","",N,N],[17,"STREAM_COPY","","",N,N],[17,"STREAM_DRAW","","",N,N],[17,"STREAM_READ","","",N,N],[17,"SUBPIXEL_BITS","","",N,N],[17,"SYNC_CONDITION","","",N,N],[17,"SYNC_FENCE","","",N,N],[17,"SYNC_FLAGS","","",N,N],[17,"SYNC_FLUSH_COMMANDS_BIT","","",N,N],[17,"SYNC_GPU_COMMANDS_COMPLETE","","",N,N],[17,"SYNC_STATUS","","",N,N],[17,"TESS_CONTROL_OUTPUT_VERTICES","","",N,N],[17,"TESS_CONTROL_SHADER","","",N,N],[17,"TESS_CONTROL_SHADER_BIT","","",N,N],[17,"TESS_CONTROL_SUBROUTINE","","",N,N],[17,"TESS_CONTROL_SUBROUTINE_UNIFORM","","",N,N],[17,"TESS_CONTROL_TEXTURE","","",N,N],[17,"TESS_EVALUATION_SHADER","","",N,N],[17,"TESS_EVALUATION_SHADER_BIT","","",N,N],[17,"TESS_EVALUATION_SUBROUTINE","","",N,N],[17,"TESS_EVALUATION_SUBROUTINE_UNIFORM","","",N,N],[17,"TESS_EVALUATION_TEXTURE","","",N,N],[17,"TESS_GEN_MODE","","",N,N],[17,"TESS_GEN_POINT_MODE","","",N,N],[17,"TESS_GEN_SPACING","","",N,N],[17,"TESS_GEN_VERTEX_ORDER","","",N,N],[17,"TEXTURE","","",N,N],[17,"TEXTURE0","","",N,N],[17,"TEXTURE1","","",N,N],[17,"TEXTURE10","","",N,N],[17,"TEXTURE11","","",N,N],[17,"TEXTURE12","","",N,N],[17,"TEXTURE13","","",N,N],[17,"TEXTURE14","","",N,N],[17,"TEXTURE15","","",N,N],[17,"TEXTURE16","","",N,N],[17,"TEXTURE17","","",N,N],[17,"TEXTURE18","","",N,N],[17,"TEXTURE19","","",N,N],[17,"TEXTURE2","","",N,N],[17,"TEXTURE20","","",N,N],[17,"TEXTURE21","","",N,N],[17,"TEXTURE22","","",N,N],[17,"TEXTURE23","","",N,N],[17,"TEXTURE24","","",N,N],[17,"TEXTURE25","","",N,N],[17,"TEXTURE26","","",N,N],[17,"TEXTURE27","","",N,N],[17,"TEXTURE28","","",N,N],[17,"TEXTURE29","","",N,N],[17,"TEXTURE3","","",N,N],[17,"TEXTURE30","","",N,N],[17,"TEXTURE31","","",N,N],[17,"TEXTURE4","","",N,N],[17,"TEXTURE5","","",N,N],[17,"TEXTURE6","","",N,N],[17,"TEXTURE7","","",N,N],[17,"TEXTURE8","","",N,N],[17,"TEXTURE9","","",N,N],[17,"TEXTURE_1D","","",N,N],[17,"TEXTURE_1D_ARRAY","","",N,N],[17,"TEXTURE_2D","","",N,N],[17,"TEXTURE_2D_ARRAY","","",N,N],[17,"TEXTURE_2D_MULTISAMPLE","","",N,N],[17,"TEXTURE_2D_MULTISAMPLE_ARRAY","","",N,N],[17,"TEXTURE_3D","","",N,N],[17,"TEXTURE_ALPHA_SIZE","","",N,N],[17,"TEXTURE_ALPHA_TYPE","","",N,N],[17,"TEXTURE_BASE_LEVEL","","",N,N],[17,"TEXTURE_BINDING_1D","","",N,N],[17,"TEXTURE_BINDING_1D_ARRAY","","",N,N],[17,"TEXTURE_BINDING_2D","","",N,N],[17,"TEXTURE_BINDING_2D_ARRAY","","",N,N],[17,"TEXTURE_BINDING_2D_MULTISAMPLE","","",N,N],[17,"TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY","","",N,N],[17,"TEXTURE_BINDING_3D","","",N,N],[17,"TEXTURE_BINDING_BUFFER","","",N,N],[17,"TEXTURE_BINDING_CUBE_MAP","","",N,N],[17,"TEXTURE_BINDING_CUBE_MAP_ARRAY","","",N,N],[17,"TEXTURE_BINDING_RECTANGLE","","",N,N],[17,"TEXTURE_BLUE_SIZE","","",N,N],[17,"TEXTURE_BLUE_TYPE","","",N,N],[17,"TEXTURE_BORDER_COLOR","","",N,N],[17,"TEXTURE_BUFFER","","",N,N],[17,"TEXTURE_BUFFER_BINDING","","",N,N],[17,"TEXTURE_BUFFER_DATA_STORE_BINDING","","",N,N],[17,"TEXTURE_BUFFER_OFFSET","","",N,N],[17,"TEXTURE_BUFFER_OFFSET_ALIGNMENT","","",N,N],[17,"TEXTURE_BUFFER_SIZE","","",N,N],[17,"TEXTURE_COMPARE_FUNC","","",N,N],[17,"TEXTURE_COMPARE_MODE","","",N,N],[17,"TEXTURE_COMPRESSED","","",N,N],[17,"TEXTURE_COMPRESSED_BLOCK_HEIGHT","","",N,N],[17,"TEXTURE_COMPRESSED_BLOCK_SIZE","","",N,N],[17,"TEXTURE_COMPRESSED_BLOCK_WIDTH","","",N,N],[17,"TEXTURE_COMPRESSED_IMAGE_SIZE","","",N,N],[17,"TEXTURE_COMPRESSION_HINT","","",N,N],[17,"TEXTURE_CUBE_MAP","","",N,N],[17,"TEXTURE_CUBE_MAP_ARRAY","","",N,N],[17,"TEXTURE_CUBE_MAP_NEGATIVE_X","","",N,N],[17,"TEXTURE_CUBE_MAP_NEGATIVE_Y","","",N,N],[17,"TEXTURE_CUBE_MAP_NEGATIVE_Z","","",N,N],[17,"TEXTURE_CUBE_MAP_POSITIVE_X","","",N,N],[17,"TEXTURE_CUBE_MAP_POSITIVE_Y","","",N,N],[17,"TEXTURE_CUBE_MAP_POSITIVE_Z","","",N,N],[17,"TEXTURE_CUBE_MAP_SEAMLESS","","",N,N],[17,"TEXTURE_DEPTH","","",N,N],[17,"TEXTURE_DEPTH_SIZE","","",N,N],[17,"TEXTURE_DEPTH_TYPE","","",N,N],[17,"TEXTURE_FETCH_BARRIER_BIT","","",N,N],[17,"TEXTURE_FIXED_SAMPLE_LOCATIONS","","",N,N],[17,"TEXTURE_GATHER","","",N,N],[17,"TEXTURE_GATHER_SHADOW","","",N,N],[17,"TEXTURE_GREEN_SIZE","","",N,N],[17,"TEXTURE_GREEN_TYPE","","",N,N],[17,"TEXTURE_HEIGHT","","",N,N],[17,"TEXTURE_IMAGE_FORMAT","","",N,N],[17,"TEXTURE_IMAGE_TYPE","","",N,N],[17,"TEXTURE_IMMUTABLE_FORMAT","","",N,N],[17,"TEXTURE_IMMUTABLE_LEVELS","","",N,N],[17,"TEXTURE_INTERNAL_FORMAT","","",N,N],[17,"TEXTURE_LOD_BIAS","","",N,N],[17,"TEXTURE_MAG_FILTER","","",N,N],[17,"TEXTURE_MAX_LEVEL","","",N,N],[17,"TEXTURE_MAX_LOD","","",N,N],[17,"TEXTURE_MIN_FILTER","","",N,N],[17,"TEXTURE_MIN_LOD","","",N,N],[17,"TEXTURE_RECTANGLE","","",N,N],[17,"TEXTURE_RED_SIZE","","",N,N],[17,"TEXTURE_RED_TYPE","","",N,N],[17,"TEXTURE_SAMPLES","","",N,N],[17,"TEXTURE_SHADOW","","",N,N],[17,"TEXTURE_SHARED_SIZE","","",N,N],[17,"TEXTURE_STENCIL_SIZE","","",N,N],[17,"TEXTURE_SWIZZLE_A","","",N,N],[17,"TEXTURE_SWIZZLE_B","","",N,N],[17,"TEXTURE_SWIZZLE_G","","",N,N],[17,"TEXTURE_SWIZZLE_R","","",N,N],[17,"TEXTURE_SWIZZLE_RGBA","","",N,N],[17,"TEXTURE_TARGET","","",N,N],[17,"TEXTURE_UPDATE_BARRIER_BIT","","",N,N],[17,"TEXTURE_VIEW","","",N,N],[17,"TEXTURE_VIEW_MIN_LAYER","","",N,N],[17,"TEXTURE_VIEW_MIN_LEVEL","","",N,N],[17,"TEXTURE_VIEW_NUM_LAYERS","","",N,N],[17,"TEXTURE_VIEW_NUM_LEVELS","","",N,N],[17,"TEXTURE_WIDTH","","",N,N],[17,"TEXTURE_WRAP_R","","",N,N],[17,"TEXTURE_WRAP_S","","",N,N],[17,"TEXTURE_WRAP_T","","",N,N],[17,"TIMEOUT_EXPIRED","","",N,N],[17,"TIMEOUT_IGNORED","","",N,N],[17,"TIMESTAMP","","",N,N],[17,"TIME_ELAPSED","","",N,N],[17,"TOP_LEVEL_ARRAY_SIZE","","",N,N],[17,"TOP_LEVEL_ARRAY_STRIDE","","",N,N],[17,"TRANSFORM_FEEDBACK","","",N,N],[17,"TRANSFORM_FEEDBACK_ACTIVE","","",N,N],[17,"TRANSFORM_FEEDBACK_BARRIER_BIT","","",N,N],[17,"TRANSFORM_FEEDBACK_BINDING","","",N,N],[17,"TRANSFORM_FEEDBACK_BUFFER","","",N,N],[17,"TRANSFORM_FEEDBACK_BUFFER_ACTIVE","","",N,N],[17,"TRANSFORM_FEEDBACK_BUFFER_BINDING","","",N,N],[17,"TRANSFORM_FEEDBACK_BUFFER_INDEX","","",N,N],[17,"TRANSFORM_FEEDBACK_BUFFER_MODE","","",N,N],[17,"TRANSFORM_FEEDBACK_BUFFER_PAUSED","","",N,N],[17,"TRANSFORM_FEEDBACK_BUFFER_SIZE","","",N,N],[17,"TRANSFORM_FEEDBACK_BUFFER_START","","",N,N],[17,"TRANSFORM_FEEDBACK_BUFFER_STRIDE","","",N,N],[17,"TRANSFORM_FEEDBACK_PAUSED","","",N,N],[17,"TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN","","",N,N],[17,"TRANSFORM_FEEDBACK_VARYING","","",N,N],[17,"TRANSFORM_FEEDBACK_VARYINGS","","",N,N],[17,"TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH","","",N,N],[17,"TRIANGLES","","",N,N],[17,"TRIANGLES_ADJACENCY","","",N,N],[17,"TRIANGLE_FAN","","",N,N],[17,"TRIANGLE_STRIP","","",N,N],[17,"TRIANGLE_STRIP_ADJACENCY","","",N,N],[17,"TRUE","","",N,N],[17,"TYPE","","",N,N],[17,"UNDEFINED_VERTEX","","",N,N],[17,"UNIFORM","","",N,N],[17,"UNIFORM_ARRAY_STRIDE","","",N,N],[17,"UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX","","",N,N],[17,"UNIFORM_BARRIER_BIT","","",N,N],[17,"UNIFORM_BLOCK","","",N,N],[17,"UNIFORM_BLOCK_ACTIVE_UNIFORMS","","",N,N],[17,"UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","","",N,N],[17,"UNIFORM_BLOCK_BINDING","","",N,N],[17,"UNIFORM_BLOCK_DATA_SIZE","","",N,N],[17,"UNIFORM_BLOCK_INDEX","","",N,N],[17,"UNIFORM_BLOCK_NAME_LENGTH","","",N,N],[17,"UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER","","",N,N],[17,"UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","","",N,N],[17,"UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER","","",N,N],[17,"UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER","","",N,N],[17,"UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER","","",N,N],[17,"UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","","",N,N],[17,"UNIFORM_BUFFER","","",N,N],[17,"UNIFORM_BUFFER_BINDING","","",N,N],[17,"UNIFORM_BUFFER_OFFSET_ALIGNMENT","","",N,N],[17,"UNIFORM_BUFFER_SIZE","","",N,N],[17,"UNIFORM_BUFFER_START","","",N,N],[17,"UNIFORM_IS_ROW_MAJOR","","",N,N],[17,"UNIFORM_MATRIX_STRIDE","","",N,N],[17,"UNIFORM_NAME_LENGTH","","",N,N],[17,"UNIFORM_OFFSET","","",N,N],[17,"UNIFORM_SIZE","","",N,N],[17,"UNIFORM_TYPE","","",N,N],[17,"UNKNOWN_CONTEXT_RESET","","",N,N],[17,"UNPACK_ALIGNMENT","","",N,N],[17,"UNPACK_COMPRESSED_BLOCK_DEPTH","","",N,N],[17,"UNPACK_COMPRESSED_BLOCK_HEIGHT","","",N,N],[17,"UNPACK_COMPRESSED_BLOCK_SIZE","","",N,N],[17,"UNPACK_COMPRESSED_BLOCK_WIDTH","","",N,N],[17,"UNPACK_IMAGE_HEIGHT","","",N,N],[17,"UNPACK_LSB_FIRST","","",N,N],[17,"UNPACK_ROW_LENGTH","","",N,N],[17,"UNPACK_SKIP_IMAGES","","",N,N],[17,"UNPACK_SKIP_PIXELS","","",N,N],[17,"UNPACK_SKIP_ROWS","","",N,N],[17,"UNPACK_SWAP_BYTES","","",N,N],[17,"UNSIGNALED","","",N,N],[17,"UNSIGNED_BYTE","","",N,N],[17,"UNSIGNED_BYTE_2_3_3_REV","","",N,N],[17,"UNSIGNED_BYTE_3_3_2","","",N,N],[17,"UNSIGNED_INT","","",N,N],[17,"UNSIGNED_INT_10F_11F_11F_REV","","",N,N],[17,"UNSIGNED_INT_10_10_10_2","","",N,N],[17,"UNSIGNED_INT_24_8","","",N,N],[17,"UNSIGNED_INT_2_10_10_10_REV","","",N,N],[17,"UNSIGNED_INT_5_9_9_9_REV","","",N,N],[17,"UNSIGNED_INT_8_8_8_8","","",N,N],[17,"UNSIGNED_INT_8_8_8_8_REV","","",N,N],[17,"UNSIGNED_INT_ATOMIC_COUNTER","","",N,N],[17,"UNSIGNED_INT_IMAGE_1D","","",N,N],[17,"UNSIGNED_INT_IMAGE_1D_ARRAY","","",N,N],[17,"UNSIGNED_INT_IMAGE_2D","","",N,N],[17,"UNSIGNED_INT_IMAGE_2D_ARRAY","","",N,N],[17,"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE","","",N,N],[17,"UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY","","",N,N],[17,"UNSIGNED_INT_IMAGE_2D_RECT","","",N,N],[17,"UNSIGNED_INT_IMAGE_3D","","",N,N],[17,"UNSIGNED_INT_IMAGE_BUFFER","","",N,N],[17,"UNSIGNED_INT_IMAGE_CUBE","","",N,N],[17,"UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY","","",N,N],[17,"UNSIGNED_INT_SAMPLER_1D","","",N,N],[17,"UNSIGNED_INT_SAMPLER_1D_ARRAY","","",N,N],[17,"UNSIGNED_INT_SAMPLER_2D","","",N,N],[17,"UNSIGNED_INT_SAMPLER_2D_ARRAY","","",N,N],[17,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE","","",N,N],[17,"UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY","","",N,N],[17,"UNSIGNED_INT_SAMPLER_2D_RECT","","",N,N],[17,"UNSIGNED_INT_SAMPLER_3D","","",N,N],[17,"UNSIGNED_INT_SAMPLER_BUFFER","","",N,N],[17,"UNSIGNED_INT_SAMPLER_CUBE","","",N,N],[17,"UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY","","",N,N],[17,"UNSIGNED_INT_VEC2","","",N,N],[17,"UNSIGNED_INT_VEC3","","",N,N],[17,"UNSIGNED_INT_VEC4","","",N,N],[17,"UNSIGNED_NORMALIZED","","",N,N],[17,"UNSIGNED_SHORT","","",N,N],[17,"UNSIGNED_SHORT_1_5_5_5_REV","","",N,N],[17,"UNSIGNED_SHORT_4_4_4_4","","",N,N],[17,"UNSIGNED_SHORT_4_4_4_4_REV","","",N,N],[17,"UNSIGNED_SHORT_5_5_5_1","","",N,N],[17,"UNSIGNED_SHORT_5_6_5","","",N,N],[17,"UNSIGNED_SHORT_5_6_5_REV","","",N,N],[17,"UPPER_LEFT","","",N,N],[17,"VALIDATE_STATUS","","",N,N],[17,"VENDOR","","",N,N],[17,"VERSION","","",N,N],[17,"VERTEX_ARRAY","","",N,N],[17,"VERTEX_ARRAY_BINDING","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_BARRIER_BIT","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_BUFFER_BINDING","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_DIVISOR","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_ENABLED","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_INTEGER","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_LONG","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_NORMALIZED","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_POINTER","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_SIZE","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_STRIDE","","",N,N],[17,"VERTEX_ATTRIB_ARRAY_TYPE","","",N,N],[17,"VERTEX_ATTRIB_BINDING","","",N,N],[17,"VERTEX_ATTRIB_RELATIVE_OFFSET","","",N,N],[17,"VERTEX_BINDING_BUFFER","","",N,N],[17,"VERTEX_BINDING_DIVISOR","","",N,N],[17,"VERTEX_BINDING_OFFSET","","",N,N],[17,"VERTEX_BINDING_STRIDE","","",N,N],[17,"VERTEX_PROGRAM_POINT_SIZE","","",N,N],[17,"VERTEX_SHADER","","",N,N],[17,"VERTEX_SHADER_BIT","","",N,N],[17,"VERTEX_SUBROUTINE","","",N,N],[17,"VERTEX_SUBROUTINE_UNIFORM","","",N,N],[17,"VERTEX_TEXTURE","","",N,N],[17,"VIEWPORT","","",N,N],[17,"VIEWPORT_BOUNDS_RANGE","","",N,N],[17,"VIEWPORT_INDEX_PROVOKING_VERTEX","","",N,N],[17,"VIEWPORT_SUBPIXEL_BITS","","",N,N],[17,"VIEW_CLASS_128_BITS","","",N,N],[17,"VIEW_CLASS_16_BITS","","",N,N],[17,"VIEW_CLASS_24_BITS","","",N,N],[17,"VIEW_CLASS_32_BITS","","",N,N],[17,"VIEW_CLASS_48_BITS","","",N,N],[17,"VIEW_CLASS_64_BITS","","",N,N],[17,"VIEW_CLASS_8_BITS","","",N,N],[17,"VIEW_CLASS_96_BITS","","",N,N],[17,"VIEW_CLASS_BPTC_FLOAT","","",N,N],[17,"VIEW_CLASS_BPTC_UNORM","","",N,N],[17,"VIEW_CLASS_RGTC1_RED","","",N,N],[17,"VIEW_CLASS_RGTC2_RG","","",N,N],[17,"VIEW_CLASS_S3TC_DXT1_RGB","","",N,N],[17,"VIEW_CLASS_S3TC_DXT1_RGBA","","",N,N],[17,"VIEW_CLASS_S3TC_DXT3_RGBA","","",N,N],[17,"VIEW_CLASS_S3TC_DXT5_RGBA","","",N,N],[17,"VIEW_COMPATIBILITY_CLASS","","",N,N],[17,"WAIT_FAILED","","",N,N],[17,"WRITE_ONLY","","",N,N],[17,"XOR","","",N,N],[17,"ZERO","","",N,N],[17,"ZERO_TO_ONE","","",N,N],[11,"new","","Creates a `FnPtr` from a load attempt.",0,N]],"paths":[[3,"FnPtr"]]};
searchIndex["glutin"]={"doc":"The purpose of this library is to provide an OpenGL context on as many platforms as possible.","items":[[3,"AvailableMonitorsIter","glutin","An iterator for the list of available monitors.",N,N],[6,"AxisId","","Identifier for a specific analog axis on some device.",N,N],[6,"ButtonId","","Identifier for a specific button on some device.",N,N],[4,"ControlFlow","","Returned by the user callback given to the `EventsLoop::run_forever` method.",N,N],[13,"Continue","","Continue looping and waiting for events.",0,N],[13,"Break","","Break from the event loop.",0,N],[4,"WindowCreationError","","Error that can happen while creating a window or a headless renderer.",N,N],[13,"OsError","","",1,N],[13,"NotSupported","","TODO: remove this error",1,N],[4,"DeviceEvent","","Represents raw hardware events that are not associated with any particular window.",N,N],[13,"Added","","",2,N],[13,"Removed","","",2,N],[13,"MouseMotion","","Change in physical position of a pointing device.",2,N],[12,"delta","glutin::DeviceEvent","(x, y) change in position in unspecified units.",2,N],[13,"MouseWheel","glutin","Physical scroll event",2,N],[12,"delta","glutin::DeviceEvent","",2,N],[13,"Motion","glutin","Motion on some analog axis.  This event will be reported for all arbitrary input devices that winit supports on this platform, including mouse devices.  If the device is a mouse device then this will be reported alongside the MouseMotion event.",2,N],[12,"axis","glutin::DeviceEvent","",2,N],[12,"value","","",2,N],[13,"Button","glutin","",2,N],[12,"button","glutin::DeviceEvent","",2,N],[12,"state","","",2,N],[13,"Key","glutin","",2,N],[13,"Text","","",2,N],[12,"codepoint","glutin::DeviceEvent","",2,N],[3,"DeviceId","glutin","Identifier of an input device.",N,N],[0,"dpi","","DPI is important, so read the docs for this module if you don't want to be confused.",N,N],[5,"validate_hidpi_factor","glutin::dpi","Checks that the DPI factor is a normal positive `f64`.",N,[[["f64"]],["bool"]]],[3,"LogicalPosition","","A position represented in logical pixels.",N,N],[12,"x","","",3,N],[12,"y","","",3,N],[3,"PhysicalPosition","","A position represented in physical pixels.",N,N],[12,"x","","",4,N],[12,"y","","",4,N],[3,"LogicalSize","","A size represented in logical pixels.",N,N],[12,"width","","",5,N],[12,"height","","",5,N],[3,"PhysicalSize","","A size represented in physical pixels.",N,N],[12,"width","","",6,N],[12,"height","","",6,N],[4,"ElementState","glutin","Describes the input state of a key.",N,N],[13,"Pressed","","",7,N],[13,"Released","","",7,N],[4,"Event","","Describes a generic event.",N,N],[13,"WindowEvent","","",8,N],[12,"window_id","glutin::Event","",8,N],[12,"event","","",8,N],[13,"DeviceEvent","glutin","",8,N],[12,"device_id","glutin::Event","",8,N],[12,"event","","",8,N],[13,"Awakened","glutin","",8,N],[13,"Suspended","","The application has been suspended or resumed.",8,N],[3,"EventsLoop","","Provides a way to retrieve events from the system and from the windows that were registered to the events loop.",N,N],[3,"EventsLoopClosed","","The error that is returned when an `EventsLoopProxy` attempts to wake up an `EventsLoop` that no longer exists.",N,N],[3,"EventsLoopProxy","","Used to wake up the `EventsLoop` from another thread.",N,N],[3,"Icon","","An icon used for the window titlebar, taskbar, etc.",N,N],[3,"KeyboardInput","","Describes a keyboard input event.",N,N],[12,"scancode","","Identifies the physical key pressed",9,N],[12,"state","","",9,N],[12,"virtual_keycode","","Identifies the semantic meaning of the key",9,N],[12,"modifiers","","Modifier keys active at the time of this input.",9,N],[3,"ModifiersState","","Represents the current state of the keyboard modifiers",N,N],[12,"shift","","The \"shift\" key",10,N],[12,"ctrl","","The \"control\" key",10,N],[12,"alt","","The \"alt\" key",10,N],[12,"logo","","The \"logo\" key",10,N],[3,"MonitorId","","Identifier for a monitor.",N,N],[4,"MouseButton","","Describes a button of a mouse controller.",N,N],[13,"Left","","",11,N],[13,"Right","","",11,N],[13,"Middle","","",11,N],[13,"Other","","",11,N],[4,"MouseCursor","","Describes the appearance of the mouse cursor.",N,N],[13,"Default","","The platform-dependent default cursor.",12,N],[13,"Crosshair","","A simple crosshair.",12,N],[13,"Hand","","A hand (often used to indicate links in web browsers).",12,N],[13,"Arrow","","Self explanatory.",12,N],[13,"Move","","Indicates something is to be moved.",12,N],[13,"Text","","Indicates text that may be selected or edited.",12,N],[13,"Wait","","Program busy indicator.",12,N],[13,"Help","","Help indicator (often rendered as a \"?\")",12,N],[13,"Progress","","Progress indicator. Shows that processing is being done. But in contrast with \"Wait\" the user may still interact with the program. Often rendered as a spinning beach ball, or an arrow with a watch or hourglass.",12,N],[13,"NotAllowed","","Cursor showing that something cannot be done.",12,N],[13,"ContextMenu","","",12,N],[13,"Cell","","",12,N],[13,"VerticalText","","",12,N],[13,"Alias","","",12,N],[13,"Copy","","",12,N],[13,"NoDrop","","",12,N],[13,"Grab","","",12,N],[13,"Grabbing","","",12,N],[13,"AllScroll","","",12,N],[13,"ZoomIn","","",12,N],[13,"ZoomOut","","",12,N],[13,"EResize","","Indicate that some edge is to be moved. For example, the 'SeResize' cursor is used when the movement starts from the south-east corner of the box.",12,N],[13,"NResize","","",12,N],[13,"NeResize","","",12,N],[13,"NwResize","","",12,N],[13,"SResize","","",12,N],[13,"SeResize","","",12,N],[13,"SwResize","","",12,N],[13,"WResize","","",12,N],[13,"EwResize","","",12,N],[13,"NsResize","","",12,N],[13,"NeswResize","","",12,N],[13,"NwseResize","","",12,N],[13,"ColResize","","",12,N],[13,"RowResize","","",12,N],[4,"MouseScrollDelta","","Describes a difference in the mouse scroll wheel state.",N,N],[13,"LineDelta","","Amount in lines or rows to scroll in the horizontal and vertical directions.",13,N],[13,"PixelDelta","","Amount in pixels to scroll in the horizontal and vertical direction.",13,N],[6,"ScanCode","","Hardware-dependent keyboard scan code.",N,N],[3,"Touch","","Represents touch event",N,N],[12,"device_id","","",14,N],[12,"phase","","",14,N],[12,"location","","",14,N],[12,"id","","unique identifier of a finger.",14,N],[4,"TouchPhase","","Describes touch-screen input state.",N,N],[13,"Started","","",15,N],[13,"Moved","","",15,N],[13,"Ended","","",15,N],[13,"Cancelled","","",15,N],[4,"VirtualKeyCode","","Symbolic name for a keyboard key.",N,N],[13,"Key1","","The '1' key over the letters.",16,N],[13,"Key2","","The '2' key over the letters.",16,N],[13,"Key3","","The '3' key over the letters.",16,N],[13,"Key4","","The '4' key over the letters.",16,N],[13,"Key5","","The '5' key over the letters.",16,N],[13,"Key6","","The '6' key over the letters.",16,N],[13,"Key7","","The '7' key over the letters.",16,N],[13,"Key8","","The '8' key over the letters.",16,N],[13,"Key9","","The '9' key over the letters.",16,N],[13,"Key0","","The '0' key over the 'O' and 'P' keys.",16,N],[13,"A","","",16,N],[13,"B","","",16,N],[13,"C","","",16,N],[13,"D","","",16,N],[13,"E","","",16,N],[13,"F","","",16,N],[13,"G","","",16,N],[13,"H","","",16,N],[13,"I","","",16,N],[13,"J","","",16,N],[13,"K","","",16,N],[13,"L","","",16,N],[13,"M","","",16,N],[13,"N","","",16,N],[13,"O","","",16,N],[13,"P","","",16,N],[13,"Q","","",16,N],[13,"R","","",16,N],[13,"S","","",16,N],[13,"T","","",16,N],[13,"U","","",16,N],[13,"V","","",16,N],[13,"W","","",16,N],[13,"X","","",16,N],[13,"Y","","",16,N],[13,"Z","","",16,N],[13,"Escape","","The Escape key, next to F1.",16,N],[13,"F1","","",16,N],[13,"F2","","",16,N],[13,"F3","","",16,N],[13,"F4","","",16,N],[13,"F5","","",16,N],[13,"F6","","",16,N],[13,"F7","","",16,N],[13,"F8","","",16,N],[13,"F9","","",16,N],[13,"F10","","",16,N],[13,"F11","","",16,N],[13,"F12","","",16,N],[13,"F13","","",16,N],[13,"F14","","",16,N],[13,"F15","","",16,N],[13,"Snapshot","","Print Screen/SysRq.",16,N],[13,"Scroll","","Scroll Lock.",16,N],[13,"Pause","","Pause/Break key, next to Scroll lock.",16,N],[13,"Insert","","`Insert`, next to Backspace.",16,N],[13,"Home","","",16,N],[13,"Delete","","",16,N],[13,"End","","",16,N],[13,"PageDown","","",16,N],[13,"PageUp","","",16,N],[13,"Left","","",16,N],[13,"Up","","",16,N],[13,"Right","","",16,N],[13,"Down","","",16,N],[13,"Back","","The Backspace key, right over Enter.",16,N],[13,"Return","","The Enter key.",16,N],[13,"Space","","The space bar.",16,N],[13,"Compose","","The \"Compose\" key on Linux.",16,N],[13,"Caret","","",16,N],[13,"Numlock","","",16,N],[13,"Numpad0","","",16,N],[13,"Numpad1","","",16,N],[13,"Numpad2","","",16,N],[13,"Numpad3","","",16,N],[13,"Numpad4","","",16,N],[13,"Numpad5","","",16,N],[13,"Numpad6","","",16,N],[13,"Numpad7","","",16,N],[13,"Numpad8","","",16,N],[13,"Numpad9","","",16,N],[13,"AbntC1","","",16,N],[13,"AbntC2","","",16,N],[13,"Add","","",16,N],[13,"Apostrophe","","",16,N],[13,"Apps","","",16,N],[13,"At","","",16,N],[13,"Ax","","",16,N],[13,"Backslash","","",16,N],[13,"Calculator","","",16,N],[13,"Capital","","",16,N],[13,"Colon","","",16,N],[13,"Comma","","",16,N],[13,"Convert","","",16,N],[13,"Decimal","","",16,N],[13,"Divide","","",16,N],[13,"Equals","","",16,N],[13,"Grave","","",16,N],[13,"Kana","","",16,N],[13,"Kanji","","",16,N],[13,"LAlt","","",16,N],[13,"LBracket","","",16,N],[13,"LControl","","",16,N],[13,"LShift","","",16,N],[13,"LWin","","",16,N],[13,"Mail","","",16,N],[13,"MediaSelect","","",16,N],[13,"MediaStop","","",16,N],[13,"Minus","","",16,N],[13,"Multiply","","",16,N],[13,"Mute","","",16,N],[13,"MyComputer","","",16,N],[13,"NavigateForward","","",16,N],[13,"NavigateBackward","","",16,N],[13,"NextTrack","","",16,N],[13,"NoConvert","","",16,N],[13,"NumpadComma","","",16,N],[13,"NumpadEnter","","",16,N],[13,"NumpadEquals","","",16,N],[13,"OEM102","","",16,N],[13,"Period","","",16,N],[13,"PlayPause","","",16,N],[13,"Power","","",16,N],[13,"PrevTrack","","",16,N],[13,"RAlt","","",16,N],[13,"RBracket","","",16,N],[13,"RControl","","",16,N],[13,"RShift","","",16,N],[13,"RWin","","",16,N],[13,"Semicolon","","",16,N],[13,"Slash","","",16,N],[13,"Sleep","","",16,N],[13,"Stop","","",16,N],[13,"Subtract","","",16,N],[13,"Sysrq","","",16,N],[13,"Tab","","",16,N],[13,"Underline","","",16,N],[13,"Unlabeled","","",16,N],[13,"VolumeDown","","",16,N],[13,"VolumeUp","","",16,N],[13,"Wake","","",16,N],[13,"WebBack","","",16,N],[13,"WebFavorites","","",16,N],[13,"WebForward","","",16,N],[13,"WebHome","","",16,N],[13,"WebRefresh","","",16,N],[13,"WebSearch","","",16,N],[13,"WebStop","","",16,N],[13,"Yen","","",16,N],[13,"Copy","","",16,N],[13,"Paste","","",16,N],[13,"Cut","","",16,N],[3,"Window","","Represents a window.",N,N],[3,"WindowAttributes","","Attributes to use when creating a window.",N,N],[12,"dimensions","","The dimensions of the window. If this is `None`, some platform-specific dimensions will be used.",17,N],[12,"min_dimensions","","The minimum dimensions a window can be, If this is `None`, the window will have no minimum dimensions (aside from reserved).",17,N],[12,"max_dimensions","","The maximum dimensions a window can be, If this is `None`, the maximum will have no maximum or will be set to the primary monitor's dimensions by the platform.",17,N],[12,"resizable","","Whether the window is resizable or not.",17,N],[12,"fullscreen","","Whether the window should be set as fullscreen upon creation.",17,N],[12,"title","","The title of the window in the title bar.",17,N],[12,"maximized","","Whether the window should be maximized upon creation.",17,N],[12,"visible","","Whether the window should be immediately visible upon creation.",17,N],[12,"transparent","","Whether the the window should be transparent. If this is true, writing colors with alpha values different than `1.0` will produce a transparent window.",17,N],[12,"decorations","","Whether the window should have borders and bars.",17,N],[12,"always_on_top","","Whether the window should always be on top of other windows.",17,N],[12,"window_icon","","The window icon.",17,N],[12,"multitouch","","[iOS only] Enable multitouch, see multipleTouchEnabled",17,N],[3,"WindowBuilder","","Object that allows you to build windows.",N,N],[12,"window","","The attributes to use to create the window.",18,N],[4,"WindowEvent","","Describes an event from a `Window`.",N,N],[13,"Resized","","The size of the window has changed. Contains the client area's new dimensions.",19,N],[13,"Moved","","The position of the window has changed. Contains the window's new position.",19,N],[13,"CloseRequested","","The window has been requested to close.",19,N],[13,"Destroyed","","The window has been destroyed.",19,N],[13,"DroppedFile","","A file has been dropped into the window.",19,N],[13,"HoveredFile","","A file is being hovered over the window.",19,N],[13,"HoveredFileCancelled","","A file was hovered, but has exited the window.",19,N],[13,"ReceivedCharacter","","The window received a unicode character.",19,N],[13,"Focused","","The window gained or lost focus.",19,N],[13,"KeyboardInput","","An event from the keyboard has been received.",19,N],[12,"device_id","glutin::WindowEvent","",19,N],[12,"input","","",19,N],[13,"CursorMoved","glutin","The cursor has moved on the window.",19,N],[12,"device_id","glutin::WindowEvent","",19,N],[12,"position","","(x,y) coords in pixels relative to the top-left corner of the window. Because the range of this data is limited by the display area and it may have been transformed by the OS to implement effects such as cursor acceleration, it should not be used to implement non-cursor-like interactions such as 3D camera control.",19,N],[12,"modifiers","","",19,N],[13,"CursorEntered","glutin","The cursor has entered the window.",19,N],[12,"device_id","glutin::WindowEvent","",19,N],[13,"CursorLeft","glutin","The cursor has left the window.",19,N],[12,"device_id","glutin::WindowEvent","",19,N],[13,"MouseWheel","glutin","A mouse wheel movement or touchpad scroll occurred.",19,N],[12,"device_id","glutin::WindowEvent","",19,N],[12,"delta","","",19,N],[12,"phase","","",19,N],[12,"modifiers","","",19,N],[13,"MouseInput","glutin","An mouse button press has been received.",19,N],[12,"device_id","glutin::WindowEvent","",19,N],[12,"state","","",19,N],[12,"button","","",19,N],[12,"modifiers","","",19,N],[13,"TouchpadPressure","glutin","Touchpad pressure event.",19,N],[12,"device_id","glutin::WindowEvent","",19,N],[12,"pressure","","",19,N],[12,"stage","","",19,N],[13,"AxisMotion","glutin","Motion on some analog axis. May report data redundant to other, more specific events.",19,N],[12,"device_id","glutin::WindowEvent","",19,N],[12,"axis","","",19,N],[12,"value","","",19,N],[13,"Refresh","glutin","The window needs to be redrawn.",19,N],[13,"Touch","","Touch event has been received",19,N],[13,"HiDpiFactorChanged","","The DPI factor of the window has changed.",19,N],[3,"WindowId","","Identifier of a window. Unique for each window.",N,N],[3,"HeadlessRendererBuilder","","Object that allows you to build headless contexts.",N,N],[12,"dimensions","","The dimensions to use.",20,N],[12,"opengl","","The OpenGL attributes to build the context with.",20,N],[3,"HeadlessContext","","Represents a headless OpenGL context.",N,N],[3,"Context","","Represents an OpenGL context.",N,N],[3,"ContextBuilder","","Object that allows you to build `Context`s.",N,N],[12,"gl_attr","","The attributes to use to create the context.",21,N],[3,"GlWindow","","Represents an OpenGL context and a Window with which it is associated.",N,N],[3,"PixelFormat","","Describes a possible format. Unused.",N,N],[12,"hardware_accelerated","","",22,N],[12,"color_bits","","",22,N],[12,"alpha_bits","","",22,N],[12,"depth_bits","","",22,N],[12,"stencil_bits","","",22,N],[12,"stereoscopy","","",22,N],[12,"double_buffer","","",22,N],[12,"multisampling","","",22,N],[12,"srgb","","",22,N],[3,"PixelFormatRequirements","","Describes how the backend should choose a pixel format.",N,N],[12,"hardware_accelerated","","If true, only hardware-accelerated formats will be considered. If false, only software renderers. `None` means \"don't care\". Default is `Some(true)`.",23,N],[12,"color_bits","","Minimum number of bits for the color buffer, excluding alpha. `None` means \"don't care\". The default is `Some(24)`.",23,N],[12,"float_color_buffer","","If true, the color buffer must be in a floating point format. Default is `false`.",23,N],[12,"alpha_bits","","Minimum number of bits for the alpha in the color buffer. `None` means \"don't care\". The default is `Some(8)`.",23,N],[12,"depth_bits","","Minimum number of bits for the depth buffer. `None` means \"don't care\". The default value is `Some(24)`.",23,N],[12,"stencil_bits","","Minimum number of bits for the depth buffer. `None` means \"don't care\". The default value is `Some(8)`.",23,N],[12,"double_buffer","","If true, only double-buffered formats will be considered. If false, only single-buffer formats. `None` means \"don't care\". The default is `Some(true)`.",23,N],[12,"multisampling","","Contains the minimum number of samples per pixel in the color, depth and stencil buffers. `None` means \"don't care\". Default is `None`. A value of `Some(0)` indicates that multisampling must not be enabled.",23,N],[12,"stereoscopy","","If true, only stereoscopic formats will be considered. If false, only non-stereoscopic formats. The default is `false`.",23,N],[12,"srgb","","If true, only sRGB-capable formats will be considered. If false, don't care. The default is `false`.",23,N],[12,"release_behavior","","The behavior when changing the current context. Default is `Flush`.",23,N],[3,"GlAttributes","","Attributes to use when creating an OpenGL context.",N,N],[12,"sharing","","An existing context to share the new the context with.",24,N],[12,"version","","Version to try create. See `GlRequest` for more infos.",24,N],[12,"profile","","OpenGL profile to use.",24,N],[12,"debug","","Whether to enable the `debug` flag of the context.",24,N],[12,"robustness","","How the OpenGL context should detect errors.",24,N],[12,"vsync","","Whether to use vsync. If vsync is enabled, calling `swap_buffers` will block until the screen refreshes. This is typically used to prevent screen tearing.",24,N],[4,"CreationError","","Error that can happen while creating a window or a headless renderer.",N,N],[13,"OsError","","",25,N],[13,"NotSupported","","TODO: remove this error",25,N],[13,"NoBackendAvailable","","",25,N],[13,"RobustnessNotSupported","","",25,N],[13,"OpenGlVersionNotSupported","","",25,N],[13,"NoAvailablePixelFormat","","",25,N],[13,"PlatformSpecific","","",25,N],[13,"Window","","",25,N],[4,"ContextError","","Error that can happen when manipulating an OpenGL context.",N,N],[13,"OsError","","General platform error.",26,N],[13,"IoError","","",26,N],[13,"ContextLost","","",26,N],[4,"Api","","All APIs related to OpenGL that you can possibly get while using glutin.",N,N],[13,"OpenGl","","The classical OpenGL. Available on Windows, Linux, OS/X.",27,N],[13,"OpenGlEs","","OpenGL embedded system. Available on Linux, Android.",27,N],[13,"WebGl","","OpenGL for the web. Very similar to OpenGL ES.",27,N],[4,"GlProfile","","Describes the requested OpenGL context profiles.",N,N],[13,"Compatibility","","Include all the immediate more functions and definitions.",28,N],[13,"Core","","Include all the future-compatible functions and definitions.",28,N],[4,"GlRequest","","Describes the OpenGL API and version that are being requested when a context is created.",N,N],[13,"Latest","","Request the latest version of the \"best\" API of this platform.",29,N],[13,"Specific","","Request a specific version of a specific API.",29,N],[13,"GlThenGles","","If OpenGL is available, create an OpenGL context with the specified `opengl_version`. Else if OpenGL ES or WebGL is available, create a context with the specified `opengles_version`.",29,N],[12,"opengl_version","glutin::GlRequest","The version to use for OpenGL.",29,N],[12,"opengles_version","","The version to use for OpenGL ES.",29,N],[4,"Robustness","glutin","Specifies the tolerance of the OpenGL context to faults. If you accept raw OpenGL commands and/or raw shader code from an untrusted source, you should definitely care about this.",N,N],[13,"NotRobust","","Not everything is checked. Your application can crash if you do something wrong with your shaders.",30,N],[13,"NoError","","The driver doesn't check anything. This option is very dangerous. Please know what you're doing before using it. See the `GL_KHR_no_error` extension.",30,N],[13,"RobustNoResetNotification","","Everything is checked to avoid any crash. The driver will attempt to avoid any problem, but if a problem occurs the behavior is implementation-defined. You are just guaranteed not to get a crash.",30,N],[13,"TryRobustNoResetNotification","","Same as `RobustNoResetNotification` but the context creation doesn't fail if it's not supported.",30,N],[13,"RobustLoseContextOnReset","","Everything is checked to avoid any crash. If a problem occurs, the context will enter a \"context lost\" state. It must then be recreated. For the moment, glutin doesn't provide a way to recreate a context with the same window :-/",30,N],[13,"TryRobustLoseContextOnReset","","Same as `RobustLoseContextOnReset` but the context creation doesn't fail if it's not supported.",30,N],[4,"ReleaseBehavior","","The behavior of the driver when you change the current context.",N,N],[13,"None","","Doesn't do anything. Most notably doesn't flush.",31,N],[13,"Flush","","Flushes the context that was previously current as if `glFlush` was called.",31,N],[11,"clone","","",20,[[["self"]],["headlessrendererbuilder"]]],[11,"new","","Initializes a new `HeadlessRendererBuilder` with default values.",20,[[["u32"],["u32"]],["headlessrendererbuilder"]]],[11,"with_gl","","Sets how the backend should choose the OpenGL API and version.",20,[[["self"],["glrequest"]],["headlessrendererbuilder"]]],[11,"with_gl_profile","","Sets the desired OpenGL context profile.",20,[[["self"],["glprofile"]],["headlessrendererbuilder"]]],[11,"with_gl_debug_flag","","Sets the debug flag for the OpenGL context.",20,[[["self"],["bool"]],["headlessrendererbuilder"]]],[11,"with_gl_robustness","","Sets the robustness of the OpenGL context. See the docs of `Robustness`.",20,[[["self"],["robustness"]],["headlessrendererbuilder"]]],[11,"build","","Builds the headless context.",20,[[["self"]],["result",["headlesscontext","creationerror"]]]],[11,"build_strict","","Builds the headless context.",20,[[["self"]],["result",["headlesscontext","creationerror"]]]],[11,"make_current","","Creates a new OpenGL context Sets the context as the current context.",32,[[["self"]],["result",["contexterror"]]]],[11,"is_current","","Returns true if this context is the current one in this thread.",32,[[["self"]],["bool"]]],[11,"get_proc_address","","Returns the address of an OpenGL function.",32,N],[11,"get_api","","Returns the API that is currently provided by this window.",32,[[["self"]],["api"]]],[11,"swap_buffers","","",32,[[["self"]],["result",["contexterror"]]]],[11,"get_pixel_format","","",32,[[["self"]],["pixelformat"]]],[11,"resize","","",32,[[["self"],["physicalsize"]]]],[0,"os","","Contains traits with platform-specific methods in them.",N,N],[0,"unix","glutin::os","",N,N],[4,"XNotSupported","glutin::os::unix","Error returned if this system doesn't have XLib or can't create an X connection.",N,N],[13,"LibraryOpenError","","Failed to load one or several shared libraries.",33,N],[13,"XOpenDisplayFailed","","Connecting to the X server with `XOpenDisplay` failed.",33,N],[4,"XWindowType","","X window type. Maps directly to `_NET_WM_WINDOW_TYPE`.",N,N],[13,"Desktop","","A desktop feature. This can include a single window containing desktop icons with the same dimensions as the screen, allowing the desktop environment to have full control of the desktop, without the need for proxying root window clicks.",34,N],[13,"Dock","","A dock or panel feature. Typically a Window Manager would keep such windows on top of all other windows.",34,N],[13,"Toolbar","","Toolbar windows. \"Torn off\" from the main application.",34,N],[13,"Menu","","Pinnable menu windows. \"Torn off\" from the main application.",34,N],[13,"Utility","","A small persistent utility window, such as a palette or toolbox.",34,N],[13,"Splash","","The window is a splash screen displayed as an application is starting up.",34,N],[13,"Dialog","","This is a dialog window.",34,N],[13,"Normal","","This is a normal, top-level window.",34,N],[8,"EventsLoopExt","","Additional methods on `EventsLoop` that are specific to Linux.",N,N],[10,"new_x11","","Builds a new `EventsLoop` that is forced to use X11.",35,[[],["result",["xnotsupported"]]]],[10,"new_wayland","","Builds a new `EventsLoop` that is forced to use Wayland.",35,[[],["self"]]],[10,"is_wayland","","True if the `EventsLoop` uses Wayland.",35,[[["self"]],["bool"]]],[10,"is_x11","","True if the `EventsLoop` uses X11.",35,[[["self"]],["bool"]]],[8,"MonitorIdExt","","Additional methods on `MonitorId` that are specific to Linux.",N,N],[10,"native_id","","Returns the inner identifier of the monitor.",36,[[["self"]],["u32"]]],[8,"WindowBuilderExt","","Additional methods on `WindowBuilder` that are specific to Unix.",N,N],[10,"with_x11_visual","","",37,N],[10,"with_x11_screen","","",37,[[["self"],["i32"]],["windowbuilder"]]],[10,"with_class","","Build window with `WM_CLASS` hint; defaults to the name of the binary. Only relevant on X11.",37,[[["self"],["string"],["string"]],["windowbuilder"]]],[10,"with_override_redirect","","Build window with override-redirect flag; defaults to false. Only relevant on X11.",37,[[["self"],["bool"]],["windowbuilder"]]],[10,"with_x11_window_type","","Build window with `_NET_WM_WINDOW_TYPE` hint; defaults to `Normal`. Only relevant on X11.",37,[[["self"],["windowtype"]],["windowbuilder"]]],[10,"with_resize_increments","","Build window with resize increment hint. Only implemented on X11.",37,[[["self"],["logicalsize"]],["windowbuilder"]]],[10,"with_base_size","","Build window with base size hint. Only implemented on X11.",37,[[["self"],["logicalsize"]],["windowbuilder"]]],[8,"WindowExt","","Additional methods on `Window` that are specific to Unix.",N,N],[10,"get_xlib_window","","Returns the ID of the `Window` xlib object that is used by this window.",38,[[["self"]],["option",["u64"]]]],[10,"get_xlib_display","","Returns a pointer to the `Display` object of xlib that is used by this window.",38,[[["self"]],["option"]]],[10,"get_xlib_screen_id","","",38,[[["self"]],["option",["i32"]]]],[10,"set_urgent","","Set window urgency hint (`XUrgencyHint`). Only relevant on X.",38,N],[10,"get_xcb_connection","","This function returns the underlying `xcb_connection_t` of an xlib `Display`.",38,[[["self"]],["option"]]],[10,"get_wayland_surface","","Returns a pointer to the `wl_surface` object of wayland that is used by this window.",38,[[["self"]],["option"]]],[10,"get_wayland_display","","Returns a pointer to the `wl_display` object of wayland that is used by this window.",38,[[["self"]],["option"]]],[10,"is_ready","","Check if the window is ready for drawing",38,[[["self"]],["bool"]]],[4,"RawHandle","","Context handles available on Unix-like platforms.",N,N],[13,"Glx","","",39,N],[13,"Egl","","",39,N],[6,"EGLContext","","",N,N],[6,"GLXContext","","",N,N],[11,"raw_handle","glutin","",40,N],[11,"raw_handle","","",32,N],[8,"GlContextExt","glutin::os","Platform-specific extensions for OpenGL contexts.",N,N],[16,"Handle","","Raw context handle.",41,N],[10,"raw_handle","","Returns the raw context handle.",41,N],[7,"GL_CORE","glutin","The minimum core profile GL context. Useful for getting the minimum required GL version while still running on OSX, which often forbids the compatibility profile features.",N,N],[8,"GlContext","","A trait for types associated with a GL context.",N,N],[10,"make_current","","Sets the context as the current context.",42,[[["self"]],["result",["contexterror"]]]],[10,"is_current","","Returns true if this context is the current one in this thread.",42,[[["self"]],["bool"]]],[10,"get_proc_address","","Returns the address of an OpenGL function.",42,N],[10,"swap_buffers","","Swaps the buffers in case of double or triple buffering.",42,[[["self"]],["result",["contexterror"]]]],[10,"get_api","","Returns the OpenGL API being used.",42,[[["self"]],["api"]]],[10,"get_pixel_format","","Returns the pixel format of the main framebuffer of the context.",42,[[["self"]],["pixelformat"]]],[10,"resize","","Resize the GL context.",42,[[["self"],["physicalsize"]]]],[11,"new","","Initializes a new `ContextBuilder` with default values.",21,[[],["self"]]],[11,"with_gl","","Sets how the backend should choose the OpenGL API and version.",21,[[["self"],["glrequest"]],["self"]]],[11,"with_gl_profile","","Sets the desired OpenGL context profile.",21,[[["self"],["glprofile"]],["self"]]],[11,"with_gl_debug_flag","","Sets the debug flag for the OpenGL context.",21,[[["self"],["bool"]],["self"]]],[11,"with_gl_robustness","","Sets the robustness of the OpenGL context. See the docs of `Robustness`.",21,[[["self"],["robustness"]],["self"]]],[11,"with_vsync","","Requests that the window has vsync enabled.",21,[[["self"],["bool"]],["self"]]],[11,"with_shared_lists","","Share the display lists with the given `Context`.",21,[[["self"],["context"]],["self"]]],[11,"with_multisampling","","Sets the multisampling level to request. A value of `0` indicates that multisampling must not be enabled.",21,[[["self"],["u16"]],["self"]]],[11,"with_depth_buffer","","Sets the number of bits in the depth buffer.",21,[[["self"],["u8"]],["self"]]],[11,"with_stencil_buffer","","Sets the number of bits in the stencil buffer.",21,[[["self"],["u8"]],["self"]]],[11,"with_pixel_format","","Sets the number of bits in the color buffer.",21,[[["self"],["u8"],["u8"]],["self"]]],[11,"with_stereoscopy","","Request the backend to be stereoscopic.",21,[[["self"]],["self"]]],[11,"with_srgb","","Sets whether sRGB should be enabled on the window.",21,[[["self"],["bool"]],["self"]]],[11,"with_double_buffer","","Sets whether double buffering should be enabled.",21,[[["self"],["option",["bool"]]],["self"]]],[11,"with_hardware_acceleration","","Sets whether hardware acceleration is required.",21,[[["self"],["option",["bool"]]],["self"]]],[11,"new","","Builds the given window along with the associated GL context, returning the pair as a `GlWindow`.",43,[[["windowbuilder"],["contextbuilder"],["eventsloop"]],["result",["creationerror"]]]],[11,"window","","Borrow the inner `Window`.",43,[[["self"]],["window"]]],[11,"context","","Borrow the inner GL `Context`.",43,[[["self"]],["context"]]],[11,"make_current","","",40,[[["self"]],["result",["contexterror"]]]],[11,"is_current","","",40,[[["self"]],["bool"]]],[11,"get_proc_address","","",40,N],[11,"swap_buffers","","",40,[[["self"]],["result",["contexterror"]]]],[11,"get_api","","",40,[[["self"]],["api"]]],[11,"get_pixel_format","","",40,[[["self"]],["pixelformat"]]],[11,"resize","","",40,[[["self"],["physicalsize"]]]],[11,"make_current","","",43,[[["self"]],["result",["contexterror"]]]],[11,"is_current","","",43,[[["self"]],["bool"]]],[11,"get_proc_address","","",43,N],[11,"swap_buffers","","",43,[[["self"]],["result",["contexterror"]]]],[11,"get_api","","",43,[[["self"]],["api"]]],[11,"get_pixel_format","","",43,[[["self"]],["pixelformat"]]],[11,"resize","","",43,[[["self"],["physicalsize"]]]],[11,"deref","","",43,N],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",25,[[["self"]],["str"]]],[11,"cause","","",25,[[["self"]],["option",["error"]]]],[11,"from","","",25,[[["windowcreationerror"]],["self"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",26,[[["self"]],["str"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"clone","","",27,[[["self"]],["api"]]],[11,"eq","","",27,[[["self"],["api"]],["bool"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"clone","","",28,[[["self"]],["glprofile"]]],[11,"eq","","",28,[[["self"],["glprofile"]],["bool"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"clone","","",29,[[["self"]],["glrequest"]]],[11,"to_gl_version","","Extract the desktop GL version, if any.",29,[[["self"]],["option"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"clone","","",30,[[["self"]],["robustness"]]],[11,"eq","","",30,[[["self"],["robustness"]],["bool"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"clone","","",31,[[["self"]],["releasebehavior"]]],[11,"eq","","",31,[[["self"],["releasebehavior"]],["bool"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"clone","","",22,[[["self"]],["pixelformat"]]],[11,"clone","","",23,[[["self"]],["pixelformatrequirements"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"default","","",23,[[],["pixelformatrequirements"]]],[11,"clone","","",24,[[["self"]],["glattributes"]]],[11,"map_sharing","","Turns the `sharing` parameter into another type by calling a closure.",24,[[["self"],["f"]],["glattributes"]]],[11,"default","","",24,[[],["glattributes"]]],[11,"clone","glutin::os::unix","",33,[[["self"]],["xnotsupported"]]],[11,"clone","glutin","",9,[[["self"]],["keyboardinput"]]],[11,"clone","","",0,[[["self"]],["controlflow"]]],[11,"clone","","",8,[[["self"]],["event"]]],[11,"clone","","",15,[[["self"]],["touchphase"]]],[11,"clone","","",12,[[["self"]],["mousecursor"]]],[11,"clone","","",44,[[["self"]],["deviceid"]]],[11,"clone","","",19,[[["self"]],["windowevent"]]],[11,"clone","glutin::dpi","",5,[[["self"]],["logicalsize"]]],[11,"clone","glutin","",17,[[["self"]],["windowattributes"]]],[11,"clone","glutin::os::unix","",34,[[["self"]],["windowtype"]]],[11,"clone","glutin","",45,[[["self"]],["monitorid"]]],[11,"clone","","",46,[[["self"]],["windowid"]]],[11,"clone","","",47,[[["self"]],["eventsloopclosed"]]],[11,"clone","glutin::dpi","",3,[[["self"]],["logicalposition"]]],[11,"clone","glutin","",10,[[["self"]],["modifiersstate"]]],[11,"clone","","",18,[[["self"]],["windowbuilder"]]],[11,"clone","","",2,[[["self"]],["deviceevent"]]],[11,"clone","","",11,[[["self"]],["mousebutton"]]],[11,"clone","glutin::dpi","",4,[[["self"]],["physicalposition"]]],[11,"clone","glutin","",16,[[["self"]],["virtualkeycode"]]],[11,"clone","","",7,[[["self"]],["elementstate"]]],[11,"clone","","",1,[[["self"]],["creationerror"]]],[11,"clone","glutin::dpi","",6,[[["self"]],["physicalsize"]]],[11,"clone","glutin","",48,[[["self"]],["icon"]]],[11,"clone","","",14,[[["self"]],["touch"]]],[11,"clone","","",13,[[["self"]],["mousescrolldelta"]]],[11,"clone","","",49,[[["self"]],["eventsloopproxy"]]],[11,"fmt","glutin::dpi","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glutin","",48,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glutin::dpi","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glutin","",13,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glutin::dpi","",5,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glutin::os::unix","",33,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glutin","",12,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result",["error"]]]],[11,"partial_cmp","","",46,[[["self"],["windowid"]],["option",["ordering"]]]],[11,"lt","","",46,[[["self"],["windowid"]],["bool"]]],[11,"le","","",46,[[["self"],["windowid"]],["bool"]]],[11,"gt","","",46,[[["self"],["windowid"]],["bool"]]],[11,"ge","","",46,[[["self"],["windowid"]],["bool"]]],[11,"partial_cmp","","",44,[[["self"],["deviceid"]],["option",["ordering"]]]],[11,"lt","","",44,[[["self"],["deviceid"]],["bool"]]],[11,"le","","",44,[[["self"],["deviceid"]],["bool"]]],[11,"gt","","",44,[[["self"],["deviceid"]],["bool"]]],[11,"ge","","",44,[[["self"],["deviceid"]],["bool"]]],[11,"description","","",47,[[["self"]],["str"]]],[11,"description","glutin::os::unix","",33,[[["self"]],["str"]]],[11,"cause","","",33,[[["self"]],["option",["error"]]]],[11,"description","glutin","",1,[[["self"]],["str"]]],[11,"cmp","","",44,[[["self"],["deviceid"]],["ordering"]]],[11,"cmp","","",46,[[["self"],["windowid"]],["ordering"]]],[11,"default","glutin::os::unix","",34,[[],["windowtype"]]],[11,"default","glutin","",10,[[],["modifiersstate"]]],[11,"default","","",17,[[],["windowattributes"]]],[11,"default","","",12,[[],["mousecursor"]]],[11,"get_xlib_window","","",51,[[["self"]],["option",["u64"]]]],[11,"get_xlib_display","","",51,[[["self"]],["option"]]],[11,"get_xlib_screen_id","","",51,[[["self"]],["option",["i32"]]]],[11,"get_xcb_connection","","",51,[[["self"]],["option"]]],[11,"set_urgent","","",51,N],[11,"get_wayland_surface","","",51,[[["self"]],["option"]]],[11,"get_wayland_display","","",51,[[["self"]],["option"]]],[11,"is_ready","","",51,[[["self"]],["bool"]]],[11,"hash","","",46,N],[11,"hash","","",15,N],[11,"hash","","",47,N],[11,"hash","","",7,N],[11,"hash","","",44,N],[11,"hash","","",16,N],[11,"hash","","",11,N],[11,"hash","","",10,N],[11,"hash","glutin::os::unix","",34,N],[11,"native_id","glutin","",45,[[["self"]],["u32"]]],[11,"with_x11_visual","","",18,N],[11,"with_x11_screen","","",18,[[["self"],["i32"]],["windowbuilder"]]],[11,"with_class","","",18,[[["self"],["string"],["string"]],["windowbuilder"]]],[11,"with_override_redirect","","",18,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_x11_window_type","","",18,[[["self"],["windowtype"]],["windowbuilder"]]],[11,"with_resize_increments","","",18,[[["self"],["logicalsize"]],["windowbuilder"]]],[11,"with_base_size","","",18,[[["self"],["logicalsize"]],["windowbuilder"]]],[11,"new_x11","","",52,[[],["result",["eventsloop","xnotsupported"]]]],[11,"new_wayland","","",52,[[],["eventsloop"]]],[11,"is_wayland","","",52,[[["self"]],["bool"]]],[11,"is_x11","","",52,[[["self"]],["bool"]]],[11,"from","glutin::dpi","",4,N],[11,"from","","",6,N],[11,"from","","",6,N],[11,"from","glutin::os::unix","",33,[[["openerror"]],["xnotsupported"]]],[11,"from","glutin::dpi","",3,N],[11,"from","","",5,N],[11,"from","","",5,N],[11,"from","glutin","",10,[[["ximodifierstate"]],["modifiersstate"]]],[11,"from","glutin::dpi","",4,N],[11,"from","","",3,N],[11,"from","glutin","",10,[[["modifiersstate"]],["modifiersstate"]]],[11,"into","glutin::dpi","Note that this rounds instead of truncating.",4,N],[11,"into","","",3,N],[11,"into","","",4,N],[11,"into","","Note that this rounds instead of truncating.",6,N],[11,"into","","",5,N],[11,"into","","",6,N],[11,"into","","Note that this rounds instead of truncating.",3,N],[11,"into","","Note that this rounds instead of truncating.",5,N],[11,"fmt","glutin::os::unix","",33,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","glutin","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",15,[[["self"],["touchphase"]],["bool"]]],[11,"eq","glutin::dpi","",5,[[["self"],["logicalsize"]],["bool"]]],[11,"ne","","",5,[[["self"],["logicalsize"]],["bool"]]],[11,"eq","glutin","",13,[[["self"],["mousescrolldelta"]],["bool"]]],[11,"ne","","",13,[[["self"],["mousescrolldelta"]],["bool"]]],[11,"eq","","",7,[[["self"],["elementstate"]],["bool"]]],[11,"eq","","",46,[[["self"],["windowid"]],["bool"]]],[11,"ne","","",46,[[["self"],["windowid"]],["bool"]]],[11,"eq","glutin::dpi","",6,[[["self"],["physicalsize"]],["bool"]]],[11,"ne","","",6,[[["self"],["physicalsize"]],["bool"]]],[11,"eq","","",4,[[["self"],["physicalposition"]],["bool"]]],[11,"ne","","",4,[[["self"],["physicalposition"]],["bool"]]],[11,"eq","glutin","",0,[[["self"],["controlflow"]],["bool"]]],[11,"eq","glutin::os::unix","",34,[[["self"],["windowtype"]],["bool"]]],[11,"eq","glutin","",47,[[["self"],["eventsloopclosed"]],["bool"]]],[11,"eq","","",11,[[["self"],["mousebutton"]],["bool"]]],[11,"ne","","",11,[[["self"],["mousebutton"]],["bool"]]],[11,"eq","glutin::dpi","",3,[[["self"],["logicalposition"]],["bool"]]],[11,"ne","","",3,[[["self"],["logicalposition"]],["bool"]]],[11,"eq","glutin","",12,[[["self"],["mousecursor"]],["bool"]]],[11,"eq","","",48,[[["self"],["icon"]],["bool"]]],[11,"ne","","",48,[[["self"],["icon"]],["bool"]]],[11,"eq","","",44,[[["self"],["deviceid"]],["bool"]]],[11,"ne","","",44,[[["self"],["deviceid"]],["bool"]]],[11,"eq","","",10,[[["self"],["modifiersstate"]],["bool"]]],[11,"ne","","",10,[[["self"],["modifiersstate"]],["bool"]]],[11,"eq","","",16,[[["self"],["virtualkeycode"]],["bool"]]],[11,"next","","",50,[[["self"]],["option",["monitorid"]]]],[11,"size_hint","","",50,N],[11,"new","glutin::dpi","",3,[[["f64"],["f64"]],["logicalposition"]]],[11,"from_physical","","",3,[[["t"],["f64"]],["logicalposition"]]],[11,"to_physical","","",3,[[["self"],["f64"]],["physicalposition"]]],[11,"new","","",4,[[["f64"],["f64"]],["physicalposition"]]],[11,"from_logical","","",4,[[["t"],["f64"]],["physicalposition"]]],[11,"to_logical","","",4,[[["self"],["f64"]],["logicalposition"]]],[11,"new","","",5,[[["f64"],["f64"]],["logicalsize"]]],[11,"from_physical","","",5,[[["t"],["f64"]],["logicalsize"]]],[11,"to_physical","","",5,[[["self"],["f64"]],["physicalsize"]]],[11,"new","","",6,[[["f64"],["f64"]],["physicalsize"]]],[11,"from_logical","","",6,[[["t"],["f64"]],["physicalsize"]]],[11,"to_logical","","",6,[[["self"],["f64"]],["logicalsize"]]],[11,"new","glutin","Builds a new events loop.",52,[[],["eventsloop"]]],[11,"get_available_monitors","","Returns the list of all the monitors available on the system.",52,[[["self"]],["availablemonitorsiter"]]],[11,"get_primary_monitor","","Returns the primary monitor of the system.",52,[[["self"]],["monitorid"]]],[11,"poll_events","","Fetches all the events that are pending, calls the callback function for each of them, and returns.",52,N],[11,"run_forever","","Calls `callback` every time an event is received. If no event is available, sleeps the current thread and waits for an event. If the callback returns `ControlFlow::Break` then `run_forever` will immediately return.",52,N],[11,"create_proxy","","Creates an `EventsLoopProxy` that can be used to wake up the `EventsLoop` from another thread.",52,[[["self"]],["eventsloopproxy"]]],[11,"wakeup","","Wake up the `EventsLoop` from which this proxy was created.",49,[[["self"]],["result",["eventsloopclosed"]]]],[11,"from_rgba","","Creates an `Icon` from 32bpp RGBA data.",48,[[["vec",["u8"]],["u32"],["u32"]],["result",["icon","badicon"]]]],[11,"get_name","","Returns a human-readable name of the monitor.",45,[[["self"]],["option",["string"]]]],[11,"get_dimensions","","Returns the monitor's resolution.",45,[[["self"]],["physicalsize"]]],[11,"get_position","","Returns the top-left corner position of the monitor relative to the larger full screen area.",45,[[["self"]],["physicalposition"]]],[11,"get_hidpi_factor","","Returns the DPI factor that can be used to map logical pixels to physical pixels, and vice versa.",45,[[["self"]],["f64"]]],[11,"new","","Creates a new Window for platforms where this is appropriate.",51,[[["eventsloop"]],["result",["window","creationerror"]]]],[11,"set_title","","Modifies the title of the window.",51,N],[11,"show","","Shows the window if it was hidden.",51,N],[11,"hide","","Hides the window if it was visible.",51,N],[11,"get_position","","Returns the position of the top-left hand corner of the window relative to the  top-left hand corner of the desktop.",51,[[["self"]],["option",["logicalposition"]]]],[11,"get_inner_position","","Returns the position of the top-left hand corner of the window's client area relative to the top-left hand corner of the desktop.",51,[[["self"]],["option",["logicalposition"]]]],[11,"set_position","","Modifies the position of the window.",51,N],[11,"get_inner_size","","Returns the logical size of the window's client area.",51,[[["self"]],["option",["logicalsize"]]]],[11,"get_outer_size","","Returns the logical size of the entire window.",51,[[["self"]],["option",["logicalsize"]]]],[11,"set_inner_size","","Modifies the inner size of the window.",51,N],[11,"set_min_dimensions","","Sets a minimum dimension size for the window.",51,N],[11,"set_max_dimensions","","Sets a maximum dimension size for the window.",51,N],[11,"set_resizable","","Sets whether the window is resizable or not.",51,N],[11,"get_hidpi_factor","","Returns the DPI factor that can be used to map logical pixels to physical pixels, and vice versa.",51,[[["self"]],["f64"]]],[11,"set_cursor","","Modifies the mouse cursor of the window. Has no effect on Android.",51,N],[11,"set_cursor_position","","Changes the position of the cursor in window coordinates.",51,[[["self"],["logicalposition"]],["result",["string"]]]],[11,"grab_cursor","","Grabs the cursor, preventing it from leaving the window.",51,[[["self"],["bool"]],["result",["string"]]]],[11,"hide_cursor","","Hides the cursor, making it invisible but still usable.",51,N],[11,"set_maximized","","Sets the window to maximized or back",51,N],[11,"set_fullscreen","","Sets the window to fullscreen or back",51,N],[11,"set_decorations","","Turn window decorations on or off.",51,N],[11,"set_always_on_top","","Change whether or not the window will always be on top of other windows.",51,N],[11,"set_window_icon","","Sets the window icon. On Windows and X11, this is typically the small icon in the top-left corner of the titlebar.",51,N],[11,"set_ime_spot","","Sets location of IME candidate box in client area coordinates relative to the top left.",51,N],[11,"get_current_monitor","","Returns the monitor on which the window currently resides",51,[[["self"]],["monitorid"]]],[11,"get_available_monitors","","Returns the list of all the monitors available on the system.",51,[[["self"]],["availablemonitorsiter"]]],[11,"get_primary_monitor","","Returns the primary monitor of the system.",51,[[["self"]],["monitorid"]]],[11,"id","","",51,[[["self"]],["windowid"]]],[11,"new","","Initializes a new `WindowBuilder` with default values.",18,[[],["windowbuilder"]]],[11,"with_dimensions","","Requests the window to be of specific dimensions.",18,[[["self"],["logicalsize"]],["windowbuilder"]]],[11,"with_min_dimensions","","Sets a minimum dimension size for the window",18,[[["self"],["logicalsize"]],["windowbuilder"]]],[11,"with_max_dimensions","","Sets a maximum dimension size for the window",18,[[["self"],["logicalsize"]],["windowbuilder"]]],[11,"with_resizable","","Sets whether the window is resizable or not",18,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_title","","Requests a specific title for the window.",18,[[["self"],["t"]],["windowbuilder"]]],[11,"with_fullscreen","","Sets the window fullscreen state. None means a normal window, Some(MonitorId) means a fullscreen window on that specific monitor",18,[[["self"],["option",["monitorid"]]],["windowbuilder"]]],[11,"with_maximized","","Requests maximized mode.",18,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_visibility","","Sets whether the window will be initially hidden or visible.",18,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_transparency","","Sets whether the background of the window should be transparent.",18,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_decorations","","Sets whether the window should have a border, a title bar, etc.",18,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_always_on_top","","Sets whether or not the window will always be on top of other windows.",18,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_window_icon","","Sets the window icon. On Windows and X11, this is typically the small icon in the top-left corner of the titlebar.",18,[[["self"],["option",["icon"]]],["windowbuilder"]]],[11,"with_multitouch","","Enables multitouch.",18,[[["self"]],["windowbuilder"]]],[11,"build","","Builds the window.",18,[[["self"],["eventsloop"]],["result",["window","creationerror"]]]],[11,"clone","glutin::os::unix","",39,[[["self"]],["rawhandle"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"ControlFlow"],[4,"WindowCreationError"],[4,"DeviceEvent"],[3,"LogicalPosition"],[3,"PhysicalPosition"],[3,"LogicalSize"],[3,"PhysicalSize"],[4,"ElementState"],[4,"Event"],[3,"KeyboardInput"],[3,"ModifiersState"],[4,"MouseButton"],[4,"MouseCursor"],[4,"MouseScrollDelta"],[3,"Touch"],[4,"TouchPhase"],[4,"VirtualKeyCode"],[3,"WindowAttributes"],[3,"WindowBuilder"],[4,"WindowEvent"],[3,"HeadlessRendererBuilder"],[3,"ContextBuilder"],[3,"PixelFormat"],[3,"PixelFormatRequirements"],[3,"GlAttributes"],[4,"CreationError"],[4,"ContextError"],[4,"Api"],[4,"GlProfile"],[4,"GlRequest"],[4,"Robustness"],[4,"ReleaseBehavior"],[3,"HeadlessContext"],[4,"XNotSupported"],[4,"XWindowType"],[8,"EventsLoopExt"],[8,"MonitorIdExt"],[8,"WindowBuilderExt"],[8,"WindowExt"],[4,"RawHandle"],[3,"Context"],[8,"GlContextExt"],[8,"GlContext"],[3,"GlWindow"],[3,"DeviceId"],[3,"MonitorId"],[3,"WindowId"],[3,"EventsLoopClosed"],[3,"Icon"],[3,"EventsLoopProxy"],[3,"AvailableMonitorsIter"],[3,"Window"],[3,"EventsLoop"]]};
searchIndex["glutin_window"]={"doc":"A Glutin window back-end for the Piston game engine.","items":[[4,"OpenGL","glutin_window","",N,N],[13,"V2_0","","",0,N],[13,"V2_1","","",0,N],[13,"V3_0","","",0,N],[13,"V3_1","","",0,N],[13,"V3_2","","",0,N],[13,"V3_3","","",0,N],[13,"V4_0","","",0,N],[13,"V4_1","","",0,N],[13,"V4_2","","",0,N],[13,"V4_3","","",0,N],[13,"V4_4","","",0,N],[13,"V4_5","","",0,N],[3,"GlutinWindow","","Contains stuff for game window.",N,N],[12,"window","","The window.",1,N],[5,"map_key","","Maps Glutin's key to Piston's key.",N,[[["virtualkeycode"]],["key"]]],[5,"map_mouse","","Maps Glutin's mouse button to Piston's mouse button.",N,[[["mousebutton"]],["mousebutton"]]],[11,"new","","Creates a new game window for Glutin.",1,[[["windowsettings"]],["result",["string"]]]],[11,"size","","",1,[[["self"]],["size"]]],[11,"draw_size","","",1,[[["self"]],["size"]]],[11,"should_close","","",1,[[["self"]],["bool"]]],[11,"set_should_close","","",1,[[["self"],["bool"]]]],[11,"swap_buffers","","",1,[[["self"]]]],[11,"wait_event","","",1,[[["self"]],["input"]]],[11,"wait_event_timeout","","",1,[[["self"],["duration"]],["option",["input"]]]],[11,"poll_event","","",1,[[["self"]],["option",["input"]]]],[11,"build_from_window_settings","","",1,[[["windowsettings"]],["result",["string"]]]],[11,"get_title","","",1,[[["self"]],["string"]]],[11,"set_title","","",1,[[["self"],["string"]]]],[11,"get_exit_on_esc","","",1,[[["self"]],["bool"]]],[11,"set_exit_on_esc","","",1,[[["self"],["bool"]]]],[11,"set_capture_cursor","","",1,[[["self"],["bool"]]]],[11,"show","","",1,[[["self"]]]],[11,"hide","","",1,[[["self"]]]],[11,"get_position","","",1,[[["self"]],["option",["position"]]]],[11,"set_position","","",1,[[["self"],["p"]]]],[11,"set_size","","",1,[[["self"],["s"]]]],[11,"get_proc_address","","",1,[[["self"],["str"]],["procaddress"]]],[11,"is_current","","",1,[[["self"]],["bool"]]],[11,"make_current","","",1,[[["self"]]]],[11,"get_major_minor","","Gets the minor version of OpenGL.",0,N],[11,"to_glsl","","Gets GLSL version associated with OpenGL.",0,[[["self"]],["glsl"]]],[11,"clone","","",0,[[["self"]],["opengl"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"partial_cmp","","",0,[[["self"],["opengl"]],["option",["ordering"]]]],[11,"cmp","","",0,[[["self"],["opengl"]],["ordering"]]],[11,"from_str","","",0,[[["str"]],["result",["opengl"]]]],[11,"eq","","",0,[[["self"],["opengl"]],["bool"]]]],"paths":[[4,"OpenGL"],[3,"GlutinWindow"]]};
searchIndex["graphics"]={"doc":"A library for 2D graphics that works with multiple back-ends.","items":[[8,"ImageSize","graphics","Implemented by all images to be used with generic algorithms.",N,N],[10,"get_size","","Get the image size.",0,N],[11,"get_width","","Gets the image width.",0,[[["self"]],["u32"]]],[11,"get_height","","Gets the image height.",0,[[["self"]],["u32"]]],[3,"Viewport","","Stores viewport information.",N,N],[12,"rect","","Viewport in pixels. `[x, y, width height]` where `(x, y)` is lower left corner.",1,N],[12,"draw_size","","The size of frame buffer in pixels.",1,N],[12,"window_size","","The size of window in points.",1,N],[5,"clear","","Clears the screen.",N,[[["color"],["g"]]]],[5,"image","","Draws image.",N,N],[5,"ellipse","","Draws ellipse.",N,[[["color"],["r"],["matrix2d"],["g"]]]],[5,"circle_arc","","Draws arc",N,[[["color"],["radius"],["scalar"],["scalar"],["r"],["matrix2d"],["g"]]]],[5,"rectangle","","Draws rectangle.",N,[[["color"],["r"],["matrix2d"],["g"]]]],[5,"polygon","","Draws polygon.",N,[[["color"],["polygon"],["matrix2d"],["g"]]]],[5,"line","","Draws line.",N,[[["color"],["radius"],["l"],["matrix2d"],["g"]]]],[5,"text","","Draws text.",N,[[["color"],["fontsize"],["str"],["c"],["matrix2d"],["g"]],["result"]]],[0,"draw_state","","Graphics draw state.",N,N],[3,"DrawState","graphics::draw_state","Graphics draw state used for blending, clipping and stencil rendering.",N,N],[12,"scissor","","Scissor mask to use. If set, no pixel outside of this rectangle (in screen space) will be written to as a result of rendering.",2,N],[12,"stencil","","Stencil test to use. If None, no stencil testing is done.",2,N],[12,"blend","","Blend function to use. If None, blending is disabled.",2,N],[4,"Blend","","The blend setting to use when drawing.",N,N],[13,"Alpha","","Alpha blending (allows semi-transparent pixels).",3,N],[13,"Add","","Additive blending.",3,N],[13,"Multiply","","Multiply color components.",3,N],[13,"Invert","","Invert colors when rendering a white shape.",3,N],[4,"Stencil","","Stencil buffer settings.",N,N],[13,"Clip","","Draw to stencil buffer.",4,N],[13,"Inside","","Draw pixels that have stencil value.",4,N],[13,"Outside","","Draw pixels that does not have stencil value.",4,N],[11,"clone","","",2,[[["self"]],["drawstate"]]],[11,"eq","","",2,[[["self"],["drawstate"]],["bool"]]],[11,"ne","","",2,[[["self"],["drawstate"]],["bool"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"partial_cmp","","",2,[[["self"],["drawstate"]],["option",["ordering"]]]],[11,"lt","","",2,[[["self"],["drawstate"]],["bool"]]],[11,"le","","",2,[[["self"],["drawstate"]],["bool"]]],[11,"gt","","",2,[[["self"],["drawstate"]],["bool"]]],[11,"ge","","",2,[[["self"],["drawstate"]],["bool"]]],[11,"default","","",2,[[],["self"]]],[11,"new_alpha","","Uses alpha blending.",2,[[],["drawstate"]]],[11,"new_clip","","Draws to stencil buffer with value 255. This can be used for clipping.",2,[[],["drawstate"]]],[11,"new_inside","","Tests against stencil buffer with value 255. Draws inside the shape defined by stencil buffer.",2,[[],["drawstate"]]],[11,"new_outside","","Tests against stencil buffer with value 255. Draws outside the shape defined by stencil buffer.",2,[[],["drawstate"]]],[11,"blend","","Sets blending.",2,[[["self"],["blend"]],["drawstate"]]],[11,"scissor","","Sets scissor `[x, y, w, h]`.",2,N],[11,"clone","","",3,[[["self"]],["blend"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"eq","","",3,[[["self"],["blend"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["blend"]],["option",["ordering"]]]],[11,"clone","","",4,[[["self"]],["stencil"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"eq","","",4,[[["self"],["stencil"]],["bool"]]],[11,"ne","","",4,[[["self"],["stencil"]],["bool"]]],[11,"partial_cmp","","",4,[[["self"],["stencil"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["stencil"]],["bool"]]],[11,"le","","",4,[[["self"],["stencil"]],["bool"]]],[11,"gt","","",4,[[["self"],["stencil"]],["bool"]]],[11,"ge","","",4,[[["self"],["stencil"]],["bool"]]],[0,"character","graphics","A text character",N,N],[3,"Character","graphics::character","Holds rendered character data.",N,N],[12,"offset","","The offset of character.",5,N],[12,"size","","The size of character, including space.",5,N],[12,"texture","","The texture of the character.",5,N],[8,"CharacterCache","","Stores characters in a buffer and loads them by demand.",N,N],[16,"Texture","","The texture type associated with the character cache.",6,N],[16,"Error","","The error type associated with the character cache.",6,N],[10,"character","","Get reference to character.",6,[[["self"],["fontsize"],["char"]],["result",["character"]]]],[11,"width","","Return the width for some given text.",6,[[["self"],["fontsize"],["str"]],["result",["scalar"]]]],[11,"clone","","",5,[[["self"]],["character"]]],[11,"left","","The left offset.",5,[[["self"]],["scalar"]]],[11,"top","","The top offset.",5,[[["self"]],["scalar"]]],[11,"width","","Gets width of character, including space to the next one.",5,[[["self"]],["scalar"]]],[11,"height","","Sets height of character, including space to the next one.",5,[[["self"]],["scalar"]]],[0,"context","graphics","Transformation context",N,N],[3,"Context","graphics::context","Drawing 2d context.",N,N],[12,"viewport","","Viewport information.",7,N],[12,"view","","View transformation.",7,N],[12,"transform","","Current transformation.",7,N],[12,"draw_state","","Current draw state settings.",7,N],[11,"clone","","",7,[[["self"]],["context"]]],[11,"new","","Creates a new drawing context.",7,[[],["context"]]],[11,"new_viewport","","Creates a new context with absolute transform in point coordinates.",7,[[["viewport"]],["context"]]],[11,"new_abs","","Creates a new drawing context in absolute coordinates.",7,[[["scalar"],["scalar"]],["context"]]],[11,"view","","Moves the current transform to the view coordinate system.",7,[[["self"]],["self"]]],[11,"reset","","Moves the current transform to the default coordinate system.",7,[[["self"]],["self"]]],[11,"store_view","","Stores the current transform as new view.",7,[[["self"]],["self"]]],[11,"get_view_size","","Computes the current view size.",7,[[["self"]],["vec2d"]]],[0,"color","graphics","Helper methods for colors",N,N],[5,"grey","graphics::color","Returns a grey color",N,[[["colorcomponent"]],["color"]]],[5,"alpha","","Returns a semi-transparent white color",N,[[["colorcomponent"]],["color"]]],[5,"hex","","Converts from hexadecimal color format",N,[[["str"]],["color"]]],[5,"gamma_srgb_to_linear","","Converts gamma (brightness) from sRGB to linear color space.",N,[[["color"]],["color"]]],[5,"gamma_linear_to_srgb","","Converts gamma (brightness) of a color from linear color space to sRGB.",N,[[["color"]],["color"]]],[17,"WHITE","","White color.",N,N],[17,"BLACK","","Black color.",N,N],[17,"TRANSPARENT","","Transparent color.",N,N],[0,"polygon","graphics","Draw polygon",N,N],[3,"Polygon","graphics::polygon","A polygon",N,N],[12,"color","","The color of the polygon",8,N],[11,"clone","","",8,[[["self"]],["polygon"]]],[11,"new","","Creates new polygon",8,[[["color"]],["polygon"]]],[11,"color","","Sets color.",8,[[["self"],["color"]],["self"]]],[11,"draw","","Draws polygon using the default method.",8,[[["self"],["polygon"],["drawstate"],["matrix2d"],["g"]]]],[11,"draw_tri","","Draws polygon using triangulation.",8,[[["self"],["polygon"],["drawstate"],["matrix2d"],["g"]]]],[11,"draw_tween_lerp","","Draws tweened polygon with linear interpolation, using default method.",8,[[["self"],["polygons"],["scalar"],["drawstate"],["matrix2d"],["g"]]]],[11,"draw_tween_lerp_tri","","Draws tweened polygon with linear interpolation, using triangulation.",8,[[["self"],["polygons"],["scalar"],["drawstate"],["matrix2d"],["g"]]]],[0,"line","graphics","Draw Line",N,N],[3,"Line","graphics::line","A colored line with a default border radius",N,N],[12,"color","","The line color",9,N],[12,"radius","","The line radius",9,N],[12,"shape","","The line shape",9,N],[4,"Shape","","The shape of the line",N,N],[13,"Square","","Square edges",10,N],[13,"Round","","Round edges",10,N],[13,"Bevel","","Bevel edges",10,N],[11,"clone","","",10,[[["self"]],["shape"]]],[11,"clone","","",9,[[["self"]],["line"]]],[11,"new","","Creates a new line",9,[[["color"],["radius"]],["line"]]],[11,"new_round","","Creates a new line",9,[[["color"],["radius"]],["line"]]],[11,"color","","Sets color.",9,[[["self"],["color"]],["self"]]],[11,"radius","","Sets radius.",9,[[["self"],["radius"]],["self"]]],[11,"width","","Sets width.",9,[[["self"],["width"]],["self"]]],[11,"shape","","Sets shape.",9,[[["self"],["shape"]],["self"]]],[11,"draw","","Draws line using default method.",9,[[["self"],["l"],["drawstate"],["matrix2d"],["g"]]]],[11,"draw_tri","","Draws line using triangulation.",9,[[["self"],["l"],["drawstate"],["matrix2d"],["g"]]]],[11,"draw_arrow","","Draws an arrow",9,[[["self"],["l"],["scalar"],["drawstate"],["matrix2d"],["g"]]]],[0,"circle_arc","graphics","Draw an arc",N,N],[3,"CircleArc","graphics::circle_arc","A curved line",N,N],[12,"color","","The arcs color",11,N],[12,"radius","","The radius of the arc (Thickness of the drawing, not the radius of the circle)",11,N],[12,"start","","The start of the arc in radians",11,N],[12,"end","","The end of the arc in radians",11,N],[12,"resolution","","The resolution for the arc.",11,N],[11,"clone","","",11,[[["self"]],["circlearc"]]],[11,"new","","Creates a new arc",11,[[["color"],["radius"],["scalar"],["scalar"]],["circlearc"]]],[11,"color","","Sets the arcs color.",11,[[["self"],["color"]],["self"]]],[11,"radius","","Sets the radius of the arc (Thickness of the arc, not the radius of the circle it wraps)",11,[[["self"],["radius"]],["self"]]],[11,"start","","Sets the start of the arc (in radians).",11,[[["self"],["scalar"]],["self"]]],[11,"end","","Sets the end of the arc (in radians).",11,[[["self"],["scalar"]],["self"]]],[11,"resolution","","Sets the resolution of the arcs smoothness.",11,[[["self"],["resolution"]],["self"]]],[11,"draw","","Draws circle arc using default method.",11,[[["self"],["r"],["drawstate"],["matrix2d"],["g"]]]],[11,"draw_tri","","Draws circle arc using triangulation.",11,[[["self"],["r"],["drawstate"],["matrix2d"],["g"]]]],[0,"ellipse","graphics","Draw ellipse",N,N],[3,"Border","graphics::ellipse","Ellipse border",N,N],[12,"color","","The border color",12,N],[12,"radius","","The border radius",12,N],[3,"Ellipse","","An ellipse with filled color",N,N],[12,"color","","The ellipse color",13,N],[12,"border","","The ellipse border",13,N],[12,"resolution","","The resolution for the shape, 360 degrees.",13,N],[11,"clone","","",12,[[["self"]],["border"]]],[11,"clone","","",13,[[["self"]],["ellipse"]]],[11,"new","","Creates a new ellipse",13,[[["color"]],["ellipse"]]],[11,"new_border","","Creates a new ellipse border",13,[[["color"],["radius"]],["ellipse"]]],[11,"color","","Sets ellipse color.",13,[[["self"],["color"]],["self"]]],[11,"border","","Sets ellipse border.",13,[[["self"],["border"]],["self"]]],[11,"maybe_border","","Sets optional ellipse border.",13,[[["self"],["option",["border"]]],["self"]]],[11,"resolution","","Sets resolution of the ellipse smoothness.",13,[[["self"],["resolution"]],["self"]]],[11,"draw","","Draws ellipse using default method.",13,[[["self"],["r"],["drawstate"],["matrix2d"],["g"]]]],[11,"draw_tri","","Draws ellipse using triangulation.",13,[[["self"],["r"],["drawstate"],["matrix2d"],["g"]]]],[0,"rectangle","graphics","Draw rectangle",N,N],[3,"Border","graphics::rectangle","The border of the rectangle",N,N],[12,"color","","The color of the border",14,N],[12,"radius","","The radius of the border. The half-width of the line by which border is drawn.",14,N],[3,"Rectangle","","A filled rectangle",N,N],[12,"color","","The rectangle color",15,N],[12,"shape","","The roundness of the rectangle",15,N],[12,"border","","The border",15,N],[4,"Shape","","The shape of the rectangle corners",N,N],[13,"Square","","Square corners",16,N],[13,"Round","","Round corners, with resolution per corner.",16,N],[13,"Bevel","","Bevel corners",16,N],[5,"rectangle_by_corners","","Create `types::Rectangle` by the two opposite corners.",N,[[["scalar"],["scalar"],["scalar"],["scalar"]],["rectangle"]]],[5,"centered","","Use x, y, half-width, half-height",N,[[["rectangle"]],["rectangle"]]],[5,"centered_square","","Create `types::Rectangle` for a square with a center in (`x`, `y`) and side `2 * radius`.",N,[[["scalar"],["scalar"],["scalar"]],["rectangle"]]],[5,"square","","Create `types::Rectangle` for a square with a top-left corner in (`x`, `y`) and side `size`.",N,[[["scalar"],["scalar"],["scalar"]],["rectangle"]]],[11,"clone","","",16,[[["self"]],["shape"]]],[11,"clone","","",14,[[["self"]],["border"]]],[11,"clone","","",15,[[["self"]],["rectangle"]]],[11,"new","","Creates a new rectangle.",15,[[["color"]],["rectangle"]]],[11,"new_round","","Creates a new rectangle with rounded corners.",15,[[["color"],["radius"]],["rectangle"]]],[11,"new_border","","Creates a new rectangle border.",15,[[["color"],["radius"]],["rectangle"]]],[11,"new_round_border","","Creates a new rectangle border with rounded corners.",15,[[["color"],["radius"],["radius"]],["rectangle"]]],[11,"color","","Sets color.",15,[[["self"],["color"]],["self"]]],[11,"shape","","Sets shape of the corners.",15,[[["self"],["shape"]],["self"]]],[11,"border","","Sets border properties.",15,[[["self"],["border"]],["self"]]],[11,"maybe_border","","Sets optional border.",15,[[["self"],["option",["border"]]],["self"]]],[11,"draw","","Draws the rectangle using the default method.",15,[[["self"],["r"],["drawstate"],["matrix2d"],["g"]]]],[11,"draw_tri","","Draws the rectangle using triangulation.",15,[[["self"],["r"],["drawstate"],["matrix2d"],["g"]]]],[0,"image","graphics","Draw an image",N,N],[3,"Image","graphics::image","An image",N,N],[12,"color","","The color",17,N],[12,"rectangle","","The rectangle to draw image inside",17,N],[12,"source_rectangle","","The image source rectangle",17,N],[5,"draw_many","","Draws many images.",N,N],[11,"clone","","",17,[[["self"]],["image"]]],[11,"new","","Creates a new image",17,[[],["image"]]],[11,"new_color","","Creates a new colored image",17,[[["color"]],["image"]]],[11,"color","","Sets color.",17,[[["self"],["color"]],["self"]]],[11,"maybe_color","","Sets optional color.",17,[[["self"],["option",["color"]]],["self"]]],[11,"rect","","Sets rectangle.",17,[[["self"],["r"]],["self"]]],[11,"maybe_rect","","Sets optional rectangle.",17,[[["self"],["option"]],["self"]]],[11,"src_rect","","Sets source rectangle.",17,[[["self"],["sourcerectangle"]],["self"]]],[11,"maybe_src_rect","","Sets optional source rectangle.",17,[[["self"],["option",["sourcerectangle"]]],["self"]]],[11,"draw","","Draws image using default method.",17,N],[11,"draw_tri","","Draws image using triangulation.",17,N],[0,"types","graphics","Contains type aliases used in this library",N,N],[6,"Area","graphics::types","The type used for area.",N,N],[6,"Color","","[red, green, blue, alpha]",N,N],[6,"ColorComponent","","The type used for color component.",N,N],[6,"Line","","[x1, y1, x2, y2]",N,N],[6,"SourceRectangle","","[x, y, w, h]",N,N],[6,"Polygon","","[p0, p1, ...]",N,N],[6,"Polygons","","A slice of polygons.",N,N],[6,"Radius","","The type used for radius.",N,N],[6,"Resolution","","The type used for resolution.",N,N],[6,"Ray","","[x, y, dir_x, dir_y]",N,N],[6,"Rectangle","","Rectangle dimensions: [x, y, w, h]",N,N],[6,"Triangle","","[x1, y1, x2, y2, x3, y3]",N,N],[6,"Width","","The type used for width.",N,N],[6,"FontSize","","The type used for font size.",N,N],[0,"modular_index","graphics","Helper functions for computing modular index safely.",N,N],[5,"offset","graphics::modular_index","Computes modular offset safely for indices.",N,[[["usize"],["usize"],["isize"]],["usize"]]],[5,"previous","","Computes previous modular index safely.",N,[[["usize"],["usize"]],["usize"]]],[5,"next","","Computes next modular index safely.",N,[[["usize"],["usize"]],["usize"]]],[0,"text","graphics","Draw text",N,N],[3,"Text","graphics::text","Renders text",N,N],[12,"color","","The color",18,N],[12,"font_size","","The font size",18,N],[12,"round","","Whether or not the text's position should be rounded (to a signed distance field).",18,N],[11,"clone","","",18,[[["self"]],["text"]]],[11,"new","","Creates a new text with black color",18,[[["fontsize"]],["text"]]],[11,"new_color","","Creates a new colored text",18,[[["color"],["fontsize"]],["text"]]],[11,"round","","A builder method indicating that the Text's position should be rounded upon drawing.",18,[[["self"]],["text"]]],[11,"draw","","Draws text with a character cache",18,[[["self"],["str"],["c"],["drawstate"],["matrix2d"],["g"]],["result"]]],[0,"triangulation","graphics","Methods for converting shapes into triangles.",N,N],[5,"tx","graphics::triangulation","Transformed x coordinate as f32.",N,[[["matrix2d"],["scalar"],["scalar"]],["f32"]]],[5,"ty","","Transformed y coordinate as f32.",N,[[["matrix2d"],["scalar"],["scalar"]],["f32"]]],[5,"with_lerp_polygons_tri_list","","Streams tweened polygons using linear interpolation.",N,[[["matrix2d"],["polygons"],["scalar"],["f"]]]],[5,"with_ellipse_tri_list","","Streams an ellipse specified by a resolution.",N,[[["resolution"],["matrix2d"],["rectangle"],["f"]]]],[5,"with_round_border_line_tri_list","","Streams a round border line.",N,[[["resolution"],["matrix2d"],["line"],["radius"],["f"]]]],[5,"with_round_rectangle_tri_list","","Streams a round rectangle.",N,[[["resolution"],["matrix2d"],["rectangle"],["radius"],["f"]]]],[5,"stream_polygon_tri_list","","Streams a polygon into tri list. Uses buffers that fit inside L1 cache.",N,[[["matrix2d"],["e"],["f"]]]],[5,"with_ellipse_border_tri_list","","Streams an ellipse border specified by a resolution.",N,[[["resolution"],["matrix2d"],["rectangle"],["radius"],["f"]]]],[5,"with_arc_tri_list","","Streams an arc between the two radian boundaries.",N,[[["scalar"],["scalar"],["resolution"],["matrix2d"],["rectangle"],["radius"],["f"]]]],[5,"with_round_rectangle_border_tri_list","","Streams a round rectangle border.",N,[[["resolution"],["matrix2d"],["rectangle"],["radius"],["radius"],["f"]]]],[5,"stream_quad_tri_list","","Streams a quad into tri list.",N,[[["matrix2d"],["e"],["f"]]]],[5,"with_polygon_tri_list","","Splits polygon into convex segments. Create a buffer that fits into L1 cache with 1KB overhead.",N,[[["matrix2d"],["polygon"],["f"]]]],[5,"rect_tri_list_xy","","Creates triangle list vertices from rectangle.",N,N],[5,"rect_border_tri_list_xy","","Creates triangle list vertices from rectangle.",N,N],[5,"rect_tri_list_uv","","Creates triangle list texture coords from image.",N,N],[0,"math","graphics","Various methods for computing with vectors.",N,N],[5,"multiply","graphics::math","Multiplies two matrices.",N,N],[5,"dot","","Computes the dot product.",N,N],[5,"cross","","Computes the cross product.",N,N],[5,"add","","Adds two vectors.",N,N],[5,"sub","","Subtracts 'b' from 'a'.",N,N],[5,"cast","","Converts to another vector type.",N,N],[5,"mul","","Multiplies two vectors component wise.",N,N],[5,"mul_scalar","","Multiplies the vector with a scalar.",N,N],[5,"square_len","","Computes the square length of a vector.",N,N],[5,"transform_pos","","Transforms a 2D position through matrix.",N,N],[5,"transform_vec","","Transforms a 2D vector through matrix.",N,N],[5,"perp","","Creates a perpendicular vector.",N,N],[5,"abs_transform","","Transforms from normalized to absolute coordinates.",N,[[["t"],["t"]],["matrix2d"]]],[5,"translate","","Creates a translation matrix.",N,[[["vec2d"]],["matrix2d"]]],[5,"rotate_radians","","Creates a rotation matrix.",N,[[["t"]],["matrix2d"]]],[5,"orient","","Orients x axis to look at point.",N,[[["t"],["t"]],["matrix2d"]]],[5,"scale","","Create a scale matrix.",N,[[["t"],["t"]],["matrix2d"]]],[5,"shear","","Create a shear matrix.",N,[[["vec2d"]],["matrix2d"]]],[5,"identity","","Create an identity matrix.",N,[[],["matrix2d"]]],[5,"get_scale","","Extract scale information from matrix.",N,[[["matrix2d"]],["vec2d"]]],[5,"separation","","Compute the shortest vector from point to ray. A ray stores starting point and directional vector.",N,[[["ray"],["vec2d"]],["vec2d"]]],[5,"least_separation_4","","Returns the least separation out of four. Each seperation can be computed using `separation` function. The separation returned can be used to solve collision of rectangles.",N,[[["vec2d"],["vec2d"],["vec2d"],["vec2d"]],["vec2d"]]],[5,"margin_rectangle","","Shrinks a rectangle by a factor on all sides.",N,[[["rectangle"],["t"]],["rectangle"]]],[5,"relative_rectangle","","Computes a relative rectangle using the rectangle as a tile.",N,[[["rectangle"],["vec2d"]],["rectangle"]]],[5,"overlap_rectangle","","Computes overlap between two rectangles. The area of the overlapping rectangle is positive. A shared edge or corner is not considered overlap.",N,[[["rectangle"],["rectangle"]],["option",["rectangle"]]]],[5,"relative_source_rectangle","","Computes a relative source rectangle using the source rectangle as a tile.",N,[[["sourcerectangle"],["t"],["t"]],["sourcerectangle"]]],[5,"modular_offset","","Computes modular offset safely for numbers.",N,[[["t"],["t"],["t"]],["t"]]],[5,"area_centroid","","Computes the area and centroid of a simple polygon.",N,N],[5,"area","","Computes area of a simple polygon.",N,[[["polygon"]],["t"]]],[5,"centroid","","Computes centroid of a simple polygon.",N,[[["polygon"]],["vec2d"]]],[5,"line_side","","Returns a number that tells which side it is relative to a line.",N,[[["line"],["vec2d"]],["t"]]],[5,"inside_triangle","","Returns true if point is inside triangle.",N,[[["triangle"],["vec2d"]],["bool"]]],[5,"triangle_face","","Returns true if triangle is clockwise.",N,[[["triangle"]],["bool"]]],[5,"to_barycentric","","Transforms from cartesian coordinates to barycentric.",N,[[["triangle"],["vec2d"]],["vec3d"]]],[5,"from_barycentric","","Transforms from barycentric coordinates to cartesian.",N,[[["triangle"],["vec3d"]],["vec2d"]]],[5,"hsv","","Transform color with hue, saturation and value.",N,[[["color"],["f32"],["f32"],["f32"]],["color"]]],[6,"Scalar","","The type used for scalars.",N,N],[6,"Matrix2d","","The type used for matrices.",N,N],[6,"Vec2d","","The type used for 2D vectors.",N,N],[6,"Vec3d","","The type used for 3D vectors.",N,N],[0,"deform","graphics","Least square deforming of a 2D grid.",N,N],[3,"DeformGrid","graphics::deform","Represents a deformed grid.",N,N],[12,"cols","","The number of columns in the grid.",19,N],[12,"rows","","The number of rows in the grid.",19,N],[12,"rect","","The grid undeformed, which is a plain rectangle.",19,N],[12,"vertices","","The vertices, deformed.",19,N],[12,"indices","","The triangle indices.",19,N],[12,"texture_coords","","The texture coordinates.",19,N],[12,"ps","","Initial position of control points.",19,N],[12,"qs","","The current position of control points.",19,N],[12,"wis","","A weight computation buffer, one for each control point.",19,N],[11,"clone","","",19,[[["self"]],["deformgrid"]]],[11,"new","","Creates a new DeformGrid.",19,[[["rectangle"],["usize"],["usize"]],["deformgrid"]]],[11,"set_current","","Sets current control position.",19,[[["self"],["usize"],["vec2d"]]]],[11,"set_original","","Sets original control position.",19,[[["self"],["usize"],["vec2d"]]]],[11,"reset_control_points","","Removes all control points.",19,[[["self"]]]],[11,"reset_vertices_and_texture_coords","","Sets vertices and texture coords back to default.",19,[[["self"]]]],[11,"hit","","Finds original coordinate. If the deformed grid is overlapping itself, multiple hits might occur. Returns the first hit it finds.",19,[[["self"],["vec2d"]],["option",["vec2d"]]]],[11,"draw_image","","Draws deformed image using default method.",19,N],[11,"draw_image_tri","","Draws deformed image using triangulation.",19,N],[11,"add_control_point","","Adds a control point, in original coordinates.",19,[[["self"],["vec2d"]]]],[11,"draw_vertical_lines","","Draw vertical grid lines.",19,[[["self"],["line"],["drawstate"],["matrix2d"],["g"]]]],[11,"draw_horizontal_lines","","Draw horizontal grid lines.",19,[[["self"],["line"],["drawstate"],["matrix2d"],["g"]]]],[11,"update","","Updates the grid, by deforming the vertices.",19,[[["self"]]]],[0,"grid","graphics","A flat grid with square cells.",N,N],[3,"Grid","graphics::grid","Represents a flat grid with square cells.",N,N],[12,"cols","","Number of columns.",20,N],[12,"rows","","Number of rows.",20,N],[12,"units","","The width and height of each grid cell.",20,N],[3,"GridCells","","Iterates through the cells of a grid as (u32, u32).",N,N],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"clone","","",20,[[["self"]],["grid"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"clone","","",21,[[["self"]],["gridcells"]]],[11,"draw","","Draws the grid.",20,[[["self"],["line"],["drawstate"],["matrix2d"],["g"]]]],[11,"cells","","Get a GridIterator for the grid",20,[[["self"]],["gridcells"]]],[11,"cell_position","","Get on-screen position of a grid cell",20,N],[11,"x_pos","","Get on-screen x position of a grid cell",20,N],[11,"y_pos","","Get on-screen y position of a grid cell",20,N],[11,"next","","",21,[[["self"]],["option"]]],[0,"glyph_cache","graphics","Implementations of the `CharacterCache` trait.",N,N],[0,"rusttype","graphics::glyph_cache","Glyph caching using the RustType library.",N,N],[3,"GlyphCache","graphics::glyph_cache::rusttype","A struct used for caching rendered font.",N,N],[12,"font","","The font.",22,N],[12,"factory","","The factory used to create textures.",22,N],[11,"from_font","","Constructs a GlyphCache from a Font.",22,[[["font"],["f"],["texturesettings"]],["self"]]],[11,"new","","Constructor for a GlyphCache.",22,[[["p"],["f"],["texturesettings"]],["result",["glyphcache"]]]],[11,"from_bytes","","Creates a GlyphCache for a font stored in memory.",22,N],[11,"preload_chars","","Load all characters in the `chars` iterator for `size`",22,[[["self"],["fontsize"],["i"]],["result"]]],[11,"preload_printable_ascii","","Load all the printable ASCII characters for `size`. Includes space.",22,[[["self"],["fontsize"]],["result"]]],[11,"opt_character","","Return `ch` for `size` if it's already cached. Don't load. See the `preload_*` functions.",22,[[["self"],["fontsize"],["char"]],["option",["character"]]]],[11,"character","","",22,[[["self"],["fontsize"],["char"]],["result",["character"]]]],[0,"radians","graphics","Reexport radians helper trait from vecmath",N,N],[8,"Radians","graphics::radians","Useful constants for radians.",N,N],[10,"_90","","Returns radians corresponding to 90 degrees.",23,[[],["self"]]],[10,"_180","","Returns radians corresponding to 180 degrees.",23,[[],["self"]]],[10,"_360","","Returns radians corresponding to 360 degrees.",23,[[],["self"]]],[10,"deg_to_rad","","Convert a value to radians from degrees. Equivalent to `value * (π / 180)`.",23,[[["self"]],["self"]]],[10,"rad_to_deg","","Convert a value to degrees from radians. Equivalent to `value * (180 / π)`.",23,[[["self"]],["self"]]],[17,"BACK_END_MAX_VERTEX_COUNT","graphics","Any triangulation method called on the back-end never exceeds this number of vertices. This can be used to initialize buffers that fit the chunk size.",N,N],[8,"Graphics","","Implemented by all graphics back-ends.",N,N],[16,"Texture","","The texture type associated with the back-end.",24,N],[10,"clear_color","","Clears background with a color.",24,[[["self"],["color"]]]],[10,"clear_stencil","","Clears stencil buffer with a value, usually 0.",24,[[["self"],["u8"]]]],[10,"tri_list","","Renders list of 2d triangles using a solid color.",24,N],[10,"tri_list_uv","","Renders list of 2d triangles using a color and a texture.",24,N],[11,"rectangle","","Draws a rectangle.",24,[[["self"],["rectangle"],["r"],["drawstate"],["matrix2d"]]]],[11,"polygon","","Draws a polygon.",24,[[["self"],["polygon"],["polygon"],["drawstate"],["matrix2d"]]]],[11,"polygon_tween_lerp","","Draws a tweened polygon using linear interpolation.",24,[[["self"],["polygon"],["polygons"],["scalar"],["drawstate"],["matrix2d"]]]],[11,"image","","Draws image.",24,N],[11,"ellipse","","Draws ellipse.",24,[[["self"],["ellipse"],["r"],["drawstate"],["matrix2d"]]]],[11,"line","","Draws line.",24,[[["self"],["line"],["l"],["drawstate"],["matrix2d"]]]],[11,"circle_arc","","Draws circle arc.",24,[[["self"],["circlearc"],["r"],["drawstate"],["matrix2d"]]]],[11,"deform_image","","Draws deformed image.",24,N],[8,"SourceRectangled","","Should be implemented by contexts that have source rectangle information.",N,N],[10,"src_rect","","Adds a source rectangle.",25,[[["self"],["scalar"],["scalar"],["scalar"],["scalar"]],["self"]]],[10,"src_rel","","Moves to a relative source rectangle using the current source rectangle as tile.",25,[[["self"],["scalar"],["scalar"]],["self"]]],[10,"src_flip_h","","Flips the source rectangle horizontally.",25,[[["self"]],["self"]]],[10,"src_flip_v","","Flips the source rectangle vertically.",25,[[["self"]],["self"]]],[10,"src_flip_hv","","Flips the source rectangle horizontally and vertically.",25,[[["self"]],["self"]]],[8,"Rectangled","","Should be implemented by contexts that have rectangle information.",N,N],[10,"margin","","Shrinks the current rectangle equally by all sides.",26,[[["self"],["scalar"]],["self"]]],[11,"expand","","Expands the current rectangle equally by all sides.",26,[[["self"],["scalar"]],["self"]]],[10,"rel","","Moves to a relative rectangle using the current rectangle as tile.",26,[[["self"],["scalar"],["scalar"]],["self"]]],[8,"Transformed","","Implemented by contexts that can transform.",N,N],[10,"append_transform","","Appends transform to the current one.",27,[[["self"],["matrix2d"]],["self"]]],[10,"prepend_transform","","Prepends transform to the current one.",27,[[["self"],["matrix2d"]],["self"]]],[10,"trans","","Translate x and y in local coordinates.",27,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"rot_deg","","Rotates degrees in local coordinates.",27,[[["self"],["scalar"]],["self"]]],[10,"rot_rad","","Rotate radians in local coordinates.",27,[[["self"],["scalar"]],["self"]]],[10,"orient","","Orients x axis to look at point locally.",27,[[["self"],["scalar"],["scalar"]],["self"]]],[10,"scale","","Scales in local coordinates.",27,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"zoom","","Scales in both directions in local coordinates.",27,[[["self"],["scalar"]],["self"]]],[11,"flip_v","","Flips vertically in local coordinates.",27,[[["self"]],["self"]]],[11,"flip_h","","Flips horizontally in local coordinates.",27,[[["self"]],["self"]]],[11,"flip_hv","","Flips horizontally and vertically in local coordinates.",27,[[["self"]],["self"]]],[10,"shear","","Shears in local coordinates.",27,[[["self"],["vec2d"]],["self"]]],[8,"Colored","","Implemented by contexts that contains color.",N,N],[10,"mul_rgba","","Multiplies with red, green, blue and alpha values.",28,[[["self"],["colorcomponent"],["colorcomponent"],["colorcomponent"],["colorcomponent"]],["self"]]],[11,"tint","","Mixes the current color with white.",28,[[["self"],["colorcomponent"]],["self"]]],[11,"shade","","Mixes the current color with black.",28,[[["self"],["colorcomponent"]],["self"]]],[11,"hue_deg","","Rotates hue by degrees.",28,[[["self"],["colorcomponent"]],["self"]]],[10,"hue_rad","","Rotates hue by radians.",28,[[["self"],["colorcomponent"]],["self"]]],[11,"clone","","",1,[[["self"]],["viewport"]]],[11,"abs_transform","","Computes absolute transform for 2D graphics, which uses a row major 2x3 matrix. The origin is in the upper left corner of the viewport rectangle. The x axis points to the right, and the y axis points down. The units are in points (window coordinates).",1,N],[11,"rectangle","","Draws a rectangle.",24,[[["self"],["rectangle"],["r"],["drawstate"],["matrix2d"]]]],[11,"polygon","","Draws a polygon.",24,[[["self"],["polygon"],["polygon"],["drawstate"],["matrix2d"]]]],[11,"polygon_tween_lerp","","Draws a tweened polygon using linear interpolation.",24,[[["self"],["polygon"],["polygons"],["scalar"],["drawstate"],["matrix2d"]]]],[11,"image","","Draws image.",24,N],[11,"ellipse","","Draws ellipse.",24,[[["self"],["ellipse"],["r"],["drawstate"],["matrix2d"]]]],[11,"line","","Draws line.",24,[[["self"],["line"],["l"],["drawstate"],["matrix2d"]]]],[11,"circle_arc","","Draws circle arc.",24,[[["self"],["circlearc"],["r"],["drawstate"],["matrix2d"]]]],[11,"deform_image","","Draws deformed image.",24,N],[11,"src_rect","graphics::types","",29,[[["self"],["scalar"],["scalar"],["scalar"],["scalar"]],["self"]]],[11,"src_rel","","",29,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"src_flip_h","","",29,[[["self"]],["self"]]],[11,"src_flip_v","","",29,[[["self"]],["self"]]],[11,"src_flip_hv","","",29,[[["self"]],["self"]]],[11,"expand","graphics","Expands the current rectangle equally by all sides.",26,[[["self"],["scalar"]],["self"]]],[11,"margin","graphics::types","",30,[[["self"],["scalar"]],["self"]]],[11,"rel","","",30,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"rot_deg","graphics","Rotates degrees in local coordinates.",27,[[["self"],["scalar"]],["self"]]],[11,"zoom","","Scales in both directions in local coordinates.",27,[[["self"],["scalar"]],["self"]]],[11,"flip_v","","Flips vertically in local coordinates.",27,[[["self"]],["self"]]],[11,"flip_h","","Flips horizontally in local coordinates.",27,[[["self"]],["self"]]],[11,"flip_hv","","Flips horizontally and vertically in local coordinates.",27,[[["self"]],["self"]]],[11,"append_transform","graphics::math","",31,[[["self"],["matrix2d"]],["self"]]],[11,"prepend_transform","","",31,[[["self"],["matrix2d"]],["self"]]],[11,"trans","","",31,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"rot_rad","","",31,[[["self"],["scalar"]],["self"]]],[11,"orient","","",31,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"scale","","",31,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"shear","","",31,[[["self"],["vec2d"]],["self"]]],[11,"append_transform","graphics::context","",7,[[["self"],["matrix2d"]],["self"]]],[11,"prepend_transform","","",7,[[["self"],["matrix2d"]],["self"]]],[11,"trans","","",7,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"rot_rad","","",7,[[["self"],["scalar"]],["self"]]],[11,"orient","","",7,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"scale","","",7,[[["self"],["scalar"],["scalar"]],["self"]]],[11,"shear","","",7,[[["self"],["vec2d"]],["self"]]],[11,"tint","graphics","Mixes the current color with white.",28,[[["self"],["colorcomponent"]],["self"]]],[11,"shade","","Mixes the current color with black.",28,[[["self"],["colorcomponent"]],["self"]]],[11,"hue_deg","","Rotates hue by degrees.",28,[[["self"],["colorcomponent"]],["self"]]],[11,"mul_rgba","graphics::types","",32,[[["self"],["colorcomponent"],["colorcomponent"],["colorcomponent"],["colorcomponent"]],["self"]]],[11,"hue_rad","","",32,[[["self"],["colorcomponent"]],["self"]]],[11,"mul_rgba","graphics::line","",9,[[["self"],["colorcomponent"],["colorcomponent"],["colorcomponent"],["colorcomponent"]],["self"]]],[11,"hue_rad","","",9,[[["self"],["colorcomponent"]],["self"]]],[11,"mul_rgba","graphics::ellipse","",13,[[["self"],["colorcomponent"],["colorcomponent"],["colorcomponent"],["colorcomponent"]],["self"]]],[11,"hue_rad","","",13,[[["self"],["colorcomponent"]],["self"]]],[11,"mul_rgba","graphics::rectangle","",15,[[["self"],["colorcomponent"],["colorcomponent"],["colorcomponent"],["colorcomponent"]],["self"]]],[11,"hue_rad","","",15,[[["self"],["colorcomponent"]],["self"]]]],"paths":[[8,"ImageSize"],[3,"Viewport"],[3,"DrawState"],[4,"Blend"],[4,"Stencil"],[3,"Character"],[8,"CharacterCache"],[3,"Context"],[3,"Polygon"],[3,"Line"],[4,"Shape"],[3,"CircleArc"],[3,"Border"],[3,"Ellipse"],[3,"Border"],[3,"Rectangle"],[4,"Shape"],[3,"Image"],[3,"Text"],[3,"DeformGrid"],[3,"Grid"],[3,"GridCells"],[3,"GlyphCache"],[8,"Radians"],[8,"Graphics"],[8,"SourceRectangled"],[8,"Rectangled"],[8,"Transformed"],[8,"Colored"],[6,"SourceRectangle"],[6,"Rectangle"],[6,"Matrix2d"],[6,"Color"]]};
searchIndex["image"]={"doc":"This crate provides native rust implementations of image encoders and decoders and basic image manipulation functions.","items":[[3,"Luma","image","Grayscale colors",N,N],[12,"data","","",0,N],[3,"LumaA","","Grayscale colors + alpha channel",N,N],[12,"data","","",1,N],[3,"Rgb","","RGB colors",N,N],[12,"data","","",2,N],[3,"Rgba","","RGB colors + alpha channel",N,N],[12,"data","","",3,N],[3,"Bgr","","BGR colors",N,N],[12,"data","","",4,N],[3,"Bgra","","BGR colors + alpha channel",N,N],[12,"data","","",5,N],[3,"MutPixels","","Mutable pixel iterator",N,N],[3,"Pixels","","Immutable pixel iterator",N,N],[3,"SubImage","","A View into another image",N,N],[3,"ImageBuffer","","Generic image buffer",N,N],[3,"Frame","","A single animation frame",N,N],[3,"Frames","","Holds the frames of the animated image",N,N],[4,"ColorType","","An enumeration over supported color types and their bit depths",N,N],[13,"Gray","","Pixel is grayscale",6,N],[13,"RGB","","Pixel contains R, G and B channels",6,N],[13,"Palette","","Pixel is an index into a color palette",6,N],[13,"GrayA","","Pixel is grayscale with an alpha channel",6,N],[13,"RGBA","","Pixel is RGB with an alpha channel",6,N],[13,"BGR","","Pixel contains B, G and R channels",6,N],[13,"BGRA","","Pixel is BGR with an alpha channel",6,N],[4,"DecodingResult","","Result of a decoding process",N,N],[13,"U8","","A vector of unsigned bytes",7,N],[13,"U16","","A vector of unsigned words",7,N],[4,"ImageError","","An enumeration of Image errors",N,N],[13,"FormatError","","The Image is not formatted properly",8,N],[13,"DimensionError","","The Image's dimensions are either too small or too large",8,N],[13,"UnsupportedError","","The Decoder does not support this image format",8,N],[13,"UnsupportedColor","","The Decoder does not support this color type",8,N],[13,"NotEnoughData","","Not enough data was provided to the Decoder to decode the image",8,N],[13,"IoError","","An I/O Error occurred while decoding the image",8,N],[13,"ImageEnd","","The end of the image has been reached",8,N],[4,"FilterType","","Available Sampling Filters",N,N],[13,"Nearest","","Nearest Neighbor",9,N],[13,"Triangle","","Linear Filter",9,N],[13,"CatmullRom","","Cubic Filter",9,N],[13,"Gaussian","","Gaussian Filter",9,N],[13,"Lanczos3","","Lanczos with window 3",9,N],[4,"ImageFormat","","An enumeration of supported image formats. Not all formats support both encoding and decoding.",N,N],[13,"PNG","","An Image in PNG Format",10,N],[13,"JPEG","","An Image in JPEG Format",10,N],[13,"GIF","","An Image in GIF Format",10,N],[13,"WEBP","","An Image in WEBP Format",10,N],[13,"PNM","","An Image in general PNM Format",10,N],[13,"TIFF","","An Image in TIFF Format",10,N],[13,"TGA","","An Image in TGA Format",10,N],[13,"BMP","","An Image in BMP Format",10,N],[13,"ICO","","An Image in ICO Format",10,N],[13,"HDR","","An Image in Radiance HDR Format",10,N],[4,"ImageOutputFormat","","An enumeration of supported image formats for encoding.",N,N],[13,"PNG","","An Image in PNG Format",11,N],[13,"JPEG","","An Image in JPEG Format with specified quality",11,N],[13,"PNM","","An Image in one of the PNM Formats",11,N],[13,"GIF","","An Image in GIF Format",11,N],[13,"ICO","","An Image in ICO Format",11,N],[13,"BMP","","An Image in BMP Format",11,N],[13,"Unsupported","","A value for signalling an error: An unsupported format was requested",11,N],[4,"DynamicImage","","A Dynamic Image",N,N],[13,"ImageLuma8","","Each pixel in this image is 8-bit Luma",12,N],[13,"ImageLumaA8","","Each pixel in this image is 8-bit Luma with alpha",12,N],[13,"ImageRgb8","","Each pixel in this image is 8-bit Rgb",12,N],[13,"ImageRgba8","","Each pixel in this image is 8-bit Rgb with alpha",12,N],[13,"ImageBgr8","","Each pixel in this image is 8-bit Bgr",12,N],[13,"ImageBgra8","","Each pixel in this image is 8-bit Bgr with alpha",12,N],[5,"Luma","","",N,N],[5,"LumaA","","",N,N],[5,"Rgb","","",N,N],[5,"Rgba","","",N,N],[5,"Bgr","","",N,N],[5,"Bgra","","",N,N],[5,"guess_format","","Guess image format from memory block",N,N],[5,"load","","Create a new image from a Reader",N,[[["r"],["imageformat"]],["imageresult",["dynamicimage"]]]],[5,"load_from_memory","","Create a new image from a byte slice",N,N],[5,"load_from_memory_with_format","","Create a new image from a byte slice",N,N],[5,"open","","Open the image located at the path specified. The image's format is determined from the path's file extension.",N,[[["p"]],["imageresult",["dynamicimage"]]]],[5,"save_buffer","","Saves the supplied buffer to a file at the path specified.",N,N],[0,"math","","Mathematical helper functions and types.",N,N],[0,"nq","image::math","NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994. See \"Kohonen neural networks for optimal colour quantization\" in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367. for a discussion of the algorithm. See also http://www.acm.org/~dekker/NEUQUANT.HTML",N,N],[3,"NeuQuant","image::math::nq","Neural network color quantizer",N,N],[11,"new","","Creates a new neural network and trains it with the supplied data",13,N],[11,"init","","Initializes the neural network and trains it with the supplied data",13,N],[11,"map_pixel","","Maps the pixel in-place to the best-matching color in the color map",13,N],[11,"index_of","","Finds the best-matching index in the color map for `pixel`",13,N],[0,"utils","image::math","Shared mathematical utility functions.",N,N],[5,"clamp","image::math::utils","Cut value to be inside given range",N,[[["n"],["n"],["n"]],["n"]]],[0,"imageops","image","Image Processing Functions",N,N],[4,"FilterType","image::imageops","Available Sampling Filters",N,N],[13,"Nearest","","Nearest Neighbor",9,N],[13,"Triangle","","Linear Filter",9,N],[13,"CatmullRom","","Cubic Filter",9,N],[13,"Gaussian","","Gaussian Filter",9,N],[13,"Lanczos3","","Lanczos with window 3",9,N],[5,"flip_horizontal","","Flip an image horizontally",N,[[["i"]],["imagebuffer",["vec"]]]],[5,"flip_vertical","","Flip an image vertically",N,[[["i"]],["imagebuffer",["vec"]]]],[5,"rotate180","","Rotate an image 180 degrees clockwise.",N,[[["i"]],["imagebuffer",["vec"]]]],[5,"rotate270","","Rotate an image 270 degrees clockwise.",N,[[["i"]],["imagebuffer",["vec"]]]],[5,"rotate90","","Rotate an image 90 degrees clockwise.",N,[[["i"]],["imagebuffer",["vec"]]]],[5,"blur","","Performs a Gaussian blur on the supplied image. `sigma` is a measure of how much to blur by.",N,[[["i"],["f32"]],["imagebuffer",["vec"]]]],[5,"filter3x3","","Perform a 3x3 box filter on the supplied image. `kernel` is an array of the filter weights of length 9.",N,N],[5,"resize","","Resize the supplied image to the specified dimensions. `nwidth` and `nheight` are the new dimensions. `filter` is the sampling filter to use.",N,[[["i"],["u32"],["u32"],["filtertype"]],["imagebuffer",["vec"]]]],[5,"thumbnail","","Resize the supplied image to the specific dimensions.",N,[[["i"],["u32"],["u32"]],["imagebuffer",["vec"]]]],[5,"unsharpen","","Performs an unsharpen mask on the supplied image. `sigma` is the amount to blur the image by. `threshold` is the threshold for the difference between",N,[[["i"],["f32"],["i32"]],["imagebuffer",["vec"]]]],[5,"crop","","Return a mutable view into an image",N,[[["i"],["u32"],["u32"],["u32"],["u32"]],["subimage"]]],[5,"overlay","","Overlay an image at a given coordinate (x, y)",N,[[["i"],["i"],["u32"],["u32"]]]],[5,"replace","","Replace the contents of an image at a given coordinate (x, y)",N,[[["i"],["i"],["u32"],["u32"]]]],[0,"colorops","","Functions for altering and converting the color of pixelbufs",N,N],[3,"BiLevel","image::imageops::colorops","A bi-level color map",N,N],[5,"grayscale","","Convert the supplied image to grayscale",N,[[["i"]],["imagebuffer",["luma","vec"]]]],[5,"invert","","Invert each pixel within the supplied image. This function operates in place.",N,[[["i"]]]],[5,"contrast","","Adjust the contrast of the supplied image. `contrast` is the amount to adjust the contrast by. Negative values decrease the contrast and positive values increase the contrast.",N,[[["i"],["f32"]],["imagebuffer",["vec"]]]],[5,"brighten","","Brighten the supplied image. `value` is the amount to brighten each pixel by. Negative values decrease the brightness and positive values increase it.",N,[[["i"],["i32"]],["imagebuffer",["vec"]]]],[5,"huerotate","","Hue rotate the supplied image. `value` is the degrees to rotate each pixel by. 0 and 360 do nothing, the rest rotates by the given degree value. just like the css webkit filter hue-rotate(180)",N,[[["i"],["i32"]],["imagebuffer",["vec"]]]],[5,"dither","","Reduces the colors of the image using the supplied `color_map` while applying Floyd-Steinberg dithering to improve the visual conception",N,[[["imagebuffer"],["map"]]]],[5,"index_colors","","Reduces the colors using the supplied `color_map` and returns an image of the indices",N,[[["imagebuffer"],["map"]],["imagebuffer",["luma","vec"]]]],[8,"ColorMap","","A color map",N,N],[16,"Color","","The color type on which the map operates on",14,N],[10,"index_of","","Returns the index of the closed match of `color` in the color map.",14,N],[10,"map_color","","Maps `color` to the closest color in the color map.",14,N],[11,"clone","","",15,[[["self"]],["bilevel"]]],[11,"index_of","","",15,[[["self"],["luma"]],["usize"]]],[11,"map_color","","",15,[[["self"],["luma"]]]],[11,"index_of","image::math::nq","",13,[[["self"],["rgba"]],["usize"]]],[11,"map_color","","",13,[[["self"],["rgba"]]]],[11,"clone","image","",9,[[["self"]],["filtertype"]]],[0,"bmp","","Decoding and Encoding of BMP Images",N,N],[3,"BMPDecoder","image::bmp","A bmp decoder",N,N],[3,"BMPEncoder","","The representation of a BMP encoder.",N,N],[11,"new","","Create a new decoder that decodes from the stream `r`",16,[[["r"]],["bmpdecoder"]]],[11,"dimensions","","",16,[[["self"]],["imageresult"]]],[11,"colortype","","",16,[[["self"]],["imageresult",["colortype"]]]],[11,"row_len","","",16,[[["self"]],["imageresult",["usize"]]]],[11,"read_scanline","","",16,N],[11,"read_image","","",16,[[["self"]],["imageresult",["decodingresult"]]]],[11,"new","","Create a new encoder that writes its output to `w`.",17,[[["w"]],["self"]]],[11,"encode","","Encodes the image `image` that has dimensions `width` and `height` and `ColorType` `c`.",17,N],[0,"dxt","image","Decoding of DXT (S3TC) compression",N,N],[3,"DXTDecoder","image::dxt","DXT decoder",N,N],[3,"DXTEncoder","","DXT encoder",N,N],[4,"DXTVariant","","What version of DXT compression are we using? Note that DXT2 and DXT4 are left away as they're just DXT3 and DXT5 with premultiplied alpha",N,N],[13,"DXT1","","The DXT1 format. 48 bytes of RGB data in a 4x4 pixel square is compressed into an 8 byte block of DXT1 data",18,N],[13,"DXT3","","The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel square is compressed into a 16 byte block of DXT3 data",18,N],[13,"DXT5","","The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel square is compressed into a 16 byte block of DXT5 data",18,N],[11,"clone","","",18,[[["self"]],["dxtvariant"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"eq","","",18,[[["self"],["dxtvariant"]],["bool"]]],[11,"colortype","","Returns the colortype that is stored in this DXT variant",18,[[["self"]],["colortype"]]],[11,"new","","Create a new DXT decoder that decodes from the stream `r`. As DXT is often stored as raw buffers with the width/height somewhere else the width and height of the image need to be passed in `width` and `height`, as well as the DXT variant in `variant`. width and height are required to be powers of 2 and at least 4. otherwise an error will be returned",19,[[["r"],["u32"],["u32"],["dxtvariant"]],["result",["dxtdecoder","imageerror"]]]],[11,"dimensions","","",19,[[["self"]],["imageresult"]]],[11,"colortype","","",19,[[["self"]],["imageresult",["colortype"]]]],[11,"row_len","","",19,[[["self"]],["imageresult",["usize"]]]],[11,"read_scanline","","",19,N],[11,"read_image","","",19,[[["self"]],["imageresult",["decodingresult"]]]],[11,"new","","Create a new encoder that writes its output to `w`",20,[[["w"]],["dxtencoder"]]],[11,"encode","","Encodes the image data `data` that has dimensions `width` and `height` in `DXTVariant` `variant` data is assumed to be in variant.colortype()",20,N],[0,"gif","image","Decoding of GIF Images",N,N],[4,"DisposalMethod","image::gif","Disposal method",N,N],[13,"Any","","StreamingDecoder is not required to take any action.",21,N],[13,"Keep","","Do not dispose.",21,N],[13,"Background","","Restore to background color.",21,N],[13,"Previous","","Restore to previous.",21,N],[3,"Frame","","A GIF frame",N,N],[12,"delay","","Frame delay in units of 10 ms.",22,N],[12,"dispose","","Disposal method.",22,N],[12,"transparent","","Transparent index (if available).",22,N],[12,"needs_user_input","","True if the frame needs user input to be displayed.",22,N],[12,"top","","Offset from the top border of the canvas.",22,N],[12,"left","","Offset from the left border of the canvas.",22,N],[12,"width","","Width of the frame.",22,N],[12,"height","","Height of the frame.",22,N],[12,"interlaced","","True if the image is interlaced.",22,N],[12,"palette","","Frame local color palette if available.",22,N],[12,"buffer","","Buffer containing the image data. Only indices unless configured differently.",22,N],[3,"Decoder","","GIF decoder",N,N],[3,"Encoder","","GIF encoder.",N,N],[11,"new","","Creates a new decoder that decodes the input steam `r`",23,[[["r"]],["decoder"]]],[11,"dimensions","","",23,[[["self"]],["imageresult"]]],[11,"colortype","","",23,[[["self"]],["imageresult",["colortype"]]]],[11,"row_len","","",23,[[["self"]],["imageresult",["usize"]]]],[11,"read_scanline","","",23,N],[11,"read_image","","",23,[[["self"]],["imageresult",["decodingresult"]]]],[11,"is_animated","","",23,[[["self"]],["imageresult",["bool"]]]],[11,"into_frames","","",23,[[["self"]],["imageresult",["frames"]]]],[11,"new","","Creates a new GIF encoder.",24,[[["w"]],["encoder"]]],[11,"encode","","Encodes a frame.",24,[[["self"],["frame"]],["imageresult"]]],[11,"encode_frames","","Encodes Frames.",24,[[["self"],["frames"]],["imageresult"]]],[11,"from","image","",8,[[["decodingerror"]],["imageerror"]]],[0,"hdr","","Decoding of Radiance HDR Images",N,N],[3,"HDRAdapter","image::hdr","Adapter to conform to `ImageDecoder` trait",N,N],[3,"HDRDecoder","","An Radiance HDR decoder",N,N],[3,"RGBE8Pixel","","Refer to wikipedia",N,N],[12,"c","","Color components",25,N],[12,"e","","Exponent",25,N],[3,"HDRImageDecoderIterator","","Scanline buffered pixel by pixel iterator",N,N],[3,"HDRMetadata","","Metadata for Radiance HDR image",N,N],[12,"width","","Width of decoded image. It could be either scanline length, or scanline count, depending on image orientation.",26,N],[12,"height","","Height of decoded image. It depends on orientation too.",26,N],[12,"orientation","","Orientation matrix. For standard orientation it is ((1,0),(0,1)) - left to right, top to bottom. First pair tells how resulting pixel coordinates change along a scanline. Second pair tells how they change from one scanline to the next.",26,N],[12,"exposure","","Divide color values by exposure to get to get physical radiance in watts/steradian/m2",26,N],[12,"color_correction","","Divide color values by corresponding tuple member (r, g, b) to get to get physical radiance in watts/steradian/m2",26,N],[12,"pixel_aspect_ratio","","Pixel height divided by pixel width",26,N],[12,"custom_attributes","","All lines contained in image header are put here. Ordering of lines is preserved. Lines in the form \"key=value\" are represented as (\"key\", \"value\"). All other lines are (\"\", \"line\")",26,N],[3,"HDREncoder","","Radiance HDR encoder",N,N],[5,"rgbe8","","Creates `RGBE8Pixel` from components",N,[[["u8"],["u8"],["u8"],["u8"]],["rgbe8pixel"]]],[5,"read_raw_file","","Helper function for reading raw 3-channel f32 images",N,[[["p"]],["result",["vec"]]]],[5,"to_rgbe8","","Converts `Rgb<f32>` into `RGBE8Pixel`",N,[[["rgb",["f32"]]],["rgbe8pixel"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates adapter",27,[[["r"]],["imageresult",["hdradapter"]]]],[11,"new_nonstrict","","Allows reading old Radiance HDR images",27,[[["r"]],["imageresult",["hdradapter"]]]],[11,"dimensions","","",27,[[["self"]],["imageresult"]]],[11,"colortype","","",27,[[["self"]],["imageresult",["colortype"]]]],[11,"row_len","","",27,[[["self"]],["imageresult",["usize"]]]],[11,"read_scanline","","",27,N],[11,"read_image","","",27,[[["self"]],["imageresult",["decodingresult"]]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"clone","","",25,[[["self"]],["rgbe8pixel"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"eq","","",25,[[["self"],["rgbe8pixel"]],["bool"]]],[11,"ne","","",25,[[["self"],["rgbe8pixel"]],["bool"]]],[11,"to_hdr","","Converts `RGBE8Pixel` into `Rgb<f32>` linearly",25,[[["self"]],["rgb",["f32"]]]],[11,"to_ldr","","Converts `RGBE8Pixel` into `Rgb<T>` with scale=1 and gamma=2.2",25,[[["self"]],["rgb"]]],[11,"to_ldr_scale_gamma","","Converts RGBE8Pixel into Rgb using provided scale and gamma",25,[[["self"],["f32"],["f32"]],["rgb"]]],[11,"new","","Reads Radiance HDR image header from stream `r` if the header is valid, creates HDRDecoder strict mode is enabled",28,[[["r"]],["imageresult",["hdrdecoder"]]]],[11,"with_strictness","","Reads Radiance HDR image header from stream `reader`, if the header is valid, creates `HDRDecoder`.",28,[[["r"],["bool"]],["imageresult",["hdrdecoder"]]]],[11,"metadata","","Returns file metadata. Refer to `HDRMetadata` for details.",28,[[["self"]],["hdrmetadata"]]],[11,"read_image_native","","Consumes decoder and returns a vector of RGBE8 pixels",28,[[["self"]],["imageresult",["vec"]]]],[11,"read_image_transform","","Consumes decoder and returns a vector of transformed pixels",28,[[["self"],["f"]],["imageresult",["vec"]]]],[11,"read_image_ldr","","Consumes decoder and returns a vector of Rgb pixels. scale = 1, gamma = 2.2",28,[[["self"]],["imageresult",["vec"]]]],[11,"read_image_hdr","","Consumes decoder and returns a vector of Rgb pixels.",28,[[["self"]],["imageresult",["vec"]]]],[11,"into_iter","","",28,N],[11,"next","","",29,[[["self"]],["option"]]],[11,"size_hint","","",29,N],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"clone","","",26,[[["self"]],["hdrmetadata"]]],[11,"new","","Creates encoder",30,[[["w"]],["hdrencoder"]]],[11,"encode","","Encodes the image `data` that has dimensions `width` and `height`",30,N],[17,"SIGNATURE","","Radiance HDR file signature",N,N],[0,"ico","image","Decoding and Encoding of ICO files",N,N],[3,"ICODecoder","image::ico","An ico decoder",N,N],[3,"ICOEncoder","","ICO encoder",N,N],[11,"new","","Create a new decoder that decodes from the stream `r`",31,[[["r"]],["imageresult",["icodecoder"]]]],[11,"dimensions","","",31,[[["self"]],["imageresult"]]],[11,"colortype","","",31,[[["self"]],["imageresult",["colortype"]]]],[11,"row_len","","",31,[[["self"]],["imageresult",["usize"]]]],[11,"read_scanline","","",31,N],[11,"read_image","","",31,[[["self"]],["imageresult",["decodingresult"]]]],[11,"new","","Create a new encoder that writes its output to `w`.",32,[[["w"]],["icoencoder"]]],[11,"encode","","Encodes the image `image` that has dimensions `width` and `height` and `ColorType` `c`.  The dimensions of the image must be between 1 and 256 (inclusive) or an error will be returned.",32,N],[0,"jpeg","image","Decoding and Encoding of JPEG Images",N,N],[3,"JPEGDecoder","image::jpeg","JPEG decoder",N,N],[3,"JPEGEncoder","","The representation of a JPEG encoder",N,N],[11,"new","","Create a new decoder that decodes from the stream `r`",33,[[["r"]],["jpegdecoder"]]],[11,"dimensions","","",33,[[["self"]],["imageresult"]]],[11,"colortype","","",33,[[["self"]],["imageresult",["colortype"]]]],[11,"row_len","","",33,[[["self"]],["imageresult",["usize"]]]],[11,"read_scanline","","",33,N],[11,"read_image","","",33,[[["self"]],["imageresult",["decodingresult"]]]],[11,"from","image","",6,[[["pixelformat"]],["colortype"]]],[11,"from","","",8,[[["error"]],["imageerror"]]],[11,"new","image::jpeg","Create a new encoder that writes its output to `w`",34,[[["w"]],["jpegencoder"]]],[11,"new_with_quality","","Create a new encoder that writes its output to `w`, and has the quality parameter `quality` with a value in the range 1-100 where 1 is the worst and 100 is the best.",34,[[["w"],["u8"]],["jpegencoder"]]],[11,"encode","","Encodes the image `image` that has dimensions `width` and `height` and `ColorType` `c`",34,N],[0,"png","image","Decoding and Encoding of PNG Images",N,N],[3,"PNGDecoder","image::png","PNG decoder",N,N],[3,"PNGEncoder","","PNG encoder",N,N],[11,"new","","Creates a new decoder that decodes from the stream `r`",35,[[["r"]],["pngdecoder"]]],[11,"dimensions","","",35,[[["self"]],["imageresult"]]],[11,"colortype","","",35,[[["self"]],["imageresult",["colortype"]]]],[11,"row_len","","",35,[[["self"]],["imageresult",["usize"]]]],[11,"read_scanline","","",35,N],[11,"read_image","","",35,[[["self"]],["imageresult",["decodingresult"]]]],[11,"new","","Create a new encoder that writes its output to `w`",36,[[["w"]],["pngencoder"]]],[11,"encode","","Encodes the image `image` that has dimensions `width` and `height` and `ColorType` `c`",36,N],[11,"from","image","",6,N],[11,"from","","",8,[[["decodingerror"]],["imageerror"]]],[0,"pnm","","Decoding of netpbm image formats (pbm, pgm, ppm and pam).",N,N],[3,"PNMDecoder","image::pnm","PNM decoder",N,N],[3,"PNMEncoder","","Encodes images to any of the `pnm` image formats.",N,N],[3,"ArbitraryHeader","","Header produced by a `pam` file (\"Portable Arbitrary Map\")",N,N],[12,"height","","Height of the image file",37,N],[12,"width","","Width of the image file",37,N],[12,"depth","","Number of color channels",37,N],[12,"maxval","","Maximum sample value within the image",37,N],[12,"tupltype","","Color interpretation of image pixels",37,N],[3,"BitmapHeader","","Header produced by a `pbm` file (\"Portable Bit Map\")",N,N],[12,"encoding","","Binary or Ascii encoded file",38,N],[12,"height","","Height of the image file",38,N],[12,"width","","Width of the image file",38,N],[3,"GraymapHeader","","Header produced by a `pgm` file (\"Portable Gray Map\")",N,N],[12,"encoding","","Binary or Ascii encoded file",39,N],[12,"height","","Height of the image file",39,N],[12,"width","","Width of the image file",39,N],[12,"maxwhite","","Maximum sample value within the image",39,N],[3,"PixmapHeader","","Header produced by a `ppm` file (\"Portable Pixel Map\")",N,N],[12,"encoding","","Binary or Ascii encoded file",40,N],[12,"height","","Height of the image file",40,N],[12,"width","","Width of the image file",40,N],[12,"maxval","","Maximum sample value within the image",40,N],[3,"PNMHeader","","Stores the complete header data of a file.",N,N],[4,"ArbitraryTuplType","","Standardized tuple type specifiers in the header of a `pam`.",N,N],[13,"BlackAndWhite","","Pixels are either black (0) or white (1)",41,N],[13,"BlackAndWhiteAlpha","","Pixels are either black (0) or white (1) and a second alpha channel",41,N],[13,"Grayscale","","Pixels represent the amount of white",41,N],[13,"GrayscaleAlpha","","Grayscale with an additional alpha channel",41,N],[13,"RGB","","Three channels: Red, Green, Blue",41,N],[13,"RGBAlpha","","Four channels: Red, Green, Blue, Alpha",41,N],[13,"Custom","","An image format which is not standardized",41,N],[4,"PNMSubtype","","Denotes the category of the magic number",N,N],[13,"Bitmap","","Magic numbers P1 and P4",42,N],[13,"Graymap","","Magic numbers P2 and P5",42,N],[13,"Pixmap","","Magic numbers P3 and P6",42,N],[13,"ArbitraryMap","","Magic number P7",42,N],[4,"SampleEncoding","","The kind of encoding used to store sample values",N,N],[13,"Binary","","Samples are unsigned binary integers in big endian",43,N],[13,"Ascii","","Samples are encoded as decimal ascii strings separated by whitespace",43,N],[11,"new","","Create a new decoder that decodes from the stream `read`",44,[[["r"]],["imageresult",["pnmdecoder"]]]],[11,"into_inner","","Extract the reader and header after an image has been read.",44,N],[11,"dimensions","","",44,[[["self"]],["imageresult"]]],[11,"colortype","","",44,[[["self"]],["imageresult",["colortype"]]]],[11,"row_len","","",44,[[["self"]],["imageresult",["usize"]]]],[11,"read_scanline","","",44,N],[11,"read_image","","",44,[[["self"]],["imageresult",["decodingresult"]]]],[11,"subtype","","Get the pnm subtype, depending on the magic constant contained in the header",44,[[["self"]],["pnmsubtype"]]],[11,"new","","Create new PNMEncoder from the `writer`.",45,[[["w"]],["self"]]],[11,"with_subtype","","Encode a specific pnm subtype image.",45,[[["self"],["pnmsubtype"]],["self"]]],[11,"with_header","","Enforce the use of a chosen header.",45,[[["self"],["pnmheader"]],["self"]]],[11,"with_dynamic_header","","Create the header dynamically for each image.",45,[[["self"]],["self"]]],[11,"encode","","Encode an image whose samples are represented as `u8`.",45,[[["self"],["s"],["u32"],["u32"],["colortype"]],["result"]]],[11,"clone","","",43,[[["self"]],["sampleencoding"]]],[11,"eq","","",43,[[["self"],["sampleencoding"]],["bool"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"clone","","",42,[[["self"]],["pnmsubtype"]]],[11,"eq","","",42,[[["self"],["pnmsubtype"]],["bool"]]],[11,"ne","","",42,[[["self"],["pnmsubtype"]],["bool"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"clone","","",38,[[["self"]],["bitmapheader"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"clone","","",39,[[["self"]],["graymapheader"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"clone","","",40,[[["self"]],["pixmapheader"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"clone","","",37,[[["self"]],["arbitraryheader"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"clone","","",41,[[["self"]],["arbitrarytupltype"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"magic_constant","","Get the two magic constant bytes corresponding to this format subtype.",42,N],[11,"sample_encoding","","Whether samples are stored as binary or as decimal ascii",42,[[["self"]],["sampleencoding"]]],[11,"subtype","","Retrieve the format subtype from which the header was created.",46,[[["self"]],["pnmsubtype"]]],[11,"width","","The width of the image this header is for.",46,[[["self"]],["u32"]]],[11,"height","","The height of the image this header is for.",46,[[["self"]],["u32"]]],[11,"maximal_sample","","The biggest value a sample can have. In other words, the colour resolution.",46,[[["self"]],["u32"]]],[11,"as_bitmap","","Retrieve the underlying bitmap header if any",46,[[["self"]],["option",["bitmapheader"]]]],[11,"as_graymap","","Retrieve the underlying graymap header if any",46,[[["self"]],["option",["graymapheader"]]]],[11,"as_pixmap","","Retrieve the underlying pixmap header if any",46,[[["self"]],["option",["pixmapheader"]]]],[11,"as_arbitrary","","Retrieve the underlying arbitrary header if any",46,[[["self"]],["option",["arbitraryheader"]]]],[11,"write","","Write the header back into a binary stream",46,[[["self"],["write"]],["result"]]],[11,"from","","",46,[[["bitmapheader"]],["self"]]],[11,"from","","",46,[[["graymapheader"]],["self"]]],[11,"from","","",46,[[["pixmapheader"]],["self"]]],[11,"from","","",46,[[["arbitraryheader"]],["self"]]],[0,"tga","image","Decoding of TGA Images",N,N],[3,"TGADecoder","image::tga","The representation of a TGA decoder",N,N],[11,"new","","Create a new decoder that decodes from the stream `r`",47,[[["r"]],["tgadecoder"]]],[11,"dimensions","","",47,[[["self"]],["imageresult"]]],[11,"colortype","","",47,[[["self"]],["imageresult",["colortype"]]]],[11,"row_len","","",47,[[["self"]],["imageresult",["usize"]]]],[11,"read_scanline","","",47,N],[11,"read_image","","",47,[[["self"]],["imageresult",["decodingresult"]]]],[0,"tiff","image","Decoding and Encoding of TIFF Images",N,N],[3,"TIFFDecoder","image::tiff","Decoder for TIFF images.",N,N],[11,"new","","Create a new TIFFDecoder.",48,[[["r"]],["result",["tiffdecoder","imageerror"]]]],[11,"from","image","",8,[[["tifferror"]],["imageerror"]]],[11,"from","","",6,[[["colortype"]],["colortype"]]],[11,"from","","",7,[[["decodingresult"]],["decodingresult"]]],[11,"dimensions","image::tiff","",48,[[["self"]],["imageresult"]]],[11,"colortype","","",48,[[["self"]],["imageresult",["colortype"]]]],[11,"row_len","","",48,[[["self"]],["imageresult",["usize"]]]],[11,"read_scanline","","",48,N],[11,"read_image","","",48,[[["self"]],["imageresult",["decodingresult"]]]],[0,"webp","image","Decoding of Webp Images",N,N],[3,"WebpDecoder","image::webp","A Representation of a Webp Image format decoder.",N,N],[11,"new","","Create a new WebpDecoder from the Reader `r`. This function takes ownership of the Reader.",49,[[["r"]],["webpdecoder"]]],[11,"dimensions","","",49,[[["self"]],["imageresult"]]],[11,"colortype","","",49,[[["self"]],["imageresult",["colortype"]]]],[11,"row_len","","",49,[[["self"]],["imageresult",["usize"]]]],[11,"read_scanline","","",49,N],[11,"read_image","","",49,[[["self"]],["imageresult",["decodingresult"]]]],[0,"vp8","","An implementation of the VP8 Video Codec",N,N],[3,"Frame","image::webp::vp8","A Representation of the last decoded video frame",N,N],[12,"width","","The width of the luma plane",50,N],[12,"height","","The height of the luma plane",50,N],[12,"ybuf","","The luma plane of the frame",50,N],[12,"keyframe","","Indicates whether this frame is a keyframe",50,N],[12,"for_display","","Indicates whether this frame is intended for display",50,N],[12,"pixel_type","","The pixel type of the frame as defined by Section 9.2 of the VP8 Specification",50,N],[3,"VP8Decoder","","VP8 Decoder",N,N],[11,"default","","",50,[[],["frame"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"clone","","",50,[[["self"]],["frame"]]],[11,"new","","Create a new decoder. The reader must present a raw vp8 bitstream to the decoder",51,[[["r"]],["vp8decoder"]]],[11,"decode_frame","","Decodes the current frame and returns a reference to it",51,[[["self"]],["result",["frame"]]]],[11,"new","image","Contructs a new frame iterator",52,[[["vec",["frame"]]],["frames"]]],[11,"clone","","",53,[[["self"]],["frame"]]],[11,"new","","Contructs a new frame",53,[[["rgbaimage"]],["frame"]]],[11,"from_parts","","Contructs a new frame",53,[[["rgbaimage"],["u32"],["u32"],["ratio",["u16"]]],["frame"]]],[11,"delay","","Delay of this frame",53,[[["self"]],["ratio",["u16"]]]],[11,"buffer","","Returns the image buffer",53,[[["self"]],["rgbaimage"]]],[11,"into_buffer","","Returns the image buffer",53,[[["self"]],["rgbaimage"]]],[11,"left","","Returns the x offset",53,[[["self"]],["u32"]]],[11,"top","","Returns the y offset",53,[[["self"]],["u32"]]],[11,"next","","",52,[[["self"]],["option",["frame"]]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"from_raw","","Contructs a buffer from a generic container (for example a `Vec` or a slice)",54,[[["u32"],["u32"],["container"]],["option",["imagebuffer"]]]],[11,"into_raw","","Returns the underlying raw buffer",54,[[["self"]],["container"]]],[11,"dimensions","","The width and height of this image.",54,N],[11,"width","","The width of this image.",54,[[["self"]],["u32"]]],[11,"height","","The height of this image.",54,[[["self"]],["u32"]]],[11,"pixels","","Returns an iterator over the pixels of this image.",54,[[["self"]],["pixels"]]],[11,"enumerate_pixels","","Enumerates over the pixels of the image. The iterator yields the coordinates of each pixel along with a reference to them.",54,[[["self"]],["enumeratepixels"]]],[11,"get_pixel","","Gets a reference to the pixel at location `(x, y)`",54,[[["self"],["u32"],["u32"]],["p"]]],[11,"pixels_mut","","Returns an iterator over the mutable pixels of this image.",54,[[["self"]],["pixelsmut"]]],[11,"enumerate_pixels_mut","","Enumerates over the pixels of the image. The iterator yields the coordinates of each pixel along with a mutable reference to them.",54,[[["self"]],["enumeratepixelsmut"]]],[11,"get_pixel_mut","","Gets a reference to the mutable pixel at location `(x, y)`",54,[[["self"],["u32"],["u32"]],["p"]]],[11,"put_pixel","","Puts a pixel at location `(x, y)`",54,[[["self"],["u32"],["u32"],["p"]]]],[11,"save","","Saves the buffer to a file at the path specified.",54,[[["self"],["q"]],["result"]]],[11,"deref","","",54,N],[11,"deref_mut","","",54,N],[11,"index","","",54,N],[11,"index_mut","","",54,N],[11,"clone","","",54,[[["self"]],["imagebuffer"]]],[11,"dimensions","","",54,N],[11,"bounds","","",54,N],[11,"get_pixel","","",54,[[["self"],["u32"],["u32"]],["p"]]],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y), ignoring bounds checking.",54,[[["self"],["u32"],["u32"]],["p"]]],[11,"inner","","",54,N],[11,"get_pixel_mut","","",54,[[["self"],["u32"],["u32"]],["p"]]],[11,"put_pixel","","",54,[[["self"],["u32"],["u32"],["p"]]]],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y), ignoring bounds checking.",54,[[["self"],["u32"],["u32"],["p"]]]],[11,"blend_pixel","","Put a pixel at location (x, y), taking into account alpha channels",54,[[["self"],["u32"],["u32"],["p"]]]],[11,"inner_mut","","",54,N],[11,"new","","Creates a new image buffer based on a `Vec<P::Subpixel>`.",54,[[["u32"],["u32"]],["imagebuffer",["vec"]]]],[11,"from_pixel","","Constructs a new ImageBuffer by copying a pixel",54,[[["u32"],["u32"],["p"]],["imagebuffer",["vec"]]]],[11,"from_fn","","Constructs a new ImageBuffer by repeated application of the supplied function. The arguments to the function are the pixel's x and y coordinates.",54,[[["u32"],["u32"],["f"]],["imagebuffer",["vec"]]]],[11,"from_vec","","Creates an image buffer out of an existing buffer. Returns None if the buffer is not big enough.",54,[[["u32"],["u32"],["vec"]],["option",["imagebuffer"]]]],[11,"into_vec","","Consumes the image buffer and returns the underlying data as an owned buffer",54,[[["self"]],["vec"]]],[11,"convert","","",54,[[["self"]],["imagebuffer",["vec"]]]],[11,"eq","","",6,[[["self"],["colortype"]],["bool"]]],[11,"ne","","",6,[[["self"],["colortype"]],["bool"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"clone","","",6,[[["self"]],["colortype"]]],[11,"hash","","",6,N],[11,"eq","","",2,[[["self"],["rgb"]],["bool"]]],[11,"ne","","",2,[[["self"],["rgb"]],["bool"]]],[11,"clone","","",2,[[["self"]],["rgb"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"hash","","",2,N],[11,"channel_count","","",2,[[],["u8"]]],[11,"color_model","","",2,[[],["str"]]],[11,"color_type","","",2,[[],["colortype"]]],[11,"channels","","",2,N],[11,"channels_mut","","",2,N],[11,"channels4","","",2,N],[11,"from_channels","","",2,[[["t"],["t"],["t"],["t"]],["rgb"]]],[11,"from_slice","","",2,N],[11,"from_slice_mut","","",2,N],[11,"to_rgb","","",2,[[["self"]],["rgb"]]],[11,"to_bgr","","",2,[[["self"]],["bgr"]]],[11,"to_rgba","","",2,[[["self"]],["rgba"]]],[11,"to_bgra","","",2,[[["self"]],["bgra"]]],[11,"to_luma","","",2,[[["self"]],["luma"]]],[11,"to_luma_alpha","","",2,[[["self"]],["lumaa"]]],[11,"map","","",2,[[["self"],["f"]],["rgb"]]],[11,"apply","","",2,[[["self"],["f"]]]],[11,"map_with_alpha","","",2,[[["self"],["f"],["g"]],["rgb"]]],[11,"apply_with_alpha","","",2,[[["self"],["f"],["g"]]]],[11,"map2","","",2,[[["self"],["self"],["f"]],["rgb"]]],[11,"apply2","","",2,[[["self"],["rgb"],["f"]]]],[11,"invert","","",2,[[["self"]]]],[11,"blend","","",2,[[["self"],["rgb"]]]],[11,"index","","",2,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",2,[[["self"],["usize"]],["t"]]],[11,"eq","","",4,[[["self"],["bgr"]],["bool"]]],[11,"ne","","",4,[[["self"],["bgr"]],["bool"]]],[11,"clone","","",4,[[["self"]],["bgr"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",4,N],[11,"channel_count","","",4,[[],["u8"]]],[11,"color_model","","",4,[[],["str"]]],[11,"color_type","","",4,[[],["colortype"]]],[11,"channels","","",4,N],[11,"channels_mut","","",4,N],[11,"channels4","","",4,N],[11,"from_channels","","",4,[[["t"],["t"],["t"],["t"]],["bgr"]]],[11,"from_slice","","",4,N],[11,"from_slice_mut","","",4,N],[11,"to_rgb","","",4,[[["self"]],["rgb"]]],[11,"to_bgr","","",4,[[["self"]],["bgr"]]],[11,"to_rgba","","",4,[[["self"]],["rgba"]]],[11,"to_bgra","","",4,[[["self"]],["bgra"]]],[11,"to_luma","","",4,[[["self"]],["luma"]]],[11,"to_luma_alpha","","",4,[[["self"]],["lumaa"]]],[11,"map","","",4,[[["self"],["f"]],["bgr"]]],[11,"apply","","",4,[[["self"],["f"]]]],[11,"map_with_alpha","","",4,[[["self"],["f"],["g"]],["bgr"]]],[11,"apply_with_alpha","","",4,[[["self"],["f"],["g"]]]],[11,"map2","","",4,[[["self"],["self"],["f"]],["bgr"]]],[11,"apply2","","",4,[[["self"],["bgr"],["f"]]]],[11,"invert","","",4,[[["self"]]]],[11,"blend","","",4,[[["self"],["bgr"]]]],[11,"index","","",4,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",4,[[["self"],["usize"]],["t"]]],[11,"eq","","",0,[[["self"],["luma"]],["bool"]]],[11,"ne","","",0,[[["self"],["luma"]],["bool"]]],[11,"clone","","",0,[[["self"]],["luma"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N],[11,"channel_count","","",0,[[],["u8"]]],[11,"color_model","","",0,[[],["str"]]],[11,"color_type","","",0,[[],["colortype"]]],[11,"channels","","",0,N],[11,"channels_mut","","",0,N],[11,"channels4","","",0,N],[11,"from_channels","","",0,[[["t"],["t"],["t"],["t"]],["luma"]]],[11,"from_slice","","",0,N],[11,"from_slice_mut","","",0,N],[11,"to_rgb","","",0,[[["self"]],["rgb"]]],[11,"to_bgr","","",0,[[["self"]],["bgr"]]],[11,"to_rgba","","",0,[[["self"]],["rgba"]]],[11,"to_bgra","","",0,[[["self"]],["bgra"]]],[11,"to_luma","","",0,[[["self"]],["luma"]]],[11,"to_luma_alpha","","",0,[[["self"]],["lumaa"]]],[11,"map","","",0,[[["self"],["f"]],["luma"]]],[11,"apply","","",0,[[["self"],["f"]]]],[11,"map_with_alpha","","",0,[[["self"],["f"],["g"]],["luma"]]],[11,"apply_with_alpha","","",0,[[["self"],["f"],["g"]]]],[11,"map2","","",0,[[["self"],["self"],["f"]],["luma"]]],[11,"apply2","","",0,[[["self"],["luma"],["f"]]]],[11,"invert","","",0,[[["self"]]]],[11,"blend","","",0,[[["self"],["luma"]]]],[11,"index","","",0,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",0,[[["self"],["usize"]],["t"]]],[11,"eq","","",3,[[["self"],["rgba"]],["bool"]]],[11,"ne","","",3,[[["self"],["rgba"]],["bool"]]],[11,"clone","","",3,[[["self"]],["rgba"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"hash","","",3,N],[11,"channel_count","","",3,[[],["u8"]]],[11,"color_model","","",3,[[],["str"]]],[11,"color_type","","",3,[[],["colortype"]]],[11,"channels","","",3,N],[11,"channels_mut","","",3,N],[11,"channels4","","",3,N],[11,"from_channels","","",3,[[["t"],["t"],["t"],["t"]],["rgba"]]],[11,"from_slice","","",3,N],[11,"from_slice_mut","","",3,N],[11,"to_rgb","","",3,[[["self"]],["rgb"]]],[11,"to_bgr","","",3,[[["self"]],["bgr"]]],[11,"to_rgba","","",3,[[["self"]],["rgba"]]],[11,"to_bgra","","",3,[[["self"]],["bgra"]]],[11,"to_luma","","",3,[[["self"]],["luma"]]],[11,"to_luma_alpha","","",3,[[["self"]],["lumaa"]]],[11,"map","","",3,[[["self"],["f"]],["rgba"]]],[11,"apply","","",3,[[["self"],["f"]]]],[11,"map_with_alpha","","",3,[[["self"],["f"],["g"]],["rgba"]]],[11,"apply_with_alpha","","",3,[[["self"],["f"],["g"]]]],[11,"map2","","",3,[[["self"],["self"],["f"]],["rgba"]]],[11,"apply2","","",3,[[["self"],["rgba"],["f"]]]],[11,"invert","","",3,[[["self"]]]],[11,"blend","","",3,[[["self"],["rgba"]]]],[11,"index","","",3,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",3,[[["self"],["usize"]],["t"]]],[11,"eq","","",5,[[["self"],["bgra"]],["bool"]]],[11,"ne","","",5,[[["self"],["bgra"]],["bool"]]],[11,"clone","","",5,[[["self"]],["bgra"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"hash","","",5,N],[11,"channel_count","","",5,[[],["u8"]]],[11,"color_model","","",5,[[],["str"]]],[11,"color_type","","",5,[[],["colortype"]]],[11,"channels","","",5,N],[11,"channels_mut","","",5,N],[11,"channels4","","",5,N],[11,"from_channels","","",5,[[["t"],["t"],["t"],["t"]],["bgra"]]],[11,"from_slice","","",5,N],[11,"from_slice_mut","","",5,N],[11,"to_rgb","","",5,[[["self"]],["rgb"]]],[11,"to_bgr","","",5,[[["self"]],["bgr"]]],[11,"to_rgba","","",5,[[["self"]],["rgba"]]],[11,"to_bgra","","",5,[[["self"]],["bgra"]]],[11,"to_luma","","",5,[[["self"]],["luma"]]],[11,"to_luma_alpha","","",5,[[["self"]],["lumaa"]]],[11,"map","","",5,[[["self"],["f"]],["bgra"]]],[11,"apply","","",5,[[["self"],["f"]]]],[11,"map_with_alpha","","",5,[[["self"],["f"],["g"]],["bgra"]]],[11,"apply_with_alpha","","",5,[[["self"],["f"],["g"]]]],[11,"map2","","",5,[[["self"],["self"],["f"]],["bgra"]]],[11,"apply2","","",5,[[["self"],["bgra"],["f"]]]],[11,"invert","","",5,[[["self"]]]],[11,"blend","","",5,[[["self"],["bgra"]]]],[11,"index","","",5,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",5,[[["self"],["usize"]],["t"]]],[11,"eq","","",1,[[["self"],["lumaa"]],["bool"]]],[11,"ne","","",1,[[["self"],["lumaa"]],["bool"]]],[11,"clone","","",1,[[["self"]],["lumaa"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"hash","","",1,N],[11,"channel_count","","",1,[[],["u8"]]],[11,"color_model","","",1,[[],["str"]]],[11,"color_type","","",1,[[],["colortype"]]],[11,"channels","","",1,N],[11,"channels_mut","","",1,N],[11,"channels4","","",1,N],[11,"from_channels","","",1,[[["t"],["t"],["t"],["t"]],["lumaa"]]],[11,"from_slice","","",1,N],[11,"from_slice_mut","","",1,N],[11,"to_rgb","","",1,[[["self"]],["rgb"]]],[11,"to_bgr","","",1,[[["self"]],["bgr"]]],[11,"to_rgba","","",1,[[["self"]],["rgba"]]],[11,"to_bgra","","",1,[[["self"]],["bgra"]]],[11,"to_luma","","",1,[[["self"]],["luma"]]],[11,"to_luma_alpha","","",1,[[["self"]],["lumaa"]]],[11,"map","","",1,[[["self"],["f"]],["lumaa"]]],[11,"apply","","",1,[[["self"],["f"]]]],[11,"map_with_alpha","","",1,[[["self"],["f"],["g"]],["lumaa"]]],[11,"apply_with_alpha","","",1,[[["self"],["f"],["g"]]]],[11,"map2","","",1,[[["self"],["self"],["f"]],["lumaa"]]],[11,"apply2","","",1,[[["self"],["lumaa"],["f"]]]],[11,"invert","","",1,[[["self"]]]],[11,"blend","","",1,[[["self"],["lumaa"]]]],[11,"index","","",1,[[["self"],["usize"]],["t"]]],[11,"index_mut","","",1,[[["self"],["usize"]],["t"]]],[11,"clone","","",12,[[["self"]],["dynamicimage"]]],[11,"new_luma8","","Creates a dynamic image backed by a buffer of grey pixels.",12,[[["u32"],["u32"]],["dynamicimage"]]],[11,"new_luma_a8","","Creates a dynamic image backed by a buffer of grey pixels with transparency.",12,[[["u32"],["u32"]],["dynamicimage"]]],[11,"new_rgb8","","Creates a dynamic image backed by a buffer of RGB pixels.",12,[[["u32"],["u32"]],["dynamicimage"]]],[11,"new_rgba8","","Creates a dynamic image backed by a buffer of RGBA pixels.",12,[[["u32"],["u32"]],["dynamicimage"]]],[11,"new_bgra8","","Creates a dynamic image backed by a buffer of BGRA pixels.",12,[[["u32"],["u32"]],["dynamicimage"]]],[11,"new_bgr8","","Creates a dynamic image backed by a buffer of BGR pixels.",12,[[["u32"],["u32"]],["dynamicimage"]]],[11,"to_rgb","","Returns a copy of this image as an RGB image.",12,[[["self"]],["rgbimage"]]],[11,"to_rgba","","Returns a copy of this image as an RGBA image.",12,[[["self"]],["rgbaimage"]]],[11,"to_bgr","","Returns a copy of this image as an BGR image.",12,[[["self"]],["imagebuffer",["bgr","vec"]]]],[11,"to_bgra","","Returns a copy of this image as an RGBA image.",12,[[["self"]],["imagebuffer",["bgra","vec"]]]],[11,"to_luma","","Returns a copy of this image as a Luma image.",12,[[["self"]],["grayimage"]]],[11,"to_luma_alpha","","Returns a copy of this image as a LumaA image.",12,[[["self"]],["grayalphaimage"]]],[11,"crop","","Return a cut out of this image delimited by the bounding rectangle.",12,[[["self"],["u32"],["u32"],["u32"],["u32"]],["dynamicimage"]]],[11,"as_rgb8","","Return a reference to an 8bit RGB image",12,[[["self"]],["option",["rgbimage"]]]],[11,"as_mut_rgb8","","Return a mutable reference to an 8bit RGB image",12,[[["self"]],["option",["rgbimage"]]]],[11,"as_bgr8","","Return a reference to an 8bit BGR image",12,[[["self"]],["option",["imagebuffer"]]]],[11,"as_mut_bgr8","","Return a mutable reference to an 8bit BGR image",12,[[["self"]],["option",["imagebuffer"]]]],[11,"as_rgba8","","Return a reference to an 8bit RGBA image",12,[[["self"]],["option",["rgbaimage"]]]],[11,"as_mut_rgba8","","Return a mutable reference to an 8bit RGBA image",12,[[["self"]],["option",["rgbaimage"]]]],[11,"as_bgra8","","Return a reference to an 8bit BGRA image",12,[[["self"]],["option",["imagebuffer"]]]],[11,"as_mut_bgra8","","Return a mutable reference to an 8bit RGBA image",12,[[["self"]],["option",["imagebuffer"]]]],[11,"as_luma8","","Return a reference to an 8bit Grayscale image",12,[[["self"]],["option",["grayimage"]]]],[11,"as_mut_luma8","","Return a mutable reference to an 8bit Grayscale image",12,[[["self"]],["option",["grayimage"]]]],[11,"as_luma_alpha8","","Return a reference to an 8bit Grayscale image with an alpha channel",12,[[["self"]],["option",["grayalphaimage"]]]],[11,"as_mut_luma_alpha8","","Return a mutable reference to an 8bit Grayscale image with an alpha channel",12,[[["self"]],["option",["grayalphaimage"]]]],[11,"raw_pixels","","Return this image's pixels as a byte vector.",12,[[["self"]],["vec",["u8"]]]],[11,"color","","Return this image's color type.",12,[[["self"]],["colortype"]]],[11,"grayscale","","Return a grayscale version of this image.",12,[[["self"]],["dynamicimage"]]],[11,"invert","","Invert the colors of this image. This method operates inplace.",12,[[["self"]]]],[11,"resize","","Resize this image using the specified filter algorithm. Returns a new image. The image's aspect ratio is preserved. The image is scaled to the maximum possible size that fits within the bounds specified by `nwidth` and `nheight`.",12,[[["self"],["u32"],["u32"],["filtertype"]],["dynamicimage"]]],[11,"resize_exact","","Resize this image using the specified filter algorithm. Returns a new image. Does not preserve aspect ratio. `nwidth` and `nheight` are the new image's dimensions",12,[[["self"],["u32"],["u32"],["filtertype"]],["dynamicimage"]]],[11,"thumbnail","","Scale this image down to fit within a specific size. Returns a new image. The image's aspect ratio is preserved. The image is scaled to the maximum possible size that fits within the bounds specified by `nwidth` and `nheight`.",12,[[["self"],["u32"],["u32"]],["dynamicimage"]]],[11,"thumbnail_exact","","Scale this image down to a specific size. Returns a new image. Does not preserve aspect ratio. `nwidth` and `nheight` are the new image's dimensions. This method uses a fast integer algorithm where each source pixel contributes to exactly one target pixel. May give aliasing artifacts if new size is close to old size.",12,[[["self"],["u32"],["u32"]],["dynamicimage"]]],[11,"resize_to_fill","","Resize this image using the specified filter algorithm. Returns a new image. The image's aspect ratio is preserved. The image is scaled to the maximum possible size that fits within the larger (relative to aspect ratio) of the bounds specified by `nwidth` and `nheight`, then cropped to fit within the other bound.",12,[[["self"],["u32"],["u32"],["filtertype"]],["dynamicimage"]]],[11,"blur","","Performs a Gaussian blur on this image. `sigma` is a measure of how much to blur by.",12,[[["self"],["f32"]],["dynamicimage"]]],[11,"unsharpen","","Performs an unsharpen mask on this image. `sigma` is the amount to blur the image by. `threshold` is a control of how much to sharpen.",12,[[["self"],["f32"],["i32"]],["dynamicimage"]]],[11,"filter3x3","","Filters this image with the specified 3x3 kernel.",12,N],[11,"adjust_contrast","","Adjust the contrast of this image. `contrast` is the amount to adjust the contrast by. Negative values decrease the contrast and positive values increase the contrast.",12,[[["self"],["f32"]],["dynamicimage"]]],[11,"brighten","","Brighten the pixels of this image. `value` is the amount to brighten each pixel by. Negative values decrease the brightness and positive values increase it.",12,[[["self"],["i32"]],["dynamicimage"]]],[11,"huerotate","","Hue rotate the supplied image. `value` is the degrees to rotate each pixel by. 0 and 360 do nothing, the rest rotates by the given degree value. just like the css webkit filter hue-rotate(180)",12,[[["self"],["i32"]],["dynamicimage"]]],[11,"flipv","","Flip this image vertically",12,[[["self"]],["dynamicimage"]]],[11,"fliph","","Flip this image horizontally",12,[[["self"]],["dynamicimage"]]],[11,"rotate90","","Rotate this image 90 degrees clockwise.",12,[[["self"]],["dynamicimage"]]],[11,"rotate180","","Rotate this image 180 degrees clockwise.",12,[[["self"]],["dynamicimage"]]],[11,"rotate270","","Rotate this image 270 degrees clockwise.",12,[[["self"]],["dynamicimage"]]],[11,"write_to","","Encode this image and write it to `w`",12,[[["self"],["w"],["f"]],["imageresult"]]],[11,"save","","Saves the buffer to a file at the path specified.",12,[[["self"],["q"]],["result"]]],[11,"dimensions","","",12,N],[11,"bounds","","",12,N],[11,"get_pixel","","",12,[[["self"],["u32"],["u32"]],["rgba",["u8"]]]],[11,"inner","","",12,N],[11,"put_pixel","","",12,[[["self"],["u32"],["u32"],["rgba",["u8"]]]]],[11,"blend_pixel","","DEPRECATED: Use iterator `pixels_mut` to blend the pixels directly.",12,[[["self"],["u32"],["u32"],["rgba",["u8"]]]]],[11,"get_pixel_mut","","DEPRECATED: Do not use is function: It is unimplemented!",12,[[["self"],["u32"],["u32"]],["rgba"]]],[11,"inner_mut","","",12,N],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",8,[[["self"]],["str"]]],[11,"cause","","",8,[[["self"]],["option",["error"]]]],[11,"from","","",8,[[["error"]],["imageerror"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"clone","","",10,[[["self"]],["imageformat"]]],[11,"eq","","",10,[[["self"],["imageformat"]],["bool"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"clone","","",11,[[["self"]],["imageoutputformat"]]],[11,"eq","","",11,[[["self"],["imageoutputformat"]],["bool"]]],[11,"ne","","",11,[[["self"],["imageoutputformat"]],["bool"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"from","","",11,[[["imageformat"]],["self"]]],[11,"next","","",55,[[["self"]],["option"]]],[11,"next","","",56,[[["self"]],["option"]]],[11,"new","","Construct a new subimage",57,[[["i"],["u32"],["u32"],["u32"],["u32"]],["subimage"]]],[11,"change_bounds","","Change the coordinates of this subimage.",57,[[["self"],["u32"],["u32"],["u32"],["u32"]]]],[11,"to_image","","Convert this subimage to an ImageBuffer",57,[[["self"]],["imagebuffer",["vec"]]]],[11,"dimensions","","",57,N],[11,"bounds","","",57,N],[11,"get_pixel","","",57,N],[11,"view","","",57,[[["self"],["u32"],["u32"],["u32"],["u32"]],["subimage"]]],[11,"inner","","",57,N],[11,"get_pixel_mut","","",57,N],[11,"put_pixel","","",57,N],[11,"blend_pixel","","DEPRECATED: This method will be removed. Blend the pixel directly instead.",57,N],[11,"sub_image","","",57,[[["self"],["u32"],["u32"],["u32"],["u32"]],["subimage"]]],[11,"inner_mut","","",57,N],[6,"ImageResult","","Result of an image decoding/encoding process",N,N],[6,"GrayAlphaImage","","Sendable grayscale + alpha channel image buffer",N,N],[6,"GrayImage","","Sendable grayscale image buffer",N,N],[6,"RgbImage","","Sendable Rgb image buffer",N,N],[6,"RgbaImage","","Sendable Rgb + alpha channel image buffer",N,N],[8,"GenericImage","","A trait for manipulating images.",N,N],[16,"InnerImage","","Underlying image type. This is mainly used by SubImages in order to always have a reference to the original image. This allows for less indirections and it eases the use of nested SubImages.",58,N],[10,"get_pixel_mut","","Gets a reference to the mutable pixel at location `(x, y)`",58,N],[10,"put_pixel","","Put a pixel at location (x, y)",58,N],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y)",58,N],[10,"blend_pixel","","Put a pixel at location (x, y), taking into account alpha channels",58,N],[11,"pixels_mut","","Returns an Iterator over mutable pixels of this image. The iterator yields the coordinates of each pixel along with a mutable reference to them.",58,[[["self"]],["mutpixels"]]],[11,"copy_from","","Copies all of the pixels from another image into this image.",58,[[["self"],["o"],["u32"],["u32"]],["bool"]]],[10,"inner_mut","","Returns a mutable reference to the underlying image.",58,N],[11,"sub_image","","Returns a subimage that is a view into this image.",58,[[["self"],["u32"],["u32"],["u32"],["u32"]],["subimage"]]],[8,"GenericImageView","","Trait to inspect an image.",N,N],[16,"Pixel","","The type of pixel.",59,N],[16,"InnerImageView","","Underlying image type. This is mainly used by SubImages in order to always have a reference to the original image. This allows for less indirections and it eases the use of nested SubImages.",59,N],[10,"dimensions","","The width and height of this image.",59,N],[11,"width","","The width of this image.",59,[[["self"]],["u32"]]],[11,"height","","The height of this image.",59,[[["self"]],["u32"]]],[10,"bounds","","The bounding rectangle of this image.",59,N],[11,"in_bounds","","Returns true if this x, y coordinate is contained inside the image.",59,[[["self"],["u32"],["u32"]],["bool"]]],[10,"get_pixel","","Returns the pixel located at (x, y)",59,N],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y)",59,N],[11,"pixels","","Returns an Iterator over the pixels of this image. The iterator yields the coordinates of each pixel along with their value",59,[[["self"]],["pixels"]]],[10,"inner","","Returns a reference to the underlying image.",59,N],[11,"view","","Returns an subimage that is an immutable view into this image.",59,[[["self"],["u32"],["u32"],["u32"],["u32"]],["subimage"]]],[8,"ImageDecoder","","The trait that all decoders implement",N,N],[10,"dimensions","","Returns a tuple containing the width and height of the image",60,[[["self"]],["imageresult"]]],[10,"colortype","","Returns the color type of the image e.g. RGB(8) (8bit RGB)",60,[[["self"]],["imageresult",["colortype"]]]],[10,"row_len","","Returns the length in bytes of one decoded row of the image",60,[[["self"]],["imageresult",["usize"]]]],[10,"read_scanline","","Reads one row from the image into `buf` and returns the row index",60,N],[10,"read_image","","Decodes the entire image and return it as a Vector",60,[[["self"]],["imageresult",["decodingresult"]]]],[11,"is_animated","","Returns true if the image is animated",60,[[["self"]],["imageresult",["bool"]]]],[11,"into_frames","","Returns the frames of the image",60,[[["self"]],["imageresult",["frames"]]]],[11,"load_rect","","Decodes a specific region of the image, represented by the rectangle starting from `x` and `y` and having `length` and `width`",60,[[["self"],["u32"],["u32"],["u32"],["u32"]],["imageresult",["vec"]]]],[8,"ConvertBuffer","","Provides color conversions for whole image buffers.",N,N],[10,"convert","","Converts `self` to a buffer of type T",61,[[["self"]],["t"]]],[8,"Pixel","","A generalized pixel.",N,N],[16,"Subpixel","","The underlying subpixel type.",62,N],[10,"channel_count","","Returns the number of channels of this pixel type.",62,[[],["u8"]]],[10,"channels","","Returns the components as a slice.",62,N],[10,"channels_mut","","Returns the components as a mutable slice",62,N],[10,"color_model","","Returns a string that can help to interpret the meaning each channel See gimp babl.",62,[[],["str"]]],[10,"color_type","","Returns the ColorType for this pixel format",62,[[],["colortype"]]],[10,"channels4","","Returns the channels of this pixel as a 4 tuple. If the pixel has less than 4 channels the remainder is filled with the maximum value",62,N],[10,"from_channels","","Construct a pixel from the 4 channels a, b, c and d. If the pixel does not contain 4 channels the extra are ignored.",62,N],[10,"from_slice","","Returns a view into a slice.",62,N],[10,"from_slice_mut","","Returns mutable view into a mutable slice.",62,N],[10,"to_rgb","","Convert this pixel to RGB",62,[[["self"]],["rgb"]]],[10,"to_rgba","","Convert this pixel to RGB with an alpha channel",62,[[["self"]],["rgba"]]],[10,"to_luma","","Convert this pixel to luma",62,[[["self"]],["luma"]]],[10,"to_luma_alpha","","Convert this pixel to luma with an alpha channel",62,[[["self"]],["lumaa"]]],[10,"to_bgr","","Convert this pixel to BGR",62,[[["self"]],["bgr"]]],[10,"to_bgra","","Convert this pixel to BGR with an alpha channel",62,[[["self"]],["bgra"]]],[10,"map","","Apply the function `f` to each channel of this pixel.",62,[[["self"],["f"]],["self"]]],[10,"apply","","Apply the function `f` to each channel of this pixel.",62,[[["self"],["f"]]]],[10,"map_with_alpha","","Apply the function `f` to each channel except the alpha channel. Apply the function `g` to the alpha channel.",62,[[["self"],["f"],["g"]],["self"]]],[10,"apply_with_alpha","","Apply the function `f` to each channel except the alpha channel. Apply the function `g` to the alpha channel. Works in-place.",62,[[["self"],["f"],["g"]]]],[10,"map2","","Apply the function `f` to each channel of this pixel and `other` pairwise.",62,[[["self"],["self"],["f"]],["self"]]],[10,"apply2","","Apply the function `f` to each channel of this pixel and `other` pairwise. Works in-place.",62,[[["self"],["self"],["f"]]]],[10,"invert","","Invert this pixel",62,[[["self"]]]],[10,"blend","","Blend the color of a given pixel into ourself, taking into account alpha channels",62,[[["self"],["self"]]]],[8,"Primitive","","Primitive trait from old stdlib",N,N],[11,"from_u8","image::gif","Converts `u8` to `Option<Self>`",21,[[["u8"]],["option",["disposalmethod"]]]],[11,"clone","","",21,[[["self"]],["disposalmethod"]]],[11,"clone","","",22,[[["self"]],["frame"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"default","","",22,[[],["frame"]]],[11,"eq","","",21,[[["self"],["disposalmethod"]],["bool"]]],[11,"from_rgba","","Creates a frame from pixels in RGBA format.",22,N],[11,"from_palette_pixels","","Creates a frame from a palette and indexed pixels",22,N],[11,"from_indexed_pixels","","Creates a frame from indexed pixels in the global palette",22,N],[11,"from_rgb","","Creates a frame from pixels in RGB format.",22,N],[11,"expand_palette","image","Expands a color palette by re-using the existing buffer. Assumes 8 bit per pixel. Uses an optionally transparent index to adjust it's alpha value accordingly.",63,N],[11,"is_animated","","Returns true if the image is animated",60,[[["self"]],["imageresult",["bool"]]]],[11,"into_frames","","Returns the frames of the image",60,[[["self"]],["imageresult",["frames"]]]],[11,"load_rect","","Decodes a specific region of the image, represented by the rectangle starting from `x` and `y` and having `length` and `width`",60,[[["self"],["u32"],["u32"],["u32"],["u32"]],["imageresult",["vec"]]]],[11,"width","","The width of this image.",59,[[["self"]],["u32"]]],[11,"height","","The height of this image.",59,[[["self"]],["u32"]]],[11,"in_bounds","","Returns true if this x, y coordinate is contained inside the image.",59,[[["self"],["u32"],["u32"]],["bool"]]],[11,"unsafe_get_pixel","","Returns the pixel located at (x, y)",59,N],[11,"pixels","","Returns an Iterator over the pixels of this image. The iterator yields the coordinates of each pixel along with their value",59,[[["self"]],["pixels"]]],[11,"view","","Returns an subimage that is an immutable view into this image.",59,[[["self"],["u32"],["u32"],["u32"],["u32"]],["subimage"]]],[11,"unsafe_put_pixel","","Puts a pixel at location (x, y)",58,N],[11,"pixels_mut","","Returns an Iterator over mutable pixels of this image. The iterator yields the coordinates of each pixel along with a mutable reference to them.",58,[[["self"]],["mutpixels"]]],[11,"copy_from","","Copies all of the pixels from another image into this image.",58,[[["self"],["o"],["u32"],["u32"]],["bool"]]],[11,"sub_image","","Returns a subimage that is a view into this image.",58,[[["self"],["u32"],["u32"],["u32"],["u32"]],["subimage"]]]],"paths":[[3,"Luma"],[3,"LumaA"],[3,"Rgb"],[3,"Rgba"],[3,"Bgr"],[3,"Bgra"],[4,"ColorType"],[4,"DecodingResult"],[4,"ImageError"],[4,"FilterType"],[4,"ImageFormat"],[4,"ImageOutputFormat"],[4,"DynamicImage"],[3,"NeuQuant"],[8,"ColorMap"],[3,"BiLevel"],[3,"BMPDecoder"],[3,"BMPEncoder"],[4,"DXTVariant"],[3,"DXTDecoder"],[3,"DXTEncoder"],[4,"DisposalMethod"],[3,"Frame"],[3,"Decoder"],[3,"Encoder"],[3,"RGBE8Pixel"],[3,"HDRMetadata"],[3,"HDRAdapter"],[3,"HDRDecoder"],[3,"HDRImageDecoderIterator"],[3,"HDREncoder"],[3,"ICODecoder"],[3,"ICOEncoder"],[3,"JPEGDecoder"],[3,"JPEGEncoder"],[3,"PNGDecoder"],[3,"PNGEncoder"],[3,"ArbitraryHeader"],[3,"BitmapHeader"],[3,"GraymapHeader"],[3,"PixmapHeader"],[4,"ArbitraryTuplType"],[4,"PNMSubtype"],[4,"SampleEncoding"],[3,"PNMDecoder"],[3,"PNMEncoder"],[3,"PNMHeader"],[3,"TGADecoder"],[3,"TIFFDecoder"],[3,"WebpDecoder"],[3,"Frame"],[3,"VP8Decoder"],[3,"Frames"],[3,"Frame"],[3,"ImageBuffer"],[3,"Pixels"],[3,"MutPixels"],[3,"SubImage"],[8,"GenericImage"],[8,"GenericImageView"],[8,"ImageDecoder"],[8,"ConvertBuffer"],[8,"Pixel"],[6,"GrayImage"]]};
searchIndex["inflate"]={"doc":"A DEFLATE decoder written in rust.","items":[[3,"InflateWriter","inflate","A DEFLATE decoder.",N,N],[3,"DeflateDecoder","","A DEFLATE decoder/decompressor.",N,N],[3,"DeflateDecoderBuf","","A DEFLATE decoder/decompressor.",N,N],[3,"InflateStream","","",N,N],[5,"inflate_bytes","","Decompress the given slice of DEFLATE compressed data.",N,N],[5,"inflate_bytes_zlib","","Decompress the given slice of DEFLATE compressed (with zlib headers and trailers) data.",N,N],[5,"inflate_bytes_zlib_no_checksum","","Decompress the given slice of DEFLATE compressed (with zlib headers and trailers) data, without calculating and validating the checksum.",N,N],[11,"new","","",0,[[["w"]],["inflatewriter"]]],[11,"from_zlib","","",0,[[["w"]],["inflatewriter"]]],[11,"finish","","",0,[[["self"]],["result"]]],[11,"write","","",0,N],[11,"flush","","",0,[[["self"]],["result"]]],[11,"new","","Create a new `Deflatedecoderbuf` to read from a raw deflate stream.",1,[[["r"]],["deflatedecoderbuf"]]],[11,"from_zlib","","Create a new `DeflateDecoderbuf` that reads from a zlib wrapped deflate stream.",1,[[["r"]],["deflatedecoderbuf"]]],[11,"from_zlib_no_checksum","","Create a new `DeflateDecoderbuf` that reads from a zlib wrapped deflate stream. without calculating and validating the checksum.",1,[[["r"]],["deflatedecoderbuf"]]],[11,"reset","","Resets the decompressor, and replaces the current inner `BufRead` instance by `r`. without doing any extra reallocations.",1,[[["self"],["r"]],["r"]]],[11,"reset_data","","Resets the decoder, but continue to read from the same reader.",1,[[["self"]]]],[11,"get_ref","","Returns a reference to the underlying `BufRead` instance.",1,[[["self"]],["r"]]],[11,"get_mut","","Returns a mutable reference to the underlying `BufRead` instance.",1,[[["self"]],["r"]]],[11,"into_inner","","Drops the decoder and return the inner `BufRead` instance.",1,[[["self"]],["r"]]],[11,"total_in","","Returns the total bytes read from the underlying `BufRead` instance.",1,[[["self"]],["u64"]]],[11,"total_out","","Returns the total number of bytes output from this decoder.",1,[[["self"]],["u64"]]],[11,"current_checksum","","Returns the calculated checksum value of the currently decoded data.",1,[[["self"]],["u32"]]],[11,"read","","",1,N],[11,"new","","Create a new `Deflatedecoderbuf` to read from a raw deflate stream.",2,[[["r"]],["deflatedecoder"]]],[11,"from_zlib","","Create a new `DeflateDecoderbuf` that reads from a zlib wrapped deflate stream.",2,[[["r"]],["deflatedecoder"]]],[11,"from_zlib_no_checksum","","Create a new `DeflateDecoderbuf` that reads from a zlib wrapped deflate stream. without calculating and validating the checksum.",2,[[["r"]],["deflatedecoder"]]],[11,"reset","","Resets the decompressor, and replaces the current inner `BufRead` instance by `r`. without doing any extra reallocations.",2,[[["self"],["r"]],["r"]]],[11,"get_ref","","Returns a reference to the underlying reader.",2,[[["self"]],["r"]]],[11,"get_mut","","Returns a mutable reference to the underlying reader.",2,[[["self"]],["r"]]],[11,"into_inner","","Returns the total number of bytes output from this decoder.",2,[[["self"]],["r"]]],[11,"reset_data","","Resets the decoder, but continue to read from the same reader.",2,[[["self"]]]],[11,"total_in","","Returns the total bytes read from the underlying reader.",2,[[["self"]],["u64"]]],[11,"total_out","","Returns the total number of bytes output from this decoder.",2,[[["self"]],["u64"]]],[11,"current_checksum","","Returns the calculated checksum value of the currently decoded data.",2,[[["self"]],["u32"]]],[11,"read","","",2,N],[11,"new","","Create a new stream for decoding raw deflate encoded data.",3,[[],["inflatestream"]]],[11,"from_zlib","","Create a new stream for decoding deflate encoded data with a zlib header and footer",3,[[],["inflatestream"]]],[11,"from_zlib_no_checksum","","Create a new stream for decoding deflate encoded data with a zlib header and footer",3,[[],["inflatestream"]]],[11,"reset","","",3,[[["self"]]]],[11,"reset_to_zlib","","",3,[[["self"]]]],[11,"update","","Try to uncompress/decode the data in `data`.",3,N],[11,"current_checksum","","Returns the calculated checksum value of the currently decoded data.",3,[[["self"]],["u32"]]]],"paths":[[3,"InflateWriter"],[3,"DeflateDecoderBuf"],[3,"DeflateDecoder"],[3,"InflateStream"]]};
searchIndex["input"]={"doc":"A flexible structure for user interactions to be used in window frameworks and widgets libraries.","items":[[3,"AfterRenderArgs","input","After render arguments.",N,N],[3,"CloseArgs","","Close arguments.",N,N],[3,"IdleArgs","","Idle arguments, such as expected idle time in seconds.",N,N],[12,"dt","","Expected idle time in seconds.",0,N],[3,"ButtonArgs","","Button arguments",N,N],[12,"state","","New state of the button.",1,N],[12,"button","","The button that changed state.",1,N],[12,"scancode","","An optional scancode that tells the physical layout of a keyboard key. For other devices than keyboard, this is set to `None`.",1,N],[3,"RenderArgs","","Render arguments",N,N],[12,"ext_dt","","Extrapolated time in seconds, used to do smooth animation.",2,N],[12,"width","","The width of rendered area in points.",2,N],[12,"height","","The height of rendered area in points.",2,N],[12,"draw_width","","The width of rendered area in pixels.",2,N],[12,"draw_height","","The height of rendered area in pixels.",2,N],[3,"TouchArgs","","Touch arguments",N,N],[12,"device","","A unique identifier for touch device.",3,N],[12,"id","","A unique identifier for touch event.",3,N],[12,"x","","The x coordinate of the touch position, normalized 0..1.",3,N],[12,"y","","The y coordinate of the touch position, normalized 0..1.",3,N],[12,"z","","The z coordinate of the touch position, normalized 0..1.",3,N],[12,"px","","The x coordinate of the touch pressure direction.",3,N],[12,"py","","The y coordinate of the touch pressure direction.",3,N],[12,"pz","","The z coordinate of the touch pressure direction.",3,N],[12,"is_3d","","Whether the touch is in 3D.",3,N],[12,"touch","","The touch state.",3,N],[3,"UpdateArgs","","Update arguments, such as delta time in seconds",N,N],[12,"dt","","Delta time in seconds.",4,N],[3,"EventId","","Used to identify events arguments provided by traits.",N,N],[12,"0","","",5,N],[4,"ButtonState","","Stores button state.",N,N],[13,"Press","","Button was pressed.",6,N],[13,"Release","","Button was released.",6,N],[4,"Touch","","Stores the touch state.",N,N],[13,"Start","","The start of touch, for example a finger pressed down on a touch screen.",7,N],[13,"Move","","The move of touch, for example a finger moving while touching a touch screen.",7,N],[13,"End","","The end of touch, for example taking a finger away from a touch screen.",7,N],[13,"Cancel","","The cancel of touch, for example the window loses focus.",7,N],[4,"Button","","Models different kinds of buttons.",N,N],[13,"Keyboard","","A keyboard button.",8,N],[13,"Mouse","","A mouse button.",8,N],[13,"Controller","","A controller button.",8,N],[13,"Hat","","A controller hat (d-Pad)",8,N],[4,"Motion","","Models different kinds of motion.",N,N],[13,"MouseCursor","","x and y in window coordinates.",9,N],[13,"MouseRelative","","x and y in relative coordinates.",9,N],[13,"MouseScroll","","x and y in scroll ticks.",9,N],[13,"ControllerAxis","","controller axis move event.",9,N],[13,"Touch","","touch event.",9,N],[4,"HatState","","",N,N],[13,"Centered","","",10,N],[13,"Up","","",10,N],[13,"Right","","",10,N],[13,"Down","","",10,N],[13,"Left","","",10,N],[13,"RightUp","","",10,N],[13,"RightDown","","",10,N],[13,"LeftUp","","",10,N],[13,"LeftDown","","",10,N],[4,"Input","","Models input events.",N,N],[13,"Button","","Changed button state.",11,N],[13,"Move","","Moved mouse cursor.",11,N],[13,"Text","","Text (usually from keyboard).",11,N],[13,"Resize","","Window got resized.",11,N],[13,"Focus","","Window gained or lost focus.",11,N],[13,"Cursor","","Window gained or lost cursor.",11,N],[13,"Close","","Window closed.",11,N],[4,"Loop","","Models loop events.",N,N],[13,"Render","","Render graphics.",12,N],[13,"AfterRender","","After rendering and swapping buffers.",12,N],[13,"Update","","Update the state of the application.",12,N],[13,"Idle","","Do background tasks that can be done incrementally.",12,N],[4,"Event","","Models all events.",N,N],[13,"Input","","Input events.",13,N],[13,"Loop","","Events that commonly used by event loops.",13,N],[13,"Custom","","Custom event.",13,N],[0,"controller","","Back-end agnostic controller events.",N,N],[3,"ControllerButton","input::controller","Components of a controller button event. Not guaranteed consistent across backends.",N,N],[12,"id","","Which controller was the button on.",14,N],[12,"button","","Which button was pressed.",14,N],[3,"ControllerHat","","Components of a controller hat move event (d-Pad).",N,N],[12,"id","","Which Controller was the button on.",15,N],[12,"state","","Which button was pressed.",15,N],[12,"which","","Which hat on the controller was changed",15,N],[3,"ControllerAxisArgs","","Components of a controller axis move event. Not guaranteed consistent across backends.",N,N],[12,"id","","Which controller moved.",16,N],[12,"axis","","The axis that moved.",16,N],[12,"position","","Position of the controller. Usually [-1.0, 1.0], though backends may use a different range for various devices.",16,N],[8,"ControllerAxisEvent","","The position of a controller axis changed.",N,N],[10,"from_controller_axis_args","","Creates a controller axis event.",17,[[["controlleraxisargs"],["self"]],["option"]]],[10,"controller_axis","","Calls closure if this is a controller axis event.",17,[[["self"],["f"]],["option"]]],[11,"controller_axis_args","","Returns controller axis arguments.",17,[[["self"]],["option",["controlleraxisargs"]]]],[11,"clone","","",14,[[["self"]],["controllerbutton"]]],[11,"eq","","",14,[[["self"],["controllerbutton"]],["bool"]]],[11,"ne","","",14,[[["self"],["controllerbutton"]],["bool"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"hash","","",14,N],[11,"new","","Create a new ControllerButton object. Intended for use by backends when emitting events.",14,[[["i32"],["u8"]],["self"]]],[11,"clone","","",15,[[["self"]],["controllerhat"]]],[11,"eq","","",15,[[["self"],["controllerhat"]],["bool"]]],[11,"ne","","",15,[[["self"],["controllerhat"]],["bool"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"hash","","",15,N],[11,"new","","Create a new ControllerButton object. Intended for use by backends when emitting events.",15,[[["i32"],["u8"],["hatstate"]],["self"]]],[11,"clone","","",16,[[["self"]],["controlleraxisargs"]]],[11,"eq","","",16,[[["self"],["controlleraxisargs"]],["bool"]]],[11,"ne","","",16,[[["self"],["controlleraxisargs"]],["bool"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new ControllerAxisArgs object. Intended for use by backends when emitting events.",16,[[["i32"],["u8"],["f64"]],["self"]]],[11,"from_controller_axis_args","input","",13,[[["controlleraxisargs"],["self"]],["option"]]],[11,"controller_axis","","",13,[[["self"],["f"]],["option"]]],[0,"keyboard","","Back-end agnostic keyboard keys.",N,N],[3,"ModifierKey","input::keyboard","",N,N],[4,"Key","","Represent a keyboard key. Keycodes follows SDL http://wiki.libsdl.org/SDLKeycodeLookup",N,N],[13,"Unknown","","",18,N],[13,"Backspace","","",18,N],[13,"Tab","","",18,N],[13,"Return","","",18,N],[13,"Escape","","",18,N],[13,"Space","","",18,N],[13,"Exclaim","","",18,N],[13,"Quotedbl","","",18,N],[13,"Hash","","",18,N],[13,"Dollar","","",18,N],[13,"Percent","","",18,N],[13,"Ampersand","","",18,N],[13,"Quote","","",18,N],[13,"LeftParen","","",18,N],[13,"RightParen","","",18,N],[13,"Asterisk","","",18,N],[13,"Plus","","",18,N],[13,"Comma","","",18,N],[13,"Minus","","",18,N],[13,"Period","","",18,N],[13,"Slash","","",18,N],[13,"D0","","",18,N],[13,"D1","","",18,N],[13,"D2","","",18,N],[13,"D3","","",18,N],[13,"D4","","",18,N],[13,"D5","","",18,N],[13,"D6","","",18,N],[13,"D7","","",18,N],[13,"D8","","",18,N],[13,"D9","","",18,N],[13,"Colon","","",18,N],[13,"Semicolon","","",18,N],[13,"Less","","",18,N],[13,"Equals","","",18,N],[13,"Greater","","",18,N],[13,"Question","","",18,N],[13,"At","","",18,N],[13,"LeftBracket","","",18,N],[13,"Backslash","","",18,N],[13,"RightBracket","","",18,N],[13,"Caret","","",18,N],[13,"Underscore","","",18,N],[13,"Backquote","","",18,N],[13,"A","","",18,N],[13,"B","","",18,N],[13,"C","","",18,N],[13,"D","","",18,N],[13,"E","","",18,N],[13,"F","","",18,N],[13,"G","","",18,N],[13,"H","","",18,N],[13,"I","","",18,N],[13,"J","","",18,N],[13,"K","","",18,N],[13,"L","","",18,N],[13,"M","","",18,N],[13,"N","","",18,N],[13,"O","","",18,N],[13,"P","","",18,N],[13,"Q","","",18,N],[13,"R","","",18,N],[13,"S","","",18,N],[13,"T","","",18,N],[13,"U","","",18,N],[13,"V","","",18,N],[13,"W","","",18,N],[13,"X","","",18,N],[13,"Y","","",18,N],[13,"Z","","",18,N],[13,"Delete","","",18,N],[13,"CapsLock","","",18,N],[13,"F1","","",18,N],[13,"F2","","",18,N],[13,"F3","","",18,N],[13,"F4","","",18,N],[13,"F5","","",18,N],[13,"F6","","",18,N],[13,"F7","","",18,N],[13,"F8","","",18,N],[13,"F9","","",18,N],[13,"F10","","",18,N],[13,"F11","","",18,N],[13,"F12","","",18,N],[13,"PrintScreen","","",18,N],[13,"ScrollLock","","",18,N],[13,"Pause","","",18,N],[13,"Insert","","",18,N],[13,"Home","","",18,N],[13,"PageUp","","",18,N],[13,"End","","",18,N],[13,"PageDown","","",18,N],[13,"Right","","",18,N],[13,"Left","","",18,N],[13,"Down","","",18,N],[13,"Up","","",18,N],[13,"NumLockClear","","",18,N],[13,"NumPadDivide","","",18,N],[13,"NumPadMultiply","","",18,N],[13,"NumPadMinus","","",18,N],[13,"NumPadPlus","","",18,N],[13,"NumPadEnter","","",18,N],[13,"NumPad1","","",18,N],[13,"NumPad2","","",18,N],[13,"NumPad3","","",18,N],[13,"NumPad4","","",18,N],[13,"NumPad5","","",18,N],[13,"NumPad6","","",18,N],[13,"NumPad7","","",18,N],[13,"NumPad8","","",18,N],[13,"NumPad9","","",18,N],[13,"NumPad0","","",18,N],[13,"NumPadPeriod","","",18,N],[13,"Application","","",18,N],[13,"Power","","",18,N],[13,"NumPadEquals","","",18,N],[13,"F13","","",18,N],[13,"F14","","",18,N],[13,"F15","","",18,N],[13,"F16","","",18,N],[13,"F17","","",18,N],[13,"F18","","",18,N],[13,"F19","","",18,N],[13,"F20","","",18,N],[13,"F21","","",18,N],[13,"F22","","",18,N],[13,"F23","","",18,N],[13,"F24","","",18,N],[13,"Execute","","",18,N],[13,"Help","","",18,N],[13,"Menu","","",18,N],[13,"Select","","",18,N],[13,"Stop","","",18,N],[13,"Again","","",18,N],[13,"Undo","","",18,N],[13,"Cut","","",18,N],[13,"Copy","","",18,N],[13,"Paste","","",18,N],[13,"Find","","",18,N],[13,"Mute","","",18,N],[13,"VolumeUp","","",18,N],[13,"VolumeDown","","",18,N],[13,"NumPadComma","","",18,N],[13,"NumPadEqualsAS400","","",18,N],[13,"AltErase","","",18,N],[13,"Sysreq","","",18,N],[13,"Cancel","","",18,N],[13,"Clear","","",18,N],[13,"Prior","","",18,N],[13,"Return2","","",18,N],[13,"Separator","","",18,N],[13,"Out","","",18,N],[13,"Oper","","",18,N],[13,"ClearAgain","","",18,N],[13,"CrSel","","",18,N],[13,"ExSel","","",18,N],[13,"NumPad00","","",18,N],[13,"NumPad000","","",18,N],[13,"ThousandsSeparator","","",18,N],[13,"DecimalSeparator","","",18,N],[13,"CurrencyUnit","","",18,N],[13,"CurrencySubUnit","","",18,N],[13,"NumPadLeftParen","","",18,N],[13,"NumPadRightParen","","",18,N],[13,"NumPadLeftBrace","","",18,N],[13,"NumPadRightBrace","","",18,N],[13,"NumPadTab","","",18,N],[13,"NumPadBackspace","","",18,N],[13,"NumPadA","","",18,N],[13,"NumPadB","","",18,N],[13,"NumPadC","","",18,N],[13,"NumPadD","","",18,N],[13,"NumPadE","","",18,N],[13,"NumPadF","","",18,N],[13,"NumPadXor","","",18,N],[13,"NumPadPower","","",18,N],[13,"NumPadPercent","","",18,N],[13,"NumPadLess","","",18,N],[13,"NumPadGreater","","",18,N],[13,"NumPadAmpersand","","",18,N],[13,"NumPadDblAmpersand","","",18,N],[13,"NumPadVerticalBar","","",18,N],[13,"NumPadDblVerticalBar","","",18,N],[13,"NumPadColon","","",18,N],[13,"NumPadHash","","",18,N],[13,"NumPadSpace","","",18,N],[13,"NumPadAt","","",18,N],[13,"NumPadExclam","","",18,N],[13,"NumPadMemStore","","",18,N],[13,"NumPadMemRecall","","",18,N],[13,"NumPadMemClear","","",18,N],[13,"NumPadMemAdd","","",18,N],[13,"NumPadMemSubtract","","",18,N],[13,"NumPadMemMultiply","","",18,N],[13,"NumPadMemDivide","","",18,N],[13,"NumPadPlusMinus","","",18,N],[13,"NumPadClear","","",18,N],[13,"NumPadClearEntry","","",18,N],[13,"NumPadBinary","","",18,N],[13,"NumPadOctal","","",18,N],[13,"NumPadDecimal","","",18,N],[13,"NumPadHexadecimal","","",18,N],[13,"LCtrl","","",18,N],[13,"LShift","","",18,N],[13,"LAlt","","",18,N],[13,"LGui","","",18,N],[13,"RCtrl","","",18,N],[13,"RShift","","",18,N],[13,"RAlt","","",18,N],[13,"RGui","","",18,N],[13,"Mode","","",18,N],[13,"AudioNext","","",18,N],[13,"AudioPrev","","",18,N],[13,"AudioStop","","",18,N],[13,"AudioPlay","","",18,N],[13,"AudioMute","","",18,N],[13,"MediaSelect","","",18,N],[13,"Www","","",18,N],[13,"Mail","","",18,N],[13,"Calculator","","",18,N],[13,"Computer","","",18,N],[13,"AcSearch","","",18,N],[13,"AcHome","","",18,N],[13,"AcBack","","",18,N],[13,"AcForward","","",18,N],[13,"AcStop","","",18,N],[13,"AcRefresh","","",18,N],[13,"AcBookmarks","","",18,N],[13,"BrightnessDown","","",18,N],[13,"BrightnessUp","","",18,N],[13,"DisplaySwitch","","",18,N],[13,"KbdIllumToggle","","",18,N],[13,"KbdIllumDown","","",18,N],[13,"KbdIllumUp","","",18,N],[13,"Eject","","",18,N],[13,"Sleep","","",18,N],[11,"eq","","",19,[[["self"],["modifierkey"]],["bool"]]],[11,"ne","","",19,[[["self"],["modifierkey"]],["bool"]]],[11,"clone","","",19,[[["self"]],["modifierkey"]]],[11,"partial_cmp","","",19,[[["self"],["modifierkey"]],["option",["ordering"]]]],[11,"lt","","",19,[[["self"],["modifierkey"]],["bool"]]],[11,"le","","",19,[[["self"],["modifierkey"]],["bool"]]],[11,"gt","","",19,[[["self"],["modifierkey"]],["bool"]]],[11,"ge","","",19,[[["self"],["modifierkey"]],["bool"]]],[11,"cmp","","",19,[[["self"],["modifierkey"]],["ordering"]]],[11,"hash","","",19,N],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[18,"NO_MODIFIER","","No modifier.",19,N],[18,"CTRL","","Ctrl.",19,N],[18,"SHIFT","","Shift.",19,N],[18,"ALT","","Alt.",19,N],[18,"GUI","","Gui.",19,N],[18,"CTRL_SHIFT","","Ctrl + Shift.",19,N],[18,"CTRL_ALT","","Ctrl + Alt.",19,N],[18,"CTRL_GUI","","Ctrl + Gui.",19,N],[18,"CTRL_SHIFT_ALT","","Ctrl + Shift + Alt.",19,N],[18,"CTRL_SHIFT_GUI","","Ctrl + Shift + Gui.",19,N],[18,"CTRL_SHIFT_ALT_GUI","","Ctrl + Shift + Alt + Gui.",19,N],[18,"SHIFT_ALT","","Shift + Alt.",19,N],[18,"SHIFT_GUI","","Shift + Gui.",19,N],[18,"SHIFT_ALT_GUI","","Shift + Alt + Gui.",19,N],[18,"ALT_GUI","","Alt + Gui.",19,N],[11,"empty","","Returns an empty set of flags.",19,[[],["modifierkey"]]],[11,"all","","Returns the set containing all flags.",19,[[],["modifierkey"]]],[11,"bits","","Returns the raw value of the flags currently stored.",19,[[["self"]],["u8"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",19,[[["u8"]],["option",["modifierkey"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",19,[[["u8"]],["modifierkey"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",19,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",19,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",19,[[["self"],["modifierkey"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",19,[[["self"],["modifierkey"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",19,[[["self"],["modifierkey"]]]],[11,"remove","","Removes the specified flags in-place.",19,[[["self"],["modifierkey"]]]],[11,"toggle","","Toggles the specified flags in-place.",19,[[["self"],["modifierkey"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",19,[[["self"],["modifierkey"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",19,[[["self"],["modifierkey"]],["modifierkey"]]],[11,"bitor_assign","","Adds the set of flags.",19,[[["self"],["modifierkey"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",19,[[["self"],["modifierkey"]],["modifierkey"]]],[11,"bitxor_assign","","Toggles the set of flags.",19,[[["self"],["modifierkey"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",19,[[["self"],["modifierkey"]],["modifierkey"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",19,[[["self"],["modifierkey"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",19,[[["self"],["modifierkey"]],["modifierkey"]]],[11,"sub_assign","","Disables all flags enabled in the set.",19,[[["self"],["modifierkey"]]]],[11,"not","","Returns the complement of this set of flags.",19,[[["self"]],["modifierkey"]]],[11,"extend","","",19,[[["self"],["t"]]]],[11,"from_iter","","",19,[[["t"]],["modifierkey"]]],[11,"event","","Change modifier key state depending on input.",19,[[["self"],["e"]]]],[11,"default","","",19,[[],["modifierkey"]]],[11,"clone","","",18,[[["self"]],["key"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"hash","","",18,N],[11,"from","","",18,[[["u32"]],["key"]]],[11,"eq","","",18,[[["self"],["key"]],["bool"]]],[11,"partial_cmp","","",18,[[["self"],["key"]],["option",["ordering"]]]],[11,"cmp","","",18,[[["self"],["key"]],["ordering"]]],[11,"code","","Returns an id of the key",18,[[["self"]],["i32"]]],[0,"mouse","input","Back-end agnostic mouse buttons.",N,N],[4,"MouseButton","input::mouse","Represent a mouse button.",N,N],[13,"Unknown","","Unknown mouse button.",20,N],[13,"Left","","Left mouse button.",20,N],[13,"Right","","Right mouse button.",20,N],[13,"Middle","","Middle mouse button.",20,N],[13,"X1","","Extra mouse button number 1.",20,N],[13,"X2","","Extra mouse button number 2.",20,N],[13,"Button6","","Mouse button number 6.",20,N],[13,"Button7","","Mouse button number 7.",20,N],[13,"Button8","","Mouse button number 8.",20,N],[8,"MouseCursorEvent","","The position of the mouse cursor",N,N],[10,"from_xy","","Creates a mouse cursor event.",21,[[["f64"],["f64"],["self"]],["option"]]],[10,"mouse_cursor","","Calls closure if this is a mouse cursor event.",21,[[["self"],["f"]],["option"]]],[11,"mouse_cursor_args","","Returns mouse cursor arguments.",21,[[["self"]],["option"]]],[8,"MouseRelativeEvent","","The relative movement of mouse cursor",N,N],[10,"from_xy","","Creates a mouse relative event.",22,[[["f64"],["f64"],["self"]],["option"]]],[10,"mouse_relative","","Calls closure if this is a mouse relative event.",22,[[["self"],["f"]],["option"]]],[11,"mouse_relative_args","","Returns mouse relative arguments.",22,[[["self"]],["option"]]],[8,"MouseScrollEvent","","The scroll of the mouse wheel",N,N],[10,"from_xy","","Creates a mouse scroll event.",23,[[["f64"],["f64"],["self"]],["option"]]],[10,"mouse_scroll","","Calls a closure if this is a mouse scroll event.",23,[[["self"],["f"]],["option"]]],[11,"mouse_scroll_args","","Returns mouse scroll arguments.",23,[[["self"]],["option"]]],[11,"clone","","",20,[[["self"]],["mousebutton"]]],[11,"eq","","",20,[[["self"],["mousebutton"]],["bool"]]],[11,"cmp","","",20,[[["self"],["mousebutton"]],["ordering"]]],[11,"partial_cmp","","",20,[[["self"],["mousebutton"]],["option",["ordering"]]]],[11,"hash","","",20,N],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"from","","",20,[[["u32"]],["mousebutton"]]],[11,"from_xy","input","",13,[[["f64"],["f64"],["self"]],["option"]]],[11,"mouse_cursor","","",13,[[["self"],["f"]],["option"]]],[11,"from_xy","","",13,[[["f64"],["f64"],["self"]],["option"]]],[11,"mouse_relative","","",13,[[["self"],["f"]],["option"]]],[11,"from_xy","","",13,[[["f64"],["f64"],["self"]],["option"]]],[11,"mouse_scroll","","",13,[[["self"],["f"]],["option"]]],[0,"generic_event","","Trait for generic events",N,N],[8,"GenericEvent","input::generic_event","Implemented by all events",N,N],[10,"event_id","","The id of this event.",24,[[["self"]],["eventid"]]],[10,"with_args","","Calls closure with arguments",24,[[["self"],["f"]],["u"]]],[11,"event_id","input","",13,[[["self"]],["eventid"]]],[11,"with_args","","",13,[[["self"],["f"]],["u"]]],[11,"clone","","",25,[[["self"]],["afterrenderargs"]]],[11,"eq","","",25,[[["self"],["afterrenderargs"]],["bool"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"from_after_render_args","","",13,[[["afterrenderargs"],["self"]],["option"]]],[11,"after_render","","",13,[[["self"],["f"]],["option"]]],[11,"clone","","",6,[[["self"]],["buttonstate"]]],[11,"eq","","",6,[[["self"],["buttonstate"]],["bool"]]],[11,"hash","","",6,N],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["buttonargs"]]],[11,"eq","","",1,[[["self"],["buttonargs"]],["bool"]]],[11,"ne","","",1,[[["self"],["buttonargs"]],["bool"]]],[11,"hash","","",1,N],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"from_button_args","","",13,[[["buttonargs"],["self"]],["option"]]],[11,"button","","",13,[[["self"],["f"]],["option"]]],[11,"clone","","",26,[[["self"]],["closeargs"]]],[11,"eq","","",26,[[["self"],["closeargs"]],["bool"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"from_close_args","","",13,[[["closeargs"],["self"]],["option"]]],[11,"close","","",13,[[["self"],["f"]],["option"]]],[11,"from_cursor","","",13,[[["bool"],["self"]],["option"]]],[11,"cursor","","",13,[[["self"],["f"]],["option"]]],[11,"from_focused","","",13,[[["bool"],["self"]],["option"]]],[11,"focus","","",13,[[["self"],["f"]],["option"]]],[11,"clone","","",0,[[["self"]],["idleargs"]]],[11,"eq","","",0,[[["self"],["idleargs"]],["bool"]]],[11,"ne","","",0,[[["self"],["idleargs"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"from_idle_args","","",13,[[["idleargs"],["self"]],["option"]]],[11,"idle","","",13,[[["self"],["f"]],["option"]]],[11,"clone","","",2,[[["self"]],["renderargs"]]],[11,"eq","","",2,[[["self"],["renderargs"]],["bool"]]],[11,"ne","","",2,[[["self"],["renderargs"]],["bool"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"viewport","","Returns viewport information filling entire render area.",2,[[["self"]],["viewport"]]],[11,"from_render_args","","",13,[[["renderargs"],["self"]],["option"]]],[11,"render","","",13,[[["self"],["f"]],["option"]]],[11,"from_width_height","","",13,[[["u32"],["u32"],["self"]],["option"]]],[11,"resize","","",13,[[["self"],["f"]],["option"]]],[11,"from_text","","",13,[[["str"],["self"]],["option"]]],[11,"text","","",13,[[["self"],["f"]],["option"]]],[11,"clone","","",7,[[["self"]],["touch"]]],[11,"eq","","",7,[[["self"],["touch"]],["bool"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"clone","","",3,[[["self"]],["touchargs"]]],[11,"eq","","",3,[[["self"],["touchargs"]],["bool"]]],[11,"ne","","",3,[[["self"],["touchargs"]],["bool"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates arguments for 2D touch.",3,N],[11,"new_3d","","Creates arguments for 3D touch.",3,N],[11,"position","","The position of the touch in 2D.",3,N],[11,"position_3d","","The position of the touch in 3D.",3,N],[11,"pressure","","The pressure magnitude, normalized 0..1.",3,[[["self"]],["f64"]]],[11,"pressure_3d","","The pressure vector in 3D.",3,N],[11,"from_touch_args","","",13,[[["touchargs"],["self"]],["option"]]],[11,"touch","","",13,[[["self"],["f"]],["option"]]],[11,"clone","","",4,[[["self"]],["updateargs"]]],[11,"eq","","",4,[[["self"],["updateargs"]],["bool"]]],[11,"ne","","",4,[[["self"],["updateargs"]],["bool"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"from_update_args","","",13,[[["updateargs"],["self"]],["option"]]],[11,"update","","",13,[[["self"],["f"]],["option"]]],[8,"AfterRenderEvent","","After rendering and buffers are swapped.",N,N],[10,"from_after_render_args","","Creates an after render event.",27,[[["afterrenderargs"],["self"]],["option"]]],[10,"after_render","","Calls closure if this is an after render event.",27,[[["self"],["f"]],["option"]]],[11,"after_render_args","","Returns after render arguments.",27,[[["self"]],["option",["afterrenderargs"]]]],[8,"CloseEvent","","Window is closing.",N,N],[10,"from_close_args","","Creates a close event from arguments.",28,[[["closeargs"],["self"]],["option"]]],[10,"close","","Calls closure if this is a close event.",28,[[["self"],["f"]],["option"]]],[11,"close_args","","Returns close arguments.",28,[[["self"]],["option",["closeargs"]]]],[8,"CursorEvent","","When window gets or loses cursor",N,N],[10,"from_cursor","","Creates a cursor event.",29,[[["bool"],["self"]],["option"]]],[10,"cursor","","Calls closure if this is a cursor event.",29,[[["self"],["f"]],["option"]]],[11,"cursor_args","","Returns cursor arguments.",29,[[["self"]],["option",["bool"]]]],[8,"FocusEvent","","When window gets or loses focus",N,N],[10,"from_focused","","Creates a focus event.",30,[[["bool"],["self"]],["option"]]],[10,"focus","","Calls closure if this is a focus event.",30,[[["self"],["f"]],["option"]]],[11,"focus_args","","Returns focus arguments.",30,[[["self"]],["option",["bool"]]]],[8,"IdleEvent","","When background tasks should be performed",N,N],[10,"from_idle_args","","Creates an idle event.",31,[[["idleargs"],["self"]],["option"]]],[11,"from_dt","","Creates an update event with delta time.",31,[[["f64"],["self"]],["option"]]],[10,"idle","","Calls closure if this is an idle event.",31,[[["self"],["f"]],["option"]]],[11,"idle_args","","Returns idle arguments.",31,[[["self"]],["option",["idleargs"]]]],[8,"ButtonEvent","","Changed button state.",N,N],[10,"from_button_args","","Creates a button event.",32,[[["buttonargs"],["self"]],["option"]]],[10,"button","","Calls closure if this is a button event.",32,[[["self"],["f"]],["option"]]],[11,"button_args","","Returns button arguments.",32,[[["self"]],["option",["buttonargs"]]]],[8,"PressEvent","","The press of a button",N,N],[10,"from_button","","Creates a press event.",33,[[["button"],["self"]],["option"]]],[10,"press","","Calls closure if this is a press event.",33,[[["self"],["f"]],["option"]]],[11,"press_args","","Returns press arguments.",33,[[["self"]],["option",["button"]]]],[8,"ReleaseEvent","","The release of a button",N,N],[10,"from_button","","Creates a release event.",34,[[["button"],["self"]],["option"]]],[10,"release","","Calls closure if this is a release event.",34,[[["self"],["f"]],["option"]]],[11,"release_args","","Returns release arguments.",34,[[["self"]],["option",["button"]]]],[8,"ResizeEvent","","When the window is resized",N,N],[10,"from_width_height","","Creates a resize event.",35,[[["u32"],["u32"],["self"]],["option"]]],[10,"resize","","Calls closure if this is a resize event.",35,[[["self"],["f"]],["option"]]],[11,"resize_args","","Returns resize arguments.",35,[[["self"]],["option"]]],[8,"RenderEvent","","When the next frame should be rendered",N,N],[10,"from_render_args","","Creates a render event.",36,[[["renderargs"],["self"]],["option"]]],[10,"render","","Calls closure if this is a render event.",36,[[["self"],["f"]],["option"]]],[11,"render_args","","Returns render arguments.",36,[[["self"]],["option",["renderargs"]]]],[8,"TextEvent","","When receiving text from user, such as typing a character",N,N],[10,"from_text","","Creates a text event.",37,[[["str"],["self"]],["option"]]],[10,"text","","Calls closure if this is a text event.",37,[[["self"],["f"]],["option"]]],[11,"text_args","","Returns text arguments.",37,[[["self"]],["option",["string"]]]],[8,"TouchEvent","","When a touch is started, moved, ended or cancelled.",N,N],[10,"from_touch_args","","Creates a touch event.",38,[[["touchargs"],["self"]],["option"]]],[10,"touch","","Calls closure if this is a touch event.",38,[[["self"],["f"]],["option"]]],[11,"touch_args","","Returns touch arguments.",38,[[["self"]],["option",["touchargs"]]]],[8,"UpdateEvent","","When the application state should be updated",N,N],[10,"from_update_args","","Creates an update event.",39,[[["updateargs"],["self"]],["option"]]],[11,"from_dt","","Creates an update event with delta time.",39,[[["f64"],["self"]],["option"]]],[10,"update","","Calls closure if this is an update event.",39,[[["self"],["f"]],["option"]]],[11,"update_args","","Returns update arguments.",39,[[["self"]],["option",["updateargs"]]]],[11,"clone","","",5,[[["self"]],["eventid"]]],[11,"eq","","",5,[[["self"],["eventid"]],["bool"]]],[11,"ne","","",5,[[["self"],["eventid"]],["bool"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"clone","","",8,[[["self"]],["button"]]],[11,"eq","","",8,[[["self"],["button"]],["bool"]]],[11,"ne","","",8,[[["self"],["button"]],["bool"]]],[11,"hash","","",8,N],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"clone","","",9,[[["self"]],["motion"]]],[11,"eq","","",9,[[["self"],["motion"]],["bool"]]],[11,"ne","","",9,[[["self"],["motion"]],["bool"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"clone","","",10,[[["self"]],["hatstate"]]],[11,"eq","","",10,[[["self"],["hatstate"]],["bool"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"hash","","",10,N],[11,"clone","","",11,[[["self"]],["input"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"eq","","",11,[[["self"],["input"]],["bool"]]],[11,"ne","","",11,[[["self"],["input"]],["bool"]]],[11,"clone","","",12,[[["self"]],["loop"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"eq","","",12,[[["self"],["loop"]],["bool"]]],[11,"ne","","",12,[[["self"],["loop"]],["bool"]]],[11,"clone","","",13,[[["self"]],["event"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"eq","","",13,[[["self"],["event"]],["bool"]]],[11,"from","","",8,[[["key"]],["self"]]],[11,"from","","",8,[[["mousebutton"]],["self"]]],[11,"from","","",8,[[["controllerbutton"]],["self"]]],[11,"from","","",11,[[["buttonargs"]],["self"]]],[11,"from","","",9,[[["controlleraxisargs"]],["self"]]],[11,"from","","",11,[[["controlleraxisargs"]],["self"]]],[11,"from","","",9,[[["touchargs"]],["self"]]],[11,"from","","",11,[[["touchargs"]],["self"]]],[11,"from","","",11,[[["motion"]],["self"]]],[11,"from","","",12,[[["renderargs"]],["self"]]],[11,"from","","",13,[[["renderargs"]],["self"]]],[11,"from","","",12,[[["afterrenderargs"]],["self"]]],[11,"from","","",13,[[["afterrenderargs"]],["self"]]],[11,"from","","",12,[[["updateargs"]],["self"]]],[11,"from","","",13,[[["updateargs"]],["self"]]],[11,"from","","",12,[[["idleargs"]],["self"]]],[11,"from","","",13,[[["idleargs"]],["self"]]],[11,"from","","",11,[[["closeargs"]],["self"]]],[11,"from","","",13,[[["t"]],["self"]]],[11,"from","","",13,[[["loop"]],["self"]]],[11,"into","","",13,[[["self"]],["option",["input"]]]],[11,"into","","",13,[[["self"]],["option",["loop"]]]],[11,"after_render_args","","Returns after render arguments.",27,[[["self"]],["option",["afterrenderargs"]]]],[11,"button_args","","Returns button arguments.",32,[[["self"]],["option",["buttonargs"]]]],[11,"press_args","","Returns press arguments.",33,[[["self"]],["option",["button"]]]],[11,"release_args","","Returns release arguments.",34,[[["self"]],["option",["button"]]]],[11,"close_args","","Returns close arguments.",28,[[["self"]],["option",["closeargs"]]]],[11,"cursor_args","","Returns cursor arguments.",29,[[["self"]],["option",["bool"]]]],[11,"focus_args","","Returns focus arguments.",30,[[["self"]],["option",["bool"]]]],[11,"from_dt","","Creates an update event with delta time.",31,[[["f64"],["self"]],["option"]]],[11,"idle_args","","Returns idle arguments.",31,[[["self"]],["option",["idleargs"]]]],[11,"render_args","","Returns render arguments.",36,[[["self"]],["option",["renderargs"]]]],[11,"resize_args","","Returns resize arguments.",35,[[["self"]],["option"]]],[11,"text_args","","Returns text arguments.",37,[[["self"]],["option",["string"]]]],[11,"touch_args","","Returns touch arguments.",38,[[["self"]],["option",["touchargs"]]]],[11,"from_dt","","Creates an update event with delta time.",39,[[["f64"],["self"]],["option"]]],[11,"update_args","","Returns update arguments.",39,[[["self"]],["option",["updateargs"]]]]],"paths":[[3,"IdleArgs"],[3,"ButtonArgs"],[3,"RenderArgs"],[3,"TouchArgs"],[3,"UpdateArgs"],[3,"EventId"],[4,"ButtonState"],[4,"Touch"],[4,"Button"],[4,"Motion"],[4,"HatState"],[4,"Input"],[4,"Loop"],[4,"Event"],[3,"ControllerButton"],[3,"ControllerHat"],[3,"ControllerAxisArgs"],[8,"ControllerAxisEvent"],[4,"Key"],[3,"ModifierKey"],[4,"MouseButton"],[8,"MouseCursorEvent"],[8,"MouseRelativeEvent"],[8,"MouseScrollEvent"],[8,"GenericEvent"],[3,"AfterRenderArgs"],[3,"CloseArgs"],[8,"AfterRenderEvent"],[8,"CloseEvent"],[8,"CursorEvent"],[8,"FocusEvent"],[8,"IdleEvent"],[8,"ButtonEvent"],[8,"PressEvent"],[8,"ReleaseEvent"],[8,"ResizeEvent"],[8,"RenderEvent"],[8,"TextEvent"],[8,"TouchEvent"],[8,"UpdateEvent"]]};
searchIndex["interpolation"]={"doc":"Interpolation algorithms.","items":[[4,"EaseFunction","interpolation","",N,N],[13,"QuadraticIn","","",0,N],[13,"QuadraticOut","","",0,N],[13,"QuadraticInOut","","",0,N],[13,"CubicIn","","",0,N],[13,"CubicOut","","",0,N],[13,"CubicInOut","","",0,N],[13,"QuarticIn","","",0,N],[13,"QuarticOut","","",0,N],[13,"QuarticInOut","","",0,N],[13,"QuinticIn","","",0,N],[13,"QuinticOut","","",0,N],[13,"QuinticInOut","","",0,N],[13,"SineIn","","",0,N],[13,"SineOut","","",0,N],[13,"SineInOut","","",0,N],[13,"CircularIn","","",0,N],[13,"CircularOut","","",0,N],[13,"CircularInOut","","",0,N],[13,"ExponentialIn","","",0,N],[13,"ExponentialOut","","",0,N],[13,"ExponentialInOut","","",0,N],[13,"ElasticIn","","",0,N],[13,"ElasticOut","","",0,N],[13,"ElasticInOut","","",0,N],[13,"BackIn","","",0,N],[13,"BackOut","","",0,N],[13,"BackInOut","","",0,N],[13,"BounceIn","","",0,N],[13,"BounceOut","","",0,N],[13,"BounceInOut","","",0,N],[5,"lerp","","Performs linear interpolation. A linear interpolation consists of two states 'a' and 'b'. The 't' variable is a factor between 0 and 1 that gives weight to 'a' or 'b'. When 't' is zero then 'a' has full weight. When 't' is one then 'b' has full weight.",N,N],[5,"quad_bez","","Performs quadratic beziér interpolation. This is done by nesting linear interpolations. For more information, see:",N,N],[5,"cub_bez","","Performs cubic beziér interpolation. This is done by interpolation between two quadratic beziér. For more information, see:",N,N],[11,"clone","","",0,[[["self"]],["easefunction"]]],[11,"eq","","",0,[[["self"],["easefunction"]],["bool"]]],[8,"Ease","","",N,N],[10,"calc","","Calculate the eased value, normalized",1,[[["self"],["easefunction"]],["self"]]],[10,"quadratic_in","","",1,[[["self"]],["self"]]],[10,"quadratic_out","","",1,[[["self"]],["self"]]],[10,"quadratic_in_out","","",1,[[["self"]],["self"]]],[10,"cubic_in","","",1,[[["self"]],["self"]]],[10,"cubic_out","","",1,[[["self"]],["self"]]],[10,"cubic_in_out","","",1,[[["self"]],["self"]]],[10,"quartic_in","","",1,[[["self"]],["self"]]],[10,"quartic_out","","",1,[[["self"]],["self"]]],[10,"quartic_in_out","","",1,[[["self"]],["self"]]],[10,"quintic_in","","",1,[[["self"]],["self"]]],[10,"quintic_out","","",1,[[["self"]],["self"]]],[10,"quintic_in_out","","",1,[[["self"]],["self"]]],[10,"sine_in","","",1,[[["self"]],["self"]]],[10,"sine_out","","",1,[[["self"]],["self"]]],[10,"sine_in_out","","",1,[[["self"]],["self"]]],[10,"circular_in","","",1,[[["self"]],["self"]]],[10,"circular_out","","",1,[[["self"]],["self"]]],[10,"circular_in_out","","",1,[[["self"]],["self"]]],[10,"exponential_in","","",1,[[["self"]],["self"]]],[10,"exponential_out","","",1,[[["self"]],["self"]]],[10,"exponential_in_out","","",1,[[["self"]],["self"]]],[10,"elastic_in","","",1,[[["self"]],["self"]]],[10,"elastic_out","","",1,[[["self"]],["self"]]],[10,"elastic_in_out","","",1,[[["self"]],["self"]]],[10,"back_in","","",1,[[["self"]],["self"]]],[10,"back_out","","",1,[[["self"]],["self"]]],[10,"back_in_out","","",1,[[["self"]],["self"]]],[10,"bounce_in","","",1,[[["self"]],["self"]]],[10,"bounce_out","","",1,[[["self"]],["self"]]],[10,"bounce_in_out","","",1,[[["self"]],["self"]]],[8,"Spatial","","Used for interpolation over spatial structures.",N,N],[16,"Scalar","","The scalar type.",2,N],[10,"add","","Add",2,[[["self"],["self"]],["self"]]],[10,"sub","","Subtract",2,[[["self"],["self"]],["self"]]],[10,"scale","","Scales with a scalar.",2,N]],"paths":[[4,"EaseFunction"],[8,"Ease"],[8,"Spatial"]]};
searchIndex["jpeg_decoder"]={"doc":"This crate contains a JPEG decoder.","items":[[3,"Decoder","jpeg_decoder","JPEG decoder",N,N],[3,"ImageInfo","","Represents metadata of an image.",N,N],[12,"width","","The width of the image, in pixels.",0,N],[12,"height","","The height of the image, in pixels.",0,N],[12,"pixel_format","","The pixel format of the image.",0,N],[4,"PixelFormat","","An enumeration over combinations of color spaces and bit depths a pixel can have.",N,N],[13,"L8","","Luminance (grayscale), 8 bits",1,N],[13,"RGB24","","RGB, 8 bits per channel",1,N],[13,"CMYK32","","CMYK, 8 bits per channel",1,N],[4,"Error","","Errors that can occur while decoding a JPEG image.",N,N],[13,"Format","","The image is not formatted properly. The string contains detailed information about the error.",2,N],[13,"Unsupported","","The image makes use of a JPEG feature not (currently) supported by this library.",2,N],[13,"Io","","An I/O error occurred while decoding the image.",2,N],[13,"Internal","","An internal error occurred while decoding the image.",2,N],[4,"UnsupportedFeature","","An enumeration over JPEG features (currently) unsupported by this library.",N,N],[13,"Hierarchical","","Hierarchical JPEG.",3,N],[13,"Lossless","","Lossless JPEG.",3,N],[13,"ArithmeticEntropyCoding","","JPEG using arithmetic entropy coding instead of Huffman coding.",3,N],[13,"SamplePrecision","","Sample precision in bits. 8 bit sample precision is what is currently supported.",3,N],[13,"ComponentCount","","Number of components in an image. 1, 3 and 4 components are currently supported.",3,N],[13,"DNL","","An image can specify a zero height in the frame header and use the DNL (Define Number of Lines) marker at the end of the first scan to define the number of lines in the frame.",3,N],[13,"SubsamplingRatio","","Subsampling ratio.",3,N],[13,"NonIntegerSubsamplingRatio","","A subsampling ratio not representable as an integer.",3,N],[11,"clone","","",1,[[["self"]],["pixelformat"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",1,[[["self"],["pixelformat"]],["bool"]]],[11,"clone","","",0,[[["self"]],["imageinfo"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["imageinfo"]],["bool"]]],[11,"ne","","",0,[[["self"],["imageinfo"]],["bool"]]],[11,"new","","Creates a new `Decoder` using the reader `reader`.",4,[[["r"]],["decoder"]]],[11,"info","","Returns metadata about the image.",4,[[["self"]],["option",["imageinfo"]]]],[11,"read_info","","Tries to read metadata from the image without decoding it.",4,[[["self"]],["result",["error"]]]],[11,"decode","","Decodes the image and returns the decoded pixels if successful.",4,[[["self"]],["result",["vec","error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"cause","","",2,[[["self"]],["option",["stderror"]]]],[11,"from","","",2,[[["ioerror"]],["error"]]],[11,"from","","",2,[[["recverror"]],["error"]]],[11,"from","","",2,[[["senderror"]],["error"]]]],"paths":[[3,"ImageInfo"],[4,"PixelFormat"],[4,"Error"],[4,"UnsupportedFeature"],[3,"Decoder"]]};
searchIndex["lazy_static"]={"doc":"A macro for declaring lazily evaluated statics.","items":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes it if it has not been already.",N,[[["t"]]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy static values.",N,N],[14,"lazy_static","","",N,N]],"paths":[]};
searchIndex["libc"]={"doc":"Crate docs","items":[[3,"group","libc","",N,N],[12,"gr_name","","",0,N],[12,"gr_passwd","","",0,N],[12,"gr_gid","","",0,N],[12,"gr_mem","","",0,N],[3,"utimbuf","","",N,N],[12,"actime","","",1,N],[12,"modtime","","",1,N],[3,"timeval","","",N,N],[12,"tv_sec","","",2,N],[12,"tv_usec","","",2,N],[3,"timespec","","",N,N],[12,"tv_sec","","",3,N],[12,"tv_nsec","","",3,N],[3,"rlimit","","",N,N],[12,"rlim_cur","","",4,N],[12,"rlim_max","","",4,N],[3,"rusage","","",N,N],[12,"ru_utime","","",5,N],[12,"ru_stime","","",5,N],[12,"ru_maxrss","","",5,N],[12,"ru_ixrss","","",5,N],[12,"ru_idrss","","",5,N],[12,"ru_isrss","","",5,N],[12,"ru_minflt","","",5,N],[12,"ru_majflt","","",5,N],[12,"ru_nswap","","",5,N],[12,"ru_inblock","","",5,N],[12,"ru_oublock","","",5,N],[12,"ru_msgsnd","","",5,N],[12,"ru_msgrcv","","",5,N],[12,"ru_nsignals","","",5,N],[12,"ru_nvcsw","","",5,N],[12,"ru_nivcsw","","",5,N],[3,"in_addr","","",N,N],[12,"s_addr","","",6,N],[3,"in6_addr","","",N,N],[12,"s6_addr","","",7,N],[3,"ip_mreq","","",N,N],[12,"imr_multiaddr","","",8,N],[12,"imr_interface","","",8,N],[3,"ipv6_mreq","","",N,N],[12,"ipv6mr_multiaddr","","",9,N],[12,"ipv6mr_interface","","",9,N],[3,"hostent","","",N,N],[12,"h_name","","",10,N],[12,"h_aliases","","",10,N],[12,"h_addrtype","","",10,N],[12,"h_length","","",10,N],[12,"h_addr_list","","",10,N],[3,"iovec","","",N,N],[12,"iov_base","","",11,N],[12,"iov_len","","",11,N],[3,"pollfd","","",N,N],[12,"fd","","",12,N],[12,"events","","",12,N],[12,"revents","","",12,N],[3,"winsize","","",N,N],[12,"ws_row","","",13,N],[12,"ws_col","","",13,N],[12,"ws_xpixel","","",13,N],[12,"ws_ypixel","","",13,N],[3,"linger","","",N,N],[12,"l_onoff","","",14,N],[12,"l_linger","","",14,N],[3,"sigval","","",N,N],[12,"sival_ptr","","",15,N],[3,"itimerval","","",N,N],[12,"it_interval","","",16,N],[12,"it_value","","",16,N],[3,"tms","","",N,N],[12,"tms_utime","","",17,N],[12,"tms_stime","","",17,N],[12,"tms_cutime","","",17,N],[12,"tms_cstime","","",17,N],[3,"servent","","",N,N],[12,"s_name","","",18,N],[12,"s_aliases","","",18,N],[12,"s_port","","",18,N],[12,"s_proto","","",18,N],[3,"protoent","","",N,N],[12,"p_name","","",19,N],[12,"p_aliases","","",19,N],[12,"p_proto","","",19,N],[3,"sockaddr","","",N,N],[12,"sa_family","","",20,N],[12,"sa_data","","",20,N],[3,"sockaddr_in","","",N,N],[12,"sin_family","","",21,N],[12,"sin_port","","",21,N],[12,"sin_addr","","",21,N],[12,"sin_zero","","",21,N],[3,"sockaddr_in6","","",N,N],[12,"sin6_family","","",22,N],[12,"sin6_port","","",22,N],[12,"sin6_flowinfo","","",22,N],[12,"sin6_addr","","",22,N],[12,"sin6_scope_id","","",22,N],[3,"sockaddr_un","","",N,N],[12,"sun_family","","",23,N],[12,"sun_path","","",23,N],[3,"sockaddr_storage","","",N,N],[12,"ss_family","","",24,N],[3,"addrinfo","","",N,N],[12,"ai_flags","","",25,N],[12,"ai_family","","",25,N],[12,"ai_socktype","","",25,N],[12,"ai_protocol","","",25,N],[12,"ai_addrlen","","",25,N],[12,"ai_addr","","",25,N],[12,"ai_canonname","","",25,N],[12,"ai_next","","",25,N],[3,"sockaddr_nl","","",N,N],[12,"nl_family","","",26,N],[12,"nl_pid","","",26,N],[12,"nl_groups","","",26,N],[3,"sockaddr_ll","","",N,N],[12,"sll_family","","",27,N],[12,"sll_protocol","","",27,N],[12,"sll_ifindex","","",27,N],[12,"sll_hatype","","",27,N],[12,"sll_pkttype","","",27,N],[12,"sll_halen","","",27,N],[12,"sll_addr","","",27,N],[3,"fd_set","","",N,N],[3,"tm","","",N,N],[12,"tm_sec","","",28,N],[12,"tm_min","","",28,N],[12,"tm_hour","","",28,N],[12,"tm_mday","","",28,N],[12,"tm_mon","","",28,N],[12,"tm_year","","",28,N],[12,"tm_wday","","",28,N],[12,"tm_yday","","",28,N],[12,"tm_isdst","","",28,N],[12,"tm_gmtoff","","",28,N],[12,"tm_zone","","",28,N],[3,"sched_param","","",N,N],[12,"sched_priority","","",29,N],[3,"Dl_info","","",N,N],[12,"dli_fname","","",30,N],[12,"dli_fbase","","",30,N],[12,"dli_sname","","",30,N],[12,"dli_saddr","","",30,N],[3,"epoll_event","","",N,N],[12,"events","","",31,N],[12,"u64","","",31,N],[3,"utsname","","",N,N],[12,"sysname","","",32,N],[12,"nodename","","",32,N],[12,"release","","",32,N],[12,"version","","",32,N],[12,"machine","","",32,N],[12,"domainname","","",32,N],[3,"lconv","","",N,N],[12,"decimal_point","","",33,N],[12,"thousands_sep","","",33,N],[12,"grouping","","",33,N],[12,"int_curr_symbol","","",33,N],[12,"currency_symbol","","",33,N],[12,"mon_decimal_point","","",33,N],[12,"mon_thousands_sep","","",33,N],[12,"mon_grouping","","",33,N],[12,"positive_sign","","",33,N],[12,"negative_sign","","",33,N],[12,"int_frac_digits","","",33,N],[12,"frac_digits","","",33,N],[12,"p_cs_precedes","","",33,N],[12,"p_sep_by_space","","",33,N],[12,"n_cs_precedes","","",33,N],[12,"n_sep_by_space","","",33,N],[12,"p_sign_posn","","",33,N],[12,"n_sign_posn","","",33,N],[12,"int_p_cs_precedes","","",33,N],[12,"int_p_sep_by_space","","",33,N],[12,"int_n_cs_precedes","","",33,N],[12,"int_n_sep_by_space","","",33,N],[12,"int_p_sign_posn","","",33,N],[12,"int_n_sign_posn","","",33,N],[3,"sigevent","","",N,N],[12,"sigev_value","","",34,N],[12,"sigev_signo","","",34,N],[12,"sigev_notify","","",34,N],[12,"sigev_notify_thread_id","","",34,N],[3,"in_pktinfo","","",N,N],[12,"ipi_ifindex","","",35,N],[12,"ipi_spec_dst","","",35,N],[12,"ipi_addr","","",35,N],[3,"ifaddrs","","",N,N],[12,"ifa_next","","",36,N],[12,"ifa_name","","",36,N],[12,"ifa_flags","","",36,N],[12,"ifa_addr","","",36,N],[12,"ifa_netmask","","",36,N],[12,"ifa_ifu","","",36,N],[12,"ifa_data","","",36,N],[3,"in6_rtmsg","","",N,N],[3,"arpreq","","",N,N],[12,"arp_pa","","",37,N],[12,"arp_ha","","",37,N],[12,"arp_flags","","",37,N],[12,"arp_netmask","","",37,N],[12,"arp_dev","","",37,N],[3,"arpreq_old","","",N,N],[12,"arp_pa","","",38,N],[12,"arp_ha","","",38,N],[12,"arp_flags","","",38,N],[12,"arp_netmask","","",38,N],[3,"arphdr","","",N,N],[12,"ar_hrd","","",39,N],[12,"ar_pro","","",39,N],[12,"ar_hln","","",39,N],[12,"ar_pln","","",39,N],[12,"ar_op","","",39,N],[3,"dirent","","",N,N],[12,"d_ino","","",40,N],[12,"d_off","","",40,N],[12,"d_reclen","","",40,N],[12,"d_type","","",40,N],[12,"d_name","","",40,N],[3,"dirent64","","",N,N],[12,"d_ino","","",41,N],[12,"d_off","","",41,N],[12,"d_reclen","","",41,N],[12,"d_type","","",41,N],[12,"d_name","","",41,N],[3,"rlimit64","","",N,N],[12,"rlim_cur","","",42,N],[12,"rlim_max","","",42,N],[3,"glob_t","","",N,N],[12,"gl_pathc","","",43,N],[12,"gl_pathv","","",43,N],[12,"gl_offs","","",43,N],[12,"gl_flags","","",43,N],[3,"pthread_mutex_t","","",N,N],[3,"pthread_rwlock_t","","",N,N],[3,"pthread_mutexattr_t","","",N,N],[3,"pthread_rwlockattr_t","","",N,N],[3,"pthread_cond_t","","",N,N],[3,"pthread_condattr_t","","",N,N],[3,"passwd","","",N,N],[12,"pw_name","","",44,N],[12,"pw_passwd","","",44,N],[12,"pw_uid","","",44,N],[12,"pw_gid","","",44,N],[12,"pw_gecos","","",44,N],[12,"pw_dir","","",44,N],[12,"pw_shell","","",44,N],[3,"spwd","","",N,N],[12,"sp_namp","","",45,N],[12,"sp_pwdp","","",45,N],[12,"sp_lstchg","","",45,N],[12,"sp_min","","",45,N],[12,"sp_max","","",45,N],[12,"sp_warn","","",45,N],[12,"sp_inact","","",45,N],[12,"sp_expire","","",45,N],[12,"sp_flag","","",45,N],[3,"dqblk","","",N,N],[12,"dqb_bhardlimit","","",46,N],[12,"dqb_bsoftlimit","","",46,N],[12,"dqb_curspace","","",46,N],[12,"dqb_ihardlimit","","",46,N],[12,"dqb_isoftlimit","","",46,N],[12,"dqb_curinodes","","",46,N],[12,"dqb_btime","","",46,N],[12,"dqb_itime","","",46,N],[12,"dqb_valid","","",46,N],[3,"signalfd_siginfo","","",N,N],[12,"ssi_signo","","",47,N],[12,"ssi_errno","","",47,N],[12,"ssi_code","","",47,N],[12,"ssi_pid","","",47,N],[12,"ssi_uid","","",47,N],[12,"ssi_fd","","",47,N],[12,"ssi_tid","","",47,N],[12,"ssi_band","","",47,N],[12,"ssi_overrun","","",47,N],[12,"ssi_trapno","","",47,N],[12,"ssi_status","","",47,N],[12,"ssi_int","","",47,N],[12,"ssi_ptr","","",47,N],[12,"ssi_utime","","",47,N],[12,"ssi_stime","","",47,N],[12,"ssi_addr","","",47,N],[3,"itimerspec","","",N,N],[12,"it_interval","","",48,N],[12,"it_value","","",48,N],[3,"fsid_t","","",N,N],[3,"mq_attr","","",N,N],[12,"mq_flags","","",49,N],[12,"mq_maxmsg","","",49,N],[12,"mq_msgsize","","",49,N],[12,"mq_curmsgs","","",49,N],[3,"packet_mreq","","",N,N],[12,"mr_ifindex","","",50,N],[12,"mr_type","","",50,N],[12,"mr_alen","","",50,N],[12,"mr_address","","",50,N],[3,"cpu_set_t","","",N,N],[3,"if_nameindex","","",N,N],[12,"if_index","","",51,N],[12,"if_name","","",51,N],[3,"msginfo","","",N,N],[12,"msgpool","","",52,N],[12,"msgmap","","",52,N],[12,"msgmax","","",52,N],[12,"msgmnb","","",52,N],[12,"msgmni","","",52,N],[12,"msgssz","","",52,N],[12,"msgtql","","",52,N],[12,"msgseg","","",52,N],[3,"mmsghdr","","",N,N],[12,"msg_hdr","","",53,N],[12,"msg_len","","",53,N],[3,"sembuf","","",N,N],[12,"sem_num","","",54,N],[12,"sem_op","","",54,N],[12,"sem_flg","","",54,N],[3,"input_event","","",N,N],[12,"time","","",55,N],[12,"type_","","",55,N],[12,"code","","",55,N],[12,"value","","",55,N],[3,"input_id","","",N,N],[12,"bustype","","",56,N],[12,"vendor","","",56,N],[12,"product","","",56,N],[12,"version","","",56,N],[3,"input_absinfo","","",N,N],[12,"value","","",57,N],[12,"minimum","","",57,N],[12,"maximum","","",57,N],[12,"fuzz","","",57,N],[12,"flat","","",57,N],[12,"resolution","","",57,N],[3,"input_keymap_entry","","",N,N],[12,"flags","","",58,N],[12,"len","","",58,N],[12,"index","","",58,N],[12,"keycode","","",58,N],[12,"scancode","","",58,N],[3,"input_mask","","",N,N],[12,"type_","","",59,N],[12,"codes_size","","",59,N],[12,"codes_ptr","","",59,N],[3,"ff_replay","","",N,N],[12,"length","","",60,N],[12,"delay","","",60,N],[3,"ff_trigger","","",N,N],[12,"button","","",61,N],[12,"interval","","",61,N],[3,"ff_envelope","","",N,N],[12,"attack_length","","",62,N],[12,"attack_level","","",62,N],[12,"fade_length","","",62,N],[12,"fade_level","","",62,N],[3,"ff_constant_effect","","",N,N],[12,"level","","",63,N],[12,"envelope","","",63,N],[3,"ff_ramp_effect","","",N,N],[12,"start_level","","",64,N],[12,"end_level","","",64,N],[12,"envelope","","",64,N],[3,"ff_condition_effect","","",N,N],[12,"right_saturation","","",65,N],[12,"left_saturation","","",65,N],[12,"right_coeff","","",65,N],[12,"left_coeff","","",65,N],[12,"deadband","","",65,N],[12,"center","","",65,N],[3,"ff_periodic_effect","","",N,N],[12,"waveform","","",66,N],[12,"period","","",66,N],[12,"magnitude","","",66,N],[12,"offset","","",66,N],[12,"phase","","",66,N],[12,"envelope","","",66,N],[12,"custom_len","","",66,N],[12,"custom_data","","",66,N],[3,"ff_rumble_effect","","",N,N],[12,"strong_magnitude","","",67,N],[12,"weak_magnitude","","",67,N],[3,"ff_effect","","",N,N],[12,"type_","","",68,N],[12,"id","","",68,N],[12,"direction","","",68,N],[12,"trigger","","",68,N],[12,"replay","","",68,N],[12,"u","","",68,N],[3,"dl_phdr_info","","",N,N],[12,"dlpi_addr","","",69,N],[12,"dlpi_name","","",69,N],[12,"dlpi_phdr","","",69,N],[12,"dlpi_phnum","","",69,N],[12,"dlpi_adds","","",69,N],[12,"dlpi_subs","","",69,N],[12,"dlpi_tls_modid","","",69,N],[12,"dlpi_tls_data","","",69,N],[3,"Elf32_Phdr","","",N,N],[12,"p_type","","",70,N],[12,"p_offset","","",70,N],[12,"p_vaddr","","",70,N],[12,"p_paddr","","",70,N],[12,"p_filesz","","",70,N],[12,"p_memsz","","",70,N],[12,"p_flags","","",70,N],[12,"p_align","","",70,N],[3,"Elf64_Phdr","","",N,N],[12,"p_type","","",71,N],[12,"p_flags","","",71,N],[12,"p_offset","","",71,N],[12,"p_vaddr","","",71,N],[12,"p_paddr","","",71,N],[12,"p_filesz","","",71,N],[12,"p_memsz","","",71,N],[12,"p_align","","",71,N],[3,"ucred","","",N,N],[12,"pid","","",72,N],[12,"uid","","",72,N],[12,"gid","","",72,N],[3,"mntent","","",N,N],[12,"mnt_fsname","","",73,N],[12,"mnt_dir","","",73,N],[12,"mnt_type","","",73,N],[12,"mnt_opts","","",73,N],[12,"mnt_freq","","",73,N],[12,"mnt_passno","","",73,N],[3,"posix_spawn_file_actions_t","","",N,N],[3,"posix_spawnattr_t","","",N,N],[3,"genlmsghdr","","",N,N],[12,"cmd","","",74,N],[12,"version","","",74,N],[12,"reserved","","",74,N],[3,"in6_pktinfo","","",N,N],[12,"ipi6_addr","","",75,N],[12,"ipi6_ifindex","","",75,N],[3,"arpd_request","","",N,N],[12,"req","","",76,N],[12,"ip","","",76,N],[12,"dev","","",76,N],[12,"stamp","","",76,N],[12,"updated","","",76,N],[12,"ha","","",76,N],[3,"aiocb","","",N,N],[12,"aio_fildes","","",77,N],[12,"aio_lio_opcode","","",77,N],[12,"aio_reqprio","","",77,N],[12,"aio_buf","","",77,N],[12,"aio_nbytes","","",77,N],[12,"aio_sigevent","","",77,N],[12,"aio_offset","","",77,N],[3,"__exit_status","","",N,N],[12,"e_termination","","",78,N],[12,"e_exit","","",78,N],[3,"__timeval","","",N,N],[12,"tv_sec","","",79,N],[12,"tv_usec","","",79,N],[3,"utmpx","","",N,N],[12,"ut_type","","",80,N],[12,"ut_pid","","",80,N],[12,"ut_line","","",80,N],[12,"ut_id","","",80,N],[12,"ut_user","","",80,N],[12,"ut_host","","",80,N],[12,"ut_exit","","",80,N],[12,"ut_session","","",80,N],[12,"ut_tv","","",80,N],[12,"ut_addr_v6","","",80,N],[3,"sigaction","","",N,N],[12,"sa_sigaction","","",81,N],[12,"sa_mask","","",81,N],[12,"sa_flags","","",81,N],[12,"sa_restorer","","",81,N],[3,"stack_t","","",N,N],[12,"ss_sp","","",82,N],[12,"ss_flags","","",82,N],[12,"ss_size","","",82,N],[3,"siginfo_t","","",N,N],[12,"si_signo","","",83,N],[12,"si_errno","","",83,N],[12,"si_code","","",83,N],[12,"_pad","","",83,N],[3,"glob64_t","","",N,N],[12,"gl_pathc","","",84,N],[12,"gl_pathv","","",84,N],[12,"gl_offs","","",84,N],[12,"gl_flags","","",84,N],[3,"statfs","","",N,N],[12,"f_type","","",85,N],[12,"f_bsize","","",85,N],[12,"f_blocks","","",85,N],[12,"f_bfree","","",85,N],[12,"f_bavail","","",85,N],[12,"f_files","","",85,N],[12,"f_ffree","","",85,N],[12,"f_fsid","","",85,N],[12,"f_namelen","","",85,N],[12,"f_frsize","","",85,N],[3,"msghdr","","",N,N],[12,"msg_name","","",86,N],[12,"msg_namelen","","",86,N],[12,"msg_iov","","",86,N],[12,"msg_iovlen","","",86,N],[12,"msg_control","","",86,N],[12,"msg_controllen","","",86,N],[12,"msg_flags","","",86,N],[3,"cmsghdr","","",N,N],[12,"cmsg_len","","",87,N],[12,"cmsg_level","","",87,N],[12,"cmsg_type","","",87,N],[3,"termios","","",N,N],[12,"c_iflag","","",88,N],[12,"c_oflag","","",88,N],[12,"c_cflag","","",88,N],[12,"c_lflag","","",88,N],[12,"c_line","","",88,N],[12,"c_cc","","",88,N],[12,"c_ispeed","","",88,N],[12,"c_ospeed","","",88,N],[3,"flock","","",N,N],[12,"l_type","","",89,N],[12,"l_whence","","",89,N],[12,"l_start","","",89,N],[12,"l_len","","",89,N],[12,"l_pid","","",89,N],[3,"sem_t","","",N,N],[3,"mallinfo","","",N,N],[12,"arena","","",90,N],[12,"ordblks","","",90,N],[12,"smblks","","",90,N],[12,"hblks","","",90,N],[12,"hblkhd","","",90,N],[12,"usmblks","","",90,N],[12,"fsmblks","","",90,N],[12,"uordblks","","",90,N],[12,"fordblks","","",90,N],[12,"keepcost","","",90,N],[3,"nlmsghdr","","",N,N],[12,"nlmsg_len","","",91,N],[12,"nlmsg_type","","",91,N],[12,"nlmsg_flags","","",91,N],[12,"nlmsg_seq","","",91,N],[12,"nlmsg_pid","","",91,N],[3,"nlmsgerr","","",N,N],[12,"error","","",92,N],[12,"msg","","",92,N],[3,"nl_pktinfo","","",N,N],[12,"group","","",93,N],[3,"nl_mmap_req","","",N,N],[12,"nm_block_size","","",94,N],[12,"nm_block_nr","","",94,N],[12,"nm_frame_size","","",94,N],[12,"nm_frame_nr","","",94,N],[3,"nl_mmap_hdr","","",N,N],[12,"nm_status","","",95,N],[12,"nm_len","","",95,N],[12,"nm_group","","",95,N],[12,"nm_pid","","",95,N],[12,"nm_uid","","",95,N],[12,"nm_gid","","",95,N],[3,"nlattr","","",N,N],[12,"nla_len","","",96,N],[12,"nla_type","","",96,N],[3,"rtentry","","",N,N],[12,"rt_pad1","","",97,N],[12,"rt_dst","","",97,N],[12,"rt_gateway","","",97,N],[12,"rt_genmask","","",97,N],[12,"rt_flags","","",97,N],[12,"rt_pad2","","",97,N],[12,"rt_pad3","","",97,N],[12,"rt_tos","","",97,N],[12,"rt_class","","",97,N],[12,"rt_pad4","","",97,N],[12,"rt_metric","","",97,N],[12,"rt_dev","","",97,N],[12,"rt_mtu","","",97,N],[12,"rt_window","","",97,N],[12,"rt_irtt","","",97,N],[3,"sigset_t","","",N,N],[3,"sysinfo","","",N,N],[12,"uptime","","",98,N],[12,"loads","","",98,N],[12,"totalram","","",98,N],[12,"freeram","","",98,N],[12,"sharedram","","",98,N],[12,"bufferram","","",98,N],[12,"totalswap","","",98,N],[12,"freeswap","","",98,N],[12,"procs","","",98,N],[12,"pad","","",98,N],[12,"totalhigh","","",98,N],[12,"freehigh","","",98,N],[12,"mem_unit","","",98,N],[12,"_f","","",98,N],[3,"msqid_ds","","",N,N],[12,"msg_perm","","",99,N],[12,"msg_stime","","",99,N],[12,"msg_rtime","","",99,N],[12,"msg_ctime","","",99,N],[12,"msg_qnum","","",99,N],[12,"msg_qbytes","","",99,N],[12,"msg_lspid","","",99,N],[12,"msg_lrpid","","",99,N],[3,"stat","","",N,N],[12,"st_dev","","",100,N],[12,"st_ino","","",100,N],[12,"st_nlink","","",100,N],[12,"st_mode","","",100,N],[12,"st_uid","","",100,N],[12,"st_gid","","",100,N],[12,"st_rdev","","",100,N],[12,"st_size","","",100,N],[12,"st_blksize","","",100,N],[12,"st_blocks","","",100,N],[12,"st_atime","","",100,N],[12,"st_atime_nsec","","",100,N],[12,"st_mtime","","",100,N],[12,"st_mtime_nsec","","",100,N],[12,"st_ctime","","",100,N],[12,"st_ctime_nsec","","",100,N],[3,"stat64","","",N,N],[12,"st_dev","","",101,N],[12,"st_ino","","",101,N],[12,"st_nlink","","",101,N],[12,"st_mode","","",101,N],[12,"st_uid","","",101,N],[12,"st_gid","","",101,N],[12,"st_rdev","","",101,N],[12,"st_size","","",101,N],[12,"st_blksize","","",101,N],[12,"st_blocks","","",101,N],[12,"st_atime","","",101,N],[12,"st_atime_nsec","","",101,N],[12,"st_mtime","","",101,N],[12,"st_mtime_nsec","","",101,N],[12,"st_ctime","","",101,N],[12,"st_ctime_nsec","","",101,N],[3,"statfs64","","",N,N],[12,"f_type","","",102,N],[12,"f_bsize","","",102,N],[12,"f_blocks","","",102,N],[12,"f_bfree","","",102,N],[12,"f_bavail","","",102,N],[12,"f_files","","",102,N],[12,"f_ffree","","",102,N],[12,"f_fsid","","",102,N],[12,"f_namelen","","",102,N],[12,"f_frsize","","",102,N],[12,"f_flags","","",102,N],[12,"f_spare","","",102,N],[3,"statvfs64","","",N,N],[12,"f_bsize","","",103,N],[12,"f_frsize","","",103,N],[12,"f_blocks","","",103,N],[12,"f_bfree","","",103,N],[12,"f_bavail","","",103,N],[12,"f_files","","",103,N],[12,"f_ffree","","",103,N],[12,"f_favail","","",103,N],[12,"f_fsid","","",103,N],[12,"f_flag","","",103,N],[12,"f_namemax","","",103,N],[3,"pthread_attr_t","","",N,N],[3,"_libc_fpxreg","","",N,N],[12,"significand","","",104,N],[12,"exponent","","",104,N],[3,"_libc_xmmreg","","",N,N],[12,"element","","",105,N],[3,"_libc_fpstate","","",N,N],[12,"cwd","","",106,N],[12,"swd","","",106,N],[12,"ftw","","",106,N],[12,"fop","","",106,N],[12,"rip","","",106,N],[12,"rdp","","",106,N],[12,"mxcsr","","",106,N],[12,"mxcr_mask","","",106,N],[12,"_st","","",106,N],[12,"_xmm","","",106,N],[3,"user_fpregs_struct","","",N,N],[12,"cwd","","",107,N],[12,"swd","","",107,N],[12,"ftw","","",107,N],[12,"fop","","",107,N],[12,"rip","","",107,N],[12,"rdp","","",107,N],[12,"mxcsr","","",107,N],[12,"mxcr_mask","","",107,N],[12,"st_space","","",107,N],[12,"xmm_space","","",107,N],[3,"user_regs_struct","","",N,N],[12,"r15","","",108,N],[12,"r14","","",108,N],[12,"r13","","",108,N],[12,"r12","","",108,N],[12,"rbp","","",108,N],[12,"rbx","","",108,N],[12,"r11","","",108,N],[12,"r10","","",108,N],[12,"r9","","",108,N],[12,"r8","","",108,N],[12,"rax","","",108,N],[12,"rcx","","",108,N],[12,"rdx","","",108,N],[12,"rsi","","",108,N],[12,"rdi","","",108,N],[12,"orig_rax","","",108,N],[12,"rip","","",108,N],[12,"cs","","",108,N],[12,"eflags","","",108,N],[12,"rsp","","",108,N],[12,"ss","","",108,N],[12,"fs_base","","",108,N],[12,"gs_base","","",108,N],[12,"ds","","",108,N],[12,"es","","",108,N],[12,"fs","","",108,N],[12,"gs","","",108,N],[3,"user","","",N,N],[12,"regs","","",109,N],[12,"u_fpvalid","","",109,N],[12,"i387","","",109,N],[12,"u_tsize","","",109,N],[12,"u_dsize","","",109,N],[12,"u_ssize","","",109,N],[12,"start_code","","",109,N],[12,"start_stack","","",109,N],[12,"signal","","",109,N],[12,"u_ar0","","",109,N],[12,"u_fpstate","","",109,N],[12,"magic","","",109,N],[12,"u_comm","","",109,N],[12,"u_debugreg","","",109,N],[3,"mcontext_t","","",N,N],[12,"gregs","","",110,N],[12,"fpregs","","",110,N],[3,"ucontext_t","","",N,N],[12,"uc_flags","","",111,N],[12,"uc_link","","",111,N],[12,"uc_stack","","",111,N],[12,"uc_mcontext","","",111,N],[12,"uc_sigmask","","",111,N],[3,"ipc_perm","","",N,N],[12,"__key","","",112,N],[12,"uid","","",112,N],[12,"gid","","",112,N],[12,"cuid","","",112,N],[12,"cgid","","",112,N],[12,"mode","","",112,N],[12,"__seq","","",112,N],[3,"shmid_ds","","",N,N],[12,"shm_perm","","",113,N],[12,"shm_segsz","","",113,N],[12,"shm_atime","","",113,N],[12,"shm_dtime","","",113,N],[12,"shm_ctime","","",113,N],[12,"shm_cpid","","",113,N],[12,"shm_lpid","","",113,N],[12,"shm_nattch","","",113,N],[3,"termios2","","",N,N],[12,"c_iflag","","",114,N],[12,"c_oflag","","",114,N],[12,"c_cflag","","",114,N],[12,"c_lflag","","",114,N],[12,"c_line","","",114,N],[12,"c_cc","","",114,N],[12,"c_ispeed","","",114,N],[12,"c_ospeed","","",114,N],[3,"statvfs","","",N,N],[12,"f_bsize","","",115,N],[12,"f_frsize","","",115,N],[12,"f_blocks","","",115,N],[12,"f_bfree","","",115,N],[12,"f_bavail","","",115,N],[12,"f_files","","",115,N],[12,"f_ffree","","",115,N],[12,"f_favail","","",115,N],[12,"f_fsid","","",115,N],[12,"f_flag","","",115,N],[12,"f_namemax","","",115,N],[4,"c_void","","",N,N],[4,"FILE","","",N,N],[4,"fpos_t","","",N,N],[4,"DIR","","",N,N],[4,"locale_t","","",N,N],[4,"timezone","","",N,N],[4,"fpos64_t","","",N,N],[5,"FD_CLR","","",N,N],[5,"FD_ISSET","","",N,N],[5,"FD_SET","","",N,N],[5,"FD_ZERO","","",N,N],[5,"WIFSTOPPED","","",N,[[["c_int"]],["bool"]]],[5,"WSTOPSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",N,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED","","",N,[[["c_int"]],["bool"]]],[5,"WTERMSIG","","",N,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",N,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",N,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",N,[[["c_int"]],["bool"]]],[5,"QCMD","","",N,[[["c_int"],["c_int"]],["c_int"]]],[5,"IPOPT_COPIED","","",N,[[["u8"]],["u8"]]],[5,"IPOPT_CLASS","","",N,[[["u8"]],["u8"]]],[5,"IPOPT_NUMBER","","",N,[[["u8"]],["u8"]]],[5,"CPU_ZERO","","",N,N],[5,"CPU_SET","","",N,N],[5,"CPU_CLR","","",N,N],[5,"CPU_ISSET","","",N,[[["usize"],["cpu_set_t"]],["bool"]]],[5,"CPU_EQUAL","","",N,[[["cpu_set_t"],["cpu_set_t"]],["bool"]]],[5,"major","","",N,[[["dev_t"]],["c_uint"]]],[5,"minor","","",N,[[["dev_t"]],["c_uint"]]],[5,"makedev","","",N,[[["c_uint"],["c_uint"]],["dev_t"]]],[5,"IPTOS_TOS","","",N,[[["u8"]],["u8"]]],[5,"IPTOS_PREC","","",N,[[["u8"]],["u8"]]],[5,"RT_TOS","","",N,[[["u8"]],["u8"]]],[5,"RT_ADDRCLASS","","",N,[[["u32"]],["u32"]]],[5,"RT_LOCALADDR","","",N,[[["u32"]],["bool"]]],[5,"NLA_ALIGN","","",N,[[["c_int"]],["c_int"]]],[5,"isalnum","","",N,N],[5,"isalpha","","",N,N],[5,"iscntrl","","",N,N],[5,"isdigit","","",N,N],[5,"isgraph","","",N,N],[5,"islower","","",N,N],[5,"isprint","","",N,N],[5,"ispunct","","",N,N],[5,"isspace","","",N,N],[5,"isupper","","",N,N],[5,"isxdigit","","",N,N],[5,"tolower","","",N,N],[5,"toupper","","",N,N],[5,"fopen","","",N,N],[5,"freopen","","",N,N],[5,"fflush","","",N,N],[5,"fclose","","",N,N],[5,"remove","","",N,N],[5,"rename","","",N,N],[5,"tmpfile","","",N,N],[5,"setvbuf","","",N,N],[5,"setbuf","","",N,N],[5,"getchar","","",N,N],[5,"putchar","","",N,N],[5,"fgetc","","",N,N],[5,"fgets","","",N,N],[5,"fputc","","",N,N],[5,"fputs","","",N,N],[5,"puts","","",N,N],[5,"ungetc","","",N,N],[5,"fread","","",N,N],[5,"fwrite","","",N,N],[5,"fseek","","",N,N],[5,"ftell","","",N,N],[5,"rewind","","",N,N],[5,"fgetpos","","",N,N],[5,"fsetpos","","",N,N],[5,"feof","","",N,N],[5,"ferror","","",N,N],[5,"perror","","",N,N],[5,"atoi","","",N,N],[5,"strtod","","",N,N],[5,"strtol","","",N,N],[5,"strtoul","","",N,N],[5,"calloc","","",N,N],[5,"malloc","","",N,N],[5,"realloc","","",N,N],[5,"free","","",N,N],[5,"abort","","",N,N],[5,"exit","","",N,N],[5,"_exit","","",N,N],[5,"atexit","","",N,N],[5,"system","","",N,N],[5,"getenv","","",N,N],[5,"strcpy","","",N,N],[5,"strncpy","","",N,N],[5,"strcat","","",N,N],[5,"strncat","","",N,N],[5,"strcmp","","",N,N],[5,"strncmp","","",N,N],[5,"strcoll","","",N,N],[5,"strchr","","",N,N],[5,"strrchr","","",N,N],[5,"strspn","","",N,N],[5,"strcspn","","",N,N],[5,"strdup","","",N,N],[5,"strpbrk","","",N,N],[5,"strstr","","",N,N],[5,"strlen","","",N,N],[5,"strnlen","","",N,N],[5,"strerror","","",N,N],[5,"strtok","","",N,N],[5,"strxfrm","","",N,N],[5,"wcslen","","",N,N],[5,"wcstombs","","",N,N],[5,"memchr","","",N,N],[5,"memcmp","","",N,N],[5,"memcpy","","",N,N],[5,"memmove","","",N,N],[5,"memset","","",N,N],[5,"abs","","",N,N],[5,"atof","","",N,N],[5,"labs","","",N,N],[5,"rand","","",N,N],[5,"srand","","",N,N],[5,"getpwnam","","",N,N],[5,"getpwuid","","",N,N],[5,"fprintf","","",N,N],[5,"printf","","",N,N],[5,"snprintf","","",N,N],[5,"sprintf","","",N,N],[5,"fscanf","","",N,N],[5,"scanf","","",N,N],[5,"sscanf","","",N,N],[5,"getchar_unlocked","","",N,N],[5,"putchar_unlocked","","",N,N],[5,"socket","","",N,N],[5,"connect","","",N,N],[5,"listen","","",N,N],[5,"accept","","",N,N],[5,"getpeername","","",N,N],[5,"getsockname","","",N,N],[5,"setsockopt","","",N,N],[5,"socketpair","","",N,N],[5,"sendto","","",N,N],[5,"shutdown","","",N,N],[5,"chmod","","",N,N],[5,"fchmod","","",N,N],[5,"fstat","","",N,N],[5,"mkdir","","",N,N],[5,"stat","","",N,N],[5,"pclose","","",N,N],[5,"fdopen","","",N,N],[5,"fileno","","",N,N],[5,"open","","",N,N],[5,"creat","","",N,N],[5,"fcntl","","",N,N],[5,"opendir","","",N,N],[5,"fdopendir","","",N,N],[5,"readdir","","",N,N],[5,"readdir_r","","",N,N],[5,"closedir","","",N,N],[5,"rewinddir","","",N,N],[5,"openat","","",N,N],[5,"fchmodat","","",N,N],[5,"fchown","","",N,N],[5,"fchownat","","",N,N],[5,"fstatat","","",N,N],[5,"linkat","","",N,N],[5,"mkdirat","","",N,N],[5,"readlinkat","","",N,N],[5,"renameat","","",N,N],[5,"symlinkat","","",N,N],[5,"unlinkat","","",N,N],[5,"access","","",N,N],[5,"alarm","","",N,N],[5,"chdir","","",N,N],[5,"fchdir","","",N,N],[5,"chown","","",N,N],[5,"lchown","","",N,N],[5,"close","","",N,N],[5,"dup","","",N,N],[5,"dup2","","",N,N],[5,"execl","","",N,N],[5,"execle","","",N,N],[5,"execlp","","",N,N],[5,"execv","","",N,N],[5,"execve","","",N,N],[5,"execvp","","",N,N],[5,"fork","","",N,N],[5,"fpathconf","","",N,N],[5,"getcwd","","",N,N],[5,"getegid","","",N,N],[5,"geteuid","","",N,N],[5,"getgid","","",N,N],[5,"getgroups","","",N,N],[5,"getlogin","","",N,N],[5,"getopt","","",N,N],[5,"getpgid","","",N,N],[5,"getpgrp","","",N,N],[5,"getpid","","",N,N],[5,"getppid","","",N,N],[5,"getuid","","",N,N],[5,"isatty","","",N,N],[5,"link","","",N,N],[5,"lseek","","",N,N],[5,"pathconf","","",N,N],[5,"pause","","",N,N],[5,"pipe","","",N,N],[5,"posix_memalign","","",N,N],[5,"read","","",N,N],[5,"rmdir","","",N,N],[5,"seteuid","","",N,N],[5,"setgid","","",N,N],[5,"setpgid","","",N,N],[5,"setsid","","",N,N],[5,"setuid","","",N,N],[5,"sleep","","",N,N],[5,"nanosleep","","",N,N],[5,"tcgetpgrp","","",N,N],[5,"tcsetpgrp","","",N,N],[5,"ttyname","","",N,N],[5,"unlink","","",N,N],[5,"wait","","",N,N],[5,"waitpid","","",N,N],[5,"write","","",N,N],[5,"pread","","",N,N],[5,"pwrite","","",N,N],[5,"umask","","",N,N],[5,"utime","","",N,N],[5,"kill","","",N,N],[5,"killpg","","",N,N],[5,"mlock","","",N,N],[5,"munlock","","",N,N],[5,"mlockall","","",N,N],[5,"munlockall","","",N,N],[5,"mmap","","",N,N],[5,"munmap","","",N,N],[5,"if_nametoindex","","",N,N],[5,"if_indextoname","","",N,N],[5,"lstat","","",N,N],[5,"fsync","","",N,N],[5,"setenv","","",N,N],[5,"unsetenv","","",N,N],[5,"symlink","","",N,N],[5,"ftruncate","","",N,N],[5,"signal","","",N,N],[5,"getrlimit","","",N,N],[5,"setrlimit","","",N,N],[5,"getrusage","","",N,N],[5,"realpath","","",N,N],[5,"flock","","",N,N],[5,"gettimeofday","","",N,N],[5,"times","","",N,N],[5,"pthread_self","","",N,N],[5,"pthread_join","","",N,N],[5,"pthread_exit","","",N,N],[5,"pthread_attr_init","","",N,N],[5,"pthread_attr_destroy","","",N,N],[5,"pthread_attr_setstacksize","","",N,N],[5,"pthread_attr_setdetachstate","","",N,N],[5,"pthread_detach","","",N,N],[5,"sched_yield","","",N,N],[5,"pthread_key_create","","",N,N],[5,"pthread_key_delete","","",N,N],[5,"pthread_getspecific","","",N,N],[5,"pthread_setspecific","","",N,N],[5,"pthread_mutex_init","","",N,N],[5,"pthread_mutex_destroy","","",N,N],[5,"pthread_mutex_lock","","",N,N],[5,"pthread_mutex_trylock","","",N,N],[5,"pthread_mutex_unlock","","",N,N],[5,"pthread_mutexattr_init","","",N,N],[5,"pthread_mutexattr_destroy","","",N,N],[5,"pthread_mutexattr_settype","","",N,N],[5,"pthread_cond_init","","",N,N],[5,"pthread_cond_wait","","",N,N],[5,"pthread_cond_timedwait","","",N,N],[5,"pthread_cond_signal","","",N,N],[5,"pthread_cond_broadcast","","",N,N],[5,"pthread_cond_destroy","","",N,N],[5,"pthread_condattr_init","","",N,N],[5,"pthread_condattr_destroy","","",N,N],[5,"pthread_rwlock_init","","",N,N],[5,"pthread_rwlock_destroy","","",N,N],[5,"pthread_rwlock_rdlock","","",N,N],[5,"pthread_rwlock_tryrdlock","","",N,N],[5,"pthread_rwlock_wrlock","","",N,N],[5,"pthread_rwlock_trywrlock","","",N,N],[5,"pthread_rwlock_unlock","","",N,N],[5,"pthread_rwlockattr_init","","",N,N],[5,"pthread_rwlockattr_destroy","","",N,N],[5,"strerror_r","","",N,N],[5,"getsockopt","","",N,N],[5,"raise","","",N,N],[5,"sigaction","","",N,N],[5,"utimes","","",N,N],[5,"dlopen","","",N,N],[5,"dlerror","","",N,N],[5,"dlsym","","",N,N],[5,"dlclose","","",N,N],[5,"dladdr","","",N,N],[5,"getaddrinfo","","",N,N],[5,"freeaddrinfo","","",N,N],[5,"gai_strerror","","",N,N],[5,"res_init","","",N,N],[5,"gmtime_r","","",N,N],[5,"localtime_r","","",N,N],[5,"mktime","","",N,N],[5,"time","","",N,N],[5,"gmtime","","",N,N],[5,"localtime","","",N,N],[5,"difftime","","",N,N],[5,"mknod","","",N,N],[5,"uname","","",N,N],[5,"gethostname","","",N,N],[5,"getservbyname","","",N,N],[5,"getprotobyname","","",N,N],[5,"getprotobynumber","","",N,N],[5,"chroot","","",N,N],[5,"usleep","","",N,N],[5,"send","","",N,N],[5,"recv","","",N,N],[5,"putenv","","",N,N],[5,"poll","","",N,N],[5,"select","","",N,N],[5,"setlocale","","",N,N],[5,"localeconv","","",N,N],[5,"sem_destroy","","",N,N],[5,"sem_wait","","",N,N],[5,"sem_trywait","","",N,N],[5,"sem_post","","",N,N],[5,"sem_init","","",N,N],[5,"statvfs","","",N,N],[5,"fstatvfs","","",N,N],[5,"readlink","","",N,N],[5,"sigemptyset","","",N,N],[5,"sigaddset","","",N,N],[5,"sigfillset","","",N,N],[5,"sigdelset","","",N,N],[5,"sigismember","","",N,N],[5,"sigprocmask","","",N,N],[5,"sigpending","","",N,N],[5,"timegm","","",N,N],[5,"getsid","","",N,N],[5,"sysconf","","",N,N],[5,"mkfifo","","",N,N],[5,"pselect","","",N,N],[5,"fseeko","","",N,N],[5,"ftello","","",N,N],[5,"tcdrain","","",N,N],[5,"cfgetispeed","","",N,N],[5,"cfgetospeed","","",N,N],[5,"cfmakeraw","","",N,N],[5,"cfsetispeed","","",N,N],[5,"cfsetospeed","","",N,N],[5,"cfsetspeed","","",N,N],[5,"tcgetattr","","",N,N],[5,"tcsetattr","","",N,N],[5,"tcflow","","",N,N],[5,"tcflush","","",N,N],[5,"tcgetsid","","",N,N],[5,"tcsendbreak","","",N,N],[5,"mkstemp","","",N,N],[5,"mkdtemp","","",N,N],[5,"tmpnam","","",N,N],[5,"openlog","","",N,N],[5,"closelog","","",N,N],[5,"setlogmask","","",N,N],[5,"syslog","","",N,N],[5,"nice","","",N,N],[5,"grantpt","","",N,N],[5,"posix_openpt","","",N,N],[5,"ptsname","","",N,N],[5,"unlockpt","","",N,N],[5,"fdatasync","","",N,N],[5,"mincore","","",N,N],[5,"clock_getres","","",N,N],[5,"clock_gettime","","",N,N],[5,"clock_settime","","",N,N],[5,"dirfd","","",N,N],[5,"pthread_getattr_np","","",N,N],[5,"pthread_attr_getstack","","",N,N],[5,"memalign","","",N,N],[5,"setgroups","","",N,N],[5,"pipe2","","",N,N],[5,"statfs","","",N,N],[5,"statfs64","","",N,N],[5,"fstatfs","","",N,N],[5,"fstatfs64","","",N,N],[5,"statvfs64","","",N,N],[5,"fstatvfs64","","",N,N],[5,"memrchr","","",N,N],[5,"posix_fadvise","","",N,N],[5,"futimens","","",N,N],[5,"utimensat","","",N,N],[5,"duplocale","","",N,N],[5,"freelocale","","",N,N],[5,"newlocale","","",N,N],[5,"uselocale","","",N,N],[5,"creat64","","",N,N],[5,"fstat64","","",N,N],[5,"fstatat64","","",N,N],[5,"ftruncate64","","",N,N],[5,"getrlimit64","","",N,N],[5,"lseek64","","",N,N],[5,"lstat64","","",N,N],[5,"mmap64","","",N,N],[5,"open64","","",N,N],[5,"openat64","","",N,N],[5,"pread64","","",N,N],[5,"preadv64","","",N,N],[5,"pwrite64","","",N,N],[5,"pwritev64","","",N,N],[5,"readdir64","","",N,N],[5,"readdir64_r","","",N,N],[5,"setrlimit64","","",N,N],[5,"stat64","","",N,N],[5,"truncate64","","",N,N],[5,"mknodat","","",N,N],[5,"pthread_condattr_getclock","","",N,N],[5,"pthread_condattr_setclock","","",N,N],[5,"pthread_condattr_setpshared","","",N,N],[5,"accept4","","",N,N],[5,"pthread_mutexattr_setpshared","","",N,N],[5,"pthread_rwlockattr_getpshared","","",N,N],[5,"pthread_rwlockattr_setpshared","","",N,N],[5,"ptsname_r","","",N,N],[5,"clearenv","","",N,N],[5,"waitid","","",N,N],[5,"setreuid","","",N,N],[5,"setregid","","",N,N],[5,"getresuid","","",N,N],[5,"getresgid","","",N,N],[5,"acct","","",N,N],[5,"brk","","",N,N],[5,"sbrk","","",N,N],[5,"vfork","","",N,N],[5,"setresgid","","",N,N],[5,"setresuid","","",N,N],[5,"wait4","","",N,N],[5,"openpty","","",N,N],[5,"execvpe","","",N,N],[5,"fexecve","","",N,N],[5,"getifaddrs","","",N,N],[5,"freeifaddrs","","",N,N],[5,"bind","","",N,N],[5,"writev","","",N,N],[5,"readv","","",N,N],[5,"sendmsg","","",N,N],[5,"recvmsg","","",N,N],[5,"aio_read","","",N,N],[5,"aio_write","","",N,N],[5,"aio_fsync","","",N,N],[5,"aio_error","","",N,N],[5,"aio_return","","",N,N],[5,"aio_suspend","","",N,N],[5,"aio_cancel","","",N,N],[5,"lio_listio","","",N,N],[5,"lutimes","","",N,N],[5,"setpwent","","",N,N],[5,"endpwent","","",N,N],[5,"getpwent","","",N,N],[5,"setgrent","","",N,N],[5,"endgrent","","",N,N],[5,"getgrent","","",N,N],[5,"setspent","","",N,N],[5,"endspent","","",N,N],[5,"getspent","","",N,N],[5,"getspnam","","",N,N],[5,"shm_open","","",N,N],[5,"shmget","","",N,N],[5,"shmat","","",N,N],[5,"shmdt","","",N,N],[5,"shmctl","","",N,N],[5,"ftok","","",N,N],[5,"semget","","",N,N],[5,"semop","","",N,N],[5,"semctl","","",N,N],[5,"msgctl","","",N,N],[5,"msgget","","",N,N],[5,"msgrcv","","",N,N],[5,"msgsnd","","",N,N],[5,"mprotect","","",N,N],[5,"__errno_location","","",N,N],[5,"fopen64","","",N,N],[5,"freopen64","","",N,N],[5,"tmpfile64","","",N,N],[5,"fgetpos64","","",N,N],[5,"fsetpos64","","",N,N],[5,"fseeko64","","",N,N],[5,"ftello64","","",N,N],[5,"fallocate","","",N,N],[5,"posix_fallocate","","",N,N],[5,"readahead","","",N,N],[5,"getxattr","","",N,N],[5,"lgetxattr","","",N,N],[5,"fgetxattr","","",N,N],[5,"setxattr","","",N,N],[5,"lsetxattr","","",N,N],[5,"fsetxattr","","",N,N],[5,"listxattr","","",N,N],[5,"llistxattr","","",N,N],[5,"flistxattr","","",N,N],[5,"removexattr","","",N,N],[5,"lremovexattr","","",N,N],[5,"fremovexattr","","",N,N],[5,"signalfd","","",N,N],[5,"timerfd_create","","",N,N],[5,"timerfd_gettime","","",N,N],[5,"timerfd_settime","","",N,N],[5,"pwritev","","",N,N],[5,"preadv","","",N,N],[5,"quotactl","","",N,N],[5,"mq_open","","",N,N],[5,"mq_close","","",N,N],[5,"mq_unlink","","",N,N],[5,"mq_receive","","",N,N],[5,"mq_send","","",N,N],[5,"mq_getattr","","",N,N],[5,"mq_setattr","","",N,N],[5,"epoll_pwait","","",N,N],[5,"dup3","","",N,N],[5,"mkostemp","","",N,N],[5,"mkostemps","","",N,N],[5,"sigtimedwait","","",N,N],[5,"sigwaitinfo","","",N,N],[5,"nl_langinfo_l","","",N,N],[5,"getnameinfo","","",N,N],[5,"pthread_setschedprio","","",N,N],[5,"prlimit","","",N,N],[5,"prlimit64","","",N,N],[5,"getloadavg","","",N,N],[5,"process_vm_readv","","",N,N],[5,"process_vm_writev","","",N,N],[5,"reboot","","",N,N],[5,"setfsgid","","",N,N],[5,"setfsuid","","",N,N],[5,"mkfifoat","","",N,N],[5,"if_nameindex","","",N,N],[5,"if_freenameindex","","",N,N],[5,"sync_file_range","","",N,N],[5,"mremap","","",N,N],[5,"glob","","",N,N],[5,"globfree","","",N,N],[5,"posix_madvise","","",N,N],[5,"shm_unlink","","",N,N],[5,"seekdir","","",N,N],[5,"telldir","","",N,N],[5,"madvise","","",N,N],[5,"msync","","",N,N],[5,"remap_file_pages","","",N,N],[5,"recvfrom","","",N,N],[5,"mkstemps","","",N,N],[5,"futimes","","",N,N],[5,"nl_langinfo","","",N,N],[5,"getdomainname","","",N,N],[5,"setdomainname","","",N,N],[5,"vhangup","","",N,N],[5,"sendmmsg","","",N,N],[5,"recvmmsg","","",N,N],[5,"sync","","",N,N],[5,"syscall","","",N,N],[5,"sched_getaffinity","","",N,N],[5,"sched_setaffinity","","",N,N],[5,"epoll_create","","",N,N],[5,"epoll_create1","","",N,N],[5,"epoll_wait","","",N,N],[5,"epoll_ctl","","",N,N],[5,"pthread_getschedparam","","",N,N],[5,"unshare","","",N,N],[5,"umount","","",N,N],[5,"sched_get_priority_max","","",N,N],[5,"tee","","",N,N],[5,"settimeofday","","",N,N],[5,"splice","","",N,N],[5,"eventfd","","",N,N],[5,"sched_rr_get_interval","","",N,N],[5,"sem_timedwait","","",N,N],[5,"sem_getvalue","","",N,N],[5,"sched_setparam","","",N,N],[5,"setns","","",N,N],[5,"swapoff","","",N,N],[5,"vmsplice","","",N,N],[5,"mount","","",N,N],[5,"personality","","",N,N],[5,"prctl","","",N,N],[5,"sched_getparam","","",N,N],[5,"ppoll","","",N,N],[5,"pthread_mutex_timedlock","","",N,N],[5,"clone","","",N,N],[5,"sched_getscheduler","","",N,N],[5,"clock_nanosleep","","",N,N],[5,"pthread_attr_getguardsize","","",N,N],[5,"sethostname","","",N,N],[5,"sched_get_priority_min","","",N,N],[5,"pthread_condattr_getpshared","","",N,N],[5,"sysinfo","","",N,N],[5,"umount2","","",N,N],[5,"pthread_setschedparam","","",N,N],[5,"swapon","","",N,N],[5,"sched_setscheduler","","",N,N],[5,"sendfile","","",N,N],[5,"sigsuspend","","",N,N],[5,"getgrgid_r","","",N,N],[5,"sigaltstack","","",N,N],[5,"sem_close","","",N,N],[5,"getdtablesize","","",N,N],[5,"getgrnam_r","","",N,N],[5,"initgroups","","",N,N],[5,"pthread_sigmask","","",N,N],[5,"sem_open","","",N,N],[5,"getgrnam","","",N,N],[5,"pthread_cancel","","",N,N],[5,"pthread_kill","","",N,N],[5,"sem_unlink","","",N,N],[5,"daemon","","",N,N],[5,"getpwnam_r","","",N,N],[5,"getpwuid_r","","",N,N],[5,"sigwait","","",N,N],[5,"pthread_atfork","","",N,N],[5,"getgrgid","","",N,N],[5,"getgrouplist","","",N,N],[5,"pthread_mutexattr_getpshared","","",N,N],[5,"popen","","",N,N],[5,"faccessat","","",N,N],[5,"pthread_create","","",N,N],[5,"dl_iterate_phdr","","",N,N],[5,"setmntent","","",N,N],[5,"getmntent","","",N,N],[5,"addmntent","","",N,N],[5,"endmntent","","",N,N],[5,"hasmntopt","","",N,N],[5,"posix_spawn","","",N,N],[5,"posix_spawnp","","",N,N],[5,"posix_spawnattr_init","","",N,N],[5,"posix_spawnattr_destroy","","",N,N],[5,"posix_spawnattr_getsigdefault","","",N,N],[5,"posix_spawnattr_setsigdefault","","",N,N],[5,"posix_spawnattr_getsigmask","","",N,N],[5,"posix_spawnattr_setsigmask","","",N,N],[5,"posix_spawnattr_getflags","","",N,N],[5,"posix_spawnattr_setflags","","",N,N],[5,"posix_spawnattr_getpgroup","","",N,N],[5,"posix_spawnattr_setpgroup","","",N,N],[5,"posix_spawnattr_getschedpolicy","","",N,N],[5,"posix_spawnattr_setschedpolicy","","",N,N],[5,"posix_spawnattr_getschedparam","","",N,N],[5,"posix_spawnattr_setschedparam","","",N,N],[5,"posix_spawn_file_actions_init","","",N,N],[5,"posix_spawn_file_actions_destroy","","",N,N],[5,"posix_spawn_file_actions_addopen","","",N,N],[5,"posix_spawn_file_actions_addclose","","",N,N],[5,"posix_spawn_file_actions_adddup2","","",N,N],[5,"fread_unlocked","","",N,N],[5,"utmpxname","","",N,N],[5,"getutxent","","",N,N],[5,"getutxid","","",N,N],[5,"getutxline","","",N,N],[5,"pututxline","","",N,N],[5,"setutxent","","",N,N],[5,"endutxent","","",N,N],[5,"getpt","","",N,N],[5,"ioctl","","",N,N],[5,"backtrace","","",N,N],[5,"glob64","","",N,N],[5,"globfree64","","",N,N],[5,"ptrace","","",N,N],[5,"pthread_attr_getaffinity_np","","",N,N],[5,"pthread_attr_setaffinity_np","","",N,N],[5,"getpriority","","",N,N],[5,"setpriority","","",N,N],[5,"pthread_getaffinity_np","","",N,N],[5,"pthread_setaffinity_np","","",N,N],[5,"pthread_rwlockattr_getkind_np","","",N,N],[5,"pthread_rwlockattr_setkind_np","","",N,N],[5,"sched_getcpu","","",N,N],[5,"mallinfo","","",N,N],[5,"malloc_usable_size","","",N,N],[5,"getauxval","","",N,N],[5,"getpwent_r","","",N,N],[5,"getgrent_r","","",N,N],[5,"getcontext","","",N,N],[5,"setcontext","","",N,N],[5,"makecontext","","",N,N],[5,"swapcontext","","",N,N],[5,"iopl","","",N,N],[5,"ioperm","","",N,N],[5,"sysctl","","",N,N],[11,"clone","","",100,[[["self"]],["stat"]]],[11,"clone","","",101,[[["self"]],["stat64"]]],[11,"clone","","",102,[[["self"]],["statfs64"]]],[11,"clone","","",103,[[["self"]],["statvfs64"]]],[11,"clone","","",116,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",104,[[["self"]],["_libc_fpxreg"]]],[11,"clone","","",105,[[["self"]],["_libc_xmmreg"]]],[11,"clone","","",106,[[["self"]],["_libc_fpstate"]]],[11,"clone","","",107,[[["self"]],["user_fpregs_struct"]]],[11,"clone","","",108,[[["self"]],["user_regs_struct"]]],[11,"clone","","",109,[[["self"]],["user"]]],[11,"clone","","",110,[[["self"]],["mcontext_t"]]],[11,"clone","","",111,[[["self"]],["ucontext_t"]]],[11,"clone","","",112,[[["self"]],["ipc_perm"]]],[11,"clone","","",113,[[["self"]],["shmid_ds"]]],[11,"clone","","",114,[[["self"]],["termios2"]]],[11,"clone","","",115,[[["self"]],["statvfs"]]],[11,"clone","","",117,[[["self"]],["sigset_t"]]],[11,"clone","","",98,[[["self"]],["sysinfo"]]],[11,"clone","","",99,[[["self"]],["msqid_ds"]]],[11,"clone","","",77,[[["self"]],["aiocb"]]],[11,"clone","","",78,[[["self"]],["__exit_status"]]],[11,"clone","","",79,[[["self"]],["__timeval"]]],[11,"clone","","",80,[[["self"]],["utmpx"]]],[11,"clone","","",81,[[["self"]],["sigaction"]]],[11,"clone","","",82,[[["self"]],["stack_t"]]],[11,"clone","","",83,[[["self"]],["siginfo_t"]]],[11,"clone","","",84,[[["self"]],["glob64_t"]]],[11,"clone","","",85,[[["self"]],["statfs"]]],[11,"clone","","",86,[[["self"]],["msghdr"]]],[11,"clone","","",87,[[["self"]],["cmsghdr"]]],[11,"clone","","",88,[[["self"]],["termios"]]],[11,"clone","","",89,[[["self"]],["flock"]]],[11,"clone","","",118,[[["self"]],["sem_t"]]],[11,"clone","","",90,[[["self"]],["mallinfo"]]],[11,"clone","","",91,[[["self"]],["nlmsghdr"]]],[11,"clone","","",92,[[["self"]],["nlmsgerr"]]],[11,"clone","","",93,[[["self"]],["nl_pktinfo"]]],[11,"clone","","",94,[[["self"]],["nl_mmap_req"]]],[11,"clone","","",95,[[["self"]],["nl_mmap_hdr"]]],[11,"clone","","",96,[[["self"]],["nlattr"]]],[11,"clone","","",97,[[["self"]],["rtentry"]]],[11,"clone","","",40,[[["self"]],["dirent"]]],[11,"clone","","",41,[[["self"]],["dirent64"]]],[11,"clone","","",42,[[["self"]],["rlimit64"]]],[11,"clone","","",43,[[["self"]],["glob_t"]]],[11,"clone","","",119,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",120,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",121,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",122,[[["self"]],["pthread_rwlockattr_t"]]],[11,"clone","","",123,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",124,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",44,[[["self"]],["passwd"]]],[11,"clone","","",45,[[["self"]],["spwd"]]],[11,"clone","","",46,[[["self"]],["dqblk"]]],[11,"clone","","",47,[[["self"]],["signalfd_siginfo"]]],[11,"clone","","",48,[[["self"]],["itimerspec"]]],[11,"clone","","",125,[[["self"]],["fsid_t"]]],[11,"clone","","",49,[[["self"]],["mq_attr"]]],[11,"clone","","",50,[[["self"]],["packet_mreq"]]],[11,"clone","","",126,[[["self"]],["cpu_set_t"]]],[11,"clone","","",51,[[["self"]],["if_nameindex"]]],[11,"clone","","",52,[[["self"]],["msginfo"]]],[11,"clone","","",53,[[["self"]],["mmsghdr"]]],[11,"clone","","",54,[[["self"]],["sembuf"]]],[11,"clone","","",55,[[["self"]],["input_event"]]],[11,"clone","","",56,[[["self"]],["input_id"]]],[11,"clone","","",57,[[["self"]],["input_absinfo"]]],[11,"clone","","",58,[[["self"]],["input_keymap_entry"]]],[11,"clone","","",59,[[["self"]],["input_mask"]]],[11,"clone","","",60,[[["self"]],["ff_replay"]]],[11,"clone","","",61,[[["self"]],["ff_trigger"]]],[11,"clone","","",62,[[["self"]],["ff_envelope"]]],[11,"clone","","",63,[[["self"]],["ff_constant_effect"]]],[11,"clone","","",64,[[["self"]],["ff_ramp_effect"]]],[11,"clone","","",65,[[["self"]],["ff_condition_effect"]]],[11,"clone","","",66,[[["self"]],["ff_periodic_effect"]]],[11,"clone","","",67,[[["self"]],["ff_rumble_effect"]]],[11,"clone","","",68,[[["self"]],["ff_effect"]]],[11,"clone","","",69,[[["self"]],["dl_phdr_info"]]],[11,"clone","","",70,[[["self"]],["elf32_phdr"]]],[11,"clone","","",71,[[["self"]],["elf64_phdr"]]],[11,"clone","","",72,[[["self"]],["ucred"]]],[11,"clone","","",73,[[["self"]],["mntent"]]],[11,"clone","","",127,[[["self"]],["posix_spawn_file_actions_t"]]],[11,"clone","","",128,[[["self"]],["posix_spawnattr_t"]]],[11,"clone","","",74,[[["self"]],["genlmsghdr"]]],[11,"clone","","",75,[[["self"]],["in6_pktinfo"]]],[11,"clone","","",76,[[["self"]],["arpd_request"]]],[11,"clone","","",20,[[["self"]],["sockaddr"]]],[11,"clone","","",21,[[["self"]],["sockaddr_in"]]],[11,"clone","","",22,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",23,[[["self"]],["sockaddr_un"]]],[11,"clone","","",24,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",25,[[["self"]],["addrinfo"]]],[11,"clone","","",26,[[["self"]],["sockaddr_nl"]]],[11,"clone","","",27,[[["self"]],["sockaddr_ll"]]],[11,"clone","","",129,[[["self"]],["fd_set"]]],[11,"clone","","",28,[[["self"]],["tm"]]],[11,"clone","","",29,[[["self"]],["sched_param"]]],[11,"clone","","",30,[[["self"]],["dl_info"]]],[11,"clone","","",31,[[["self"]],["epoll_event"]]],[11,"clone","","",32,[[["self"]],["utsname"]]],[11,"clone","","",33,[[["self"]],["lconv"]]],[11,"clone","","",34,[[["self"]],["sigevent"]]],[11,"clone","","",35,[[["self"]],["in_pktinfo"]]],[11,"clone","","",36,[[["self"]],["ifaddrs"]]],[11,"clone","","",130,[[["self"]],["in6_rtmsg"]]],[11,"clone","","",37,[[["self"]],["arpreq"]]],[11,"clone","","",38,[[["self"]],["arpreq_old"]]],[11,"clone","","",39,[[["self"]],["arphdr"]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["in_addr"]]],[11,"clone","","",7,[[["self"]],["in6_addr"]]],[11,"clone","","",8,[[["self"]],["ip_mreq"]]],[11,"clone","","",9,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",10,[[["self"]],["hostent"]]],[11,"clone","","",11,[[["self"]],["iovec"]]],[11,"clone","","",12,[[["self"]],["pollfd"]]],[11,"clone","","",13,[[["self"]],["winsize"]]],[11,"clone","","",14,[[["self"]],["linger"]]],[11,"clone","","",15,[[["self"]],["sigval"]]],[11,"clone","","",16,[[["self"]],["itimerval"]]],[11,"clone","","",17,[[["self"]],["tms"]]],[11,"clone","","",18,[[["self"]],["servent"]]],[11,"clone","","",19,[[["self"]],["protoent"]]],[6,"int8_t","","",N,N],[6,"int16_t","","",N,N],[6,"int32_t","","",N,N],[6,"int64_t","","",N,N],[6,"uint8_t","","",N,N],[6,"uint16_t","","",N,N],[6,"uint32_t","","",N,N],[6,"uint64_t","","",N,N],[6,"c_schar","","",N,N],[6,"c_uchar","","",N,N],[6,"c_short","","",N,N],[6,"c_ushort","","",N,N],[6,"c_int","","",N,N],[6,"c_uint","","",N,N],[6,"c_float","","",N,N],[6,"c_double","","",N,N],[6,"c_longlong","","",N,N],[6,"c_ulonglong","","",N,N],[6,"intmax_t","","",N,N],[6,"uintmax_t","","",N,N],[6,"size_t","","",N,N],[6,"ptrdiff_t","","",N,N],[6,"intptr_t","","",N,N],[6,"uintptr_t","","",N,N],[6,"ssize_t","","",N,N],[6,"pid_t","","",N,N],[6,"uid_t","","",N,N],[6,"gid_t","","",N,N],[6,"in_addr_t","","",N,N],[6,"in_port_t","","",N,N],[6,"sighandler_t","","",N,N],[6,"cc_t","","",N,N],[6,"sa_family_t","","",N,N],[6,"pthread_key_t","","",N,N],[6,"speed_t","","",N,N],[6,"tcflag_t","","",N,N],[6,"clockid_t","","",N,N],[6,"key_t","","",N,N],[6,"id_t","","",N,N],[6,"useconds_t","","",N,N],[6,"dev_t","","",N,N],[6,"socklen_t","","",N,N],[6,"pthread_t","","",N,N],[6,"mode_t","","",N,N],[6,"ino64_t","","",N,N],[6,"off64_t","","",N,N],[6,"blkcnt64_t","","",N,N],[6,"rlim64_t","","",N,N],[6,"mqd_t","","",N,N],[6,"nfds_t","","",N,N],[6,"nl_item","","",N,N],[6,"idtype_t","","",N,N],[6,"loff_t","","",N,N],[6,"__u8","","",N,N],[6,"__u16","","",N,N],[6,"__s16","","",N,N],[6,"__u32","","",N,N],[6,"__s32","","",N,N],[6,"Elf32_Half","","",N,N],[6,"Elf32_Word","","",N,N],[6,"Elf32_Off","","",N,N],[6,"Elf32_Addr","","",N,N],[6,"Elf64_Half","","",N,N],[6,"Elf64_Word","","",N,N],[6,"Elf64_Off","","",N,N],[6,"Elf64_Addr","","",N,N],[6,"Elf64_Xword","","",N,N],[6,"__priority_which_t","","",N,N],[6,"clock_t","","",N,N],[6,"time_t","","",N,N],[6,"ino_t","","",N,N],[6,"off_t","","",N,N],[6,"blkcnt_t","","",N,N],[6,"__fsword_t","","",N,N],[6,"shmatt_t","","",N,N],[6,"msgqnum_t","","",N,N],[6,"msglen_t","","",N,N],[6,"fsblkcnt_t","","",N,N],[6,"fsfilcnt_t","","",N,N],[6,"rlim_t","","",N,N],[6,"c_char","","",N,N],[6,"wchar_t","","",N,N],[6,"nlink_t","","",N,N],[6,"blksize_t","","",N,N],[6,"greg_t","","",N,N],[6,"suseconds_t","","",N,N],[6,"__u64","","",N,N],[6,"c_long","","",N,N],[6,"c_ulong","","",N,N],[17,"INT_MIN","","",N,N],[17,"INT_MAX","","",N,N],[17,"SIG_DFL","","",N,N],[17,"SIG_IGN","","",N,N],[17,"SIG_ERR","","",N,N],[17,"DT_UNKNOWN","","",N,N],[17,"DT_FIFO","","",N,N],[17,"DT_CHR","","",N,N],[17,"DT_DIR","","",N,N],[17,"DT_BLK","","",N,N],[17,"DT_REG","","",N,N],[17,"DT_LNK","","",N,N],[17,"DT_SOCK","","",N,N],[17,"FD_CLOEXEC","","",N,N],[17,"USRQUOTA","","",N,N],[17,"GRPQUOTA","","",N,N],[17,"SIGIOT","","",N,N],[17,"S_ISUID","","",N,N],[17,"S_ISGID","","",N,N],[17,"S_ISVTX","","",N,N],[17,"IF_NAMESIZE","","",N,N],[17,"IFNAMSIZ","","",N,N],[17,"LOG_EMERG","","",N,N],[17,"LOG_ALERT","","",N,N],[17,"LOG_CRIT","","",N,N],[17,"LOG_ERR","","",N,N],[17,"LOG_WARNING","","",N,N],[17,"LOG_NOTICE","","",N,N],[17,"LOG_INFO","","",N,N],[17,"LOG_DEBUG","","",N,N],[17,"LOG_KERN","","",N,N],[17,"LOG_USER","","",N,N],[17,"LOG_MAIL","","",N,N],[17,"LOG_DAEMON","","",N,N],[17,"LOG_AUTH","","",N,N],[17,"LOG_SYSLOG","","",N,N],[17,"LOG_LPR","","",N,N],[17,"LOG_NEWS","","",N,N],[17,"LOG_UUCP","","",N,N],[17,"LOG_LOCAL0","","",N,N],[17,"LOG_LOCAL1","","",N,N],[17,"LOG_LOCAL2","","",N,N],[17,"LOG_LOCAL3","","",N,N],[17,"LOG_LOCAL4","","",N,N],[17,"LOG_LOCAL5","","",N,N],[17,"LOG_LOCAL6","","",N,N],[17,"LOG_LOCAL7","","",N,N],[17,"LOG_PID","","",N,N],[17,"LOG_CONS","","",N,N],[17,"LOG_ODELAY","","",N,N],[17,"LOG_NDELAY","","",N,N],[17,"LOG_NOWAIT","","",N,N],[17,"LOG_PRIMASK","","",N,N],[17,"LOG_FACMASK","","",N,N],[17,"PRIO_PROCESS","","",N,N],[17,"PRIO_PGRP","","",N,N],[17,"PRIO_USER","","",N,N],[17,"PRIO_MIN","","",N,N],[17,"PRIO_MAX","","",N,N],[17,"IPPROTO_ICMP","","",N,N],[17,"IPPROTO_ICMPV6","","",N,N],[17,"IPPROTO_TCP","","",N,N],[17,"IPPROTO_UDP","","",N,N],[17,"IPPROTO_IP","","",N,N],[17,"IPPROTO_IPV6","","",N,N],[17,"INADDR_LOOPBACK","","",N,N],[17,"INADDR_ANY","","",N,N],[17,"INADDR_BROADCAST","","",N,N],[17,"INADDR_NONE","","",N,N],[17,"ARPOP_REQUEST","","",N,N],[17,"ARPOP_REPLY","","",N,N],[17,"ATF_COM","","",N,N],[17,"ATF_PERM","","",N,N],[17,"ATF_PUBL","","",N,N],[17,"ATF_USETRAILERS","","",N,N],[17,"EXIT_FAILURE","","",N,N],[17,"EXIT_SUCCESS","","",N,N],[17,"RAND_MAX","","",N,N],[17,"EOF","","",N,N],[17,"SEEK_SET","","",N,N],[17,"SEEK_CUR","","",N,N],[17,"SEEK_END","","",N,N],[17,"_IOFBF","","",N,N],[17,"_IONBF","","",N,N],[17,"_IOLBF","","",N,N],[17,"F_DUPFD","","",N,N],[17,"F_GETFD","","",N,N],[17,"F_SETFD","","",N,N],[17,"F_GETFL","","",N,N],[17,"F_SETFL","","",N,N],[17,"F_SETLEASE","","",N,N],[17,"F_GETLEASE","","",N,N],[17,"F_NOTIFY","","",N,N],[17,"F_CANCELLK","","",N,N],[17,"F_DUPFD_CLOEXEC","","",N,N],[17,"F_SETPIPE_SZ","","",N,N],[17,"F_GETPIPE_SZ","","",N,N],[17,"F_ADD_SEALS","","",N,N],[17,"F_GET_SEALS","","",N,N],[17,"F_SEAL_SEAL","","",N,N],[17,"F_SEAL_SHRINK","","",N,N],[17,"F_SEAL_GROW","","",N,N],[17,"F_SEAL_WRITE","","",N,N],[17,"SIGTRAP","","",N,N],[17,"PTHREAD_CREATE_JOINABLE","","",N,N],[17,"PTHREAD_CREATE_DETACHED","","",N,N],[17,"CLOCK_REALTIME","","",N,N],[17,"CLOCK_MONOTONIC","","",N,N],[17,"CLOCK_PROCESS_CPUTIME_ID","","",N,N],[17,"CLOCK_THREAD_CPUTIME_ID","","",N,N],[17,"CLOCK_MONOTONIC_RAW","","",N,N],[17,"CLOCK_REALTIME_COARSE","","",N,N],[17,"CLOCK_MONOTONIC_COARSE","","",N,N],[17,"CLOCK_BOOTTIME","","",N,N],[17,"CLOCK_REALTIME_ALARM","","",N,N],[17,"CLOCK_BOOTTIME_ALARM","","",N,N],[17,"TIMER_ABSTIME","","",N,N],[17,"RLIMIT_CPU","","",N,N],[17,"RLIMIT_FSIZE","","",N,N],[17,"RLIMIT_DATA","","",N,N],[17,"RLIMIT_STACK","","",N,N],[17,"RLIMIT_CORE","","",N,N],[17,"RLIMIT_LOCKS","","",N,N],[17,"RLIMIT_SIGPENDING","","",N,N],[17,"RLIMIT_MSGQUEUE","","",N,N],[17,"RLIMIT_NICE","","",N,N],[17,"RLIMIT_RTPRIO","","",N,N],[17,"RUSAGE_SELF","","",N,N],[17,"O_RDONLY","","",N,N],[17,"O_WRONLY","","",N,N],[17,"O_RDWR","","",N,N],[17,"SOCK_CLOEXEC","","",N,N],[17,"S_IFIFO","","",N,N],[17,"S_IFCHR","","",N,N],[17,"S_IFBLK","","",N,N],[17,"S_IFDIR","","",N,N],[17,"S_IFREG","","",N,N],[17,"S_IFLNK","","",N,N],[17,"S_IFSOCK","","",N,N],[17,"S_IFMT","","",N,N],[17,"S_IRWXU","","",N,N],[17,"S_IXUSR","","",N,N],[17,"S_IWUSR","","",N,N],[17,"S_IRUSR","","",N,N],[17,"S_IRWXG","","",N,N],[17,"S_IXGRP","","",N,N],[17,"S_IWGRP","","",N,N],[17,"S_IRGRP","","",N,N],[17,"S_IRWXO","","",N,N],[17,"S_IXOTH","","",N,N],[17,"S_IWOTH","","",N,N],[17,"S_IROTH","","",N,N],[17,"F_OK","","",N,N],[17,"R_OK","","",N,N],[17,"W_OK","","",N,N],[17,"X_OK","","",N,N],[17,"STDIN_FILENO","","",N,N],[17,"STDOUT_FILENO","","",N,N],[17,"STDERR_FILENO","","",N,N],[17,"SIGHUP","","",N,N],[17,"SIGINT","","",N,N],[17,"SIGQUIT","","",N,N],[17,"SIGILL","","",N,N],[17,"SIGABRT","","",N,N],[17,"SIGFPE","","",N,N],[17,"SIGKILL","","",N,N],[17,"SIGSEGV","","",N,N],[17,"SIGPIPE","","",N,N],[17,"SIGALRM","","",N,N],[17,"SIGTERM","","",N,N],[17,"PROT_NONE","","",N,N],[17,"PROT_READ","","",N,N],[17,"PROT_WRITE","","",N,N],[17,"PROT_EXEC","","",N,N],[17,"LC_CTYPE","","",N,N],[17,"LC_NUMERIC","","",N,N],[17,"LC_TIME","","",N,N],[17,"LC_COLLATE","","",N,N],[17,"LC_MONETARY","","",N,N],[17,"LC_MESSAGES","","",N,N],[17,"LC_ALL","","",N,N],[17,"LC_CTYPE_MASK","","",N,N],[17,"LC_NUMERIC_MASK","","",N,N],[17,"LC_TIME_MASK","","",N,N],[17,"LC_COLLATE_MASK","","",N,N],[17,"LC_MONETARY_MASK","","",N,N],[17,"LC_MESSAGES_MASK","","",N,N],[17,"MAP_FILE","","",N,N],[17,"MAP_SHARED","","",N,N],[17,"MAP_PRIVATE","","",N,N],[17,"MAP_FIXED","","",N,N],[17,"MAP_FAILED","","",N,N],[17,"MS_ASYNC","","",N,N],[17,"MS_INVALIDATE","","",N,N],[17,"MS_SYNC","","",N,N],[17,"MS_RDONLY","","",N,N],[17,"MS_NOSUID","","",N,N],[17,"MS_NODEV","","",N,N],[17,"MS_NOEXEC","","",N,N],[17,"MS_SYNCHRONOUS","","",N,N],[17,"MS_REMOUNT","","",N,N],[17,"MS_MANDLOCK","","",N,N],[17,"MS_DIRSYNC","","",N,N],[17,"MS_NOATIME","","",N,N],[17,"MS_NODIRATIME","","",N,N],[17,"MS_BIND","","",N,N],[17,"MS_MOVE","","",N,N],[17,"MS_REC","","",N,N],[17,"MS_SILENT","","",N,N],[17,"MS_POSIXACL","","",N,N],[17,"MS_UNBINDABLE","","",N,N],[17,"MS_PRIVATE","","",N,N],[17,"MS_SLAVE","","",N,N],[17,"MS_SHARED","","",N,N],[17,"MS_RELATIME","","",N,N],[17,"MS_KERNMOUNT","","",N,N],[17,"MS_I_VERSION","","",N,N],[17,"MS_STRICTATIME","","",N,N],[17,"MS_ACTIVE","","",N,N],[17,"MS_NOUSER","","",N,N],[17,"MS_MGC_VAL","","",N,N],[17,"MS_MGC_MSK","","",N,N],[17,"MS_RMT_MASK","","",N,N],[17,"EPERM","","",N,N],[17,"ENOENT","","",N,N],[17,"ESRCH","","",N,N],[17,"EINTR","","",N,N],[17,"EIO","","",N,N],[17,"ENXIO","","",N,N],[17,"E2BIG","","",N,N],[17,"ENOEXEC","","",N,N],[17,"EBADF","","",N,N],[17,"ECHILD","","",N,N],[17,"EAGAIN","","",N,N],[17,"ENOMEM","","",N,N],[17,"EACCES","","",N,N],[17,"EFAULT","","",N,N],[17,"ENOTBLK","","",N,N],[17,"EBUSY","","",N,N],[17,"EEXIST","","",N,N],[17,"EXDEV","","",N,N],[17,"ENODEV","","",N,N],[17,"ENOTDIR","","",N,N],[17,"EISDIR","","",N,N],[17,"EINVAL","","",N,N],[17,"ENFILE","","",N,N],[17,"EMFILE","","",N,N],[17,"ENOTTY","","",N,N],[17,"ETXTBSY","","",N,N],[17,"EFBIG","","",N,N],[17,"ENOSPC","","",N,N],[17,"ESPIPE","","",N,N],[17,"EROFS","","",N,N],[17,"EMLINK","","",N,N],[17,"EPIPE","","",N,N],[17,"EDOM","","",N,N],[17,"ERANGE","","",N,N],[17,"EWOULDBLOCK","","",N,N],[17,"SCM_RIGHTS","","",N,N],[17,"SCM_CREDENTIALS","","",N,N],[17,"PROT_GROWSDOWN","","",N,N],[17,"PROT_GROWSUP","","",N,N],[17,"MAP_TYPE","","",N,N],[17,"MADV_NORMAL","","",N,N],[17,"MADV_RANDOM","","",N,N],[17,"MADV_SEQUENTIAL","","",N,N],[17,"MADV_WILLNEED","","",N,N],[17,"MADV_DONTNEED","","",N,N],[17,"MADV_FREE","","",N,N],[17,"MADV_REMOVE","","",N,N],[17,"MADV_DONTFORK","","",N,N],[17,"MADV_DOFORK","","",N,N],[17,"MADV_MERGEABLE","","",N,N],[17,"MADV_UNMERGEABLE","","",N,N],[17,"MADV_HUGEPAGE","","",N,N],[17,"MADV_NOHUGEPAGE","","",N,N],[17,"MADV_DONTDUMP","","",N,N],[17,"MADV_DODUMP","","",N,N],[17,"MADV_HWPOISON","","",N,N],[17,"MADV_SOFT_OFFLINE","","",N,N],[17,"IFF_UP","","",N,N],[17,"IFF_BROADCAST","","",N,N],[17,"IFF_DEBUG","","",N,N],[17,"IFF_LOOPBACK","","",N,N],[17,"IFF_POINTOPOINT","","",N,N],[17,"IFF_NOTRAILERS","","",N,N],[17,"IFF_RUNNING","","",N,N],[17,"IFF_NOARP","","",N,N],[17,"IFF_PROMISC","","",N,N],[17,"IFF_ALLMULTI","","",N,N],[17,"IFF_MASTER","","",N,N],[17,"IFF_SLAVE","","",N,N],[17,"IFF_MULTICAST","","",N,N],[17,"IFF_PORTSEL","","",N,N],[17,"IFF_AUTOMEDIA","","",N,N],[17,"IFF_DYNAMIC","","",N,N],[17,"SOL_IP","","",N,N],[17,"SOL_TCP","","",N,N],[17,"SOL_UDP","","",N,N],[17,"SOL_IPV6","","",N,N],[17,"SOL_ICMPV6","","",N,N],[17,"SOL_RAW","","",N,N],[17,"SOL_DECNET","","",N,N],[17,"SOL_X25","","",N,N],[17,"SOL_PACKET","","",N,N],[17,"SOL_ATM","","",N,N],[17,"SOL_AAL","","",N,N],[17,"SOL_IRDA","","",N,N],[17,"SOL_NETBEUI","","",N,N],[17,"SOL_LLC","","",N,N],[17,"SOL_DCCP","","",N,N],[17,"SOL_NETLINK","","",N,N],[17,"SOL_TIPC","","",N,N],[17,"AF_UNSPEC","","",N,N],[17,"AF_UNIX","","",N,N],[17,"AF_LOCAL","","",N,N],[17,"AF_INET","","",N,N],[17,"AF_AX25","","",N,N],[17,"AF_IPX","","",N,N],[17,"AF_APPLETALK","","",N,N],[17,"AF_NETROM","","",N,N],[17,"AF_BRIDGE","","",N,N],[17,"AF_ATMPVC","","",N,N],[17,"AF_X25","","",N,N],[17,"AF_INET6","","",N,N],[17,"AF_ROSE","","",N,N],[17,"AF_DECnet","","",N,N],[17,"AF_NETBEUI","","",N,N],[17,"AF_SECURITY","","",N,N],[17,"AF_KEY","","",N,N],[17,"AF_NETLINK","","",N,N],[17,"AF_ROUTE","","",N,N],[17,"AF_PACKET","","",N,N],[17,"AF_ASH","","",N,N],[17,"AF_ECONET","","",N,N],[17,"AF_ATMSVC","","",N,N],[17,"AF_RDS","","",N,N],[17,"AF_SNA","","",N,N],[17,"AF_IRDA","","",N,N],[17,"AF_PPPOX","","",N,N],[17,"AF_WANPIPE","","",N,N],[17,"AF_LLC","","",N,N],[17,"AF_CAN","","",N,N],[17,"AF_TIPC","","",N,N],[17,"AF_BLUETOOTH","","",N,N],[17,"AF_IUCV","","",N,N],[17,"AF_RXRPC","","",N,N],[17,"AF_ISDN","","",N,N],[17,"AF_PHONET","","",N,N],[17,"AF_IEEE802154","","",N,N],[17,"AF_CAIF","","",N,N],[17,"AF_ALG","","",N,N],[17,"PF_UNSPEC","","",N,N],[17,"PF_UNIX","","",N,N],[17,"PF_LOCAL","","",N,N],[17,"PF_INET","","",N,N],[17,"PF_AX25","","",N,N],[17,"PF_IPX","","",N,N],[17,"PF_APPLETALK","","",N,N],[17,"PF_NETROM","","",N,N],[17,"PF_BRIDGE","","",N,N],[17,"PF_ATMPVC","","",N,N],[17,"PF_X25","","",N,N],[17,"PF_INET6","","",N,N],[17,"PF_ROSE","","",N,N],[17,"PF_DECnet","","",N,N],[17,"PF_NETBEUI","","",N,N],[17,"PF_SECURITY","","",N,N],[17,"PF_KEY","","",N,N],[17,"PF_NETLINK","","",N,N],[17,"PF_ROUTE","","",N,N],[17,"PF_PACKET","","",N,N],[17,"PF_ASH","","",N,N],[17,"PF_ECONET","","",N,N],[17,"PF_ATMSVC","","",N,N],[17,"PF_RDS","","",N,N],[17,"PF_SNA","","",N,N],[17,"PF_IRDA","","",N,N],[17,"PF_PPPOX","","",N,N],[17,"PF_WANPIPE","","",N,N],[17,"PF_LLC","","",N,N],[17,"PF_CAN","","",N,N],[17,"PF_TIPC","","",N,N],[17,"PF_BLUETOOTH","","",N,N],[17,"PF_IUCV","","",N,N],[17,"PF_RXRPC","","",N,N],[17,"PF_ISDN","","",N,N],[17,"PF_PHONET","","",N,N],[17,"PF_IEEE802154","","",N,N],[17,"PF_CAIF","","",N,N],[17,"PF_ALG","","",N,N],[17,"SOMAXCONN","","",N,N],[17,"MSG_OOB","","",N,N],[17,"MSG_PEEK","","",N,N],[17,"MSG_DONTROUTE","","",N,N],[17,"MSG_CTRUNC","","",N,N],[17,"MSG_TRUNC","","",N,N],[17,"MSG_DONTWAIT","","",N,N],[17,"MSG_EOR","","",N,N],[17,"MSG_WAITALL","","",N,N],[17,"MSG_FIN","","",N,N],[17,"MSG_SYN","","",N,N],[17,"MSG_CONFIRM","","",N,N],[17,"MSG_RST","","",N,N],[17,"MSG_ERRQUEUE","","",N,N],[17,"MSG_NOSIGNAL","","",N,N],[17,"MSG_MORE","","",N,N],[17,"MSG_WAITFORONE","","",N,N],[17,"MSG_FASTOPEN","","",N,N],[17,"MSG_CMSG_CLOEXEC","","",N,N],[17,"SCM_TIMESTAMP","","",N,N],[17,"SOCK_RAW","","",N,N],[17,"SOCK_RDM","","",N,N],[17,"IP_MULTICAST_IF","","",N,N],[17,"IP_MULTICAST_TTL","","",N,N],[17,"IP_MULTICAST_LOOP","","",N,N],[17,"IP_TTL","","",N,N],[17,"IP_HDRINCL","","",N,N],[17,"IP_PKTINFO","","",N,N],[17,"IP_ADD_MEMBERSHIP","","",N,N],[17,"IP_DROP_MEMBERSHIP","","",N,N],[17,"IP_TRANSPARENT","","",N,N],[17,"IPV6_UNICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_IF","","",N,N],[17,"IPV6_MULTICAST_HOPS","","",N,N],[17,"IPV6_MULTICAST_LOOP","","",N,N],[17,"IPV6_ADD_MEMBERSHIP","","",N,N],[17,"IPV6_DROP_MEMBERSHIP","","",N,N],[17,"IPV6_V6ONLY","","",N,N],[17,"IPV6_RECVPKTINFO","","",N,N],[17,"IPV6_PKTINFO","","",N,N],[17,"TCP_NODELAY","","",N,N],[17,"TCP_MAXSEG","","",N,N],[17,"TCP_CORK","","",N,N],[17,"TCP_KEEPIDLE","","",N,N],[17,"TCP_KEEPINTVL","","",N,N],[17,"TCP_KEEPCNT","","",N,N],[17,"TCP_SYNCNT","","",N,N],[17,"TCP_LINGER2","","",N,N],[17,"TCP_DEFER_ACCEPT","","",N,N],[17,"TCP_WINDOW_CLAMP","","",N,N],[17,"TCP_INFO","","",N,N],[17,"TCP_QUICKACK","","",N,N],[17,"TCP_CONGESTION","","",N,N],[17,"SO_DEBUG","","",N,N],[17,"SHUT_RD","","",N,N],[17,"SHUT_WR","","",N,N],[17,"SHUT_RDWR","","",N,N],[17,"LOCK_SH","","",N,N],[17,"LOCK_EX","","",N,N],[17,"LOCK_NB","","",N,N],[17,"LOCK_UN","","",N,N],[17,"SS_ONSTACK","","",N,N],[17,"SS_DISABLE","","",N,N],[17,"PATH_MAX","","",N,N],[17,"FD_SETSIZE","","",N,N],[17,"EPOLLIN","","",N,N],[17,"EPOLLPRI","","",N,N],[17,"EPOLLOUT","","",N,N],[17,"EPOLLRDNORM","","",N,N],[17,"EPOLLRDBAND","","",N,N],[17,"EPOLLWRNORM","","",N,N],[17,"EPOLLWRBAND","","",N,N],[17,"EPOLLMSG","","",N,N],[17,"EPOLLERR","","",N,N],[17,"EPOLLHUP","","",N,N],[17,"EPOLLET","","",N,N],[17,"EPOLL_CTL_ADD","","",N,N],[17,"EPOLL_CTL_MOD","","",N,N],[17,"EPOLL_CTL_DEL","","",N,N],[17,"MNT_DETACH","","",N,N],[17,"MNT_EXPIRE","","",N,N],[17,"Q_GETFMT","","",N,N],[17,"Q_GETINFO","","",N,N],[17,"Q_SETINFO","","",N,N],[17,"QIF_BLIMITS","","",N,N],[17,"QIF_SPACE","","",N,N],[17,"QIF_ILIMITS","","",N,N],[17,"QIF_INODES","","",N,N],[17,"QIF_BTIME","","",N,N],[17,"QIF_ITIME","","",N,N],[17,"QIF_LIMITS","","",N,N],[17,"QIF_USAGE","","",N,N],[17,"QIF_TIMES","","",N,N],[17,"QIF_ALL","","",N,N],[17,"MNT_FORCE","","",N,N],[17,"Q_SYNC","","",N,N],[17,"Q_QUOTAON","","",N,N],[17,"Q_QUOTAOFF","","",N,N],[17,"Q_GETQUOTA","","",N,N],[17,"Q_SETQUOTA","","",N,N],[17,"TCIOFF","","",N,N],[17,"TCION","","",N,N],[17,"TCOOFF","","",N,N],[17,"TCOON","","",N,N],[17,"TCIFLUSH","","",N,N],[17,"TCOFLUSH","","",N,N],[17,"TCIOFLUSH","","",N,N],[17,"NL0","","",N,N],[17,"NL1","","",N,N],[17,"TAB0","","",N,N],[17,"CR0","","",N,N],[17,"FF0","","",N,N],[17,"BS0","","",N,N],[17,"VT0","","",N,N],[17,"VERASE","","",N,N],[17,"VKILL","","",N,N],[17,"VINTR","","",N,N],[17,"VQUIT","","",N,N],[17,"VLNEXT","","",N,N],[17,"IGNBRK","","",N,N],[17,"BRKINT","","",N,N],[17,"IGNPAR","","",N,N],[17,"PARMRK","","",N,N],[17,"INPCK","","",N,N],[17,"ISTRIP","","",N,N],[17,"INLCR","","",N,N],[17,"IGNCR","","",N,N],[17,"ICRNL","","",N,N],[17,"IXANY","","",N,N],[17,"IMAXBEL","","",N,N],[17,"OPOST","","",N,N],[17,"CS5","","",N,N],[17,"CRTSCTS","","",N,N],[17,"ECHO","","",N,N],[17,"OCRNL","","",N,N],[17,"ONOCR","","",N,N],[17,"ONLRET","","",N,N],[17,"OFILL","","",N,N],[17,"OFDEL","","",N,N],[17,"CLONE_VM","","",N,N],[17,"CLONE_FS","","",N,N],[17,"CLONE_FILES","","",N,N],[17,"CLONE_SIGHAND","","",N,N],[17,"CLONE_PTRACE","","",N,N],[17,"CLONE_VFORK","","",N,N],[17,"CLONE_PARENT","","",N,N],[17,"CLONE_THREAD","","",N,N],[17,"CLONE_NEWNS","","",N,N],[17,"CLONE_SYSVSEM","","",N,N],[17,"CLONE_SETTLS","","",N,N],[17,"CLONE_PARENT_SETTID","","",N,N],[17,"CLONE_CHILD_CLEARTID","","",N,N],[17,"CLONE_DETACHED","","",N,N],[17,"CLONE_UNTRACED","","",N,N],[17,"CLONE_CHILD_SETTID","","",N,N],[17,"CLONE_NEWUTS","","",N,N],[17,"CLONE_NEWIPC","","",N,N],[17,"CLONE_NEWUSER","","",N,N],[17,"CLONE_NEWPID","","",N,N],[17,"CLONE_NEWNET","","",N,N],[17,"CLONE_IO","","",N,N],[17,"CLONE_NEWCGROUP","","",N,N],[17,"WNOHANG","","",N,N],[17,"WUNTRACED","","",N,N],[17,"WSTOPPED","","",N,N],[17,"WEXITED","","",N,N],[17,"WCONTINUED","","",N,N],[17,"WNOWAIT","","",N,N],[17,"PTRACE_O_TRACESYSGOOD","","",N,N],[17,"PTRACE_O_TRACEFORK","","",N,N],[17,"PTRACE_O_TRACEVFORK","","",N,N],[17,"PTRACE_O_TRACECLONE","","",N,N],[17,"PTRACE_O_TRACEEXEC","","",N,N],[17,"PTRACE_O_TRACEVFORKDONE","","",N,N],[17,"PTRACE_O_TRACEEXIT","","",N,N],[17,"PTRACE_O_TRACESECCOMP","","",N,N],[17,"PTRACE_O_EXITKILL","","",N,N],[17,"PTRACE_O_SUSPEND_SECCOMP","","",N,N],[17,"PTRACE_O_MASK","","",N,N],[17,"PTRACE_EVENT_FORK","","",N,N],[17,"PTRACE_EVENT_VFORK","","",N,N],[17,"PTRACE_EVENT_CLONE","","",N,N],[17,"PTRACE_EVENT_EXEC","","",N,N],[17,"PTRACE_EVENT_VFORK_DONE","","",N,N],[17,"PTRACE_EVENT_EXIT","","",N,N],[17,"PTRACE_EVENT_SECCOMP","","",N,N],[17,"__WNOTHREAD","","",N,N],[17,"__WALL","","",N,N],[17,"__WCLONE","","",N,N],[17,"SPLICE_F_MOVE","","",N,N],[17,"SPLICE_F_NONBLOCK","","",N,N],[17,"SPLICE_F_MORE","","",N,N],[17,"SPLICE_F_GIFT","","",N,N],[17,"RTLD_LOCAL","","",N,N],[17,"RTLD_LAZY","","",N,N],[17,"POSIX_FADV_NORMAL","","",N,N],[17,"POSIX_FADV_RANDOM","","",N,N],[17,"POSIX_FADV_SEQUENTIAL","","",N,N],[17,"POSIX_FADV_WILLNEED","","",N,N],[17,"AT_FDCWD","","",N,N],[17,"AT_SYMLINK_NOFOLLOW","","",N,N],[17,"AT_REMOVEDIR","","",N,N],[17,"AT_SYMLINK_FOLLOW","","",N,N],[17,"AT_NO_AUTOMOUNT","","",N,N],[17,"AT_EMPTY_PATH","","",N,N],[17,"LOG_CRON","","",N,N],[17,"LOG_AUTHPRIV","","",N,N],[17,"LOG_FTP","","",N,N],[17,"LOG_PERROR","","",N,N],[17,"PIPE_BUF","","",N,N],[17,"SI_LOAD_SHIFT","","",N,N],[17,"SIGEV_SIGNAL","","",N,N],[17,"SIGEV_NONE","","",N,N],[17,"SIGEV_THREAD","","",N,N],[17,"P_ALL","","",N,N],[17,"P_PID","","",N,N],[17,"P_PGID","","",N,N],[17,"UTIME_OMIT","","",N,N],[17,"UTIME_NOW","","",N,N],[17,"POLLIN","","",N,N],[17,"POLLPRI","","",N,N],[17,"POLLOUT","","",N,N],[17,"POLLERR","","",N,N],[17,"POLLHUP","","",N,N],[17,"POLLNVAL","","",N,N],[17,"POLLRDNORM","","",N,N],[17,"POLLRDBAND","","",N,N],[17,"IPTOS_LOWDELAY","","",N,N],[17,"IPTOS_THROUGHPUT","","",N,N],[17,"IPTOS_RELIABILITY","","",N,N],[17,"IPTOS_MINCOST","","",N,N],[17,"IPTOS_PREC_NETCONTROL","","",N,N],[17,"IPTOS_PREC_INTERNETCONTROL","","",N,N],[17,"IPTOS_PREC_CRITIC_ECP","","",N,N],[17,"IPTOS_PREC_FLASHOVERRIDE","","",N,N],[17,"IPTOS_PREC_FLASH","","",N,N],[17,"IPTOS_PREC_IMMEDIATE","","",N,N],[17,"IPTOS_PREC_PRIORITY","","",N,N],[17,"IPTOS_PREC_ROUTINE","","",N,N],[17,"IPOPT_COPY","","",N,N],[17,"IPOPT_CLASS_MASK","","",N,N],[17,"IPOPT_NUMBER_MASK","","",N,N],[17,"IPOPT_CONTROL","","",N,N],[17,"IPOPT_RESERVED1","","",N,N],[17,"IPOPT_MEASUREMENT","","",N,N],[17,"IPOPT_RESERVED2","","",N,N],[17,"IPOPT_END","","",N,N],[17,"IPOPT_NOOP","","",N,N],[17,"IPOPT_SEC","","",N,N],[17,"IPOPT_LSRR","","",N,N],[17,"IPOPT_TIMESTAMP","","",N,N],[17,"IPOPT_RR","","",N,N],[17,"IPOPT_SID","","",N,N],[17,"IPOPT_SSRR","","",N,N],[17,"IPOPT_RA","","",N,N],[17,"IPVERSION","","",N,N],[17,"MAXTTL","","",N,N],[17,"IPDEFTTL","","",N,N],[17,"IPOPT_OPTVAL","","",N,N],[17,"IPOPT_OLEN","","",N,N],[17,"IPOPT_OFFSET","","",N,N],[17,"IPOPT_MINOFF","","",N,N],[17,"MAX_IPOPTLEN","","",N,N],[17,"IPOPT_NOP","","",N,N],[17,"IPOPT_EOL","","",N,N],[17,"IPOPT_TS","","",N,N],[17,"IPOPT_TS_TSONLY","","",N,N],[17,"IPOPT_TS_TSANDADDR","","",N,N],[17,"IPOPT_TS_PRESPEC","","",N,N],[17,"ARPOP_RREQUEST","","",N,N],[17,"ARPOP_RREPLY","","",N,N],[17,"ARPOP_InREQUEST","","",N,N],[17,"ARPOP_InREPLY","","",N,N],[17,"ARPOP_NAK","","",N,N],[17,"ATF_NETMASK","","",N,N],[17,"ATF_DONTPUB","","",N,N],[17,"ARPHRD_NETROM","","",N,N],[17,"ARPHRD_ETHER","","",N,N],[17,"ARPHRD_EETHER","","",N,N],[17,"ARPHRD_AX25","","",N,N],[17,"ARPHRD_PRONET","","",N,N],[17,"ARPHRD_CHAOS","","",N,N],[17,"ARPHRD_IEEE802","","",N,N],[17,"ARPHRD_ARCNET","","",N,N],[17,"ARPHRD_APPLETLK","","",N,N],[17,"ARPHRD_DLCI","","",N,N],[17,"ARPHRD_ATM","","",N,N],[17,"ARPHRD_METRICOM","","",N,N],[17,"ARPHRD_IEEE1394","","",N,N],[17,"ARPHRD_EUI64","","",N,N],[17,"ARPHRD_INFINIBAND","","",N,N],[17,"ARPHRD_SLIP","","",N,N],[17,"ARPHRD_CSLIP","","",N,N],[17,"ARPHRD_SLIP6","","",N,N],[17,"ARPHRD_CSLIP6","","",N,N],[17,"ARPHRD_RSRVD","","",N,N],[17,"ARPHRD_ADAPT","","",N,N],[17,"ARPHRD_ROSE","","",N,N],[17,"ARPHRD_X25","","",N,N],[17,"ARPHRD_HWX25","","",N,N],[17,"ARPHRD_PPP","","",N,N],[17,"ARPHRD_CISCO","","",N,N],[17,"ARPHRD_HDLC","","",N,N],[17,"ARPHRD_LAPB","","",N,N],[17,"ARPHRD_DDCMP","","",N,N],[17,"ARPHRD_RAWHDLC","","",N,N],[17,"ARPHRD_TUNNEL","","",N,N],[17,"ARPHRD_TUNNEL6","","",N,N],[17,"ARPHRD_FRAD","","",N,N],[17,"ARPHRD_SKIP","","",N,N],[17,"ARPHRD_LOOPBACK","","",N,N],[17,"ARPHRD_LOCALTLK","","",N,N],[17,"ARPHRD_FDDI","","",N,N],[17,"ARPHRD_BIF","","",N,N],[17,"ARPHRD_SIT","","",N,N],[17,"ARPHRD_IPDDP","","",N,N],[17,"ARPHRD_IPGRE","","",N,N],[17,"ARPHRD_PIMREG","","",N,N],[17,"ARPHRD_HIPPI","","",N,N],[17,"ARPHRD_ASH","","",N,N],[17,"ARPHRD_ECONET","","",N,N],[17,"ARPHRD_IRDA","","",N,N],[17,"ARPHRD_FCPP","","",N,N],[17,"ARPHRD_FCAL","","",N,N],[17,"ARPHRD_FCPL","","",N,N],[17,"ARPHRD_FCFABRIC","","",N,N],[17,"ARPHRD_IEEE802_TR","","",N,N],[17,"ARPHRD_IEEE80211","","",N,N],[17,"ARPHRD_IEEE80211_PRISM","","",N,N],[17,"ARPHRD_IEEE80211_RADIOTAP","","",N,N],[17,"ARPHRD_IEEE802154","","",N,N],[17,"ARPHRD_VOID","","",N,N],[17,"ARPHRD_NONE","","",N,N],[17,"ABDAY_1","","",N,N],[17,"ABDAY_2","","",N,N],[17,"ABDAY_3","","",N,N],[17,"ABDAY_4","","",N,N],[17,"ABDAY_5","","",N,N],[17,"ABDAY_6","","",N,N],[17,"ABDAY_7","","",N,N],[17,"DAY_1","","",N,N],[17,"DAY_2","","",N,N],[17,"DAY_3","","",N,N],[17,"DAY_4","","",N,N],[17,"DAY_5","","",N,N],[17,"DAY_6","","",N,N],[17,"DAY_7","","",N,N],[17,"ABMON_1","","",N,N],[17,"ABMON_2","","",N,N],[17,"ABMON_3","","",N,N],[17,"ABMON_4","","",N,N],[17,"ABMON_5","","",N,N],[17,"ABMON_6","","",N,N],[17,"ABMON_7","","",N,N],[17,"ABMON_8","","",N,N],[17,"ABMON_9","","",N,N],[17,"ABMON_10","","",N,N],[17,"ABMON_11","","",N,N],[17,"ABMON_12","","",N,N],[17,"MON_1","","",N,N],[17,"MON_2","","",N,N],[17,"MON_3","","",N,N],[17,"MON_4","","",N,N],[17,"MON_5","","",N,N],[17,"MON_6","","",N,N],[17,"MON_7","","",N,N],[17,"MON_8","","",N,N],[17,"MON_9","","",N,N],[17,"MON_10","","",N,N],[17,"MON_11","","",N,N],[17,"MON_12","","",N,N],[17,"AM_STR","","",N,N],[17,"PM_STR","","",N,N],[17,"D_T_FMT","","",N,N],[17,"D_FMT","","",N,N],[17,"T_FMT","","",N,N],[17,"T_FMT_AMPM","","",N,N],[17,"ERA","","",N,N],[17,"ERA_D_FMT","","",N,N],[17,"ALT_DIGITS","","",N,N],[17,"ERA_D_T_FMT","","",N,N],[17,"ERA_T_FMT","","",N,N],[17,"CODESET","","",N,N],[17,"CRNCYSTR","","",N,N],[17,"RUSAGE_THREAD","","",N,N],[17,"RUSAGE_CHILDREN","","",N,N],[17,"RADIXCHAR","","",N,N],[17,"THOUSEP","","",N,N],[17,"YESEXPR","","",N,N],[17,"NOEXPR","","",N,N],[17,"YESSTR","","",N,N],[17,"NOSTR","","",N,N],[17,"FILENAME_MAX","","",N,N],[17,"L_tmpnam","","",N,N],[17,"_PC_LINK_MAX","","",N,N],[17,"_PC_MAX_CANON","","",N,N],[17,"_PC_MAX_INPUT","","",N,N],[17,"_PC_NAME_MAX","","",N,N],[17,"_PC_PATH_MAX","","",N,N],[17,"_PC_PIPE_BUF","","",N,N],[17,"_PC_CHOWN_RESTRICTED","","",N,N],[17,"_PC_NO_TRUNC","","",N,N],[17,"_PC_VDISABLE","","",N,N],[17,"_PC_SYNC_IO","","",N,N],[17,"_PC_ASYNC_IO","","",N,N],[17,"_PC_PRIO_IO","","",N,N],[17,"_PC_SOCK_MAXBUF","","",N,N],[17,"_PC_FILESIZEBITS","","",N,N],[17,"_PC_REC_INCR_XFER_SIZE","","",N,N],[17,"_PC_REC_MAX_XFER_SIZE","","",N,N],[17,"_PC_REC_MIN_XFER_SIZE","","",N,N],[17,"_PC_REC_XFER_ALIGN","","",N,N],[17,"_PC_ALLOC_SIZE_MIN","","",N,N],[17,"_PC_SYMLINK_MAX","","",N,N],[17,"_PC_2_SYMLINKS","","",N,N],[17,"_SC_ARG_MAX","","",N,N],[17,"_SC_CHILD_MAX","","",N,N],[17,"_SC_CLK_TCK","","",N,N],[17,"_SC_NGROUPS_MAX","","",N,N],[17,"_SC_OPEN_MAX","","",N,N],[17,"_SC_STREAM_MAX","","",N,N],[17,"_SC_TZNAME_MAX","","",N,N],[17,"_SC_JOB_CONTROL","","",N,N],[17,"_SC_SAVED_IDS","","",N,N],[17,"_SC_REALTIME_SIGNALS","","",N,N],[17,"_SC_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_TIMERS","","",N,N],[17,"_SC_ASYNCHRONOUS_IO","","",N,N],[17,"_SC_PRIORITIZED_IO","","",N,N],[17,"_SC_SYNCHRONIZED_IO","","",N,N],[17,"_SC_FSYNC","","",N,N],[17,"_SC_MAPPED_FILES","","",N,N],[17,"_SC_MEMLOCK","","",N,N],[17,"_SC_MEMLOCK_RANGE","","",N,N],[17,"_SC_MEMORY_PROTECTION","","",N,N],[17,"_SC_MESSAGE_PASSING","","",N,N],[17,"_SC_SEMAPHORES","","",N,N],[17,"_SC_SHARED_MEMORY_OBJECTS","","",N,N],[17,"_SC_AIO_LISTIO_MAX","","",N,N],[17,"_SC_AIO_MAX","","",N,N],[17,"_SC_AIO_PRIO_DELTA_MAX","","",N,N],[17,"_SC_DELAYTIMER_MAX","","",N,N],[17,"_SC_MQ_OPEN_MAX","","",N,N],[17,"_SC_MQ_PRIO_MAX","","",N,N],[17,"_SC_VERSION","","",N,N],[17,"_SC_PAGESIZE","","",N,N],[17,"_SC_PAGE_SIZE","","",N,N],[17,"_SC_RTSIG_MAX","","",N,N],[17,"_SC_SEM_NSEMS_MAX","","",N,N],[17,"_SC_SEM_VALUE_MAX","","",N,N],[17,"_SC_SIGQUEUE_MAX","","",N,N],[17,"_SC_TIMER_MAX","","",N,N],[17,"_SC_BC_BASE_MAX","","",N,N],[17,"_SC_BC_DIM_MAX","","",N,N],[17,"_SC_BC_SCALE_MAX","","",N,N],[17,"_SC_BC_STRING_MAX","","",N,N],[17,"_SC_COLL_WEIGHTS_MAX","","",N,N],[17,"_SC_EXPR_NEST_MAX","","",N,N],[17,"_SC_LINE_MAX","","",N,N],[17,"_SC_RE_DUP_MAX","","",N,N],[17,"_SC_2_VERSION","","",N,N],[17,"_SC_2_C_BIND","","",N,N],[17,"_SC_2_C_DEV","","",N,N],[17,"_SC_2_FORT_DEV","","",N,N],[17,"_SC_2_FORT_RUN","","",N,N],[17,"_SC_2_SW_DEV","","",N,N],[17,"_SC_2_LOCALEDEF","","",N,N],[17,"_SC_UIO_MAXIOV","","",N,N],[17,"_SC_IOV_MAX","","",N,N],[17,"_SC_THREADS","","",N,N],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",N,N],[17,"_SC_GETGR_R_SIZE_MAX","","",N,N],[17,"_SC_GETPW_R_SIZE_MAX","","",N,N],[17,"_SC_LOGIN_NAME_MAX","","",N,N],[17,"_SC_TTY_NAME_MAX","","",N,N],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",N,N],[17,"_SC_THREAD_KEYS_MAX","","",N,N],[17,"_SC_THREAD_STACK_MIN","","",N,N],[17,"_SC_THREAD_THREADS_MAX","","",N,N],[17,"_SC_THREAD_ATTR_STACKADDR","","",N,N],[17,"_SC_THREAD_ATTR_STACKSIZE","","",N,N],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",N,N],[17,"_SC_THREAD_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_PRIO_PROTECT","","",N,N],[17,"_SC_THREAD_PROCESS_SHARED","","",N,N],[17,"_SC_NPROCESSORS_CONF","","",N,N],[17,"_SC_NPROCESSORS_ONLN","","",N,N],[17,"_SC_PHYS_PAGES","","",N,N],[17,"_SC_AVPHYS_PAGES","","",N,N],[17,"_SC_ATEXIT_MAX","","",N,N],[17,"_SC_PASS_MAX","","",N,N],[17,"_SC_XOPEN_VERSION","","",N,N],[17,"_SC_XOPEN_XCU_VERSION","","",N,N],[17,"_SC_XOPEN_UNIX","","",N,N],[17,"_SC_XOPEN_CRYPT","","",N,N],[17,"_SC_XOPEN_ENH_I18N","","",N,N],[17,"_SC_XOPEN_SHM","","",N,N],[17,"_SC_2_CHAR_TERM","","",N,N],[17,"_SC_2_UPE","","",N,N],[17,"_SC_XOPEN_XPG2","","",N,N],[17,"_SC_XOPEN_XPG3","","",N,N],[17,"_SC_XOPEN_XPG4","","",N,N],[17,"_SC_NZERO","","",N,N],[17,"_SC_XBS5_ILP32_OFF32","","",N,N],[17,"_SC_XBS5_ILP32_OFFBIG","","",N,N],[17,"_SC_XBS5_LP64_OFF64","","",N,N],[17,"_SC_XBS5_LPBIG_OFFBIG","","",N,N],[17,"_SC_XOPEN_LEGACY","","",N,N],[17,"_SC_XOPEN_REALTIME","","",N,N],[17,"_SC_XOPEN_REALTIME_THREADS","","",N,N],[17,"_SC_ADVISORY_INFO","","",N,N],[17,"_SC_BARRIERS","","",N,N],[17,"_SC_CLOCK_SELECTION","","",N,N],[17,"_SC_CPUTIME","","",N,N],[17,"_SC_THREAD_CPUTIME","","",N,N],[17,"_SC_MONOTONIC_CLOCK","","",N,N],[17,"_SC_READER_WRITER_LOCKS","","",N,N],[17,"_SC_SPIN_LOCKS","","",N,N],[17,"_SC_REGEXP","","",N,N],[17,"_SC_SHELL","","",N,N],[17,"_SC_SPAWN","","",N,N],[17,"_SC_SPORADIC_SERVER","","",N,N],[17,"_SC_THREAD_SPORADIC_SERVER","","",N,N],[17,"_SC_TIMEOUTS","","",N,N],[17,"_SC_TYPED_MEMORY_OBJECTS","","",N,N],[17,"_SC_2_PBS","","",N,N],[17,"_SC_2_PBS_ACCOUNTING","","",N,N],[17,"_SC_2_PBS_LOCATE","","",N,N],[17,"_SC_2_PBS_MESSAGE","","",N,N],[17,"_SC_2_PBS_TRACK","","",N,N],[17,"_SC_SYMLOOP_MAX","","",N,N],[17,"_SC_STREAMS","","",N,N],[17,"_SC_2_PBS_CHECKPOINT","","",N,N],[17,"_SC_V6_ILP32_OFF32","","",N,N],[17,"_SC_V6_ILP32_OFFBIG","","",N,N],[17,"_SC_V6_LP64_OFF64","","",N,N],[17,"_SC_V6_LPBIG_OFFBIG","","",N,N],[17,"_SC_HOST_NAME_MAX","","",N,N],[17,"_SC_TRACE","","",N,N],[17,"_SC_TRACE_EVENT_FILTER","","",N,N],[17,"_SC_TRACE_INHERIT","","",N,N],[17,"_SC_TRACE_LOG","","",N,N],[17,"_SC_IPV6","","",N,N],[17,"_SC_RAW_SOCKETS","","",N,N],[17,"_SC_V7_ILP32_OFF32","","",N,N],[17,"_SC_V7_ILP32_OFFBIG","","",N,N],[17,"_SC_V7_LP64_OFF64","","",N,N],[17,"_SC_V7_LPBIG_OFFBIG","","",N,N],[17,"_SC_SS_REPL_MAX","","",N,N],[17,"_SC_TRACE_EVENT_NAME_MAX","","",N,N],[17,"_SC_TRACE_NAME_MAX","","",N,N],[17,"_SC_TRACE_SYS_MAX","","",N,N],[17,"_SC_TRACE_USER_EVENT_MAX","","",N,N],[17,"_SC_XOPEN_STREAMS","","",N,N],[17,"_SC_THREAD_ROBUST_PRIO_INHERIT","","",N,N],[17,"_SC_THREAD_ROBUST_PRIO_PROTECT","","",N,N],[17,"RLIM_SAVED_MAX","","",N,N],[17,"RLIM_SAVED_CUR","","",N,N],[17,"GLOB_ERR","","",N,N],[17,"GLOB_MARK","","",N,N],[17,"GLOB_NOSORT","","",N,N],[17,"GLOB_DOOFFS","","",N,N],[17,"GLOB_NOCHECK","","",N,N],[17,"GLOB_APPEND","","",N,N],[17,"GLOB_NOESCAPE","","",N,N],[17,"GLOB_NOSPACE","","",N,N],[17,"GLOB_ABORTED","","",N,N],[17,"GLOB_NOMATCH","","",N,N],[17,"POSIX_MADV_NORMAL","","",N,N],[17,"POSIX_MADV_RANDOM","","",N,N],[17,"POSIX_MADV_SEQUENTIAL","","",N,N],[17,"POSIX_MADV_WILLNEED","","",N,N],[17,"S_IEXEC","","",N,N],[17,"S_IWRITE","","",N,N],[17,"S_IREAD","","",N,N],[17,"F_LOCK","","",N,N],[17,"F_TEST","","",N,N],[17,"F_TLOCK","","",N,N],[17,"F_ULOCK","","",N,N],[17,"IFF_LOWER_UP","","",N,N],[17,"IFF_DORMANT","","",N,N],[17,"IFF_ECHO","","",N,N],[17,"IFF_TUN","","",N,N],[17,"IFF_TAP","","",N,N],[17,"IFF_NO_PI","","",N,N],[17,"TUN_READQ_SIZE","","",N,N],[17,"TUN_TUN_DEV","","",N,N],[17,"TUN_TAP_DEV","","",N,N],[17,"TUN_TYPE_MASK","","",N,N],[17,"IFF_ONE_QUEUE","","",N,N],[17,"IFF_VNET_HDR","","",N,N],[17,"IFF_TUN_EXCL","","",N,N],[17,"IFF_MULTI_QUEUE","","",N,N],[17,"IFF_ATTACH_QUEUE","","",N,N],[17,"IFF_DETACH_QUEUE","","",N,N],[17,"IFF_PERSIST","","",N,N],[17,"IFF_NOFILTER","","",N,N],[17,"ST_RDONLY","","",N,N],[17,"ST_NOSUID","","",N,N],[17,"ST_NODEV","","",N,N],[17,"ST_NOEXEC","","",N,N],[17,"ST_SYNCHRONOUS","","",N,N],[17,"ST_MANDLOCK","","",N,N],[17,"ST_WRITE","","",N,N],[17,"ST_APPEND","","",N,N],[17,"ST_IMMUTABLE","","",N,N],[17,"ST_NOATIME","","",N,N],[17,"ST_NODIRATIME","","",N,N],[17,"RTLD_NEXT","","",N,N],[17,"RTLD_DEFAULT","","",N,N],[17,"RTLD_NODELETE","","",N,N],[17,"RTLD_NOW","","",N,N],[17,"TCP_MD5SIG","","",N,N],[17,"PTHREAD_MUTEX_INITIALIZER","","",N,N],[17,"PTHREAD_COND_INITIALIZER","","",N,N],[17,"PTHREAD_RWLOCK_INITIALIZER","","",N,N],[17,"PTHREAD_MUTEX_NORMAL","","",N,N],[17,"PTHREAD_MUTEX_RECURSIVE","","",N,N],[17,"PTHREAD_MUTEX_ERRORCHECK","","",N,N],[17,"PTHREAD_MUTEX_DEFAULT","","",N,N],[17,"PTHREAD_PROCESS_PRIVATE","","",N,N],[17,"PTHREAD_PROCESS_SHARED","","",N,N],[17,"__SIZEOF_PTHREAD_COND_T","","",N,N],[17,"RENAME_NOREPLACE","","",N,N],[17,"RENAME_EXCHANGE","","",N,N],[17,"RENAME_WHITEOUT","","",N,N],[17,"SCHED_OTHER","","",N,N],[17,"SCHED_FIFO","","",N,N],[17,"SCHED_RR","","",N,N],[17,"SCHED_BATCH","","",N,N],[17,"SCHED_IDLE","","",N,N],[17,"IPPROTO_HOPOPTS","","Hop-by-hop option header",N,N],[17,"IPPROTO_IGMP","","group mgmt protocol",N,N],[17,"IPPROTO_IPIP","","for compatibility",N,N],[17,"IPPROTO_EGP","","exterior gateway protocol",N,N],[17,"IPPROTO_PUP","","pup",N,N],[17,"IPPROTO_IDP","","xns idp",N,N],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",N,N],[17,"IPPROTO_DCCP","","DCCP",N,N],[17,"IPPROTO_ROUTING","","IP6 routing header",N,N],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",N,N],[17,"IPPROTO_RSVP","","resource reservation",N,N],[17,"IPPROTO_GRE","","General Routing Encap.",N,N],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",N,N],[17,"IPPROTO_AH","","IP6 Auth Header",N,N],[17,"IPPROTO_NONE","","IP6 no next header",N,N],[17,"IPPROTO_DSTOPTS","","IP6 destination option",N,N],[17,"IPPROTO_MTP","","",N,N],[17,"IPPROTO_BEETPH","","",N,N],[17,"IPPROTO_ENCAP","","encapsulation header",N,N],[17,"IPPROTO_PIM","","Protocol indep. multicast",N,N],[17,"IPPROTO_COMP","","IP Payload Comp. Protocol",N,N],[17,"IPPROTO_SCTP","","SCTP",N,N],[17,"IPPROTO_MH","","",N,N],[17,"IPPROTO_UDPLITE","","",N,N],[17,"IPPROTO_MPLS","","",N,N],[17,"IPPROTO_RAW","","raw IP packet",N,N],[17,"IPPROTO_MAX","","",N,N],[17,"AF_IB","","",N,N],[17,"AF_MPLS","","",N,N],[17,"AF_NFC","","",N,N],[17,"AF_VSOCK","","",N,N],[17,"PF_IB","","",N,N],[17,"PF_MPLS","","",N,N],[17,"PF_NFC","","",N,N],[17,"PF_VSOCK","","",N,N],[17,"IPC_PRIVATE","","",N,N],[17,"IPC_CREAT","","",N,N],[17,"IPC_EXCL","","",N,N],[17,"IPC_NOWAIT","","",N,N],[17,"IPC_RMID","","",N,N],[17,"IPC_SET","","",N,N],[17,"IPC_STAT","","",N,N],[17,"IPC_INFO","","",N,N],[17,"MSG_STAT","","",N,N],[17,"MSG_INFO","","",N,N],[17,"MSG_NOERROR","","",N,N],[17,"MSG_EXCEPT","","",N,N],[17,"MSG_COPY","","",N,N],[17,"SHM_R","","",N,N],[17,"SHM_W","","",N,N],[17,"SHM_RDONLY","","",N,N],[17,"SHM_RND","","",N,N],[17,"SHM_REMAP","","",N,N],[17,"SHM_EXEC","","",N,N],[17,"SHM_LOCK","","",N,N],[17,"SHM_UNLOCK","","",N,N],[17,"SHM_HUGETLB","","",N,N],[17,"SHM_NORESERVE","","",N,N],[17,"EPOLLRDHUP","","",N,N],[17,"EPOLLEXCLUSIVE","","",N,N],[17,"EPOLLONESHOT","","",N,N],[17,"QFMT_VFS_OLD","","",N,N],[17,"QFMT_VFS_V0","","",N,N],[17,"QFMT_VFS_V1","","",N,N],[17,"EFD_SEMAPHORE","","",N,N],[17,"LOG_NFACILITIES","","",N,N],[17,"SEM_FAILED","","",N,N],[17,"RB_AUTOBOOT","","",N,N],[17,"RB_HALT_SYSTEM","","",N,N],[17,"RB_ENABLE_CAD","","",N,N],[17,"RB_DISABLE_CAD","","",N,N],[17,"RB_POWER_OFF","","",N,N],[17,"RB_SW_SUSPEND","","",N,N],[17,"RB_KEXEC","","",N,N],[17,"AI_PASSIVE","","",N,N],[17,"AI_CANONNAME","","",N,N],[17,"AI_NUMERICHOST","","",N,N],[17,"AI_V4MAPPED","","",N,N],[17,"AI_ALL","","",N,N],[17,"AI_ADDRCONFIG","","",N,N],[17,"AI_NUMERICSERV","","",N,N],[17,"EAI_BADFLAGS","","",N,N],[17,"EAI_NONAME","","",N,N],[17,"EAI_AGAIN","","",N,N],[17,"EAI_FAIL","","",N,N],[17,"EAI_NODATA","","",N,N],[17,"EAI_FAMILY","","",N,N],[17,"EAI_SOCKTYPE","","",N,N],[17,"EAI_SERVICE","","",N,N],[17,"EAI_MEMORY","","",N,N],[17,"EAI_SYSTEM","","",N,N],[17,"EAI_OVERFLOW","","",N,N],[17,"NI_NUMERICHOST","","",N,N],[17,"NI_NUMERICSERV","","",N,N],[17,"NI_NOFQDN","","",N,N],[17,"NI_NAMEREQD","","",N,N],[17,"NI_DGRAM","","",N,N],[17,"SYNC_FILE_RANGE_WAIT_BEFORE","","",N,N],[17,"SYNC_FILE_RANGE_WRITE","","",N,N],[17,"SYNC_FILE_RANGE_WAIT_AFTER","","",N,N],[17,"AIO_CANCELED","","",N,N],[17,"AIO_NOTCANCELED","","",N,N],[17,"AIO_ALLDONE","","",N,N],[17,"LIO_READ","","",N,N],[17,"LIO_WRITE","","",N,N],[17,"LIO_NOP","","",N,N],[17,"LIO_WAIT","","",N,N],[17,"LIO_NOWAIT","","",N,N],[17,"MREMAP_MAYMOVE","","",N,N],[17,"MREMAP_FIXED","","",N,N],[17,"PR_SET_PDEATHSIG","","",N,N],[17,"PR_GET_PDEATHSIG","","",N,N],[17,"PR_GET_DUMPABLE","","",N,N],[17,"PR_SET_DUMPABLE","","",N,N],[17,"PR_GET_UNALIGN","","",N,N],[17,"PR_SET_UNALIGN","","",N,N],[17,"PR_UNALIGN_NOPRINT","","",N,N],[17,"PR_UNALIGN_SIGBUS","","",N,N],[17,"PR_GET_KEEPCAPS","","",N,N],[17,"PR_SET_KEEPCAPS","","",N,N],[17,"PR_GET_FPEMU","","",N,N],[17,"PR_SET_FPEMU","","",N,N],[17,"PR_FPEMU_NOPRINT","","",N,N],[17,"PR_FPEMU_SIGFPE","","",N,N],[17,"PR_GET_FPEXC","","",N,N],[17,"PR_SET_FPEXC","","",N,N],[17,"PR_FP_EXC_SW_ENABLE","","",N,N],[17,"PR_FP_EXC_DIV","","",N,N],[17,"PR_FP_EXC_OVF","","",N,N],[17,"PR_FP_EXC_UND","","",N,N],[17,"PR_FP_EXC_RES","","",N,N],[17,"PR_FP_EXC_INV","","",N,N],[17,"PR_FP_EXC_DISABLED","","",N,N],[17,"PR_FP_EXC_NONRECOV","","",N,N],[17,"PR_FP_EXC_ASYNC","","",N,N],[17,"PR_FP_EXC_PRECISE","","",N,N],[17,"PR_GET_TIMING","","",N,N],[17,"PR_SET_TIMING","","",N,N],[17,"PR_TIMING_STATISTICAL","","",N,N],[17,"PR_TIMING_TIMESTAMP","","",N,N],[17,"PR_SET_NAME","","",N,N],[17,"PR_GET_NAME","","",N,N],[17,"PR_GET_ENDIAN","","",N,N],[17,"PR_SET_ENDIAN","","",N,N],[17,"PR_ENDIAN_BIG","","",N,N],[17,"PR_ENDIAN_LITTLE","","",N,N],[17,"PR_ENDIAN_PPC_LITTLE","","",N,N],[17,"PR_GET_SECCOMP","","",N,N],[17,"PR_SET_SECCOMP","","",N,N],[17,"PR_CAPBSET_READ","","",N,N],[17,"PR_CAPBSET_DROP","","",N,N],[17,"PR_GET_TSC","","",N,N],[17,"PR_SET_TSC","","",N,N],[17,"PR_TSC_ENABLE","","",N,N],[17,"PR_TSC_SIGSEGV","","",N,N],[17,"PR_GET_SECUREBITS","","",N,N],[17,"PR_SET_SECUREBITS","","",N,N],[17,"PR_SET_TIMERSLACK","","",N,N],[17,"PR_GET_TIMERSLACK","","",N,N],[17,"PR_TASK_PERF_EVENTS_DISABLE","","",N,N],[17,"PR_TASK_PERF_EVENTS_ENABLE","","",N,N],[17,"PR_MCE_KILL","","",N,N],[17,"PR_MCE_KILL_CLEAR","","",N,N],[17,"PR_MCE_KILL_SET","","",N,N],[17,"PR_MCE_KILL_LATE","","",N,N],[17,"PR_MCE_KILL_EARLY","","",N,N],[17,"PR_MCE_KILL_DEFAULT","","",N,N],[17,"PR_MCE_KILL_GET","","",N,N],[17,"PR_SET_MM","","",N,N],[17,"PR_SET_MM_START_CODE","","",N,N],[17,"PR_SET_MM_END_CODE","","",N,N],[17,"PR_SET_MM_START_DATA","","",N,N],[17,"PR_SET_MM_END_DATA","","",N,N],[17,"PR_SET_MM_START_STACK","","",N,N],[17,"PR_SET_MM_START_BRK","","",N,N],[17,"PR_SET_MM_BRK","","",N,N],[17,"PR_SET_MM_ARG_START","","",N,N],[17,"PR_SET_MM_ARG_END","","",N,N],[17,"PR_SET_MM_ENV_START","","",N,N],[17,"PR_SET_MM_ENV_END","","",N,N],[17,"PR_SET_MM_AUXV","","",N,N],[17,"PR_SET_MM_EXE_FILE","","",N,N],[17,"PR_SET_MM_MAP","","",N,N],[17,"PR_SET_MM_MAP_SIZE","","",N,N],[17,"PR_SET_PTRACER","","",N,N],[17,"PR_SET_CHILD_SUBREAPER","","",N,N],[17,"PR_GET_CHILD_SUBREAPER","","",N,N],[17,"PR_SET_NO_NEW_PRIVS","","",N,N],[17,"PR_GET_NO_NEW_PRIVS","","",N,N],[17,"PR_GET_TID_ADDRESS","","",N,N],[17,"PR_SET_THP_DISABLE","","",N,N],[17,"PR_GET_THP_DISABLE","","",N,N],[17,"PR_MPX_ENABLE_MANAGEMENT","","",N,N],[17,"PR_MPX_DISABLE_MANAGEMENT","","",N,N],[17,"PR_SET_FP_MODE","","",N,N],[17,"PR_GET_FP_MODE","","",N,N],[17,"PR_FP_MODE_FR","","",N,N],[17,"PR_FP_MODE_FRE","","",N,N],[17,"PR_CAP_AMBIENT","","",N,N],[17,"PR_CAP_AMBIENT_IS_SET","","",N,N],[17,"PR_CAP_AMBIENT_RAISE","","",N,N],[17,"PR_CAP_AMBIENT_LOWER","","",N,N],[17,"PR_CAP_AMBIENT_CLEAR_ALL","","",N,N],[17,"GRND_NONBLOCK","","",N,N],[17,"GRND_RANDOM","","",N,N],[17,"SECCOMP_MODE_DISABLED","","",N,N],[17,"SECCOMP_MODE_STRICT","","",N,N],[17,"SECCOMP_MODE_FILTER","","",N,N],[17,"ITIMER_REAL","","",N,N],[17,"ITIMER_VIRTUAL","","",N,N],[17,"ITIMER_PROF","","",N,N],[17,"TFD_CLOEXEC","","",N,N],[17,"TFD_NONBLOCK","","",N,N],[17,"TFD_TIMER_ABSTIME","","",N,N],[17,"XATTR_CREATE","","",N,N],[17,"XATTR_REPLACE","","",N,N],[17,"_POSIX_VDISABLE","","",N,N],[17,"FALLOC_FL_KEEP_SIZE","","",N,N],[17,"FALLOC_FL_PUNCH_HOLE","","",N,N],[17,"FALLOC_FL_COLLAPSE_RANGE","","",N,N],[17,"FALLOC_FL_ZERO_RANGE","","",N,N],[17,"FALLOC_FL_INSERT_RANGE","","",N,N],[17,"FALLOC_FL_UNSHARE_RANGE","","",N,N],[17,"ENOATTR","","",N,N],[17,"SO_ORIGINAL_DST","","",N,N],[17,"IUTF8","","",N,N],[17,"CMSPAR","","",N,N],[17,"MFD_CLOEXEC","","",N,N],[17,"MFD_ALLOW_SEALING","","",N,N],[17,"PT_NULL","","",N,N],[17,"PT_LOAD","","",N,N],[17,"PT_DYNAMIC","","",N,N],[17,"PT_INTERP","","",N,N],[17,"PT_NOTE","","",N,N],[17,"PT_SHLIB","","",N,N],[17,"PT_PHDR","","",N,N],[17,"PT_TLS","","",N,N],[17,"PT_NUM","","",N,N],[17,"PT_LOOS","","",N,N],[17,"PT_GNU_EH_FRAME","","",N,N],[17,"PT_GNU_STACK","","",N,N],[17,"PT_GNU_RELRO","","",N,N],[17,"ETH_ALEN","","",N,N],[17,"ETH_HLEN","","",N,N],[17,"ETH_ZLEN","","",N,N],[17,"ETH_DATA_LEN","","",N,N],[17,"ETH_FRAME_LEN","","",N,N],[17,"ETH_FCS_LEN","","",N,N],[17,"ETH_P_LOOP","","",N,N],[17,"ETH_P_PUP","","",N,N],[17,"ETH_P_PUPAT","","",N,N],[17,"ETH_P_IP","","",N,N],[17,"ETH_P_X25","","",N,N],[17,"ETH_P_ARP","","",N,N],[17,"ETH_P_BPQ","","",N,N],[17,"ETH_P_IEEEPUP","","",N,N],[17,"ETH_P_IEEEPUPAT","","",N,N],[17,"ETH_P_BATMAN","","",N,N],[17,"ETH_P_DEC","","",N,N],[17,"ETH_P_DNA_DL","","",N,N],[17,"ETH_P_DNA_RC","","",N,N],[17,"ETH_P_DNA_RT","","",N,N],[17,"ETH_P_LAT","","",N,N],[17,"ETH_P_DIAG","","",N,N],[17,"ETH_P_CUST","","",N,N],[17,"ETH_P_SCA","","",N,N],[17,"ETH_P_TEB","","",N,N],[17,"ETH_P_RARP","","",N,N],[17,"ETH_P_ATALK","","",N,N],[17,"ETH_P_AARP","","",N,N],[17,"ETH_P_8021Q","","",N,N],[17,"ETH_P_IPX","","",N,N],[17,"ETH_P_IPV6","","",N,N],[17,"ETH_P_PAUSE","","",N,N],[17,"ETH_P_SLOW","","",N,N],[17,"ETH_P_WCCP","","",N,N],[17,"ETH_P_MPLS_UC","","",N,N],[17,"ETH_P_MPLS_MC","","",N,N],[17,"ETH_P_ATMMPOA","","",N,N],[17,"ETH_P_PPP_DISC","","",N,N],[17,"ETH_P_PPP_SES","","",N,N],[17,"ETH_P_LINK_CTL","","",N,N],[17,"ETH_P_ATMFATE","","",N,N],[17,"ETH_P_PAE","","",N,N],[17,"ETH_P_AOE","","",N,N],[17,"ETH_P_8021AD","","",N,N],[17,"ETH_P_802_EX1","","",N,N],[17,"ETH_P_TIPC","","",N,N],[17,"ETH_P_MACSEC","","",N,N],[17,"ETH_P_8021AH","","",N,N],[17,"ETH_P_MVRP","","",N,N],[17,"ETH_P_1588","","",N,N],[17,"ETH_P_PRP","","",N,N],[17,"ETH_P_FCOE","","",N,N],[17,"ETH_P_TDLS","","",N,N],[17,"ETH_P_FIP","","",N,N],[17,"ETH_P_80221","","",N,N],[17,"ETH_P_LOOPBACK","","",N,N],[17,"ETH_P_QINQ1","","",N,N],[17,"ETH_P_QINQ2","","",N,N],[17,"ETH_P_QINQ3","","",N,N],[17,"ETH_P_EDSA","","",N,N],[17,"ETH_P_AF_IUCV","","",N,N],[17,"ETH_P_802_3_MIN","","",N,N],[17,"ETH_P_802_3","","",N,N],[17,"ETH_P_AX25","","",N,N],[17,"ETH_P_ALL","","",N,N],[17,"ETH_P_802_2","","",N,N],[17,"ETH_P_SNAP","","",N,N],[17,"ETH_P_DDCMP","","",N,N],[17,"ETH_P_WAN_PPP","","",N,N],[17,"ETH_P_PPP_MP","","",N,N],[17,"ETH_P_LOCALTALK","","",N,N],[17,"ETH_P_CANFD","","",N,N],[17,"ETH_P_PPPTALK","","",N,N],[17,"ETH_P_TR_802_2","","",N,N],[17,"ETH_P_MOBITEX","","",N,N],[17,"ETH_P_CONTROL","","",N,N],[17,"ETH_P_IRDA","","",N,N],[17,"ETH_P_ECONET","","",N,N],[17,"ETH_P_HDLC","","",N,N],[17,"ETH_P_ARCNET","","",N,N],[17,"ETH_P_DSA","","",N,N],[17,"ETH_P_TRAILER","","",N,N],[17,"ETH_P_PHONET","","",N,N],[17,"ETH_P_IEEE802154","","",N,N],[17,"ETH_P_CAIF","","",N,N],[17,"POSIX_SPAWN_RESETIDS","","",N,N],[17,"POSIX_SPAWN_SETPGROUP","","",N,N],[17,"POSIX_SPAWN_SETSIGDEF","","",N,N],[17,"POSIX_SPAWN_SETSIGMASK","","",N,N],[17,"POSIX_SPAWN_SETSCHEDPARAM","","",N,N],[17,"POSIX_SPAWN_SETSCHEDULER","","",N,N],[17,"NLMSG_NOOP","","",N,N],[17,"NLMSG_ERROR","","",N,N],[17,"NLMSG_DONE","","",N,N],[17,"NLMSG_OVERRUN","","",N,N],[17,"NLMSG_MIN_TYPE","","",N,N],[17,"GENL_NAMSIZ","","",N,N],[17,"GENL_MIN_ID","","",N,N],[17,"GENL_MAX_ID","","",N,N],[17,"GENL_ADMIN_PERM","","",N,N],[17,"GENL_CMD_CAP_DO","","",N,N],[17,"GENL_CMD_CAP_DUMP","","",N,N],[17,"GENL_CMD_CAP_HASPOL","","",N,N],[17,"GENL_ID_CTRL","","",N,N],[17,"CTRL_CMD_UNSPEC","","",N,N],[17,"CTRL_CMD_NEWFAMILY","","",N,N],[17,"CTRL_CMD_DELFAMILY","","",N,N],[17,"CTRL_CMD_GETFAMILY","","",N,N],[17,"CTRL_CMD_NEWOPS","","",N,N],[17,"CTRL_CMD_DELOPS","","",N,N],[17,"CTRL_CMD_GETOPS","","",N,N],[17,"CTRL_CMD_NEWMCAST_GRP","","",N,N],[17,"CTRL_CMD_DELMCAST_GRP","","",N,N],[17,"CTRL_CMD_GETMCAST_GRP","","",N,N],[17,"CTRL_ATTR_UNSPEC","","",N,N],[17,"CTRL_ATTR_FAMILY_ID","","",N,N],[17,"CTRL_ATTR_FAMILY_NAME","","",N,N],[17,"CTRL_ATTR_VERSION","","",N,N],[17,"CTRL_ATTR_HDRSIZE","","",N,N],[17,"CTRL_ATTR_MAXATTR","","",N,N],[17,"CTRL_ATTR_OPS","","",N,N],[17,"CTRL_ATTR_MCAST_GROUPS","","",N,N],[17,"CTRL_ATTR_OP_UNSPEC","","",N,N],[17,"CTRL_ATTR_OP_ID","","",N,N],[17,"CTRL_ATTR_OP_FLAGS","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_UNSPEC","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_NAME","","",N,N],[17,"CTRL_ATTR_MCAST_GRP_ID","","",N,N],[17,"PACKET_ADD_MEMBERSHIP","","",N,N],[17,"PACKET_DROP_MEMBERSHIP","","",N,N],[17,"PACKET_MR_MULTICAST","","",N,N],[17,"PACKET_MR_PROMISC","","",N,N],[17,"PACKET_MR_ALLMULTI","","",N,N],[17,"PACKET_MR_UNICAST","","",N,N],[17,"NF_DROP","","",N,N],[17,"NF_ACCEPT","","",N,N],[17,"NF_STOLEN","","",N,N],[17,"NF_QUEUE","","",N,N],[17,"NF_REPEAT","","",N,N],[17,"NF_STOP","","",N,N],[17,"NF_MAX_VERDICT","","",N,N],[17,"NF_VERDICT_MASK","","",N,N],[17,"NF_VERDICT_FLAG_QUEUE_BYPASS","","",N,N],[17,"NF_VERDICT_QMASK","","",N,N],[17,"NF_VERDICT_QBITS","","",N,N],[17,"NF_VERDICT_BITS","","",N,N],[17,"NF_INET_PRE_ROUTING","","",N,N],[17,"NF_INET_LOCAL_IN","","",N,N],[17,"NF_INET_FORWARD","","",N,N],[17,"NF_INET_LOCAL_OUT","","",N,N],[17,"NF_INET_POST_ROUTING","","",N,N],[17,"NF_INET_NUMHOOKS","","",N,N],[17,"NFPROTO_UNSPEC","","",N,N],[17,"NFPROTO_IPV4","","",N,N],[17,"NFPROTO_ARP","","",N,N],[17,"NFPROTO_BRIDGE","","",N,N],[17,"NFPROTO_IPV6","","",N,N],[17,"NFPROTO_DECNET","","",N,N],[17,"NFPROTO_NUMPROTO","","",N,N],[17,"NF_IP_PRE_ROUTING","","",N,N],[17,"NF_IP_LOCAL_IN","","",N,N],[17,"NF_IP_FORWARD","","",N,N],[17,"NF_IP_LOCAL_OUT","","",N,N],[17,"NF_IP_POST_ROUTING","","",N,N],[17,"NF_IP_NUMHOOKS","","",N,N],[17,"NF_IP_PRI_FIRST","","",N,N],[17,"NF_IP_PRI_CONNTRACK_DEFRAG","","",N,N],[17,"NF_IP_PRI_RAW","","",N,N],[17,"NF_IP_PRI_SELINUX_FIRST","","",N,N],[17,"NF_IP_PRI_CONNTRACK","","",N,N],[17,"NF_IP_PRI_MANGLE","","",N,N],[17,"NF_IP_PRI_NAT_DST","","",N,N],[17,"NF_IP_PRI_FILTER","","",N,N],[17,"NF_IP_PRI_SECURITY","","",N,N],[17,"NF_IP_PRI_NAT_SRC","","",N,N],[17,"NF_IP_PRI_SELINUX_LAST","","",N,N],[17,"NF_IP_PRI_CONNTRACK_HELPER","","",N,N],[17,"NF_IP_PRI_CONNTRACK_CONFIRM","","",N,N],[17,"NF_IP_PRI_LAST","","",N,N],[17,"NF_IP6_PRE_ROUTING","","",N,N],[17,"NF_IP6_LOCAL_IN","","",N,N],[17,"NF_IP6_FORWARD","","",N,N],[17,"NF_IP6_LOCAL_OUT","","",N,N],[17,"NF_IP6_POST_ROUTING","","",N,N],[17,"NF_IP6_NUMHOOKS","","",N,N],[17,"NF_IP6_PRI_FIRST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK_DEFRAG","","",N,N],[17,"NF_IP6_PRI_RAW","","",N,N],[17,"NF_IP6_PRI_SELINUX_FIRST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK","","",N,N],[17,"NF_IP6_PRI_MANGLE","","",N,N],[17,"NF_IP6_PRI_NAT_DST","","",N,N],[17,"NF_IP6_PRI_FILTER","","",N,N],[17,"NF_IP6_PRI_SECURITY","","",N,N],[17,"NF_IP6_PRI_NAT_SRC","","",N,N],[17,"NF_IP6_PRI_SELINUX_LAST","","",N,N],[17,"NF_IP6_PRI_CONNTRACK_HELPER","","",N,N],[17,"NF_IP6_PRI_LAST","","",N,N],[17,"SIOCADDRT","","",N,N],[17,"SIOCDELRT","","",N,N],[17,"SIOCGIFNAME","","",N,N],[17,"SIOCSIFLINK","","",N,N],[17,"SIOCGIFCONF","","",N,N],[17,"SIOCGIFFLAGS","","",N,N],[17,"SIOCSIFFLAGS","","",N,N],[17,"SIOCGIFADDR","","",N,N],[17,"SIOCSIFADDR","","",N,N],[17,"SIOCGIFDSTADDR","","",N,N],[17,"SIOCSIFDSTADDR","","",N,N],[17,"SIOCGIFBRDADDR","","",N,N],[17,"SIOCSIFBRDADDR","","",N,N],[17,"SIOCGIFNETMASK","","",N,N],[17,"SIOCSIFNETMASK","","",N,N],[17,"SIOCGIFMETRIC","","",N,N],[17,"SIOCSIFMETRIC","","",N,N],[17,"SIOCGIFMEM","","",N,N],[17,"SIOCSIFMEM","","",N,N],[17,"SIOCGIFMTU","","",N,N],[17,"SIOCSIFMTU","","",N,N],[17,"SIOCSIFHWADDR","","",N,N],[17,"SIOCGIFENCAP","","",N,N],[17,"SIOCSIFENCAP","","",N,N],[17,"SIOCGIFHWADDR","","",N,N],[17,"SIOCGIFSLAVE","","",N,N],[17,"SIOCSIFSLAVE","","",N,N],[17,"SIOCADDMULTI","","",N,N],[17,"SIOCDELMULTI","","",N,N],[17,"SIOCDARP","","",N,N],[17,"SIOCGARP","","",N,N],[17,"SIOCSARP","","",N,N],[17,"SIOCDRARP","","",N,N],[17,"SIOCGRARP","","",N,N],[17,"SIOCSRARP","","",N,N],[17,"SIOCGIFMAP","","",N,N],[17,"SIOCSIFMAP","","",N,N],[17,"IPTOS_TOS_MASK","","",N,N],[17,"IPTOS_PREC_MASK","","",N,N],[17,"RTF_UP","","",N,N],[17,"RTF_GATEWAY","","",N,N],[17,"RTF_HOST","","",N,N],[17,"RTF_REINSTATE","","",N,N],[17,"RTF_DYNAMIC","","",N,N],[17,"RTF_MODIFIED","","",N,N],[17,"RTF_MTU","","",N,N],[17,"RTF_MSS","","",N,N],[17,"RTF_WINDOW","","",N,N],[17,"RTF_IRTT","","",N,N],[17,"RTF_REJECT","","",N,N],[17,"RTF_STATIC","","",N,N],[17,"RTF_XRESOLVE","","",N,N],[17,"RTF_NOFORWARD","","",N,N],[17,"RTF_THROW","","",N,N],[17,"RTF_NOPMTUDISC","","",N,N],[17,"RTF_DEFAULT","","",N,N],[17,"RTF_ALLONLINK","","",N,N],[17,"RTF_ADDRCONF","","",N,N],[17,"RTF_LINKRT","","",N,N],[17,"RTF_NONEXTHOP","","",N,N],[17,"RTF_CACHE","","",N,N],[17,"RTF_FLOW","","",N,N],[17,"RTF_POLICY","","",N,N],[17,"RTCF_VALVE","","",N,N],[17,"RTCF_MASQ","","",N,N],[17,"RTCF_NAT","","",N,N],[17,"RTCF_DOREDIRECT","","",N,N],[17,"RTCF_LOG","","",N,N],[17,"RTCF_DIRECTSRC","","",N,N],[17,"RTF_LOCAL","","",N,N],[17,"RTF_INTERFACE","","",N,N],[17,"RTF_MULTICAST","","",N,N],[17,"RTF_BROADCAST","","",N,N],[17,"RTF_NAT","","",N,N],[17,"RTF_ADDRCLASSMASK","","",N,N],[17,"RT_CLASS_UNSPEC","","",N,N],[17,"RT_CLASS_DEFAULT","","",N,N],[17,"RT_CLASS_MAIN","","",N,N],[17,"RT_CLASS_LOCAL","","",N,N],[17,"RT_CLASS_MAX","","",N,N],[17,"RTMSG_OVERRUN","","",N,N],[17,"RTMSG_NEWDEVICE","","",N,N],[17,"RTMSG_DELDEVICE","","",N,N],[17,"RTMSG_NEWROUTE","","",N,N],[17,"RTMSG_DELROUTE","","",N,N],[17,"RTMSG_NEWRULE","","",N,N],[17,"RTMSG_DELRULE","","",N,N],[17,"RTMSG_CONTROL","","",N,N],[17,"RTMSG_AR_FAILED","","",N,N],[17,"MAX_ADDR_LEN","","",N,N],[17,"ARPD_UPDATE","","",N,N],[17,"ARPD_LOOKUP","","",N,N],[17,"ARPD_FLUSH","","",N,N],[17,"ATF_MAGIC","","",N,N],[17,"MODULE_INIT_IGNORE_MODVERSIONS","","",N,N],[17,"MODULE_INIT_IGNORE_VERMAGIC","","",N,N],[17,"__UT_LINESIZE","","",N,N],[17,"__UT_NAMESIZE","","",N,N],[17,"__UT_HOSTSIZE","","",N,N],[17,"EMPTY","","",N,N],[17,"RUN_LVL","","",N,N],[17,"BOOT_TIME","","",N,N],[17,"NEW_TIME","","",N,N],[17,"OLD_TIME","","",N,N],[17,"INIT_PROCESS","","",N,N],[17,"LOGIN_PROCESS","","",N,N],[17,"USER_PROCESS","","",N,N],[17,"DEAD_PROCESS","","",N,N],[17,"ACCOUNTING","","",N,N],[17,"RLIMIT_RSS","","",N,N],[17,"RLIMIT_AS","","",N,N],[17,"RLIMIT_MEMLOCK","","",N,N],[17,"RLIM_INFINITY","","",N,N],[17,"RLIMIT_RTTIME","","",N,N],[17,"RLIMIT_NLIMITS","","",N,N],[17,"SOCK_NONBLOCK","","",N,N],[17,"SOL_RXRPC","","",N,N],[17,"SOL_PPPOL2TP","","",N,N],[17,"SOL_BLUETOOTH","","",N,N],[17,"SOL_PNPIPE","","",N,N],[17,"SOL_RDS","","",N,N],[17,"SOL_IUCV","","",N,N],[17,"SOL_CAIF","","",N,N],[17,"SOL_ALG","","",N,N],[17,"SOL_NFC","","",N,N],[17,"MSG_TRYHARD","","",N,N],[17,"LC_PAPER","","",N,N],[17,"LC_NAME","","",N,N],[17,"LC_ADDRESS","","",N,N],[17,"LC_TELEPHONE","","",N,N],[17,"LC_MEASUREMENT","","",N,N],[17,"LC_IDENTIFICATION","","",N,N],[17,"LC_PAPER_MASK","","",N,N],[17,"LC_NAME_MASK","","",N,N],[17,"LC_ADDRESS_MASK","","",N,N],[17,"LC_TELEPHONE_MASK","","",N,N],[17,"LC_MEASUREMENT_MASK","","",N,N],[17,"LC_IDENTIFICATION_MASK","","",N,N],[17,"LC_ALL_MASK","","",N,N],[17,"MAP_ANON","","",N,N],[17,"MAP_ANONYMOUS","","",N,N],[17,"MAP_DENYWRITE","","",N,N],[17,"MAP_EXECUTABLE","","",N,N],[17,"MAP_POPULATE","","",N,N],[17,"MAP_NONBLOCK","","",N,N],[17,"MAP_STACK","","",N,N],[17,"ENOTSUP","","",N,N],[17,"EUCLEAN","","",N,N],[17,"ENOTNAM","","",N,N],[17,"ENAVAIL","","",N,N],[17,"EISNAM","","",N,N],[17,"EREMOTEIO","","",N,N],[17,"SOCK_STREAM","","",N,N],[17,"SOCK_DGRAM","","",N,N],[17,"SOCK_SEQPACKET","","",N,N],[17,"SOCK_DCCP","","",N,N],[17,"SOCK_PACKET","","",N,N],[17,"TCP_COOKIE_TRANSACTIONS","","",N,N],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",N,N],[17,"TCP_THIN_DUPACK","","",N,N],[17,"TCP_USER_TIMEOUT","","",N,N],[17,"TCP_REPAIR","","",N,N],[17,"TCP_REPAIR_QUEUE","","",N,N],[17,"TCP_QUEUE_SEQ","","",N,N],[17,"TCP_REPAIR_OPTIONS","","",N,N],[17,"TCP_FASTOPEN","","",N,N],[17,"TCP_TIMESTAMP","","",N,N],[17,"DCCP_SOCKOPT_PACKET_SIZE","","",N,N],[17,"DCCP_SOCKOPT_SERVICE","","",N,N],[17,"DCCP_SOCKOPT_CHANGE_L","","",N,N],[17,"DCCP_SOCKOPT_CHANGE_R","","",N,N],[17,"DCCP_SOCKOPT_GET_CUR_MPS","","",N,N],[17,"DCCP_SOCKOPT_SERVER_TIMEWAIT","","",N,N],[17,"DCCP_SOCKOPT_SEND_CSCOV","","",N,N],[17,"DCCP_SOCKOPT_RECV_CSCOV","","",N,N],[17,"DCCP_SOCKOPT_AVAILABLE_CCIDS","","",N,N],[17,"DCCP_SOCKOPT_CCID","","",N,N],[17,"DCCP_SOCKOPT_TX_CCID","","",N,N],[17,"DCCP_SOCKOPT_RX_CCID","","",N,N],[17,"DCCP_SOCKOPT_QPOLICY_ID","","",N,N],[17,"DCCP_SOCKOPT_QPOLICY_TXQLEN","","",N,N],[17,"DCCP_SOCKOPT_CCID_RX_INFO","","",N,N],[17,"DCCP_SOCKOPT_CCID_TX_INFO","","",N,N],[17,"DCCP_SERVICE_LIST_MAX_LEN","","maximum number of services provided on the same listening port",N,N],[17,"SIGTTIN","","",N,N],[17,"SIGTTOU","","",N,N],[17,"SIGXCPU","","",N,N],[17,"SIGXFSZ","","",N,N],[17,"SIGVTALRM","","",N,N],[17,"SIGPROF","","",N,N],[17,"SIGWINCH","","",N,N],[17,"SIGEV_THREAD_ID","","",N,N],[17,"BUFSIZ","","",N,N],[17,"TMP_MAX","","",N,N],[17,"FOPEN_MAX","","",N,N],[17,"POSIX_FADV_DONTNEED","","",N,N],[17,"POSIX_FADV_NOREUSE","","",N,N],[17,"POSIX_MADV_DONTNEED","","",N,N],[17,"_SC_EQUIV_CLASS_MAX","","",N,N],[17,"_SC_CHARCLASS_NAME_MAX","","",N,N],[17,"_SC_PII","","",N,N],[17,"_SC_PII_XTI","","",N,N],[17,"_SC_PII_SOCKET","","",N,N],[17,"_SC_PII_INTERNET","","",N,N],[17,"_SC_PII_OSI","","",N,N],[17,"_SC_POLL","","",N,N],[17,"_SC_SELECT","","",N,N],[17,"_SC_PII_INTERNET_STREAM","","",N,N],[17,"_SC_PII_INTERNET_DGRAM","","",N,N],[17,"_SC_PII_OSI_COTS","","",N,N],[17,"_SC_PII_OSI_CLTS","","",N,N],[17,"_SC_PII_OSI_M","","",N,N],[17,"_SC_T_IOV_MAX","","",N,N],[17,"_SC_2_C_VERSION","","",N,N],[17,"_SC_CHAR_BIT","","",N,N],[17,"_SC_CHAR_MAX","","",N,N],[17,"_SC_CHAR_MIN","","",N,N],[17,"_SC_INT_MAX","","",N,N],[17,"_SC_INT_MIN","","",N,N],[17,"_SC_LONG_BIT","","",N,N],[17,"_SC_WORD_BIT","","",N,N],[17,"_SC_MB_LEN_MAX","","",N,N],[17,"_SC_SSIZE_MAX","","",N,N],[17,"_SC_SCHAR_MAX","","",N,N],[17,"_SC_SCHAR_MIN","","",N,N],[17,"_SC_SHRT_MAX","","",N,N],[17,"_SC_SHRT_MIN","","",N,N],[17,"_SC_UCHAR_MAX","","",N,N],[17,"_SC_UINT_MAX","","",N,N],[17,"_SC_ULONG_MAX","","",N,N],[17,"_SC_USHRT_MAX","","",N,N],[17,"_SC_NL_ARGMAX","","",N,N],[17,"_SC_NL_LANGMAX","","",N,N],[17,"_SC_NL_MSGMAX","","",N,N],[17,"_SC_NL_NMAX","","",N,N],[17,"_SC_NL_SETMAX","","",N,N],[17,"_SC_NL_TEXTMAX","","",N,N],[17,"_SC_BASE","","",N,N],[17,"_SC_C_LANG_SUPPORT","","",N,N],[17,"_SC_C_LANG_SUPPORT_R","","",N,N],[17,"_SC_DEVICE_IO","","",N,N],[17,"_SC_DEVICE_SPECIFIC","","",N,N],[17,"_SC_DEVICE_SPECIFIC_R","","",N,N],[17,"_SC_FD_MGMT","","",N,N],[17,"_SC_FIFO","","",N,N],[17,"_SC_PIPE","","",N,N],[17,"_SC_FILE_ATTRIBUTES","","",N,N],[17,"_SC_FILE_LOCKING","","",N,N],[17,"_SC_FILE_SYSTEM","","",N,N],[17,"_SC_MULTI_PROCESS","","",N,N],[17,"_SC_SINGLE_PROCESS","","",N,N],[17,"_SC_NETWORKING","","",N,N],[17,"_SC_REGEX_VERSION","","",N,N],[17,"_SC_SIGNALS","","",N,N],[17,"_SC_SYSTEM_DATABASE","","",N,N],[17,"_SC_SYSTEM_DATABASE_R","","",N,N],[17,"_SC_USER_GROUPS","","",N,N],[17,"_SC_USER_GROUPS_R","","",N,N],[17,"_SC_LEVEL1_ICACHE_SIZE","","",N,N],[17,"_SC_LEVEL1_ICACHE_ASSOC","","",N,N],[17,"_SC_LEVEL1_ICACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL1_DCACHE_SIZE","","",N,N],[17,"_SC_LEVEL1_DCACHE_ASSOC","","",N,N],[17,"_SC_LEVEL1_DCACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL2_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL2_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL2_CACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL3_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL3_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL3_CACHE_LINESIZE","","",N,N],[17,"_SC_LEVEL4_CACHE_SIZE","","",N,N],[17,"_SC_LEVEL4_CACHE_ASSOC","","",N,N],[17,"_SC_LEVEL4_CACHE_LINESIZE","","",N,N],[17,"O_ACCMODE","","",N,N],[17,"ST_RELATIME","","",N,N],[17,"NI_MAXHOST","","",N,N],[17,"ADFS_SUPER_MAGIC","","",N,N],[17,"AFFS_SUPER_MAGIC","","",N,N],[17,"CODA_SUPER_MAGIC","","",N,N],[17,"CRAMFS_MAGIC","","",N,N],[17,"EFS_SUPER_MAGIC","","",N,N],[17,"EXT2_SUPER_MAGIC","","",N,N],[17,"EXT3_SUPER_MAGIC","","",N,N],[17,"EXT4_SUPER_MAGIC","","",N,N],[17,"HPFS_SUPER_MAGIC","","",N,N],[17,"HUGETLBFS_MAGIC","","",N,N],[17,"ISOFS_SUPER_MAGIC","","",N,N],[17,"JFFS2_SUPER_MAGIC","","",N,N],[17,"MINIX_SUPER_MAGIC","","",N,N],[17,"MINIX_SUPER_MAGIC2","","",N,N],[17,"MINIX2_SUPER_MAGIC","","",N,N],[17,"MINIX2_SUPER_MAGIC2","","",N,N],[17,"MSDOS_SUPER_MAGIC","","",N,N],[17,"NCP_SUPER_MAGIC","","",N,N],[17,"NFS_SUPER_MAGIC","","",N,N],[17,"OPENPROM_SUPER_MAGIC","","",N,N],[17,"PROC_SUPER_MAGIC","","",N,N],[17,"QNX4_SUPER_MAGIC","","",N,N],[17,"REISERFS_SUPER_MAGIC","","",N,N],[17,"SMB_SUPER_MAGIC","","",N,N],[17,"TMPFS_MAGIC","","",N,N],[17,"USBDEVICE_SUPER_MAGIC","","",N,N],[17,"VEOF","","",N,N],[17,"CPU_SETSIZE","","",N,N],[17,"PTRACE_TRACEME","","",N,N],[17,"PTRACE_PEEKTEXT","","",N,N],[17,"PTRACE_PEEKDATA","","",N,N],[17,"PTRACE_PEEKUSER","","",N,N],[17,"PTRACE_POKETEXT","","",N,N],[17,"PTRACE_POKEDATA","","",N,N],[17,"PTRACE_POKEUSER","","",N,N],[17,"PTRACE_CONT","","",N,N],[17,"PTRACE_KILL","","",N,N],[17,"PTRACE_SINGLESTEP","","",N,N],[17,"PTRACE_ATTACH","","",N,N],[17,"PTRACE_SYSCALL","","",N,N],[17,"PTRACE_SETOPTIONS","","",N,N],[17,"PTRACE_GETEVENTMSG","","",N,N],[17,"PTRACE_GETSIGINFO","","",N,N],[17,"PTRACE_SETSIGINFO","","",N,N],[17,"PTRACE_GETREGSET","","",N,N],[17,"PTRACE_SETREGSET","","",N,N],[17,"PTRACE_SEIZE","","",N,N],[17,"PTRACE_INTERRUPT","","",N,N],[17,"PTRACE_LISTEN","","",N,N],[17,"PTRACE_PEEKSIGINFO","","",N,N],[17,"EPOLLWAKEUP","","",N,N],[17,"MAP_HUGETLB","","",N,N],[17,"SEEK_DATA","","",N,N],[17,"SEEK_HOLE","","",N,N],[17,"TCSANOW","","",N,N],[17,"TCSADRAIN","","",N,N],[17,"TCSAFLUSH","","",N,N],[17,"TIOCLINUX","","",N,N],[17,"TIOCGSERIAL","","",N,N],[17,"RTLD_DEEPBIND","","",N,N],[17,"RTLD_GLOBAL","","",N,N],[17,"RTLD_NOLOAD","","",N,N],[17,"LINUX_REBOOT_MAGIC1","","",N,N],[17,"LINUX_REBOOT_MAGIC2","","",N,N],[17,"LINUX_REBOOT_MAGIC2A","","",N,N],[17,"LINUX_REBOOT_MAGIC2B","","",N,N],[17,"LINUX_REBOOT_MAGIC2C","","",N,N],[17,"LINUX_REBOOT_CMD_RESTART","","",N,N],[17,"LINUX_REBOOT_CMD_HALT","","",N,N],[17,"LINUX_REBOOT_CMD_CAD_ON","","",N,N],[17,"LINUX_REBOOT_CMD_CAD_OFF","","",N,N],[17,"LINUX_REBOOT_CMD_POWER_OFF","","",N,N],[17,"LINUX_REBOOT_CMD_RESTART2","","",N,N],[17,"LINUX_REBOOT_CMD_SW_SUSPEND","","",N,N],[17,"LINUX_REBOOT_CMD_KEXEC","","",N,N],[17,"NETLINK_ROUTE","","",N,N],[17,"NETLINK_UNUSED","","",N,N],[17,"NETLINK_USERSOCK","","",N,N],[17,"NETLINK_FIREWALL","","",N,N],[17,"NETLINK_SOCK_DIAG","","",N,N],[17,"NETLINK_NFLOG","","",N,N],[17,"NETLINK_XFRM","","",N,N],[17,"NETLINK_SELINUX","","",N,N],[17,"NETLINK_ISCSI","","",N,N],[17,"NETLINK_AUDIT","","",N,N],[17,"NETLINK_FIB_LOOKUP","","",N,N],[17,"NETLINK_CONNECTOR","","",N,N],[17,"NETLINK_NETFILTER","","",N,N],[17,"NETLINK_IP6_FW","","",N,N],[17,"NETLINK_DNRTMSG","","",N,N],[17,"NETLINK_KOBJECT_UEVENT","","",N,N],[17,"NETLINK_GENERIC","","",N,N],[17,"NETLINK_SCSITRANSPORT","","",N,N],[17,"NETLINK_ECRYPTFS","","",N,N],[17,"NETLINK_RDMA","","",N,N],[17,"NETLINK_CRYPTO","","",N,N],[17,"NETLINK_INET_DIAG","","",N,N],[17,"MAX_LINKS","","",N,N],[17,"NLM_F_REQUEST","","",N,N],[17,"NLM_F_MULTI","","",N,N],[17,"NLM_F_ACK","","",N,N],[17,"NLM_F_ECHO","","",N,N],[17,"NLM_F_DUMP_INTR","","",N,N],[17,"NLM_F_DUMP_FILTERED","","",N,N],[17,"NLM_F_ROOT","","",N,N],[17,"NLM_F_MATCH","","",N,N],[17,"NLM_F_ATOMIC","","",N,N],[17,"NLM_F_DUMP","","",N,N],[17,"NLM_F_REPLACE","","",N,N],[17,"NLM_F_EXCL","","",N,N],[17,"NLM_F_CREATE","","",N,N],[17,"NLM_F_APPEND","","",N,N],[17,"NETLINK_ADD_MEMBERSHIP","","",N,N],[17,"NETLINK_DROP_MEMBERSHIP","","",N,N],[17,"NETLINK_PKTINFO","","",N,N],[17,"NETLINK_BROADCAST_ERROR","","",N,N],[17,"NETLINK_NO_ENOBUFS","","",N,N],[17,"NETLINK_RX_RING","","",N,N],[17,"NETLINK_TX_RING","","",N,N],[17,"NETLINK_LISTEN_ALL_NSID","","",N,N],[17,"NETLINK_LIST_MEMBERSHIPS","","",N,N],[17,"NETLINK_CAP_ACK","","",N,N],[17,"NLA_F_NESTED","","",N,N],[17,"NLA_F_NET_BYTEORDER","","",N,N],[17,"NLA_TYPE_MASK","","",N,N],[17,"NLA_ALIGNTO","","",N,N],[17,"GENL_UNS_ADMIN_PERM","","",N,N],[17,"GENL_ID_VFS_DQUOT","","",N,N],[17,"GENL_ID_PMCRAID","","",N,N],[17,"TIOCM_LE","","",N,N],[17,"TIOCM_DTR","","",N,N],[17,"TIOCM_RTS","","",N,N],[17,"TIOCM_ST","","",N,N],[17,"TIOCM_SR","","",N,N],[17,"TIOCM_CTS","","",N,N],[17,"TIOCM_CAR","","",N,N],[17,"TIOCM_RNG","","",N,N],[17,"TIOCM_DSR","","",N,N],[17,"TIOCM_CD","","",N,N],[17,"TIOCM_RI","","",N,N],[17,"NF_NETDEV_INGRESS","","",N,N],[17,"NF_NETDEV_NUMHOOKS","","",N,N],[17,"NFPROTO_INET","","",N,N],[17,"NFPROTO_NETDEV","","",N,N],[17,"NFT_TABLE_MAXNAMELEN","","",N,N],[17,"NFT_CHAIN_MAXNAMELEN","","",N,N],[17,"NFT_SET_MAXNAMELEN","","",N,N],[17,"NFT_OBJ_MAXNAMELEN","","",N,N],[17,"NFT_USERDATA_MAXLEN","","",N,N],[17,"NFT_REG_VERDICT","","",N,N],[17,"NFT_REG_1","","",N,N],[17,"NFT_REG_2","","",N,N],[17,"NFT_REG_3","","",N,N],[17,"NFT_REG_4","","",N,N],[17,"__NFT_REG_MAX","","",N,N],[17,"NFT_REG32_00","","",N,N],[17,"NFT_REG32_01","","",N,N],[17,"NFT_REG32_02","","",N,N],[17,"NFT_REG32_03","","",N,N],[17,"NFT_REG32_04","","",N,N],[17,"NFT_REG32_05","","",N,N],[17,"NFT_REG32_06","","",N,N],[17,"NFT_REG32_07","","",N,N],[17,"NFT_REG32_08","","",N,N],[17,"NFT_REG32_09","","",N,N],[17,"NFT_REG32_10","","",N,N],[17,"NFT_REG32_11","","",N,N],[17,"NFT_REG32_12","","",N,N],[17,"NFT_REG32_13","","",N,N],[17,"NFT_REG32_14","","",N,N],[17,"NFT_REG32_15","","",N,N],[17,"NFT_REG_SIZE","","",N,N],[17,"NFT_REG32_SIZE","","",N,N],[17,"NFT_CONTINUE","","",N,N],[17,"NFT_BREAK","","",N,N],[17,"NFT_JUMP","","",N,N],[17,"NFT_GOTO","","",N,N],[17,"NFT_RETURN","","",N,N],[17,"NFT_MSG_NEWTABLE","","",N,N],[17,"NFT_MSG_GETTABLE","","",N,N],[17,"NFT_MSG_DELTABLE","","",N,N],[17,"NFT_MSG_NEWCHAIN","","",N,N],[17,"NFT_MSG_GETCHAIN","","",N,N],[17,"NFT_MSG_DELCHAIN","","",N,N],[17,"NFT_MSG_NEWRULE","","",N,N],[17,"NFT_MSG_GETRULE","","",N,N],[17,"NFT_MSG_DELRULE","","",N,N],[17,"NFT_MSG_NEWSET","","",N,N],[17,"NFT_MSG_GETSET","","",N,N],[17,"NFT_MSG_DELSET","","",N,N],[17,"NFT_MSG_NEWSETELEM","","",N,N],[17,"NFT_MSG_GETSETELEM","","",N,N],[17,"NFT_MSG_DELSETELEM","","",N,N],[17,"NFT_MSG_NEWGEN","","",N,N],[17,"NFT_MSG_GETGEN","","",N,N],[17,"NFT_MSG_TRACE","","",N,N],[17,"NFT_MSG_NEWOBJ","","",N,N],[17,"NFT_MSG_GETOBJ","","",N,N],[17,"NFT_MSG_DELOBJ","","",N,N],[17,"NFT_MSG_GETOBJ_RESET","","",N,N],[17,"NFT_MSG_MAX","","",N,N],[17,"NFT_SET_ANONYMOUS","","",N,N],[17,"NFT_SET_CONSTANT","","",N,N],[17,"NFT_SET_INTERVAL","","",N,N],[17,"NFT_SET_MAP","","",N,N],[17,"NFT_SET_TIMEOUT","","",N,N],[17,"NFT_SET_EVAL","","",N,N],[17,"NFT_SET_POL_PERFORMANCE","","",N,N],[17,"NFT_SET_POL_MEMORY","","",N,N],[17,"NFT_SET_ELEM_INTERVAL_END","","",N,N],[17,"NFT_DATA_VALUE","","",N,N],[17,"NFT_DATA_VERDICT","","",N,N],[17,"NFT_DATA_RESERVED_MASK","","",N,N],[17,"NFT_DATA_VALUE_MAXLEN","","",N,N],[17,"NFT_BYTEORDER_NTOH","","",N,N],[17,"NFT_BYTEORDER_HTON","","",N,N],[17,"NFT_CMP_EQ","","",N,N],[17,"NFT_CMP_NEQ","","",N,N],[17,"NFT_CMP_LT","","",N,N],[17,"NFT_CMP_LTE","","",N,N],[17,"NFT_CMP_GT","","",N,N],[17,"NFT_CMP_GTE","","",N,N],[17,"NFT_RANGE_EQ","","",N,N],[17,"NFT_RANGE_NEQ","","",N,N],[17,"NFT_LOOKUP_F_INV","","",N,N],[17,"NFT_DYNSET_OP_ADD","","",N,N],[17,"NFT_DYNSET_OP_UPDATE","","",N,N],[17,"NFT_DYNSET_F_INV","","",N,N],[17,"NFT_PAYLOAD_LL_HEADER","","",N,N],[17,"NFT_PAYLOAD_NETWORK_HEADER","","",N,N],[17,"NFT_PAYLOAD_TRANSPORT_HEADER","","",N,N],[17,"NFT_PAYLOAD_CSUM_NONE","","",N,N],[17,"NFT_PAYLOAD_CSUM_INET","","",N,N],[17,"NFT_META_LEN","","",N,N],[17,"NFT_META_PROTOCOL","","",N,N],[17,"NFT_META_PRIORITY","","",N,N],[17,"NFT_META_MARK","","",N,N],[17,"NFT_META_IIF","","",N,N],[17,"NFT_META_OIF","","",N,N],[17,"NFT_META_IIFNAME","","",N,N],[17,"NFT_META_OIFNAME","","",N,N],[17,"NFT_META_IIFTYPE","","",N,N],[17,"NFT_META_OIFTYPE","","",N,N],[17,"NFT_META_SKUID","","",N,N],[17,"NFT_META_SKGID","","",N,N],[17,"NFT_META_NFTRACE","","",N,N],[17,"NFT_META_RTCLASSID","","",N,N],[17,"NFT_META_SECMARK","","",N,N],[17,"NFT_META_NFPROTO","","",N,N],[17,"NFT_META_L4PROTO","","",N,N],[17,"NFT_META_BRI_IIFNAME","","",N,N],[17,"NFT_META_BRI_OIFNAME","","",N,N],[17,"NFT_META_PKTTYPE","","",N,N],[17,"NFT_META_CPU","","",N,N],[17,"NFT_META_IIFGROUP","","",N,N],[17,"NFT_META_OIFGROUP","","",N,N],[17,"NFT_META_CGROUP","","",N,N],[17,"NFT_META_PRANDOM","","",N,N],[17,"NFT_CT_STATE","","",N,N],[17,"NFT_CT_DIRECTION","","",N,N],[17,"NFT_CT_STATUS","","",N,N],[17,"NFT_CT_MARK","","",N,N],[17,"NFT_CT_SECMARK","","",N,N],[17,"NFT_CT_EXPIRATION","","",N,N],[17,"NFT_CT_HELPER","","",N,N],[17,"NFT_CT_L3PROTOCOL","","",N,N],[17,"NFT_CT_SRC","","",N,N],[17,"NFT_CT_DST","","",N,N],[17,"NFT_CT_PROTOCOL","","",N,N],[17,"NFT_CT_PROTO_SRC","","",N,N],[17,"NFT_CT_PROTO_DST","","",N,N],[17,"NFT_CT_LABELS","","",N,N],[17,"NFT_CT_PKTS","","",N,N],[17,"NFT_CT_BYTES","","",N,N],[17,"NFT_LIMIT_PKTS","","",N,N],[17,"NFT_LIMIT_PKT_BYTES","","",N,N],[17,"NFT_LIMIT_F_INV","","",N,N],[17,"NFT_QUEUE_FLAG_BYPASS","","",N,N],[17,"NFT_QUEUE_FLAG_CPU_FANOUT","","",N,N],[17,"NFT_QUEUE_FLAG_MASK","","",N,N],[17,"NFT_QUOTA_F_INV","","",N,N],[17,"NFT_REJECT_ICMP_UNREACH","","",N,N],[17,"NFT_REJECT_TCP_RST","","",N,N],[17,"NFT_REJECT_ICMPX_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_NO_ROUTE","","",N,N],[17,"NFT_REJECT_ICMPX_PORT_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_HOST_UNREACH","","",N,N],[17,"NFT_REJECT_ICMPX_ADMIN_PROHIBITED","","",N,N],[17,"NFT_NAT_SNAT","","",N,N],[17,"NFT_NAT_DNAT","","",N,N],[17,"NFT_TRACETYPE_UNSPEC","","",N,N],[17,"NFT_TRACETYPE_POLICY","","",N,N],[17,"NFT_TRACETYPE_RETURN","","",N,N],[17,"NFT_TRACETYPE_RULE","","",N,N],[17,"NFT_NG_INCREMENTAL","","",N,N],[17,"NFT_NG_RANDOM","","",N,N],[17,"PTHREAD_STACK_MIN","","",N,N],[17,"PTHREAD_MUTEX_ADAPTIVE_NP","","",N,N],[17,"__SIZEOF_PTHREAD_RWLOCKATTR_T","","",N,N],[17,"O_LARGEFILE","","",N,N],[17,"TIOCGSOFTCAR","","",N,N],[17,"TIOCSSOFTCAR","","",N,N],[17,"RLIMIT_NOFILE","","",N,N],[17,"RLIMIT_NPROC","","",N,N],[17,"O_APPEND","","",N,N],[17,"O_CREAT","","",N,N],[17,"O_EXCL","","",N,N],[17,"O_NOCTTY","","",N,N],[17,"O_NONBLOCK","","",N,N],[17,"O_SYNC","","",N,N],[17,"O_RSYNC","","",N,N],[17,"O_DSYNC","","",N,N],[17,"O_FSYNC","","",N,N],[17,"O_NOATIME","","",N,N],[17,"O_PATH","","",N,N],[17,"O_TMPFILE","","",N,N],[17,"MAP_GROWSDOWN","","",N,N],[17,"EDEADLK","","",N,N],[17,"ENAMETOOLONG","","",N,N],[17,"ENOLCK","","",N,N],[17,"ENOSYS","","",N,N],[17,"ENOTEMPTY","","",N,N],[17,"ELOOP","","",N,N],[17,"ENOMSG","","",N,N],[17,"EIDRM","","",N,N],[17,"ECHRNG","","",N,N],[17,"EL2NSYNC","","",N,N],[17,"EL3HLT","","",N,N],[17,"EL3RST","","",N,N],[17,"ELNRNG","","",N,N],[17,"EUNATCH","","",N,N],[17,"ENOCSI","","",N,N],[17,"EL2HLT","","",N,N],[17,"EBADE","","",N,N],[17,"EBADR","","",N,N],[17,"EXFULL","","",N,N],[17,"ENOANO","","",N,N],[17,"EBADRQC","","",N,N],[17,"EBADSLT","","",N,N],[17,"EMULTIHOP","","",N,N],[17,"EOVERFLOW","","",N,N],[17,"ENOTUNIQ","","",N,N],[17,"EBADFD","","",N,N],[17,"EBADMSG","","",N,N],[17,"EREMCHG","","",N,N],[17,"ELIBACC","","",N,N],[17,"ELIBBAD","","",N,N],[17,"ELIBSCN","","",N,N],[17,"ELIBMAX","","",N,N],[17,"ELIBEXEC","","",N,N],[17,"EILSEQ","","",N,N],[17,"ERESTART","","",N,N],[17,"ESTRPIPE","","",N,N],[17,"EUSERS","","",N,N],[17,"ENOTSOCK","","",N,N],[17,"EDESTADDRREQ","","",N,N],[17,"EMSGSIZE","","",N,N],[17,"EPROTOTYPE","","",N,N],[17,"ENOPROTOOPT","","",N,N],[17,"EPROTONOSUPPORT","","",N,N],[17,"ESOCKTNOSUPPORT","","",N,N],[17,"EOPNOTSUPP","","",N,N],[17,"EPFNOSUPPORT","","",N,N],[17,"EAFNOSUPPORT","","",N,N],[17,"EADDRINUSE","","",N,N],[17,"EADDRNOTAVAIL","","",N,N],[17,"ENETDOWN","","",N,N],[17,"ENETUNREACH","","",N,N],[17,"ENETRESET","","",N,N],[17,"ECONNABORTED","","",N,N],[17,"ECONNRESET","","",N,N],[17,"ENOBUFS","","",N,N],[17,"EISCONN","","",N,N],[17,"ENOTCONN","","",N,N],[17,"ESHUTDOWN","","",N,N],[17,"ETOOMANYREFS","","",N,N],[17,"ETIMEDOUT","","",N,N],[17,"ECONNREFUSED","","",N,N],[17,"EHOSTDOWN","","",N,N],[17,"EHOSTUNREACH","","",N,N],[17,"EALREADY","","",N,N],[17,"EINPROGRESS","","",N,N],[17,"ESTALE","","",N,N],[17,"EDQUOT","","",N,N],[17,"ENOMEDIUM","","",N,N],[17,"EMEDIUMTYPE","","",N,N],[17,"ECANCELED","","",N,N],[17,"ENOKEY","","",N,N],[17,"EKEYEXPIRED","","",N,N],[17,"EKEYREVOKED","","",N,N],[17,"EKEYREJECTED","","",N,N],[17,"EOWNERDEAD","","",N,N],[17,"ENOTRECOVERABLE","","",N,N],[17,"EHWPOISON","","",N,N],[17,"ERFKILL","","",N,N],[17,"SOL_SOCKET","","",N,N],[17,"SO_REUSEADDR","","",N,N],[17,"SO_TYPE","","",N,N],[17,"SO_ERROR","","",N,N],[17,"SO_DONTROUTE","","",N,N],[17,"SO_BROADCAST","","",N,N],[17,"SO_SNDBUF","","",N,N],[17,"SO_RCVBUF","","",N,N],[17,"SO_SNDBUFFORCE","","",N,N],[17,"SO_RCVBUFFORCE","","",N,N],[17,"SO_KEEPALIVE","","",N,N],[17,"SO_OOBINLINE","","",N,N],[17,"SO_NO_CHECK","","",N,N],[17,"SO_PRIORITY","","",N,N],[17,"SO_LINGER","","",N,N],[17,"SO_BSDCOMPAT","","",N,N],[17,"SO_REUSEPORT","","",N,N],[17,"SO_PASSCRED","","",N,N],[17,"SO_PEERCRED","","",N,N],[17,"SO_RCVLOWAT","","",N,N],[17,"SO_SNDLOWAT","","",N,N],[17,"SO_RCVTIMEO","","",N,N],[17,"SO_SNDTIMEO","","",N,N],[17,"SO_SECURITY_AUTHENTICATION","","",N,N],[17,"SO_SECURITY_ENCRYPTION_TRANSPORT","","",N,N],[17,"SO_SECURITY_ENCRYPTION_NETWORK","","",N,N],[17,"SO_BINDTODEVICE","","",N,N],[17,"SO_ATTACH_FILTER","","",N,N],[17,"SO_DETACH_FILTER","","",N,N],[17,"SO_GET_FILTER","","",N,N],[17,"SO_PEERNAME","","",N,N],[17,"SO_TIMESTAMP","","",N,N],[17,"SO_ACCEPTCONN","","",N,N],[17,"SO_PEERSEC","","",N,N],[17,"SO_PASSSEC","","",N,N],[17,"SO_TIMESTAMPNS","","",N,N],[17,"SCM_TIMESTAMPNS","","",N,N],[17,"SO_MARK","","",N,N],[17,"SO_TIMESTAMPING","","",N,N],[17,"SCM_TIMESTAMPING","","",N,N],[17,"SO_PROTOCOL","","",N,N],[17,"SO_DOMAIN","","",N,N],[17,"SO_RXQ_OVFL","","",N,N],[17,"SO_WIFI_STATUS","","",N,N],[17,"SCM_WIFI_STATUS","","",N,N],[17,"SO_PEEK_OFF","","",N,N],[17,"SO_NOFCS","","",N,N],[17,"SO_LOCK_FILTER","","",N,N],[17,"SO_SELECT_ERR_QUEUE","","",N,N],[17,"SO_BUSY_POLL","","",N,N],[17,"SO_MAX_PACING_RATE","","",N,N],[17,"SO_BPF_EXTENSIONS","","",N,N],[17,"SO_INCOMING_CPU","","",N,N],[17,"SO_ATTACH_BPF","","",N,N],[17,"SO_DETACH_BPF","","",N,N],[17,"SA_ONSTACK","","",N,N],[17,"SA_SIGINFO","","",N,N],[17,"SA_NOCLDWAIT","","",N,N],[17,"SIGCHLD","","",N,N],[17,"SIGBUS","","",N,N],[17,"SIGUSR1","","",N,N],[17,"SIGUSR2","","",N,N],[17,"SIGCONT","","",N,N],[17,"SIGSTOP","","",N,N],[17,"SIGTSTP","","",N,N],[17,"SIGURG","","",N,N],[17,"SIGIO","","",N,N],[17,"SIGSYS","","",N,N],[17,"SIGSTKFLT","","",N,N],[17,"SIGUNUSED","","",N,N],[17,"SIGPOLL","","",N,N],[17,"SIGPWR","","",N,N],[17,"SIG_SETMASK","","",N,N],[17,"SIG_BLOCK","","",N,N],[17,"SIG_UNBLOCK","","",N,N],[17,"POLLWRNORM","","",N,N],[17,"POLLWRBAND","","",N,N],[17,"O_ASYNC","","",N,N],[17,"O_NDELAY","","",N,N],[17,"PTRACE_DETACH","","",N,N],[17,"EFD_NONBLOCK","","",N,N],[17,"F_GETLK","","",N,N],[17,"F_GETOWN","","",N,N],[17,"F_SETOWN","","",N,N],[17,"F_SETLK","","",N,N],[17,"F_SETLKW","","",N,N],[17,"F_RDLCK","","",N,N],[17,"F_WRLCK","","",N,N],[17,"F_UNLCK","","",N,N],[17,"SFD_NONBLOCK","","",N,N],[17,"TIOCEXCL","","",N,N],[17,"TIOCNXCL","","",N,N],[17,"TIOCSCTTY","","",N,N],[17,"TIOCSTI","","",N,N],[17,"TIOCMGET","","",N,N],[17,"TIOCMBIS","","",N,N],[17,"TIOCMBIC","","",N,N],[17,"TIOCMSET","","",N,N],[17,"TIOCCONS","","",N,N],[17,"SFD_CLOEXEC","","",N,N],[17,"NCCS","","",N,N],[17,"O_TRUNC","","",N,N],[17,"O_CLOEXEC","","",N,N],[17,"EBFONT","","",N,N],[17,"ENOSTR","","",N,N],[17,"ENODATA","","",N,N],[17,"ETIME","","",N,N],[17,"ENOSR","","",N,N],[17,"ENONET","","",N,N],[17,"ENOPKG","","",N,N],[17,"EREMOTE","","",N,N],[17,"ENOLINK","","",N,N],[17,"EADV","","",N,N],[17,"ESRMNT","","",N,N],[17,"ECOMM","","",N,N],[17,"EPROTO","","",N,N],[17,"EDOTDOT","","",N,N],[17,"SA_NODEFER","","",N,N],[17,"SA_RESETHAND","","",N,N],[17,"SA_RESTART","","",N,N],[17,"SA_NOCLDSTOP","","",N,N],[17,"EPOLL_CLOEXEC","","",N,N],[17,"EFD_CLOEXEC","","",N,N],[17,"__SIZEOF_PTHREAD_CONDATTR_T","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",N,N],[17,"O_DIRECT","","",N,N],[17,"O_DIRECTORY","","",N,N],[17,"O_NOFOLLOW","","",N,N],[17,"MAP_LOCKED","","",N,N],[17,"MAP_NORESERVE","","",N,N],[17,"MAP_32BIT","","",N,N],[17,"EDEADLOCK","","",N,N],[17,"FIOCLEX","","",N,N],[17,"FIONBIO","","",N,N],[17,"PTRACE_GETFPREGS","","",N,N],[17,"PTRACE_SETFPREGS","","",N,N],[17,"PTRACE_GETFPXREGS","","",N,N],[17,"PTRACE_SETFPXREGS","","",N,N],[17,"PTRACE_GETREGS","","",N,N],[17,"PTRACE_SETREGS","","",N,N],[17,"PTRACE_PEEKSIGINFO_SHARED","","",N,N],[17,"MCL_CURRENT","","",N,N],[17,"MCL_FUTURE","","",N,N],[17,"SIGSTKSZ","","",N,N],[17,"MINSIGSTKSZ","","",N,N],[17,"CBAUD","","",N,N],[17,"TAB1","","",N,N],[17,"TAB2","","",N,N],[17,"TAB3","","",N,N],[17,"CR1","","",N,N],[17,"CR2","","",N,N],[17,"CR3","","",N,N],[17,"FF1","","",N,N],[17,"BS1","","",N,N],[17,"VT1","","",N,N],[17,"VWERASE","","",N,N],[17,"VREPRINT","","",N,N],[17,"VSUSP","","",N,N],[17,"VSTART","","",N,N],[17,"VSTOP","","",N,N],[17,"VDISCARD","","",N,N],[17,"VTIME","","",N,N],[17,"IXON","","",N,N],[17,"IXOFF","","",N,N],[17,"ONLCR","","",N,N],[17,"CSIZE","","",N,N],[17,"CS6","","",N,N],[17,"CS7","","",N,N],[17,"CS8","","",N,N],[17,"CSTOPB","","",N,N],[17,"CREAD","","",N,N],[17,"PARENB","","",N,N],[17,"PARODD","","",N,N],[17,"HUPCL","","",N,N],[17,"CLOCAL","","",N,N],[17,"ECHOKE","","",N,N],[17,"ECHOE","","",N,N],[17,"ECHOK","","",N,N],[17,"ECHONL","","",N,N],[17,"ECHOPRT","","",N,N],[17,"ECHOCTL","","",N,N],[17,"ISIG","","",N,N],[17,"ICANON","","",N,N],[17,"PENDIN","","",N,N],[17,"NOFLSH","","",N,N],[17,"CIBAUD","","",N,N],[17,"CBAUDEX","","",N,N],[17,"VSWTC","","",N,N],[17,"OLCUC","","",N,N],[17,"NLDLY","","",N,N],[17,"CRDLY","","",N,N],[17,"TABDLY","","",N,N],[17,"BSDLY","","",N,N],[17,"FFDLY","","",N,N],[17,"VTDLY","","",N,N],[17,"XTABS","","",N,N],[17,"B0","","",N,N],[17,"B50","","",N,N],[17,"B75","","",N,N],[17,"B110","","",N,N],[17,"B134","","",N,N],[17,"B150","","",N,N],[17,"B200","","",N,N],[17,"B300","","",N,N],[17,"B600","","",N,N],[17,"B1200","","",N,N],[17,"B1800","","",N,N],[17,"B2400","","",N,N],[17,"B4800","","",N,N],[17,"B9600","","",N,N],[17,"B19200","","",N,N],[17,"B38400","","",N,N],[17,"EXTA","","",N,N],[17,"EXTB","","",N,N],[17,"BOTHER","","",N,N],[17,"B57600","","",N,N],[17,"B115200","","",N,N],[17,"B230400","","",N,N],[17,"B460800","","",N,N],[17,"B500000","","",N,N],[17,"B576000","","",N,N],[17,"B921600","","",N,N],[17,"B1000000","","",N,N],[17,"B1152000","","",N,N],[17,"B1500000","","",N,N],[17,"B2000000","","",N,N],[17,"B2500000","","",N,N],[17,"B3000000","","",N,N],[17,"B3500000","","",N,N],[17,"B4000000","","",N,N],[17,"VEOL","","",N,N],[17,"VEOL2","","",N,N],[17,"VMIN","","",N,N],[17,"IEXTEN","","",N,N],[17,"TOSTOP","","",N,N],[17,"FLUSHO","","",N,N],[17,"EXTPROC","","",N,N],[17,"TCGETS","","",N,N],[17,"TCSETS","","",N,N],[17,"TCSETSW","","",N,N],[17,"TCSETSF","","",N,N],[17,"TCGETA","","",N,N],[17,"TCSETA","","",N,N],[17,"TCSETAW","","",N,N],[17,"TCSETAF","","",N,N],[17,"TCSBRK","","",N,N],[17,"TCXONC","","",N,N],[17,"TCFLSH","","",N,N],[17,"TIOCINQ","","",N,N],[17,"TIOCGPGRP","","",N,N],[17,"TIOCSPGRP","","",N,N],[17,"TIOCOUTQ","","",N,N],[17,"TIOCGWINSZ","","",N,N],[17,"TIOCSWINSZ","","",N,N],[17,"FIONREAD","","",N,N],[17,"R15","","",N,N],[17,"R14","","",N,N],[17,"R13","","",N,N],[17,"R12","","",N,N],[17,"RBP","","",N,N],[17,"RBX","","",N,N],[17,"R11","","",N,N],[17,"R10","","",N,N],[17,"R9","","",N,N],[17,"R8","","",N,N],[17,"RAX","","",N,N],[17,"RCX","","",N,N],[17,"RDX","","",N,N],[17,"RSI","","",N,N],[17,"RDI","","",N,N],[17,"ORIG_RAX","","",N,N],[17,"RIP","","",N,N],[17,"CS","","",N,N],[17,"EFLAGS","","",N,N],[17,"RSP","","",N,N],[17,"SS","","",N,N],[17,"FS_BASE","","",N,N],[17,"GS_BASE","","",N,N],[17,"DS","","",N,N],[17,"ES","","",N,N],[17,"FS","","",N,N],[17,"GS","","",N,N],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",N,N],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",N,N],[17,"PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP","","",N,N],[17,"PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP","","",N,N],[17,"PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP","","",N,N],[17,"SYS_read","","",N,N],[17,"SYS_write","","",N,N],[17,"SYS_open","","",N,N],[17,"SYS_close","","",N,N],[17,"SYS_stat","","",N,N],[17,"SYS_fstat","","",N,N],[17,"SYS_lstat","","",N,N],[17,"SYS_poll","","",N,N],[17,"SYS_lseek","","",N,N],[17,"SYS_mmap","","",N,N],[17,"SYS_mprotect","","",N,N],[17,"SYS_munmap","","",N,N],[17,"SYS_brk","","",N,N],[17,"SYS_rt_sigaction","","",N,N],[17,"SYS_rt_sigprocmask","","",N,N],[17,"SYS_rt_sigreturn","","",N,N],[17,"SYS_ioctl","","",N,N],[17,"SYS_pread64","","",N,N],[17,"SYS_pwrite64","","",N,N],[17,"SYS_readv","","",N,N],[17,"SYS_writev","","",N,N],[17,"SYS_access","","",N,N],[17,"SYS_pipe","","",N,N],[17,"SYS_select","","",N,N],[17,"SYS_sched_yield","","",N,N],[17,"SYS_mremap","","",N,N],[17,"SYS_msync","","",N,N],[17,"SYS_mincore","","",N,N],[17,"SYS_madvise","","",N,N],[17,"SYS_shmget","","",N,N],[17,"SYS_shmat","","",N,N],[17,"SYS_shmctl","","",N,N],[17,"SYS_dup","","",N,N],[17,"SYS_dup2","","",N,N],[17,"SYS_pause","","",N,N],[17,"SYS_nanosleep","","",N,N],[17,"SYS_getitimer","","",N,N],[17,"SYS_alarm","","",N,N],[17,"SYS_setitimer","","",N,N],[17,"SYS_getpid","","",N,N],[17,"SYS_sendfile","","",N,N],[17,"SYS_socket","","",N,N],[17,"SYS_connect","","",N,N],[17,"SYS_accept","","",N,N],[17,"SYS_sendto","","",N,N],[17,"SYS_recvfrom","","",N,N],[17,"SYS_sendmsg","","",N,N],[17,"SYS_recvmsg","","",N,N],[17,"SYS_shutdown","","",N,N],[17,"SYS_bind","","",N,N],[17,"SYS_listen","","",N,N],[17,"SYS_getsockname","","",N,N],[17,"SYS_getpeername","","",N,N],[17,"SYS_socketpair","","",N,N],[17,"SYS_setsockopt","","",N,N],[17,"SYS_getsockopt","","",N,N],[17,"SYS_clone","","",N,N],[17,"SYS_fork","","",N,N],[17,"SYS_vfork","","",N,N],[17,"SYS_execve","","",N,N],[17,"SYS_exit","","",N,N],[17,"SYS_wait4","","",N,N],[17,"SYS_kill","","",N,N],[17,"SYS_uname","","",N,N],[17,"SYS_semget","","",N,N],[17,"SYS_semop","","",N,N],[17,"SYS_semctl","","",N,N],[17,"SYS_shmdt","","",N,N],[17,"SYS_msgget","","",N,N],[17,"SYS_msgsnd","","",N,N],[17,"SYS_msgrcv","","",N,N],[17,"SYS_msgctl","","",N,N],[17,"SYS_fcntl","","",N,N],[17,"SYS_flock","","",N,N],[17,"SYS_fsync","","",N,N],[17,"SYS_fdatasync","","",N,N],[17,"SYS_truncate","","",N,N],[17,"SYS_ftruncate","","",N,N],[17,"SYS_getdents","","",N,N],[17,"SYS_getcwd","","",N,N],[17,"SYS_chdir","","",N,N],[17,"SYS_fchdir","","",N,N],[17,"SYS_rename","","",N,N],[17,"SYS_mkdir","","",N,N],[17,"SYS_rmdir","","",N,N],[17,"SYS_creat","","",N,N],[17,"SYS_link","","",N,N],[17,"SYS_unlink","","",N,N],[17,"SYS_symlink","","",N,N],[17,"SYS_readlink","","",N,N],[17,"SYS_chmod","","",N,N],[17,"SYS_fchmod","","",N,N],[17,"SYS_chown","","",N,N],[17,"SYS_fchown","","",N,N],[17,"SYS_lchown","","",N,N],[17,"SYS_umask","","",N,N],[17,"SYS_gettimeofday","","",N,N],[17,"SYS_getrlimit","","",N,N],[17,"SYS_getrusage","","",N,N],[17,"SYS_sysinfo","","",N,N],[17,"SYS_times","","",N,N],[17,"SYS_ptrace","","",N,N],[17,"SYS_getuid","","",N,N],[17,"SYS_syslog","","",N,N],[17,"SYS_getgid","","",N,N],[17,"SYS_setuid","","",N,N],[17,"SYS_setgid","","",N,N],[17,"SYS_geteuid","","",N,N],[17,"SYS_getegid","","",N,N],[17,"SYS_setpgid","","",N,N],[17,"SYS_getppid","","",N,N],[17,"SYS_getpgrp","","",N,N],[17,"SYS_setsid","","",N,N],[17,"SYS_setreuid","","",N,N],[17,"SYS_setregid","","",N,N],[17,"SYS_getgroups","","",N,N],[17,"SYS_setgroups","","",N,N],[17,"SYS_setresuid","","",N,N],[17,"SYS_getresuid","","",N,N],[17,"SYS_setresgid","","",N,N],[17,"SYS_getresgid","","",N,N],[17,"SYS_getpgid","","",N,N],[17,"SYS_setfsuid","","",N,N],[17,"SYS_setfsgid","","",N,N],[17,"SYS_getsid","","",N,N],[17,"SYS_capget","","",N,N],[17,"SYS_capset","","",N,N],[17,"SYS_rt_sigpending","","",N,N],[17,"SYS_rt_sigtimedwait","","",N,N],[17,"SYS_rt_sigqueueinfo","","",N,N],[17,"SYS_rt_sigsuspend","","",N,N],[17,"SYS_sigaltstack","","",N,N],[17,"SYS_utime","","",N,N],[17,"SYS_mknod","","",N,N],[17,"SYS_uselib","","",N,N],[17,"SYS_personality","","",N,N],[17,"SYS_ustat","","",N,N],[17,"SYS_statfs","","",N,N],[17,"SYS_fstatfs","","",N,N],[17,"SYS_sysfs","","",N,N],[17,"SYS_getpriority","","",N,N],[17,"SYS_setpriority","","",N,N],[17,"SYS_sched_setparam","","",N,N],[17,"SYS_sched_getparam","","",N,N],[17,"SYS_sched_setscheduler","","",N,N],[17,"SYS_sched_getscheduler","","",N,N],[17,"SYS_sched_get_priority_max","","",N,N],[17,"SYS_sched_get_priority_min","","",N,N],[17,"SYS_sched_rr_get_interval","","",N,N],[17,"SYS_mlock","","",N,N],[17,"SYS_munlock","","",N,N],[17,"SYS_mlockall","","",N,N],[17,"SYS_munlockall","","",N,N],[17,"SYS_vhangup","","",N,N],[17,"SYS_modify_ldt","","",N,N],[17,"SYS_pivot_root","","",N,N],[17,"SYS__sysctl","","",N,N],[17,"SYS_prctl","","",N,N],[17,"SYS_arch_prctl","","",N,N],[17,"SYS_adjtimex","","",N,N],[17,"SYS_setrlimit","","",N,N],[17,"SYS_chroot","","",N,N],[17,"SYS_sync","","",N,N],[17,"SYS_acct","","",N,N],[17,"SYS_settimeofday","","",N,N],[17,"SYS_mount","","",N,N],[17,"SYS_umount2","","",N,N],[17,"SYS_swapon","","",N,N],[17,"SYS_swapoff","","",N,N],[17,"SYS_reboot","","",N,N],[17,"SYS_sethostname","","",N,N],[17,"SYS_setdomainname","","",N,N],[17,"SYS_iopl","","",N,N],[17,"SYS_ioperm","","",N,N],[17,"SYS_create_module","","",N,N],[17,"SYS_init_module","","",N,N],[17,"SYS_delete_module","","",N,N],[17,"SYS_get_kernel_syms","","",N,N],[17,"SYS_query_module","","",N,N],[17,"SYS_quotactl","","",N,N],[17,"SYS_nfsservctl","","",N,N],[17,"SYS_getpmsg","","",N,N],[17,"SYS_putpmsg","","",N,N],[17,"SYS_afs_syscall","","",N,N],[17,"SYS_tuxcall","","",N,N],[17,"SYS_security","","",N,N],[17,"SYS_gettid","","",N,N],[17,"SYS_readahead","","",N,N],[17,"SYS_setxattr","","",N,N],[17,"SYS_lsetxattr","","",N,N],[17,"SYS_fsetxattr","","",N,N],[17,"SYS_getxattr","","",N,N],[17,"SYS_lgetxattr","","",N,N],[17,"SYS_fgetxattr","","",N,N],[17,"SYS_listxattr","","",N,N],[17,"SYS_llistxattr","","",N,N],[17,"SYS_flistxattr","","",N,N],[17,"SYS_removexattr","","",N,N],[17,"SYS_lremovexattr","","",N,N],[17,"SYS_fremovexattr","","",N,N],[17,"SYS_tkill","","",N,N],[17,"SYS_time","","",N,N],[17,"SYS_futex","","",N,N],[17,"SYS_sched_setaffinity","","",N,N],[17,"SYS_sched_getaffinity","","",N,N],[17,"SYS_set_thread_area","","",N,N],[17,"SYS_io_setup","","",N,N],[17,"SYS_io_destroy","","",N,N],[17,"SYS_io_getevents","","",N,N],[17,"SYS_io_submit","","",N,N],[17,"SYS_io_cancel","","",N,N],[17,"SYS_get_thread_area","","",N,N],[17,"SYS_lookup_dcookie","","",N,N],[17,"SYS_epoll_create","","",N,N],[17,"SYS_epoll_ctl_old","","",N,N],[17,"SYS_epoll_wait_old","","",N,N],[17,"SYS_remap_file_pages","","",N,N],[17,"SYS_getdents64","","",N,N],[17,"SYS_set_tid_address","","",N,N],[17,"SYS_restart_syscall","","",N,N],[17,"SYS_semtimedop","","",N,N],[17,"SYS_fadvise64","","",N,N],[17,"SYS_timer_create","","",N,N],[17,"SYS_timer_settime","","",N,N],[17,"SYS_timer_gettime","","",N,N],[17,"SYS_timer_getoverrun","","",N,N],[17,"SYS_timer_delete","","",N,N],[17,"SYS_clock_settime","","",N,N],[17,"SYS_clock_gettime","","",N,N],[17,"SYS_clock_getres","","",N,N],[17,"SYS_clock_nanosleep","","",N,N],[17,"SYS_exit_group","","",N,N],[17,"SYS_epoll_wait","","",N,N],[17,"SYS_epoll_ctl","","",N,N],[17,"SYS_tgkill","","",N,N],[17,"SYS_utimes","","",N,N],[17,"SYS_vserver","","",N,N],[17,"SYS_mbind","","",N,N],[17,"SYS_set_mempolicy","","",N,N],[17,"SYS_get_mempolicy","","",N,N],[17,"SYS_mq_open","","",N,N],[17,"SYS_mq_unlink","","",N,N],[17,"SYS_mq_timedsend","","",N,N],[17,"SYS_mq_timedreceive","","",N,N],[17,"SYS_mq_notify","","",N,N],[17,"SYS_mq_getsetattr","","",N,N],[17,"SYS_kexec_load","","",N,N],[17,"SYS_waitid","","",N,N],[17,"SYS_add_key","","",N,N],[17,"SYS_request_key","","",N,N],[17,"SYS_keyctl","","",N,N],[17,"SYS_ioprio_set","","",N,N],[17,"SYS_ioprio_get","","",N,N],[17,"SYS_inotify_init","","",N,N],[17,"SYS_inotify_add_watch","","",N,N],[17,"SYS_inotify_rm_watch","","",N,N],[17,"SYS_migrate_pages","","",N,N],[17,"SYS_openat","","",N,N],[17,"SYS_mkdirat","","",N,N],[17,"SYS_mknodat","","",N,N],[17,"SYS_fchownat","","",N,N],[17,"SYS_futimesat","","",N,N],[17,"SYS_newfstatat","","",N,N],[17,"SYS_unlinkat","","",N,N],[17,"SYS_renameat","","",N,N],[17,"SYS_linkat","","",N,N],[17,"SYS_symlinkat","","",N,N],[17,"SYS_readlinkat","","",N,N],[17,"SYS_fchmodat","","",N,N],[17,"SYS_faccessat","","",N,N],[17,"SYS_pselect6","","",N,N],[17,"SYS_ppoll","","",N,N],[17,"SYS_unshare","","",N,N],[17,"SYS_set_robust_list","","",N,N],[17,"SYS_get_robust_list","","",N,N],[17,"SYS_splice","","",N,N],[17,"SYS_tee","","",N,N],[17,"SYS_sync_file_range","","",N,N],[17,"SYS_vmsplice","","",N,N],[17,"SYS_move_pages","","",N,N],[17,"SYS_utimensat","","",N,N],[17,"SYS_epoll_pwait","","",N,N],[17,"SYS_signalfd","","",N,N],[17,"SYS_timerfd_create","","",N,N],[17,"SYS_eventfd","","",N,N],[17,"SYS_fallocate","","",N,N],[17,"SYS_timerfd_settime","","",N,N],[17,"SYS_timerfd_gettime","","",N,N],[17,"SYS_accept4","","",N,N],[17,"SYS_signalfd4","","",N,N],[17,"SYS_eventfd2","","",N,N],[17,"SYS_epoll_create1","","",N,N],[17,"SYS_dup3","","",N,N],[17,"SYS_pipe2","","",N,N],[17,"SYS_inotify_init1","","",N,N],[17,"SYS_preadv","","",N,N],[17,"SYS_pwritev","","",N,N],[17,"SYS_rt_tgsigqueueinfo","","",N,N],[17,"SYS_perf_event_open","","",N,N],[17,"SYS_recvmmsg","","",N,N],[17,"SYS_fanotify_init","","",N,N],[17,"SYS_fanotify_mark","","",N,N],[17,"SYS_prlimit64","","",N,N],[17,"SYS_name_to_handle_at","","",N,N],[17,"SYS_open_by_handle_at","","",N,N],[17,"SYS_clock_adjtime","","",N,N],[17,"SYS_syncfs","","",N,N],[17,"SYS_sendmmsg","","",N,N],[17,"SYS_setns","","",N,N],[17,"SYS_getcpu","","",N,N],[17,"SYS_process_vm_readv","","",N,N],[17,"SYS_process_vm_writev","","",N,N],[17,"SYS_kcmp","","",N,N],[17,"SYS_finit_module","","",N,N],[17,"SYS_sched_setattr","","",N,N],[17,"SYS_sched_getattr","","",N,N],[17,"SYS_renameat2","","",N,N],[17,"SYS_seccomp","","",N,N],[17,"SYS_getrandom","","",N,N],[17,"SYS_memfd_create","","",N,N],[17,"SYS_kexec_file_load","","",N,N],[17,"SYS_bpf","","",N,N],[17,"SYS_execveat","","",N,N],[17,"SYS_userfaultfd","","",N,N],[17,"SYS_membarrier","","",N,N],[17,"SYS_mlock2","","",N,N],[17,"SYS_copy_file_range","","",N,N],[17,"SYS_preadv2","","",N,N],[17,"SYS_pwritev2","","",N,N],[17,"SYS_pkey_mprotect","","",N,N],[17,"SYS_pkey_alloc","","",N,N],[17,"SYS_pkey_free","","",N,N]],"paths":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"sigevent"],[3,"in_pktinfo"],[3,"ifaddrs"],[3,"arpreq"],[3,"arpreq_old"],[3,"arphdr"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"passwd"],[3,"spwd"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"itimerspec"],[3,"mq_attr"],[3,"packet_mreq"],[3,"if_nameindex"],[3,"msginfo"],[3,"mmsghdr"],[3,"sembuf"],[3,"input_event"],[3,"input_id"],[3,"input_absinfo"],[3,"input_keymap_entry"],[3,"input_mask"],[3,"ff_replay"],[3,"ff_trigger"],[3,"ff_envelope"],[3,"ff_constant_effect"],[3,"ff_ramp_effect"],[3,"ff_condition_effect"],[3,"ff_periodic_effect"],[3,"ff_rumble_effect"],[3,"ff_effect"],[3,"dl_phdr_info"],[3,"Elf32_Phdr"],[3,"Elf64_Phdr"],[3,"ucred"],[3,"mntent"],[3,"genlmsghdr"],[3,"in6_pktinfo"],[3,"arpd_request"],[3,"aiocb"],[3,"__exit_status"],[3,"__timeval"],[3,"utmpx"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"statfs"],[3,"msghdr"],[3,"cmsghdr"],[3,"termios"],[3,"flock"],[3,"mallinfo"],[3,"nlmsghdr"],[3,"nlmsgerr"],[3,"nl_pktinfo"],[3,"nl_mmap_req"],[3,"nl_mmap_hdr"],[3,"nlattr"],[3,"rtentry"],[3,"sysinfo"],[3,"msqid_ds"],[3,"stat"],[3,"stat64"],[3,"statfs64"],[3,"statvfs64"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"user_fpregs_struct"],[3,"user_regs_struct"],[3,"user"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"termios2"],[3,"statvfs"],[3,"pthread_attr_t"],[3,"sigset_t"],[3,"sem_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_cond_t"],[3,"pthread_condattr_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"posix_spawn_file_actions_t"],[3,"posix_spawnattr_t"],[3,"fd_set"],[3,"in6_rtmsg"]]};
searchIndex["libloading"]={"doc":"A memory-safer wrapper around system dynamic library loading primitives.","items":[[3,"Library","libloading","A loaded dynamic library.",N,N],[3,"Symbol","","Symbol from a library.",N,N],[0,"os","","Unsafe, platform specific bindings to dynamic library loading facilities.",N,N],[0,"unix","libloading::os","UNIX implementation of dynamic library loading.",N,N],[3,"Library","libloading::os::unix","A platform-specific equivalent of the cross-platform `Library`.",N,N],[3,"Symbol","","Symbol from a library.",N,N],[11,"new","","Find and load a shared library (module).",0,[[["p"]],["result",["library"]]]],[11,"this","","Load the dynamic libraries linked into main program.",0,[[],["library"]]],[11,"open","","Find and load a shared library (module).",0,[[["option"],["c_int"]],["result",["library"]]]],[11,"get","","Get a pointer to function or static variable by symbol name.",0,N],[11,"drop","","",0,[[["self"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"lift_option","","Lift Option out of the symbol.",1,[[["self"]],["option",["symbol"]]]],[11,"clone","","",1,[[["self"]],["symbol"]]],[11,"deref","","",1,[[["self"]],["t"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[0,"windows","libloading::os","Windows implementation of dynamic library loading.",N,N],[0,"changelog","libloading","Project changelog",N,N],[0,"r0_5_0","libloading::changelog","Release 0.5.0 (2018-01-11)",N,N],[0,"r0_4_3","","Release 0.4.3 (2017-12-07)",N,N],[0,"r0_4_2","","Release 0.4.2 (2017-09-24)",N,N],[0,"r0_4_1","","Release 0.4.1 (2017-08-29)",N,N],[0,"r0_4_0","","Release 0.4.0 (2017-05-01)",N,N],[0,"r0_3_4","","Release 0.3.4 (2017-03-25)",N,N],[0,"r0_3_3","","Release 0.3.3 (2017-03-25)",N,N],[0,"r0_3_2","","Release 0.3.2 (2017-02-10)",N,N],[0,"r0_3_1","","Release 0.3.1 (2016-10-01)",N,N],[0,"r0_3_0","","Release 0.3.0 (2016-07-27)",N,N],[6,"Result","libloading","",N,N],[11,"new","","Find and load a dynamic library.",2,[[["p"]],["result",["library"]]]],[11,"get","","Get a pointer to function or static variable by symbol name.",2,N],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"from","","",2,[[["library"]],["library"]]],[11,"from","libloading::os::unix","",0,[[["library"]],["library"]]],[11,"into_raw","libloading","Extract the wrapped `os::platform::Symbol`.",3,[[["self"]],["symbol"]]],[11,"from_raw","","Wrap the `os::platform::Symbol` into this safe wrapper.",3,[[["symbol"],["l"]],["symbol"]]],[11,"lift_option","","Lift Option out of the symbol.",3,[[["self"]],["option",["symbol"]]]],[11,"clone","","",3,[[["self"]],["symbol"]]],[11,"deref","","",3,[[["self"]],["t"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"Library"],[3,"Symbol"],[3,"Library"],[3,"Symbol"]]};
searchIndex["lock_api"]={"doc":"This library provides type-safe and fully-featured `Mutex` and `RwLock` types which wrap a simple raw mutex or rwlock type. This has several benefits: not only does it eliminate a large portion of the work in implementing custom lock types, it also allows users to write code which is generic with regards to different lock implementations.","items":[[3,"GuardSend","lock_api","Marker type which indicates that the Guard type for a lock is `Send`.",N,N],[3,"GuardNoSend","","Marker type which indicates that the Guard type for a lock is not `Send`.",N,N],[3,"Mutex","","A mutual exclusion primitive useful for protecting shared data",N,N],[3,"MutexGuard","","An RAII implementation of a \"scoped lock\" of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked.",N,N],[3,"MappedMutexGuard","","An RAII mutex guard returned by `MutexGuard::map`, which can point to a subfield of the protected data.",N,N],[3,"ReentrantMutex","","A mutex which can be recursively locked by a single thread.",N,N],[3,"ReentrantMutexGuard","","An RAII implementation of a \"scoped lock\" of a reentrant mutex. When this structure is dropped (falls out of scope), the lock will be unlocked.",N,N],[3,"MappedReentrantMutexGuard","","An RAII mutex guard returned by `ReentrantMutexGuard::map`, which can point to a subfield of the protected data.",N,N],[3,"RwLock","","A reader-writer lock",N,N],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of a lock when dropped.",N,N],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access of a lock when dropped.",N,N],[3,"RwLockUpgradableReadGuard","","RAII structure used to release the upgradable read access of a lock when dropped.",N,N],[3,"MappedRwLockReadGuard","","An RAII read lock guard returned by `RwLockReadGuard::map`, which can point to a subfield of the protected data.",N,N],[3,"MappedRwLockWriteGuard","","An RAII write lock guard returned by `RwLockWriteGuard::map`, which can point to a subfield of the protected data.",N,N],[11,"new","","Creates a new mutex in an unlocked state ready for use.",0,[[["t"]],["mutex"]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",0,[[["self"]],["t"]]],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",0,[[["self"]],["mutexguard"]]],[11,"try_lock","","Attempts to acquire this lock.",0,[[["self"]],["option",["mutexguard"]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",0,[[["self"]],["t"]]],[11,"force_unlock","","Forcibly unlocks the mutex.",0,[[["self"]]]],[11,"raw","","Returns the underlying raw mutex object.",0,[[["self"]],["r"]]],[11,"force_unlock_fair","","Forcibly unlocks the mutex using a fair unlock procotol.",0,[[["self"]]]],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",0,N],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",0,N],[11,"default","","",0,[[],["mutex"]]],[11,"from","","",0,[[["t"]],["mutex"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"mutex","","Returns a reference to the original `Mutex` object.",1,[[["self"]],["mutex"]]],[11,"map","","Makes a new `MappedMutexGuard` for a component of the locked data.",1,[[["self"],["f"]],["mappedmutexguard"]]],[11,"try_map","","Attempts to make  a new `MappedMutexGuard` for a component of the locked data. The original guard is return if the closure returns `None`.",1,[[["self"],["f"]],["result",["mappedmutexguard"]]]],[11,"unlocked","","Temporarily unlocks the mutex to execute the given function.",1,[[["self"],["f"]],["u"]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",1,[[["self"]]]],[11,"unlocked_fair","","Temporarily unlocks the mutex to execute the given function.",1,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there is one.",1,[[["self"]]]],[11,"deref","","",1,[[["self"]],["t"]]],[11,"deref_mut","","",1,[[["self"]],["t"]]],[11,"drop","","",1,[[["self"]]]],[11,"map","","Makes a new `MappedMutexGuard` for a component of the locked data.",2,[[["self"],["f"]],["mappedmutexguard"]]],[11,"try_map","","Attempts to make  a new `MappedMutexGuard` for a component of the locked data. The original guard is return if the closure returns `None`.",2,[[["self"],["f"]],["result",["mappedmutexguard"]]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",2,[[["self"]]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"deref_mut","","",2,[[["self"]],["t"]]],[11,"drop","","",2,[[["self"]]]],[11,"new","","Creates a new reentrant mutex in an unlocked state ready for use.",3,[[["t"]],["reentrantmutex"]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",3,[[["self"]],["t"]]],[11,"lock","","Acquires a reentrant mutex, blocking the current thread until it is able to do so.",3,[[["self"]],["reentrantmutexguard"]]],[11,"try_lock","","Attempts to acquire this lock.",3,[[["self"]],["option",["reentrantmutexguard"]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",3,[[["self"]],["t"]]],[11,"force_unlock","","Forcibly unlocks the mutex.",3,[[["self"]]]],[11,"raw","","Returns the underlying raw mutex object.",3,[[["self"]],["r"]]],[11,"force_unlock_fair","","Forcibly unlocks the mutex using a fair unlock procotol.",3,[[["self"]]]],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",3,N],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",3,N],[11,"default","","",3,[[],["reentrantmutex"]]],[11,"from","","",3,[[["t"]],["reentrantmutex"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"remutex","","Returns a reference to the original `ReentrantMutex` object.",4,[[["self"]],["reentrantmutex"]]],[11,"map","","Makes a new `MappedReentrantMutexGuard` for a component of the locked data.",4,[[["self"],["f"]],["mappedreentrantmutexguard"]]],[11,"try_map","","Attempts to make  a new `MappedReentrantMutexGuard` for a component of the locked data. The original guard is return if the closure returns `None`.",4,[[["self"],["f"]],["result",["mappedreentrantmutexguard"]]]],[11,"unlocked","","Temporarily unlocks the mutex to execute the given function.",4,[[["self"],["f"]],["u"]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",4,[[["self"]]]],[11,"unlocked_fair","","Temporarily unlocks the mutex to execute the given function.",4,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there is one.",4,[[["self"]]]],[11,"deref","","",4,[[["self"]],["t"]]],[11,"drop","","",4,[[["self"]]]],[11,"map","","Makes a new `MappedReentrantMutexGuard` for a component of the locked data.",5,[[["self"],["f"]],["mappedreentrantmutexguard"]]],[11,"try_map","","Attempts to make  a new `MappedReentrantMutexGuard` for a component of the locked data. The original guard is return if the closure returns `None`.",5,[[["self"],["f"]],["result",["mappedreentrantmutexguard"]]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",5,[[["self"]]]],[11,"deref","","",5,[[["self"]],["t"]]],[11,"drop","","",5,[[["self"]]]],[11,"new","","Creates a new instance of an `RwLock<T>` which is unlocked.",6,[[["t"]],["rwlock"]]],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",6,[[["self"]],["t"]]],[11,"read","","Locks this `RwLock` with shared read access, blocking the current thread until it can be acquired.",6,[[["self"]],["rwlockreadguard"]]],[11,"try_read","","Attempts to acquire this `RwLock` with shared read access.",6,[[["self"]],["option",["rwlockreadguard"]]]],[11,"write","","Locks this `RwLock` with exclusive write access, blocking the current thread until it can be acquired.",6,[[["self"]],["rwlockwriteguard"]]],[11,"try_write","","Attempts to lock this `RwLock` with exclusive write access.",6,[[["self"]],["option",["rwlockwriteguard"]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",6,[[["self"]],["t"]]],[11,"force_unlock_read","","Forcibly unlocks a read lock.",6,[[["self"]]]],[11,"force_unlock_write","","Forcibly unlocks a write lock.",6,[[["self"]]]],[11,"raw","","Returns the underlying raw reader-writer lock object.",6,[[["self"]],["r"]]],[11,"force_unlock_read_fair","","Forcibly unlocks a read lock using a fair unlock procotol.",6,[[["self"]]]],[11,"force_unlock_write_fair","","Forcibly unlocks a write lock using a fair unlock procotol.",6,[[["self"]]]],[11,"try_read_for","","Attempts to acquire this `RwLock` with shared read access until a timeout is reached.",6,N],[11,"try_read_until","","Attempts to acquire this `RwLock` with shared read access until a timeout is reached.",6,N],[11,"try_write_for","","Attempts to acquire this `RwLock` with exclusive write access until a timeout is reached.",6,N],[11,"try_write_until","","Attempts to acquire this `RwLock` with exclusive write access until a timeout is reached.",6,N],[11,"read_recursive","","Locks this `RwLock` with shared read access, blocking the current thread until it can be acquired.",6,[[["self"]],["rwlockreadguard"]]],[11,"try_read_recursive","","Attempts to acquire this `RwLock` with shared read access.",6,[[["self"]],["option",["rwlockreadguard"]]]],[11,"try_read_recursive_for","","Attempts to acquire this `RwLock` with shared read access until a timeout is reached.",6,N],[11,"try_read_recursive_until","","Attempts to acquire this `RwLock` with shared read access until a timeout is reached.",6,N],[11,"upgradable_read","","Locks this `RwLock` with upgradable read access, blocking the current thread until it can be acquired.",6,[[["self"]],["rwlockupgradablereadguard"]]],[11,"try_upgradable_read","","Attempts to acquire this `RwLock` with upgradable read access.",6,[[["self"]],["option",["rwlockupgradablereadguard"]]]],[11,"try_upgradable_read_for","","Attempts to acquire this `RwLock` with upgradable read access until a timeout is reached.",6,N],[11,"try_upgradable_read_until","","Attempts to acquire this `RwLock` with upgradable read access until a timeout is reached.",6,N],[11,"default","","",6,[[],["rwlock"]]],[11,"from","","",6,[[["t"]],["rwlock"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"rwlock","","Returns a reference to the original reader-writer lock object.",7,[[["self"]],["rwlock"]]],[11,"map","","Make a new `MappedRwLockReadGuard` for a component of the locked data.",7,[[["self"],["f"]],["mappedrwlockreadguard"]]],[11,"try_map","","Attempts to make  a new `MappedRwLockReadGuard` for a component of the locked data. The original guard is return if the closure returns `None`.",7,[[["self"],["f"]],["result",["mappedrwlockreadguard"]]]],[11,"unlocked","","Temporarily unlocks the `RwLock` to execute the given function.",7,[[["self"],["f"]],["u"]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",7,[[["self"]]]],[11,"unlocked_fair","","Temporarily unlocks the `RwLock` to execute the given function.",7,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the `RwLock` to a waiting thread if there is one.",7,[[["self"]]]],[11,"deref","","",7,[[["self"]],["t"]]],[11,"drop","","",7,[[["self"]]]],[11,"rwlock","","Returns a reference to the original reader-writer lock object.",8,[[["self"]],["rwlock"]]],[11,"map","","Make a new `MappedRwLockWriteGuard` for a component of the locked data.",8,[[["self"],["f"]],["mappedrwlockwriteguard"]]],[11,"try_map","","Attempts to make  a new `MappedRwLockWriteGuard` for a component of the locked data. The original guard is return if the closure returns `None`.",8,[[["self"],["f"]],["result",["mappedrwlockwriteguard"]]]],[11,"unlocked","","Temporarily unlocks the `RwLock` to execute the given function.",8,[[["self"],["f"]],["u"]]],[11,"downgrade","","Atomically downgrades a write lock into a read lock without allowing any writers to take exclusive access of the lock in the meantime.",8,[[["self"]],["rwlockreadguard"]]],[11,"downgrade_to_upgradable","","Atomically downgrades a write lock into an upgradable read lock without allowing any writers to take exclusive access of the lock in the meantime.",8,[[["self"]],["rwlockupgradablereadguard"]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",8,[[["self"]]]],[11,"unlocked_fair","","Temporarily unlocks the `RwLock` to execute the given function.",8,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the `RwLock` to a waiting thread if there is one.",8,[[["self"]]]],[11,"deref","","",8,[[["self"]],["t"]]],[11,"deref_mut","","",8,[[["self"]],["t"]]],[11,"drop","","",8,[[["self"]]]],[11,"rwlock","","Returns a reference to the original reader-writer lock object.",9,[[["self"]],["rwlock"]]],[11,"unlocked","","Temporarily unlocks the `RwLock` to execute the given function.",9,[[["self"],["f"]],["u"]]],[11,"upgrade","","Atomically upgrades an upgradable read lock lock into a exclusive write lock, blocking the current thread until it can be aquired.",9,[[["self"]],["rwlockwriteguard"]]],[11,"try_upgrade","","Tries to atomically upgrade an upgradable read lock into a exclusive write lock.",9,[[["self"]],["result",["rwlockwriteguard"]]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",9,[[["self"]]]],[11,"unlocked_fair","","Temporarily unlocks the `RwLock` to execute the given function.",9,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the `RwLock` to a waiting thread if there is one.",9,[[["self"]]]],[11,"downgrade","","Atomically downgrades an upgradable read lock lock into a shared read lock without allowing any writers to take exclusive access of the lock in the meantime.",9,[[["self"]],["rwlockreadguard"]]],[11,"try_upgrade_for","","Tries to atomically upgrade an upgradable read lock into a exclusive write lock, until a timeout is reached.",9,N],[11,"try_upgrade_until","","Tries to atomically upgrade an upgradable read lock into a exclusive write lock, until a timeout is reached.",9,N],[11,"deref","","",9,[[["self"]],["t"]]],[11,"drop","","",9,[[["self"]]]],[11,"map","","Make a new `MappedRwLockReadGuard` for a component of the locked data.",10,[[["self"],["f"]],["mappedrwlockreadguard"]]],[11,"try_map","","Attempts to make  a new `MappedRwLockReadGuard` for a component of the locked data. The original guard is return if the closure returns `None`.",10,[[["self"],["f"]],["result",["mappedrwlockreadguard"]]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",10,[[["self"]]]],[11,"deref","","",10,[[["self"]],["t"]]],[11,"drop","","",10,[[["self"]]]],[11,"map","","Make a new `MappedRwLockWriteGuard` for a component of the locked data.",11,[[["self"],["f"]],["mappedrwlockwriteguard"]]],[11,"try_map","","Attempts to make  a new `MappedRwLockWriteGuard` for a component of the locked data. The original guard is return if the closure returns `None`.",11,[[["self"],["f"]],["result",["mappedrwlockwriteguard"]]]],[11,"downgrade","","Atomically downgrades a write lock into a read lock without allowing any writers to take exclusive access of the lock in the meantime.",11,[[["self"]],["mappedrwlockreadguard"]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",11,[[["self"]]]],[11,"deref","","",11,[[["self"]],["t"]]],[11,"deref_mut","","",11,[[["self"]],["t"]]],[11,"drop","","",11,[[["self"]]]],[8,"RawMutex","","Basic operations for a mutex.",N,N],[18,"INIT","","Initial value for an unlocked mutex.",12,N],[16,"GuardMarker","","Marker type which determines whether a lock guard should be `Send`. Use one of the `GuardSend` or `GuardNoSend` helper types here.",12,N],[10,"lock","","Acquires this mutex, blocking the current thread until it is able to do so.",12,[[["self"]]]],[10,"try_lock","","Attempts to acquire this mutex without blocking.",12,[[["self"]],["bool"]]],[10,"unlock","","Unlocks this mutex.",12,[[["self"]]]],[8,"RawMutexFair","","Additional methods for mutexes which support fair unlocking.",N,N],[10,"unlock_fair","","Unlocks this mutex using a fair unlock protocol.",13,[[["self"]]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there is one.",13,[[["self"]]]],[8,"RawMutexTimed","","Additional methods for mutexes which support locking with timeouts.",N,N],[16,"Duration","","Duration type used for `try_lock_for`.",14,N],[16,"Instant","","Instant type used for `try_lock_until`.",14,N],[10,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",14,N],[10,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",14,N],[8,"GetThreadId","","Helper trait which returns a non-zero thread ID.",N,N],[18,"INIT","","Initial value.",15,N],[10,"nonzero_thread_id","","Returns a non-zero thread ID which identifies the current thread of execution.",15,[[["self"]],["usize"]]],[8,"RawRwLock","","Basic operations for a reader-writer lock.",N,N],[18,"INIT","","Initial value for an unlocked `RwLock`.",16,N],[16,"GuardMarker","","Marker type which determines whether a lock guard should be `Send`. Use one of the `GuardSend` or `GuardNoSend` helper types here.",16,N],[10,"lock_shared","","Acquires a shared lock, blocking the current thread until it is able to do so.",16,[[["self"]]]],[10,"try_lock_shared","","Attempts to acquire a shared lock without blocking.",16,[[["self"]],["bool"]]],[10,"unlock_shared","","Releases a shared lock.",16,[[["self"]]]],[10,"lock_exclusive","","Acquires an exclusive lock, blocking the current thread until it is able to do so.",16,[[["self"]]]],[10,"try_lock_exclusive","","Attempts to acquire an exclusive lock without blocking.",16,[[["self"]],["bool"]]],[10,"unlock_exclusive","","Releases an exclusive lock.",16,[[["self"]]]],[8,"RawRwLockFair","","Additional methods for RwLocks which support fair unlocking.",N,N],[10,"unlock_shared_fair","","Releases a shared lock using a fair unlock protocol.",17,[[["self"]]]],[10,"unlock_exclusive_fair","","Releases an exclusive lock using a fair unlock protocol.",17,[[["self"]]]],[11,"bump_shared","","Temporarily yields a shared lock to a waiting thread if there is one.",17,[[["self"]]]],[11,"bump_exclusive","","Temporarily yields an exclusive lock to a waiting thread if there is one.",17,[[["self"]]]],[8,"RawRwLockDowngrade","","Additional methods for RwLocks which support atomically downgrading an exclusive lock to a shared lock.",N,N],[10,"downgrade","","Atomically downgrades an exclusive lock into a shared lock without allowing any thread to take an exclusive lock in the meantime.",18,[[["self"]]]],[8,"RawRwLockTimed","","Additional methods for RwLocks which support locking with timeouts.",N,N],[16,"Duration","","Duration type used for `try_lock_for`.",19,N],[16,"Instant","","Instant type used for `try_lock_until`.",19,N],[10,"try_lock_shared_for","","Attempts to acquire a shared lock until a timeout is reached.",19,N],[10,"try_lock_shared_until","","Attempts to acquire a shared lock until a timeout is reached.",19,N],[10,"try_lock_exclusive_for","","Attempts to acquire an exclusive lock until a timeout is reached.",19,N],[10,"try_lock_exclusive_until","","Attempts to acquire an exclusive lock until a timeout is reached.",19,N],[8,"RawRwLockRecursive","","Additional methods for RwLocks which support recursive read locks.",N,N],[10,"lock_shared_recursive","","Acquires a shared lock without deadlocking in case of a recursive lock.",20,[[["self"]]]],[10,"try_lock_shared_recursive","","Attempts to acquire a shared lock without deadlocking in case of a recursive lock.",20,[[["self"]],["bool"]]],[8,"RawRwLockRecursiveTimed","","Additional methods for RwLocks which support recursive read locks and timeouts.",N,N],[10,"try_lock_shared_recursive_for","","Attempts to acquire a shared lock until a timeout is reached, without deadlocking in case of a recursive lock.",21,N],[10,"try_lock_shared_recursive_until","","Attempts to acquire a shared lock until a timeout is reached, without deadlocking in case of a recursive lock.",21,N],[8,"RawRwLockUpgrade","","Additional methods for RwLocks which support atomically upgrading a shared lock to an exclusive lock.",N,N],[10,"lock_upgradable","","Acquires an upgradable lock, blocking the current thread until it is able to do so.",22,[[["self"]]]],[10,"try_lock_upgradable","","Attempts to acquire an upgradable lock without blocking.",22,[[["self"]],["bool"]]],[10,"unlock_upgradable","","Releases an upgradable lock.",22,[[["self"]]]],[10,"upgrade","","Upgrades an upgradable lock to an exclusive lock.",22,[[["self"]]]],[10,"try_upgrade","","Attempts to upgrade an upgradable lock to an exclusive lock without blocking.",22,[[["self"]],["bool"]]],[8,"RawRwLockUpgradeFair","","Additional methods for RwLocks which support upgradable locks and fair unlocking.",N,N],[10,"unlock_upgradable_fair","","Releases an upgradable lock using a fair unlock protocol.",23,[[["self"]]]],[11,"bump_upgradable","","Temporarily yields an upgradable lock to a waiting thread if there is one.",23,[[["self"]]]],[8,"RawRwLockUpgradeDowngrade","","Additional methods for RwLocks which support upgradable locks and lock downgrading.",N,N],[10,"downgrade_upgradable","","Downgrades an upgradable lock to a shared lock.",24,[[["self"]]]],[10,"downgrade_to_upgradable","","Downgrades an exclusive lock to an upgradable lock.",24,[[["self"]]]],[8,"RawRwLockUpgradeTimed","","Additional methods for RwLocks which support upgradable locks and locking with timeouts.",N,N],[10,"try_lock_upgradable_for","","Attempts to acquire an upgradable lock until a timeout is reached.",25,N],[10,"try_lock_upgradable_until","","Attempts to acquire an upgradable lock until a timeout is reached.",25,N],[10,"try_upgrade_for","","Attempts to upgrade an upgradable lock to an exclusive lock until a timeout is reached.",25,N],[10,"try_upgrade_until","","Attempts to upgrade an upgradable lock to an exclusive lock until a timeout is reached.",25,N],[18,"INIT","","Initial value for an unlocked mutex.",12,N],[11,"bump","","Temporarily yields the mutex to a waiting thread if there is one.",13,[[["self"]]]],[18,"INIT","","Initial value.",15,N],[18,"INIT","","Initial value for an unlocked `RwLock`.",16,N],[11,"bump_shared","","Temporarily yields a shared lock to a waiting thread if there is one.",17,[[["self"]]]],[11,"bump_exclusive","","Temporarily yields an exclusive lock to a waiting thread if there is one.",17,[[["self"]]]],[11,"bump_upgradable","","Temporarily yields an upgradable lock to a waiting thread if there is one.",23,[[["self"]]]]],"paths":[[3,"Mutex"],[3,"MutexGuard"],[3,"MappedMutexGuard"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"MappedReentrantMutexGuard"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockUpgradableReadGuard"],[3,"MappedRwLockReadGuard"],[3,"MappedRwLockWriteGuard"],[8,"RawMutex"],[8,"RawMutexFair"],[8,"RawMutexTimed"],[8,"GetThreadId"],[8,"RawRwLock"],[8,"RawRwLockFair"],[8,"RawRwLockDowngrade"],[8,"RawRwLockTimed"],[8,"RawRwLockRecursive"],[8,"RawRwLockRecursiveTimed"],[8,"RawRwLockUpgrade"],[8,"RawRwLockUpgradeFair"],[8,"RawRwLockUpgradeDowngrade"],[8,"RawRwLockUpgradeTimed"]]};
searchIndex["log"]={"doc":"A lightweight logging facade.","items":[[3,"Record","log","The \"payload\" of a log message.",N,N],[3,"RecordBuilder","","Builder for `Record`.",N,N],[3,"Metadata","","Metadata about a log message.",N,N],[3,"MetadataBuilder","","Builder for `Metadata`.",N,N],[3,"SetLoggerError","","The type returned by [`set_logger`] if [`set_logger`] has already been called.",N,N],[3,"ParseLevelError","","The type returned by [`from_str`] when the string doesn't match any of the log levels.",N,N],[4,"Level","","An enum representing the available verbosity levels of the logger.",N,N],[13,"Error","","The \"error\" level.",0,N],[13,"Warn","","The \"warn\" level.",0,N],[13,"Info","","The \"info\" level.",0,N],[13,"Debug","","The \"debug\" level.",0,N],[13,"Trace","","The \"trace\" level.",0,N],[4,"LevelFilter","","An enum representing the available verbosity level filters of the logger.",N,N],[13,"Off","","A level lower than all log levels.",1,N],[13,"Error","","Corresponds to the `Error` log level.",1,N],[13,"Warn","","Corresponds to the `Warn` log level.",1,N],[13,"Info","","Corresponds to the `Info` log level.",1,N],[13,"Debug","","Corresponds to the `Debug` log level.",1,N],[13,"Trace","","Corresponds to the `Trace` log level.",1,N],[5,"set_max_level","","Sets the global maximum log level.",N,[[["levelfilter"]]]],[5,"max_level","","Returns the current maximum log level.",N,[[],["levelfilter"]]],[5,"set_logger","","Sets the global logger to a `&'static Log`.",N,[[["log"]],["result",["setloggererror"]]]],[5,"logger","","Returns a reference to the logger.",N,[[],["log"]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",N,N],[8,"Log","","A trait encapsulating the operations required of a logger.",N,N],[10,"enabled","","Determines if a log message with the specified metadata would be logged.",2,[[["self"],["metadata"]],["bool"]]],[10,"log","","Logs the `Record`.",2,[[["self"],["record"]]]],[10,"flush","","Flushes any buffered records.",2,[[["self"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N],[11,"clone","","",0,[[["self"]],["level"]]],[11,"eq","","",0,[[["self"],["level"]],["bool"]]],[11,"eq","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["level"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["level"]],["bool"]]],[11,"le","","",0,[[["self"],["level"]],["bool"]]],[11,"gt","","",0,[[["self"],["level"]],["bool"]]],[11,"ge","","",0,[[["self"],["level"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["levelfilter"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"le","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"gt","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"ge","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"cmp","","",0,[[["self"],["level"]],["ordering"]]],[11,"from_str","","",0,[[["str"]],["result",["level"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"max","","Returns the most verbose logging level.",0,[[],["level"]]],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",0,[[["self"]],["levelfilter"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"hash","","",1,N],[11,"clone","","",1,[[["self"]],["levelfilter"]]],[11,"eq","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"eq","","",1,[[["self"],["level"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["levelfilter"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"le","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"gt","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"ge","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["level"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["level"]],["bool"]]],[11,"le","","",1,[[["self"],["level"]],["bool"]]],[11,"gt","","",1,[[["self"],["level"]],["bool"]]],[11,"ge","","",1,[[["self"],["level"]],["bool"]]],[11,"cmp","","",1,[[["self"],["levelfilter"]],["ordering"]]],[11,"from_str","","",1,[[["str"]],["result",["levelfilter"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter"]]],[11,"to_level","","Converts `self` to the equivalent `Level`.",1,[[["self"]],["option",["level"]]]],[11,"clone","","",3,[[["self"]],["record"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"builder","","Returns a new builder.",3,[[],["recordbuilder"]]],[11,"args","","The message body.",3,[[["self"]],["arguments"]]],[11,"metadata","","Metadata about the log directive.",3,[[["self"]],["metadata"]]],[11,"level","","The verbosity level of the message.",3,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",3,[[["self"]],["str"]]],[11,"module_path","","The module path of the message.",3,[[["self"]],["option",["str"]]]],[11,"file","","The source file containing the message.",3,[[["self"]],["option",["str"]]]],[11,"line","","The line containing the message.",3,[[["self"]],["option",["u32"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct new `RecordBuilder`.",4,[[],["recordbuilder"]]],[11,"args","","Set `args`.",4,[[["self"],["arguments"]],["recordbuilder"]]],[11,"metadata","","Set `metadata`. Construct a `Metadata` object with `MetadataBuilder`.",4,[[["self"],["metadata"]],["recordbuilder"]]],[11,"level","","Set `Metadata::level`.",4,[[["self"],["level"]],["recordbuilder"]]],[11,"target","","Set `Metadata::target`",4,[[["self"],["str"]],["recordbuilder"]]],[11,"module_path","","Set `module_path`",4,[[["self"],["option",["str"]]],["recordbuilder"]]],[11,"file","","Set `file`",4,[[["self"],["option",["str"]]],["recordbuilder"]]],[11,"line","","Set `line`",4,[[["self"],["option",["u32"]]],["recordbuilder"]]],[11,"build","","Invoke the builder and return a `Record`",4,[[["self"]],["record"]]],[11,"clone","","",5,[[["self"]],["metadata"]]],[11,"eq","","",5,[[["self"],["metadata"]],["bool"]]],[11,"ne","","",5,[[["self"],["metadata"]],["bool"]]],[11,"cmp","","",5,[[["self"],["metadata"]],["ordering"]]],[11,"partial_cmp","","",5,[[["self"],["metadata"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["metadata"]],["bool"]]],[11,"le","","",5,[[["self"],["metadata"]],["bool"]]],[11,"gt","","",5,[[["self"],["metadata"]],["bool"]]],[11,"ge","","",5,[[["self"],["metadata"]],["bool"]]],[11,"hash","","",5,N],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"builder","","Returns a new builder.",5,[[],["metadatabuilder"]]],[11,"level","","The verbosity level of the message.",5,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",5,[[["self"]],["str"]]],[11,"eq","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"ne","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"cmp","","",6,[[["self"],["metadatabuilder"]],["ordering"]]],[11,"partial_cmp","","",6,[[["self"],["metadatabuilder"]],["option",["ordering"]]]],[11,"lt","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"le","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"gt","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"ge","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"hash","","",6,N],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new `MetadataBuilder`.",6,[[],["metadatabuilder"]]],[11,"level","","Setter for `level`.",6,[[["self"],["level"]],["metadatabuilder"]]],[11,"target","","Setter for `target`.",6,[[["self"],["str"]],["metadatabuilder"]]],[11,"build","","Returns a `Metadata` object.",6,[[["self"]],["metadata"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"eq","","",8,[[["self"],["parselevelerror"]],["bool"]]],[11,"ne","","",8,[[["self"],["parselevelerror"]],["bool"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[14,"log","","The standard logging macro.",N,N],[14,"error","","Logs a message at the error level.",N,N],[14,"warn","","Logs a message at the warn level.",N,N],[14,"info","","Logs a message at the info level.",N,N],[14,"debug","","Logs a message at the debug level.",N,N],[14,"trace","","Logs a message at the trace level.",N,N],[14,"log_enabled","","Determines if a message logged at the specified level in that module will be logged.",N,N]],"paths":[[4,"Level"],[4,"LevelFilter"],[8,"Log"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"]]};
searchIndex["lzw"]={"doc":"LZW decoder and encoder","items":[[3,"Decoder","lzw","Decoder for a LZW compressed stream (this algorithm is used for GIF files).",N,N],[3,"DecoderEarlyChange","","Decoder for a LZW compressed stream using an “early change” algorithm (used in TIFF files).",N,N],[3,"Encoder","","LZW encoder using the algorithm of GIF files.",N,N],[3,"LsbReader","","Reads bits from a byte stream, LSB first.",N,N],[3,"LsbWriter","","Writes bits to a byte stream, LSB first.",N,N],[3,"MsbReader","","Reads bits from a byte stream, MSB first.",N,N],[3,"MsbWriter","","Writes bits to a byte stream, MSB first.",N,N],[4,"Bits","","Containes either the consumed bytes and reconstructed bits or only the consumed bytes if the supplied buffer was not bit enough",N,N],[13,"Some","","Consumed bytes, reconstructed bits",0,N],[13,"None","","Consumed bytes",0,N],[5,"encode","","Convenience function that reads and compresses all bytes from `R`.",N,[[["r"],["w"],["u8"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new LZW decoder. ",1,[[["r"],["u8"]],["decoder"]]],[11,"decode_bytes","","Tries to obtain and decode a code word from `bytes`.",1,N],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new LZW decoder. ",2,[[["r"],["u8"]],["decoderearlychange"]]],[11,"decode_bytes","","Tries to obtain and decode a code word from `bytes`.",2,N],[11,"new","","Creates a new LZW encoder.",3,[[["w"],["u8"]],["result",["encoder"]]]],[11,"encode_bytes","","Compresses `bytes` and writes the result into the writer.",3,N],[11,"drop","","",3,[[["self"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new bit reader",4,[[],["lsbreader"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new bit reader",5,[[],["msbreader"]]],[11,"read_bits","","",4,N],[11,"read_bits","","",5,N],[11,"new","","Creates a new bit reader",6,[[["w"]],["lsbwriter"]]],[11,"write","","",6,N],[11,"flush","","",6,[[["self"]],["result"]]],[11,"new","","Creates a new bit reader",7,[[["w"]],["msbwriter"]]],[11,"write","","",7,N],[11,"flush","","",7,[[["self"]],["result"]]],[11,"write_bits","","",6,[[["self"],["u16"],["u8"]],["result"]]],[11,"write_bits","","",7,[[["self"],["u16"],["u8"]],["result"]]],[8,"BitReader","","A bit reader.",N,N],[10,"read_bits","","Returns the next `n` bits.",8,N],[8,"BitWriter","","A bit writer.",N,N],[10,"write_bits","","Writes the next `n` bits.",9,[[["self"],["u16"],["u8"]],["result"]]]],"paths":[[4,"Bits"],[3,"Decoder"],[3,"DecoderEarlyChange"],[3,"Encoder"],[3,"LsbReader"],[3,"MsbReader"],[3,"LsbWriter"],[3,"MsbWriter"],[8,"BitReader"],[8,"BitWriter"]]};
searchIndex["memmap"]={"doc":"A cross-platform Rust API for memory mapped buffers.","items":[[3,"MmapOptions","memmap","A memory map builder, providing advanced options and flags for specifying memory map behavior.",N,N],[3,"Mmap","","An immutable memory mapped buffer.",N,N],[3,"MmapMut","","A mutable memory mapped buffer.",N,N],[11,"clone","","",0,[[["self"]],["mmapoptions"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"default","","",0,[[],["mmapoptions"]]],[11,"new","","Creates a new set of options for configuring and creating a memory map.",0,[[],["mmapoptions"]]],[11,"offset","","Configures the memory map to start at byte `offset` from the beginning of the file.",0,[[["self"],["usize"]],["self"]]],[11,"len","","Configures the created memory mapped buffer to be `len` bytes long.",0,[[["self"],["usize"]],["self"]]],[11,"stack","","Configures the anonymous memory map to be suitable for a process or thread stack.",0,[[["self"]],["self"]]],[11,"map","","Creates a read-only memory map backed by a file.",0,[[["self"],["file"]],["result",["mmap"]]]],[11,"map_exec","","Creates a readable and executable memory map backed by a file.",0,[[["self"],["file"]],["result",["mmap"]]]],[11,"map_mut","","Creates a writeable memory map backed by a file.",0,[[["self"],["file"]],["result",["mmapmut"]]]],[11,"map_copy","","Creates a copy-on-write memory map backed by a file.",0,[[["self"],["file"]],["result",["mmapmut"]]]],[11,"map_anon","","Creates an anonymous memory map.",0,[[["self"]],["result",["mmapmut"]]]],[11,"map","","Creates a read-only memory map backed by a file.",1,[[["file"]],["result",["mmap"]]]],[11,"make_mut","","Transition the memory map to be writable.",1,[[["self"]],["result",["mmapmut"]]]],[11,"deref","","",1,N],[11,"as_ref","","",1,N],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"map_mut","","Creates a writeable memory map backed by a file.",2,[[["file"]],["result",["mmapmut"]]]],[11,"map_anon","","Creates an anonymous memory map.",2,[[["usize"]],["result",["mmapmut"]]]],[11,"flush","","Flushes outstanding memory map modifications to disk.",2,[[["self"]],["result"]]],[11,"flush_async","","Asynchronously flushes outstanding memory map modifications to disk.",2,[[["self"]],["result"]]],[11,"flush_range","","Flushes outstanding memory map modifications in the range to disk.",2,[[["self"],["usize"],["usize"]],["result"]]],[11,"flush_async_range","","Asynchronously flushes outstanding memory map modifications in the range to disk.",2,[[["self"],["usize"],["usize"]],["result"]]],[11,"make_read_only","","Returns an immutable version of this memory mapped buffer.",2,[[["self"]],["result",["mmap"]]]],[11,"make_exec","","Transition the memory map to be readable and executable.",2,[[["self"]],["result",["mmap"]]]],[11,"deref","","",2,N],[11,"deref_mut","","",2,N],[11,"as_ref","","",2,N],[11,"as_mut","","",2,N],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]]],"paths":[[3,"MmapOptions"],[3,"Mmap"],[3,"MmapMut"]]};
searchIndex["memoffset"]={"doc":"A crate used for calculating offsets of struct members and their spans.","items":[[14,"offset_of","memoffset","Calculates the offset of the specified field from the start of the struct. This macro supports arbitrary amount of subscripts and recursive member-accesses.",N,N],[14,"span_of","","Produces a range instance representing the sub-slice containing the specified member.",N,N]],"paths":[]};
searchIndex["nix"]={"doc":"Rust friendly bindings to the various *nix system functions.","items":[[4,"Error","nix","Nix Error Type",N,N],[13,"Sys","","",0,N],[13,"InvalidPath","","",0,N],[13,"InvalidUtf8","","The operation involved a conversion to Rust's native String type, which failed because the string did not contain all valid UTF-8.",0,N],[13,"UnsupportedOperation","","The operation is not supported by Nix, in this instance either use the libc bindings or consult the module documentation to see if there is a more appropriate interface available.",0,N],[0,"errno","","",N,N],[4,"Errno","nix::errno","",N,N],[13,"UnknownErrno","","",1,N],[13,"EPERM","","",1,N],[13,"ENOENT","","",1,N],[13,"ESRCH","","",1,N],[13,"EINTR","","",1,N],[13,"EIO","","",1,N],[13,"ENXIO","","",1,N],[13,"E2BIG","","",1,N],[13,"ENOEXEC","","",1,N],[13,"EBADF","","",1,N],[13,"ECHILD","","",1,N],[13,"EAGAIN","","",1,N],[13,"ENOMEM","","",1,N],[13,"EACCES","","",1,N],[13,"EFAULT","","",1,N],[13,"ENOTBLK","","",1,N],[13,"EBUSY","","",1,N],[13,"EEXIST","","",1,N],[13,"EXDEV","","",1,N],[13,"ENODEV","","",1,N],[13,"ENOTDIR","","",1,N],[13,"EISDIR","","",1,N],[13,"EINVAL","","",1,N],[13,"ENFILE","","",1,N],[13,"EMFILE","","",1,N],[13,"ENOTTY","","",1,N],[13,"ETXTBSY","","",1,N],[13,"EFBIG","","",1,N],[13,"ENOSPC","","",1,N],[13,"ESPIPE","","",1,N],[13,"EROFS","","",1,N],[13,"EMLINK","","",1,N],[13,"EPIPE","","",1,N],[13,"EDOM","","",1,N],[13,"ERANGE","","",1,N],[13,"EDEADLK","","",1,N],[13,"ENAMETOOLONG","","",1,N],[13,"ENOLCK","","",1,N],[13,"ENOSYS","","",1,N],[13,"ENOTEMPTY","","",1,N],[13,"ELOOP","","",1,N],[13,"ENOMSG","","",1,N],[13,"EIDRM","","",1,N],[13,"ECHRNG","","",1,N],[13,"EL2NSYNC","","",1,N],[13,"EL3HLT","","",1,N],[13,"EL3RST","","",1,N],[13,"ELNRNG","","",1,N],[13,"EUNATCH","","",1,N],[13,"ENOCSI","","",1,N],[13,"EL2HLT","","",1,N],[13,"EBADE","","",1,N],[13,"EBADR","","",1,N],[13,"EXFULL","","",1,N],[13,"ENOANO","","",1,N],[13,"EBADRQC","","",1,N],[13,"EBADSLT","","",1,N],[13,"EBFONT","","",1,N],[13,"ENOSTR","","",1,N],[13,"ENODATA","","",1,N],[13,"ETIME","","",1,N],[13,"ENOSR","","",1,N],[13,"ENONET","","",1,N],[13,"ENOPKG","","",1,N],[13,"EREMOTE","","",1,N],[13,"ENOLINK","","",1,N],[13,"EADV","","",1,N],[13,"ESRMNT","","",1,N],[13,"ECOMM","","",1,N],[13,"EPROTO","","",1,N],[13,"EMULTIHOP","","",1,N],[13,"EDOTDOT","","",1,N],[13,"EBADMSG","","",1,N],[13,"EOVERFLOW","","",1,N],[13,"ENOTUNIQ","","",1,N],[13,"EBADFD","","",1,N],[13,"EREMCHG","","",1,N],[13,"ELIBACC","","",1,N],[13,"ELIBBAD","","",1,N],[13,"ELIBSCN","","",1,N],[13,"ELIBMAX","","",1,N],[13,"ELIBEXEC","","",1,N],[13,"EILSEQ","","",1,N],[13,"ERESTART","","",1,N],[13,"ESTRPIPE","","",1,N],[13,"EUSERS","","",1,N],[13,"ENOTSOCK","","",1,N],[13,"EDESTADDRREQ","","",1,N],[13,"EMSGSIZE","","",1,N],[13,"EPROTOTYPE","","",1,N],[13,"ENOPROTOOPT","","",1,N],[13,"EPROTONOSUPPORT","","",1,N],[13,"ESOCKTNOSUPPORT","","",1,N],[13,"EOPNOTSUPP","","",1,N],[13,"EPFNOSUPPORT","","",1,N],[13,"EAFNOSUPPORT","","",1,N],[13,"EADDRINUSE","","",1,N],[13,"EADDRNOTAVAIL","","",1,N],[13,"ENETDOWN","","",1,N],[13,"ENETUNREACH","","",1,N],[13,"ENETRESET","","",1,N],[13,"ECONNABORTED","","",1,N],[13,"ECONNRESET","","",1,N],[13,"ENOBUFS","","",1,N],[13,"EISCONN","","",1,N],[13,"ENOTCONN","","",1,N],[13,"ESHUTDOWN","","",1,N],[13,"ETOOMANYREFS","","",1,N],[13,"ETIMEDOUT","","",1,N],[13,"ECONNREFUSED","","",1,N],[13,"EHOSTDOWN","","",1,N],[13,"EHOSTUNREACH","","",1,N],[13,"EALREADY","","",1,N],[13,"EINPROGRESS","","",1,N],[13,"ESTALE","","",1,N],[13,"EUCLEAN","","",1,N],[13,"ENOTNAM","","",1,N],[13,"ENAVAIL","","",1,N],[13,"EISNAM","","",1,N],[13,"EREMOTEIO","","",1,N],[13,"EDQUOT","","",1,N],[13,"ENOMEDIUM","","",1,N],[13,"EMEDIUMTYPE","","",1,N],[13,"ECANCELED","","",1,N],[13,"ENOKEY","","",1,N],[13,"EKEYEXPIRED","","",1,N],[13,"EKEYREVOKED","","",1,N],[13,"EKEYREJECTED","","",1,N],[13,"EOWNERDEAD","","",1,N],[13,"ENOTRECOVERABLE","","",1,N],[13,"ERFKILL","","",1,N],[13,"EHWPOISON","","",1,N],[5,"from_i32","","",N,[[["i32"]],["errno"]]],[5,"errno","","Returns the platform-specific value of errno",N,[[],["i32"]]],[11,"clone","","",1,[[["self"]],["errno"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",1,[[["self"],["errno"]],["bool"]]],[17,"EWOULDBLOCK","","",N,N],[17,"EDEADLOCK","","",N,N],[8,"ErrnoSentinel","","The sentinel value indicates that a function failed and more detailed information about the error can be found in `errno`",N,N],[10,"sentinel","","",2,[[],["self"]]],[11,"last","","",1,[[],["self"]]],[11,"desc","","",1,[[["self"]],["str"]]],[11,"from_i32","","",1,[[["i32"]],["errno"]]],[11,"clear","","",1,N],[11,"result","","Returns `Ok(value)` if it does not contain the sentinel value. This should not be used when `-1` is not the errno sentinel value.",1,[[["s"]],["result"]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[0,"features","nix","Feature tests for OS functionality",N,N],[5,"socket_atomic_cloexec","nix::features","Check if the OS supports atomic close-on-exec for sockets",N,[[],["bool"]]],[0,"fcntl","nix","",N,N],[3,"AtFlags","nix::fcntl","",N,N],[3,"OFlag","","Configuration options for opened files.",N,N],[3,"SealFlag","","Additional flags for file sealing, which allows for limiting operations on a file.",N,N],[3,"FdFlag","","Additional configuration flags for `fcntl`'s `F_SETFD`.",N,N],[3,"SpliceFFlags","","Additional flags to `splice` and friends.",N,N],[3,"FallocateFlags","","Mode argument flags for fallocate determining operation performed on a given range.",N,N],[4,"FcntlArg","","",N,N],[13,"F_DUPFD","","",3,N],[13,"F_DUPFD_CLOEXEC","","",3,N],[13,"F_GETFD","","",3,N],[13,"F_SETFD","","",3,N],[13,"F_GETFL","","",3,N],[13,"F_SETFL","","",3,N],[13,"F_SETLK","","",3,N],[13,"F_SETLKW","","",3,N],[13,"F_GETLK","","",3,N],[13,"F_OFD_SETLK","","",3,N],[13,"F_OFD_SETLKW","","",3,N],[13,"F_OFD_GETLK","","",3,N],[13,"F_ADD_SEALS","","",3,N],[13,"F_GET_SEALS","","",3,N],[13,"F_GETPIPE_SZ","","",3,N],[13,"F_SETPIPE_SZ","","",3,N],[4,"FlockArg","","",N,N],[13,"LockShared","","",4,N],[13,"LockExclusive","","",4,N],[13,"Unlock","","",4,N],[13,"LockSharedNonblock","","",4,N],[13,"LockExclusiveNonblock","","",4,N],[13,"UnlockNonblock","","",4,N],[5,"open","","",N,[[["p"],["oflag"],["mode"]],["result",["rawfd"]]]],[5,"openat","","",N,[[["rawfd"],["p"],["oflag"],["mode"]],["result",["rawfd"]]]],[5,"readlink","","",N,N],[5,"readlinkat","","",N,N],[5,"fcntl","","",N,[[["rawfd"],["fcntlarg"]],["result",["c_int"]]]],[5,"flock","","",N,[[["rawfd"],["flockarg"]],["result"]]],[5,"splice","","",N,[[["rawfd"],["option",["loff_t"]],["rawfd"],["option",["loff_t"]],["usize"],["splicefflags"]],["result",["usize"]]]],[5,"tee","","",N,[[["rawfd"],["rawfd"],["usize"],["splicefflags"]],["result",["usize"]]]],[5,"vmsplice","","",N,N],[5,"fallocate","","Manipulates file space.",N,[[["rawfd"],["fallocateflags"],["off_t"],["off_t"]],["result",["c_int"]]]],[11,"eq","","",5,[[["self"],["atflags"]],["bool"]]],[11,"ne","","",5,[[["self"],["atflags"]],["bool"]]],[11,"clone","","",5,[[["self"]],["atflags"]]],[11,"partial_cmp","","",5,[[["self"],["atflags"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["atflags"]],["bool"]]],[11,"le","","",5,[[["self"],["atflags"]],["bool"]]],[11,"gt","","",5,[[["self"],["atflags"]],["bool"]]],[11,"ge","","",5,[[["self"],["atflags"]],["bool"]]],[11,"cmp","","",5,[[["self"],["atflags"]],["ordering"]]],[11,"hash","","",5,N],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[18,"AT_SYMLINK_NOFOLLOW","","",5,N],[18,"AT_NO_AUTOMOUNT","","",5,N],[18,"AT_EMPTY_PATH","","",5,N],[11,"empty","","Returns an empty set of flags.",5,[[],["atflags"]]],[11,"all","","Returns the set containing all flags.",5,[[],["atflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",5,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",5,[[["c_int"]],["option",["atflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",5,[[["c_int"]],["atflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",5,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",5,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",5,[[["self"],["atflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",5,[[["self"],["atflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",5,[[["self"],["atflags"]]]],[11,"remove","","Removes the specified flags in-place.",5,[[["self"],["atflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",5,[[["self"],["atflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",5,[[["self"],["atflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",5,[[["self"],["atflags"]],["atflags"]]],[11,"bitor_assign","","Adds the set of flags.",5,[[["self"],["atflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",5,[[["self"],["atflags"]],["atflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",5,[[["self"],["atflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",5,[[["self"],["atflags"]],["atflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",5,[[["self"],["atflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",5,[[["self"],["atflags"]],["atflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",5,[[["self"],["atflags"]]]],[11,"not","","Returns the complement of this set of flags.",5,[[["self"]],["atflags"]]],[11,"extend","","",5,[[["self"],["t"]]]],[11,"from_iter","","",5,[[["t"]],["atflags"]]],[11,"eq","","",6,[[["self"],["oflag"]],["bool"]]],[11,"ne","","",6,[[["self"],["oflag"]],["bool"]]],[11,"clone","","",6,[[["self"]],["oflag"]]],[11,"partial_cmp","","",6,[[["self"],["oflag"]],["option",["ordering"]]]],[11,"lt","","",6,[[["self"],["oflag"]],["bool"]]],[11,"le","","",6,[[["self"],["oflag"]],["bool"]]],[11,"gt","","",6,[[["self"],["oflag"]],["bool"]]],[11,"ge","","",6,[[["self"],["oflag"]],["bool"]]],[11,"cmp","","",6,[[["self"],["oflag"]],["ordering"]]],[11,"hash","","",6,N],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[18,"O_ACCMODE","","Mask for the access mode of the file.",6,N],[18,"O_APPEND","","Open the file in append-only mode.",6,N],[18,"O_ASYNC","","Generate a signal when input or output becomes possible.",6,N],[18,"O_CLOEXEC","","Closes the file descriptor once an `execve` call is made.",6,N],[18,"O_CREAT","","Create the file if it does not exist.",6,N],[18,"O_DIRECT","","Try to minimize cache effects of the I/O for this file.",6,N],[18,"O_DIRECTORY","","If the specified path isn't a directory, fail.",6,N],[18,"O_DSYNC","","Implicitly follow each `write()` with an `fdatasync()`.",6,N],[18,"O_EXCL","","Error out if a file was not created.",6,N],[18,"O_FSYNC","","Same as `O_SYNC`.",6,N],[18,"O_LARGEFILE","","Allow files whose sizes can't be represented in an `off_t` to be opened.",6,N],[18,"O_NOATIME","","Do not update the file last access time during `read(2)`s.",6,N],[18,"O_NOCTTY","","Don't attach the device as the process' controlling terminal.",6,N],[18,"O_NDELAY","","Same as `O_NONBLOCK`.",6,N],[18,"O_NOFOLLOW","","`open()` will fail if the given path is a symbolic link.",6,N],[18,"O_NONBLOCK","","When possible, open the file in nonblocking mode.",6,N],[18,"O_PATH","","Obtain a file descriptor for low-level access.",6,N],[18,"O_RDONLY","","Only allow reading.",6,N],[18,"O_RDWR","","Allow both reading and writing.",6,N],[18,"O_RSYNC","","Similar to `O_DSYNC` but applies to `read`s instead.",6,N],[18,"O_SYNC","","Implicitly follow each `write()` with an `fsync()`.",6,N],[18,"O_TMPFILE","","Create an unnamed temporary file.",6,N],[18,"O_TRUNC","","Truncate an existing regular file to 0 length if it allows writing.",6,N],[18,"O_WRONLY","","Only allow writing.",6,N],[11,"empty","","Returns an empty set of flags.",6,[[],["oflag"]]],[11,"all","","Returns the set containing all flags.",6,[[],["oflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",6,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",6,[[["c_int"]],["option",["oflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",6,[[["c_int"]],["oflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",6,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",6,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",6,[[["self"],["oflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",6,[[["self"],["oflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",6,[[["self"],["oflag"]]]],[11,"remove","","Removes the specified flags in-place.",6,[[["self"],["oflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",6,[[["self"],["oflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",6,[[["self"],["oflag"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",6,[[["self"],["oflag"]],["oflag"]]],[11,"bitor_assign","","Adds the set of flags.",6,[[["self"],["oflag"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",6,[[["self"],["oflag"]],["oflag"]]],[11,"bitxor_assign","","Toggles the set of flags.",6,[[["self"],["oflag"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",6,[[["self"],["oflag"]],["oflag"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",6,[[["self"],["oflag"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",6,[[["self"],["oflag"]],["oflag"]]],[11,"sub_assign","","Disables all flags enabled in the set.",6,[[["self"],["oflag"]]]],[11,"not","","Returns the complement of this set of flags.",6,[[["self"]],["oflag"]]],[11,"extend","","",6,[[["self"],["t"]]]],[11,"from_iter","","",6,[[["t"]],["oflag"]]],[11,"eq","","",7,[[["self"],["sealflag"]],["bool"]]],[11,"ne","","",7,[[["self"],["sealflag"]],["bool"]]],[11,"clone","","",7,[[["self"]],["sealflag"]]],[11,"partial_cmp","","",7,[[["self"],["sealflag"]],["option",["ordering"]]]],[11,"lt","","",7,[[["self"],["sealflag"]],["bool"]]],[11,"le","","",7,[[["self"],["sealflag"]],["bool"]]],[11,"gt","","",7,[[["self"],["sealflag"]],["bool"]]],[11,"ge","","",7,[[["self"],["sealflag"]],["bool"]]],[11,"cmp","","",7,[[["self"],["sealflag"]],["ordering"]]],[11,"hash","","",7,N],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[18,"F_SEAL_SEAL","","Prevents further calls to `fcntl()` with `F_ADD_SEALS`.",7,N],[18,"F_SEAL_SHRINK","","The file cannot be reduced in size.",7,N],[18,"F_SEAL_GROW","","The size of the file cannot be increased.",7,N],[18,"F_SEAL_WRITE","","The file contents cannot be modified.",7,N],[11,"empty","","Returns an empty set of flags.",7,[[],["sealflag"]]],[11,"all","","Returns the set containing all flags.",7,[[],["sealflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",7,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",7,[[["c_int"]],["option",["sealflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",7,[[["c_int"]],["sealflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",7,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",7,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",7,[[["self"],["sealflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",7,[[["self"],["sealflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",7,[[["self"],["sealflag"]]]],[11,"remove","","Removes the specified flags in-place.",7,[[["self"],["sealflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",7,[[["self"],["sealflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",7,[[["self"],["sealflag"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",7,[[["self"],["sealflag"]],["sealflag"]]],[11,"bitor_assign","","Adds the set of flags.",7,[[["self"],["sealflag"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",7,[[["self"],["sealflag"]],["sealflag"]]],[11,"bitxor_assign","","Toggles the set of flags.",7,[[["self"],["sealflag"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",7,[[["self"],["sealflag"]],["sealflag"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",7,[[["self"],["sealflag"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",7,[[["self"],["sealflag"]],["sealflag"]]],[11,"sub_assign","","Disables all flags enabled in the set.",7,[[["self"],["sealflag"]]]],[11,"not","","Returns the complement of this set of flags.",7,[[["self"]],["sealflag"]]],[11,"extend","","",7,[[["self"],["t"]]]],[11,"from_iter","","",7,[[["t"]],["sealflag"]]],[11,"eq","","",8,[[["self"],["fdflag"]],["bool"]]],[11,"ne","","",8,[[["self"],["fdflag"]],["bool"]]],[11,"clone","","",8,[[["self"]],["fdflag"]]],[11,"partial_cmp","","",8,[[["self"],["fdflag"]],["option",["ordering"]]]],[11,"lt","","",8,[[["self"],["fdflag"]],["bool"]]],[11,"le","","",8,[[["self"],["fdflag"]],["bool"]]],[11,"gt","","",8,[[["self"],["fdflag"]],["bool"]]],[11,"ge","","",8,[[["self"],["fdflag"]],["bool"]]],[11,"cmp","","",8,[[["self"],["fdflag"]],["ordering"]]],[11,"hash","","",8,N],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[18,"FD_CLOEXEC","","The file descriptor will automatically be closed during a successful `execve(2)`.",8,N],[11,"empty","","Returns an empty set of flags.",8,[[],["fdflag"]]],[11,"all","","Returns the set containing all flags.",8,[[],["fdflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",8,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",8,[[["c_int"]],["option",["fdflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",8,[[["c_int"]],["fdflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",8,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",8,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",8,[[["self"],["fdflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",8,[[["self"],["fdflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",8,[[["self"],["fdflag"]]]],[11,"remove","","Removes the specified flags in-place.",8,[[["self"],["fdflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",8,[[["self"],["fdflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",8,[[["self"],["fdflag"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",8,[[["self"],["fdflag"]],["fdflag"]]],[11,"bitor_assign","","Adds the set of flags.",8,[[["self"],["fdflag"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",8,[[["self"],["fdflag"]],["fdflag"]]],[11,"bitxor_assign","","Toggles the set of flags.",8,[[["self"],["fdflag"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",8,[[["self"],["fdflag"]],["fdflag"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",8,[[["self"],["fdflag"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",8,[[["self"],["fdflag"]],["fdflag"]]],[11,"sub_assign","","Disables all flags enabled in the set.",8,[[["self"],["fdflag"]]]],[11,"not","","Returns the complement of this set of flags.",8,[[["self"]],["fdflag"]]],[11,"extend","","",8,[[["self"],["t"]]]],[11,"from_iter","","",8,[[["t"]],["fdflag"]]],[11,"clone","","",4,[[["self"]],["flockarg"]]],[11,"eq","","",9,[[["self"],["splicefflags"]],["bool"]]],[11,"ne","","",9,[[["self"],["splicefflags"]],["bool"]]],[11,"clone","","",9,[[["self"]],["splicefflags"]]],[11,"partial_cmp","","",9,[[["self"],["splicefflags"]],["option",["ordering"]]]],[11,"lt","","",9,[[["self"],["splicefflags"]],["bool"]]],[11,"le","","",9,[[["self"],["splicefflags"]],["bool"]]],[11,"gt","","",9,[[["self"],["splicefflags"]],["bool"]]],[11,"ge","","",9,[[["self"],["splicefflags"]],["bool"]]],[11,"cmp","","",9,[[["self"],["splicefflags"]],["ordering"]]],[11,"hash","","",9,N],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[18,"SPLICE_F_MOVE","","Request that pages be moved instead of copied.",9,N],[18,"SPLICE_F_NONBLOCK","","Do not block on I/O.",9,N],[18,"SPLICE_F_MORE","","Hint that more data will be coming in a subsequent splice.",9,N],[18,"SPLICE_F_GIFT","","Gift the user pages to the kernel.",9,N],[11,"empty","","Returns an empty set of flags.",9,[[],["splicefflags"]]],[11,"all","","Returns the set containing all flags.",9,[[],["splicefflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",9,[[["self"]],["c_uint"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",9,[[["c_uint"]],["option",["splicefflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",9,[[["c_uint"]],["splicefflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",9,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",9,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",9,[[["self"],["splicefflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",9,[[["self"],["splicefflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",9,[[["self"],["splicefflags"]]]],[11,"remove","","Removes the specified flags in-place.",9,[[["self"],["splicefflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",9,[[["self"],["splicefflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",9,[[["self"],["splicefflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",9,[[["self"],["splicefflags"]],["splicefflags"]]],[11,"bitor_assign","","Adds the set of flags.",9,[[["self"],["splicefflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",9,[[["self"],["splicefflags"]],["splicefflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",9,[[["self"],["splicefflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",9,[[["self"],["splicefflags"]],["splicefflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",9,[[["self"],["splicefflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",9,[[["self"],["splicefflags"]],["splicefflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",9,[[["self"],["splicefflags"]]]],[11,"not","","Returns the complement of this set of flags.",9,[[["self"]],["splicefflags"]]],[11,"extend","","",9,[[["self"],["t"]]]],[11,"from_iter","","",9,[[["t"]],["splicefflags"]]],[11,"eq","","",10,[[["self"],["fallocateflags"]],["bool"]]],[11,"ne","","",10,[[["self"],["fallocateflags"]],["bool"]]],[11,"clone","","",10,[[["self"]],["fallocateflags"]]],[11,"partial_cmp","","",10,[[["self"],["fallocateflags"]],["option",["ordering"]]]],[11,"lt","","",10,[[["self"],["fallocateflags"]],["bool"]]],[11,"le","","",10,[[["self"],["fallocateflags"]],["bool"]]],[11,"gt","","",10,[[["self"],["fallocateflags"]],["bool"]]],[11,"ge","","",10,[[["self"],["fallocateflags"]],["bool"]]],[11,"cmp","","",10,[[["self"],["fallocateflags"]],["ordering"]]],[11,"hash","","",10,N],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[18,"FALLOC_FL_KEEP_SIZE","","File size is not changed.",10,N],[18,"FALLOC_FL_PUNCH_HOLE","","Deallocates space by creating a hole.",10,N],[18,"FALLOC_FL_COLLAPSE_RANGE","","Removes byte range from a file without leaving a hole.",10,N],[18,"FALLOC_FL_ZERO_RANGE","","Zeroes space in specified byte range.",10,N],[18,"FALLOC_FL_INSERT_RANGE","","Increases file space by inserting a hole within the file size.",10,N],[18,"FALLOC_FL_UNSHARE_RANGE","","Shared file data extants are made private to the file.",10,N],[11,"empty","","Returns an empty set of flags.",10,[[],["fallocateflags"]]],[11,"all","","Returns the set containing all flags.",10,[[],["fallocateflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",10,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",10,[[["c_int"]],["option",["fallocateflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",10,[[["c_int"]],["fallocateflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",10,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",10,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",10,[[["self"],["fallocateflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",10,[[["self"],["fallocateflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",10,[[["self"],["fallocateflags"]]]],[11,"remove","","Removes the specified flags in-place.",10,[[["self"],["fallocateflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",10,[[["self"],["fallocateflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",10,[[["self"],["fallocateflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",10,[[["self"],["fallocateflags"]],["fallocateflags"]]],[11,"bitor_assign","","Adds the set of flags.",10,[[["self"],["fallocateflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",10,[[["self"],["fallocateflags"]],["fallocateflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",10,[[["self"],["fallocateflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",10,[[["self"],["fallocateflags"]],["fallocateflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",10,[[["self"],["fallocateflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",10,[[["self"],["fallocateflags"]],["fallocateflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",10,[[["self"],["fallocateflags"]]]],[11,"not","","Returns the complement of this set of flags.",10,[[["self"]],["fallocateflags"]]],[11,"extend","","",10,[[["self"],["t"]]]],[11,"from_iter","","",10,[[["t"]],["fallocateflags"]]],[0,"ifaddrs","nix","Query network interface addresses",N,N],[3,"InterfaceAddress","nix::ifaddrs","Describes a single address for an interface as returned by `getifaddrs`.",N,N],[12,"interface_name","","Name of the network interface",11,N],[12,"flags","","Flags as from `SIOCGIFFLAGS` ioctl",11,N],[12,"address","","Network address of this interface",11,N],[12,"netmask","","Netmask of this interface",11,N],[12,"broadcast","","Broadcast address of this interface, if applicable",11,N],[12,"destination","","Point-to-point destination address",11,N],[3,"InterfaceAddressIterator","","Holds the results of `getifaddrs`.",N,N],[5,"getifaddrs","","Get interface addresses using libc's `getifaddrs`",N,[[],["result",["interfaceaddressiterator"]]]],[11,"clone","","",11,[[["self"]],["interfaceaddress"]]],[11,"hash","","",11,N],[11,"eq","","",11,[[["self"],["interfaceaddress"]],["bool"]]],[11,"ne","","",11,[[["self"],["interfaceaddress"]],["bool"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"hash","","",12,N],[11,"eq","","",12,[[["self"],["interfaceaddressiterator"]],["bool"]]],[11,"ne","","",12,[[["self"],["interfaceaddressiterator"]],["bool"]]],[11,"drop","","",12,[[["self"]]]],[11,"next","","",12,[[["self"]],["option"]]],[0,"mount","nix","",N,N],[3,"MsFlags","nix::mount","",N,N],[3,"MntFlags","","",N,N],[5,"mount","","",N,[[["option"],["p2"],["option"],["msflags"],["option"]],["result"]]],[5,"umount","","",N,[[["p"]],["result"]]],[5,"umount2","","",N,[[["p"],["mntflags"]],["result"]]],[11,"eq","","",13,[[["self"],["msflags"]],["bool"]]],[11,"ne","","",13,[[["self"],["msflags"]],["bool"]]],[11,"clone","","",13,[[["self"]],["msflags"]]],[11,"partial_cmp","","",13,[[["self"],["msflags"]],["option",["ordering"]]]],[11,"lt","","",13,[[["self"],["msflags"]],["bool"]]],[11,"le","","",13,[[["self"],["msflags"]],["bool"]]],[11,"gt","","",13,[[["self"],["msflags"]],["bool"]]],[11,"ge","","",13,[[["self"],["msflags"]],["bool"]]],[11,"cmp","","",13,[[["self"],["msflags"]],["ordering"]]],[11,"hash","","",13,N],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[18,"MS_RDONLY","","Mount read-only",13,N],[18,"MS_NOSUID","","Ignore suid and sgid bits",13,N],[18,"MS_NODEV","","Disallow access to device special files",13,N],[18,"MS_NOEXEC","","Disallow program execution",13,N],[18,"MS_SYNCHRONOUS","","Writes are synced at once",13,N],[18,"MS_REMOUNT","","Alter flags of a mounted FS",13,N],[18,"MS_MANDLOCK","","Allow mandatory locks on a FS",13,N],[18,"MS_DIRSYNC","","Directory modifications are synchronous",13,N],[18,"MS_NOATIME","","Do not update access times",13,N],[18,"MS_NODIRATIME","","Do not update directory access times",13,N],[18,"MS_BIND","","Linux 2.4.0 - Bind directory at different place",13,N],[18,"MS_MOVE","","",13,N],[18,"MS_REC","","",13,N],[18,"MS_SILENT","","",13,N],[18,"MS_POSIXACL","","",13,N],[18,"MS_UNBINDABLE","","",13,N],[18,"MS_PRIVATE","","",13,N],[18,"MS_SLAVE","","",13,N],[18,"MS_SHARED","","",13,N],[18,"MS_RELATIME","","",13,N],[18,"MS_KERNMOUNT","","",13,N],[18,"MS_I_VERSION","","",13,N],[18,"MS_STRICTATIME","","",13,N],[18,"MS_ACTIVE","","",13,N],[18,"MS_NOUSER","","",13,N],[18,"MS_RMT_MASK","","",13,N],[18,"MS_MGC_VAL","","",13,N],[18,"MS_MGC_MSK","","",13,N],[11,"empty","","Returns an empty set of flags.",13,[[],["msflags"]]],[11,"all","","Returns the set containing all flags.",13,[[],["msflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",13,[[["self"]],["c_ulong"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",13,[[["c_ulong"]],["option",["msflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",13,[[["c_ulong"]],["msflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",13,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",13,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",13,[[["self"],["msflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",13,[[["self"],["msflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",13,[[["self"],["msflags"]]]],[11,"remove","","Removes the specified flags in-place.",13,[[["self"],["msflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",13,[[["self"],["msflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",13,[[["self"],["msflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",13,[[["self"],["msflags"]],["msflags"]]],[11,"bitor_assign","","Adds the set of flags.",13,[[["self"],["msflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",13,[[["self"],["msflags"]],["msflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",13,[[["self"],["msflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",13,[[["self"],["msflags"]],["msflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",13,[[["self"],["msflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",13,[[["self"],["msflags"]],["msflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",13,[[["self"],["msflags"]]]],[11,"not","","Returns the complement of this set of flags.",13,[[["self"]],["msflags"]]],[11,"extend","","",13,[[["self"],["t"]]]],[11,"from_iter","","",13,[[["t"]],["msflags"]]],[11,"eq","","",14,[[["self"],["mntflags"]],["bool"]]],[11,"ne","","",14,[[["self"],["mntflags"]],["bool"]]],[11,"clone","","",14,[[["self"]],["mntflags"]]],[11,"partial_cmp","","",14,[[["self"],["mntflags"]],["option",["ordering"]]]],[11,"lt","","",14,[[["self"],["mntflags"]],["bool"]]],[11,"le","","",14,[[["self"],["mntflags"]],["bool"]]],[11,"gt","","",14,[[["self"],["mntflags"]],["bool"]]],[11,"ge","","",14,[[["self"],["mntflags"]],["bool"]]],[11,"cmp","","",14,[[["self"],["mntflags"]],["ordering"]]],[11,"hash","","",14,N],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[18,"MNT_FORCE","","",14,N],[18,"MNT_DETACH","","",14,N],[18,"MNT_EXPIRE","","",14,N],[11,"empty","","Returns an empty set of flags.",14,[[],["mntflags"]]],[11,"all","","Returns the set containing all flags.",14,[[],["mntflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",14,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",14,[[["c_int"]],["option",["mntflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",14,[[["c_int"]],["mntflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",14,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",14,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",14,[[["self"],["mntflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",14,[[["self"],["mntflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",14,[[["self"],["mntflags"]]]],[11,"remove","","Removes the specified flags in-place.",14,[[["self"],["mntflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",14,[[["self"],["mntflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",14,[[["self"],["mntflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",14,[[["self"],["mntflags"]],["mntflags"]]],[11,"bitor_assign","","Adds the set of flags.",14,[[["self"],["mntflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",14,[[["self"],["mntflags"]],["mntflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",14,[[["self"],["mntflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",14,[[["self"],["mntflags"]],["mntflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",14,[[["self"],["mntflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",14,[[["self"],["mntflags"]],["mntflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",14,[[["self"],["mntflags"]]]],[11,"not","","Returns the complement of this set of flags.",14,[[["self"]],["mntflags"]]],[11,"extend","","",14,[[["self"],["t"]]]],[11,"from_iter","","",14,[[["t"]],["mntflags"]]],[0,"mqueue","nix","Posix Message Queue functions",N,N],[3,"MQ_OFlag","nix::mqueue","",N,N],[3,"FdFlag","","",N,N],[3,"MqAttr","","",N,N],[5,"mq_open","","Open a message queue",N,[[["cstring"],["mq_oflag"],["mode"],["option",["mqattr"]]],["result",["mqd_t"]]]],[5,"mq_unlink","","Remove a message queue",N,[[["cstring"]],["result"]]],[5,"mq_close","","Close a message queue",N,[[["mqd_t"]],["result"]]],[5,"mq_receive","","Receive a message from a message queue",N,N],[5,"mq_send","","Send a message to a message queue",N,N],[5,"mq_getattr","","Get message queue attributes",N,[[["mqd_t"]],["result",["mqattr"]]]],[5,"mq_setattr","","Set the attributes of the message queue. Only `O_NONBLOCK` can be set, everything else will be ignored Returns the old attributes It is recommend to use the `mq_set_nonblock()` and `mq_remove_nonblock()` convenience functions as they are easier to use",N,[[["mqd_t"],["mqattr"]],["result",["mqattr"]]]],[5,"mq_set_nonblock","","Convenience function. Sets the `O_NONBLOCK` attribute for a given message queue descriptor Returns the old attributes",N,[[["mqd_t"]],["result",["mqattr"]]]],[5,"mq_remove_nonblock","","Convenience function. Removes `O_NONBLOCK` attribute for a given message queue descriptor Returns the old attributes",N,[[["mqd_t"]],["result",["mqattr"]]]],[11,"eq","","",15,[[["self"],["mq_oflag"]],["bool"]]],[11,"ne","","",15,[[["self"],["mq_oflag"]],["bool"]]],[11,"clone","","",15,[[["self"]],["mq_oflag"]]],[11,"partial_cmp","","",15,[[["self"],["mq_oflag"]],["option",["ordering"]]]],[11,"lt","","",15,[[["self"],["mq_oflag"]],["bool"]]],[11,"le","","",15,[[["self"],["mq_oflag"]],["bool"]]],[11,"gt","","",15,[[["self"],["mq_oflag"]],["bool"]]],[11,"ge","","",15,[[["self"],["mq_oflag"]],["bool"]]],[11,"cmp","","",15,[[["self"],["mq_oflag"]],["ordering"]]],[11,"hash","","",15,N],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[18,"O_RDONLY","","",15,N],[18,"O_WRONLY","","",15,N],[18,"O_RDWR","","",15,N],[18,"O_CREAT","","",15,N],[18,"O_EXCL","","",15,N],[18,"O_NONBLOCK","","",15,N],[18,"O_CLOEXEC","","",15,N],[11,"empty","","Returns an empty set of flags.",15,[[],["mq_oflag"]]],[11,"all","","Returns the set containing all flags.",15,[[],["mq_oflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",15,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",15,[[["c_int"]],["option",["mq_oflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",15,[[["c_int"]],["mq_oflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",15,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",15,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",15,[[["self"],["mq_oflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",15,[[["self"],["mq_oflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",15,[[["self"],["mq_oflag"]]]],[11,"remove","","Removes the specified flags in-place.",15,[[["self"],["mq_oflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",15,[[["self"],["mq_oflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",15,[[["self"],["mq_oflag"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",15,[[["self"],["mq_oflag"]],["mq_oflag"]]],[11,"bitor_assign","","Adds the set of flags.",15,[[["self"],["mq_oflag"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",15,[[["self"],["mq_oflag"]],["mq_oflag"]]],[11,"bitxor_assign","","Toggles the set of flags.",15,[[["self"],["mq_oflag"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",15,[[["self"],["mq_oflag"]],["mq_oflag"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",15,[[["self"],["mq_oflag"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",15,[[["self"],["mq_oflag"]],["mq_oflag"]]],[11,"sub_assign","","Disables all flags enabled in the set.",15,[[["self"],["mq_oflag"]]]],[11,"not","","Returns the complement of this set of flags.",15,[[["self"]],["mq_oflag"]]],[11,"extend","","",15,[[["self"],["t"]]]],[11,"from_iter","","",15,[[["t"]],["mq_oflag"]]],[11,"eq","","",16,[[["self"],["fdflag"]],["bool"]]],[11,"ne","","",16,[[["self"],["fdflag"]],["bool"]]],[11,"clone","","",16,[[["self"]],["fdflag"]]],[11,"partial_cmp","","",16,[[["self"],["fdflag"]],["option",["ordering"]]]],[11,"lt","","",16,[[["self"],["fdflag"]],["bool"]]],[11,"le","","",16,[[["self"],["fdflag"]],["bool"]]],[11,"gt","","",16,[[["self"],["fdflag"]],["bool"]]],[11,"ge","","",16,[[["self"],["fdflag"]],["bool"]]],[11,"cmp","","",16,[[["self"],["fdflag"]],["ordering"]]],[11,"hash","","",16,N],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[18,"FD_CLOEXEC","","",16,N],[11,"empty","","Returns an empty set of flags.",16,[[],["fdflag"]]],[11,"all","","Returns the set containing all flags.",16,[[],["fdflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",16,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",16,[[["c_int"]],["option",["fdflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",16,[[["c_int"]],["fdflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",16,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",16,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",16,[[["self"],["fdflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",16,[[["self"],["fdflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",16,[[["self"],["fdflag"]]]],[11,"remove","","Removes the specified flags in-place.",16,[[["self"],["fdflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",16,[[["self"],["fdflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",16,[[["self"],["fdflag"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",16,[[["self"],["fdflag"]],["fdflag"]]],[11,"bitor_assign","","Adds the set of flags.",16,[[["self"],["fdflag"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",16,[[["self"],["fdflag"]],["fdflag"]]],[11,"bitxor_assign","","Toggles the set of flags.",16,[[["self"],["fdflag"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",16,[[["self"],["fdflag"]],["fdflag"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",16,[[["self"],["fdflag"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",16,[[["self"],["fdflag"]],["fdflag"]]],[11,"sub_assign","","Disables all flags enabled in the set.",16,[[["self"],["fdflag"]]]],[11,"not","","Returns the complement of this set of flags.",16,[[["self"]],["fdflag"]]],[11,"extend","","",16,[[["self"],["t"]]]],[11,"from_iter","","",16,[[["t"]],["fdflag"]]],[11,"clone","","",17,[[["self"]],["mqattr"]]],[11,"eq","","",17,[[["self"],["mqattr"]],["bool"]]],[11,"new","","",17,[[["c_long"],["c_long"],["c_long"],["c_long"]],["mqattr"]]],[11,"flags","","",17,[[["self"]],["c_long"]]],[0,"net","nix","Functionality involving network interfaces",N,N],[0,"if_","nix::net","Network interface name resolution.",N,N],[3,"InterfaceFlags","nix::net::if_","Standard interface flags, used by `getifaddrs`",N,N],[5,"if_nametoindex","","Resolve an interface into a interface number.",N,[[["p"]],["result",["c_uint"]]]],[11,"eq","","",18,[[["self"],["interfaceflags"]],["bool"]]],[11,"ne","","",18,[[["self"],["interfaceflags"]],["bool"]]],[11,"clone","","",18,[[["self"]],["interfaceflags"]]],[11,"partial_cmp","","",18,[[["self"],["interfaceflags"]],["option",["ordering"]]]],[11,"lt","","",18,[[["self"],["interfaceflags"]],["bool"]]],[11,"le","","",18,[[["self"],["interfaceflags"]],["bool"]]],[11,"gt","","",18,[[["self"],["interfaceflags"]],["bool"]]],[11,"ge","","",18,[[["self"],["interfaceflags"]],["bool"]]],[11,"cmp","","",18,[[["self"],["interfaceflags"]],["ordering"]]],[11,"hash","","",18,N],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[18,"IFF_UP","","Interface is running. (see `netdevice(7)`)",18,N],[18,"IFF_BROADCAST","","Valid broadcast address set. (see `netdevice(7)`)",18,N],[18,"IFF_DEBUG","","Internal debugging flag. (see `netdevice(7)`)",18,N],[18,"IFF_LOOPBACK","","Interface is a loopback interface. (see `netdevice(7)`)",18,N],[18,"IFF_POINTOPOINT","","Interface is a point-to-point link. (see `netdevice(7)`)",18,N],[18,"IFF_NOTRAILERS","","Avoid use of trailers. (see `netdevice(7)`)",18,N],[18,"IFF_RUNNING","","Resources allocated. (see `netdevice(7)`)",18,N],[18,"IFF_NOARP","","No arp protocol, L2 destination address not set. (see `netdevice(7)`)",18,N],[18,"IFF_PROMISC","","Interface is in promiscuous mode. (see `netdevice(7)`)",18,N],[18,"IFF_ALLMULTI","","Receive all multicast packets. (see `netdevice(7)`)",18,N],[18,"IFF_MASTER","","Master of a load balancing bundle. (see `netdevice(7)`)",18,N],[18,"IFF_SLAVE","","Slave of a load balancing bundle. (see `netdevice(7)`)",18,N],[18,"IFF_MULTICAST","","Supports multicast. (see `netdevice(7)`)",18,N],[18,"IFF_PORTSEL","","Is able to select media type via ifmap. (see `netdevice(7)`)",18,N],[18,"IFF_AUTOMEDIA","","Auto media selection active. (see `netdevice(7)`)",18,N],[18,"IFF_DYNAMIC","","The addresses are lost when the interface goes down. (see `netdevice(7)`)",18,N],[18,"IFF_LOWER_UP","","Driver signals L1 up. Volatile.",18,N],[18,"IFF_DORMANT","","Driver signals dormant. Volatile.",18,N],[18,"IFF_ECHO","","Echo sent packets. Volatile.",18,N],[18,"IFF_NO_PI","","Do not provide packet information",18,N],[18,"IFF_TUN","","TUN device (no Ethernet headers) ",18,N],[18,"IFF_TAP","","TAP device",18,N],[11,"empty","","Returns an empty set of flags.",18,[[],["interfaceflags"]]],[11,"all","","Returns the set containing all flags.",18,[[],["interfaceflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",18,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",18,[[["c_int"]],["option",["interfaceflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",18,[[["c_int"]],["interfaceflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",18,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",18,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",18,[[["self"],["interfaceflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",18,[[["self"],["interfaceflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",18,[[["self"],["interfaceflags"]]]],[11,"remove","","Removes the specified flags in-place.",18,[[["self"],["interfaceflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",18,[[["self"],["interfaceflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",18,[[["self"],["interfaceflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",18,[[["self"],["interfaceflags"]],["interfaceflags"]]],[11,"bitor_assign","","Adds the set of flags.",18,[[["self"],["interfaceflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",18,[[["self"],["interfaceflags"]],["interfaceflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",18,[[["self"],["interfaceflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",18,[[["self"],["interfaceflags"]],["interfaceflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",18,[[["self"],["interfaceflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",18,[[["self"],["interfaceflags"]],["interfaceflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",18,[[["self"],["interfaceflags"]]]],[11,"not","","Returns the complement of this set of flags.",18,[[["self"]],["interfaceflags"]]],[11,"extend","","",18,[[["self"],["t"]]]],[11,"from_iter","","",18,[[["t"]],["interfaceflags"]]],[0,"poll","nix","Wait for events to trigger on specific file descriptors",N,N],[3,"PollFd","nix::poll","This is a wrapper around `libc::pollfd`.",N,N],[3,"EventFlags","","These flags define the different events that can be monitored by `poll` and `ppoll`",N,N],[5,"poll","","`poll` waits for one of a set of file descriptors to become ready to perform I/O. (`poll(2)`)",N,N],[5,"ppoll","","`ppoll()` allows an application to safely wait until either a file descriptor becomes ready or until a signal is caught. (`poll(2)`)",N,N],[11,"clone","","",19,[[["self"]],["pollfd"]]],[11,"new","","Creates a new `PollFd` specifying the events of interest for a given file descriptor.",19,[[["rawfd"],["eventflags"]],["pollfd"]]],[11,"revents","","Returns the events that occured in the last call to `poll` or `ppoll`.",19,[[["self"]],["option",["eventflags"]]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"eq","","",20,[[["self"],["eventflags"]],["bool"]]],[11,"ne","","",20,[[["self"],["eventflags"]],["bool"]]],[11,"clone","","",20,[[["self"]],["eventflags"]]],[11,"partial_cmp","","",20,[[["self"],["eventflags"]],["option",["ordering"]]]],[11,"lt","","",20,[[["self"],["eventflags"]],["bool"]]],[11,"le","","",20,[[["self"],["eventflags"]],["bool"]]],[11,"gt","","",20,[[["self"],["eventflags"]],["bool"]]],[11,"ge","","",20,[[["self"],["eventflags"]],["bool"]]],[11,"cmp","","",20,[[["self"],["eventflags"]],["ordering"]]],[11,"hash","","",20,N],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[18,"POLLIN","","There is data to read.",20,N],[18,"POLLPRI","","There is some exceptional condition on the file descriptor.",20,N],[18,"POLLOUT","","Writing is now possible, though a write larger that the available space in a socket or pipe will still block (unless `O_NONBLOCK` is set).",20,N],[18,"POLLRDNORM","","Equivalent to `POLLIN`",20,N],[18,"POLLWRNORM","","Equivalent to `POLLOUT`",20,N],[18,"POLLRDBAND","","Priority band data can be read (generally unused on Linux).",20,N],[18,"POLLWRBAND","","Priority data may be written.",20,N],[18,"POLLERR","","Error condition (only returned in `PollFd::revents`; ignored in `PollFd::new`). This bit is also set for a file descriptor referring to the write end of a pipe when the read end has been closed.",20,N],[18,"POLLHUP","","Hang up (only returned in `PollFd::revents`; ignored in `PollFd::new`). Note that when reading from a channel such as a pipe or a stream socket, this event merely indicates that the peer closed its end of the channel.  Subsequent reads from the channel will return 0 (end of file) only after all outstanding data in the channel has been consumed.",20,N],[18,"POLLNVAL","","Invalid request: `fd` not open (only returned in `PollFd::revents`; ignored in `PollFd::new`).",20,N],[11,"empty","","Returns an empty set of flags.",20,[[],["eventflags"]]],[11,"all","","Returns the set containing all flags.",20,[[],["eventflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",20,[[["self"]],["c_short"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",20,[[["c_short"]],["option",["eventflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",20,[[["c_short"]],["eventflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",20,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",20,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",20,[[["self"],["eventflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",20,[[["self"],["eventflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",20,[[["self"],["eventflags"]]]],[11,"remove","","Removes the specified flags in-place.",20,[[["self"],["eventflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",20,[[["self"],["eventflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",20,[[["self"],["eventflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",20,[[["self"],["eventflags"]],["eventflags"]]],[11,"bitor_assign","","Adds the set of flags.",20,[[["self"],["eventflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",20,[[["self"],["eventflags"]],["eventflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",20,[[["self"],["eventflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",20,[[["self"],["eventflags"]],["eventflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",20,[[["self"],["eventflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",20,[[["self"],["eventflags"]],["eventflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",20,[[["self"],["eventflags"]]]],[11,"not","","Returns the complement of this set of flags.",20,[[["self"]],["eventflags"]]],[11,"extend","","",20,[[["self"],["t"]]]],[11,"from_iter","","",20,[[["t"]],["eventflags"]]],[0,"pty","nix","Create master and slave virtual pseudo-terminals (PTYs)",N,N],[6,"SessionId","nix::pty","",N,N],[3,"Winsize","","",N,N],[12,"ws_row","","",21,N],[12,"ws_col","","",21,N],[12,"ws_xpixel","","",21,N],[12,"ws_ypixel","","",21,N],[3,"OpenptyResult","","Representation of a master/slave pty pair",N,N],[12,"master","","The master port in a virtual pty pair",22,N],[12,"slave","","The slave port in a virtual pty pair",22,N],[3,"PtyMaster","","Representation of the Master device in a master/slave pty pair",N,N],[5,"grantpt","","Grant access to a slave pseudoterminal (see `grantpt(3)`)",N,[[["ptymaster"]],["result"]]],[5,"posix_openpt","","Open a pseudoterminal device (see `posix_openpt(3)`)",N,[[["oflag"]],["result",["ptymaster"]]]],[5,"ptsname","","Get the name of the slave pseudoterminal (see `ptsname(3)`)",N,[[["ptymaster"]],["result",["string"]]]],[5,"ptsname_r","","Get the name of the slave pseudoterminal (see `ptsname(3)`)",N,[[["ptymaster"]],["result",["string"]]]],[5,"unlockpt","","Unlock a pseudoterminal master/slave pseudoterminal pair (see `unlockpt(3)`)",N,[[["ptymaster"]],["result"]]],[5,"openpty","","Create a new pseudoterminal, returning the slave and master file descriptors in `OpenptyResult` (see `openpty`).",N,[[["t"],["u"]],["result",["openptyresult"]]]],[11,"clone","","",22,[[["self"]],["openptyresult"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"as_raw_fd","","",23,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",23,[[["self"]],["rawfd"]]],[11,"drop","","",23,[[["self"]]]],[0,"sched","nix","",N,N],[3,"CloneFlags","nix::sched","",N,N],[3,"CpuSet","","",N,N],[5,"sched_setaffinity","","",N,[[["pid"],["cpuset"]],["result"]]],[5,"clone","","",N,N],[5,"unshare","","",N,[[["cloneflags"]],["result"]]],[5,"setns","","",N,[[["rawfd"],["cloneflags"]],["result"]]],[6,"CloneCb","","",N,N],[11,"eq","","",24,[[["self"],["cloneflags"]],["bool"]]],[11,"ne","","",24,[[["self"],["cloneflags"]],["bool"]]],[11,"clone","","",24,[[["self"]],["cloneflags"]]],[11,"partial_cmp","","",24,[[["self"],["cloneflags"]],["option",["ordering"]]]],[11,"lt","","",24,[[["self"],["cloneflags"]],["bool"]]],[11,"le","","",24,[[["self"],["cloneflags"]],["bool"]]],[11,"gt","","",24,[[["self"],["cloneflags"]],["bool"]]],[11,"ge","","",24,[[["self"],["cloneflags"]],["bool"]]],[11,"cmp","","",24,[[["self"],["cloneflags"]],["ordering"]]],[11,"hash","","",24,N],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[18,"CLONE_VM","","",24,N],[18,"CLONE_FS","","",24,N],[18,"CLONE_FILES","","",24,N],[18,"CLONE_SIGHAND","","",24,N],[18,"CLONE_PTRACE","","",24,N],[18,"CLONE_VFORK","","",24,N],[18,"CLONE_PARENT","","",24,N],[18,"CLONE_THREAD","","",24,N],[18,"CLONE_NEWNS","","",24,N],[18,"CLONE_SYSVSEM","","",24,N],[18,"CLONE_SETTLS","","",24,N],[18,"CLONE_PARENT_SETTID","","",24,N],[18,"CLONE_CHILD_CLEARTID","","",24,N],[18,"CLONE_DETACHED","","",24,N],[18,"CLONE_UNTRACED","","",24,N],[18,"CLONE_CHILD_SETTID","","",24,N],[18,"CLONE_NEWCGROUP","","",24,N],[18,"CLONE_NEWUTS","","",24,N],[18,"CLONE_NEWIPC","","",24,N],[18,"CLONE_NEWUSER","","",24,N],[18,"CLONE_NEWPID","","",24,N],[18,"CLONE_NEWNET","","",24,N],[18,"CLONE_IO","","",24,N],[11,"empty","","Returns an empty set of flags.",24,[[],["cloneflags"]]],[11,"all","","Returns the set containing all flags.",24,[[],["cloneflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",24,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",24,[[["c_int"]],["option",["cloneflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",24,[[["c_int"]],["cloneflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",24,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",24,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",24,[[["self"],["cloneflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",24,[[["self"],["cloneflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",24,[[["self"],["cloneflags"]]]],[11,"remove","","Removes the specified flags in-place.",24,[[["self"],["cloneflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",24,[[["self"],["cloneflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",24,[[["self"],["cloneflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",24,[[["self"],["cloneflags"]],["cloneflags"]]],[11,"bitor_assign","","Adds the set of flags.",24,[[["self"],["cloneflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",24,[[["self"],["cloneflags"]],["cloneflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",24,[[["self"],["cloneflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",24,[[["self"],["cloneflags"]],["cloneflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",24,[[["self"],["cloneflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",24,[[["self"],["cloneflags"]],["cloneflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",24,[[["self"],["cloneflags"]]]],[11,"not","","Returns the complement of this set of flags.",24,[[["self"]],["cloneflags"]]],[11,"extend","","",24,[[["self"],["t"]]]],[11,"from_iter","","",24,[[["t"]],["cloneflags"]]],[11,"clone","","",25,[[["self"]],["cpuset"]]],[11,"new","","",25,[[],["cpuset"]]],[11,"is_set","","",25,[[["self"],["usize"]],["result",["bool"]]]],[11,"set","","",25,[[["self"],["usize"]],["result"]]],[11,"unset","","",25,[[["self"],["usize"]],["result"]]],[0,"sys","nix","",N,N],[0,"aio","nix::sys","POSIX Asynchronous I/O",N,N],[3,"AioCb","nix::sys::aio","AIO Control Block.",N,N],[3,"LioCb","","LIO Control Block.",N,N],[12,"aiocbs","","A collection of [`AioCb`]s.  All of these will be issued simultaneously by the [`listio`] method.",26,N],[4,"AioFsyncMode","","Mode for `AioCb::fsync`.  Controls whether only data or both data and metadata are synced.",N,N],[13,"O_SYNC","","do it like `fsync`",27,N],[13,"O_DSYNC","","on supported operating systems only, do it like `fdatasync`",27,N],[4,"LioOpcode","","When used with `lio_listio`, determines whether a given `aiocb` should be used for a read operation, a write operation, or ignored.  Has no effect for any other aio functions.",N,N],[13,"LIO_NOP","","",28,N],[13,"LIO_WRITE","","",28,N],[13,"LIO_READ","","",28,N],[4,"LioMode","","Mode for `lio_listio`",N,N],[13,"LIO_WAIT","","Requests that `lio_listio` block until all requested operations have been completed",29,N],[13,"LIO_NOWAIT","","Requests that `lio_listio` return immediately",29,N],[4,"AioCancelStat","","Return values for `AioCb::cancel` and `aio_cancel_all`",N,N],[13,"AioCanceled","","All outstanding requests were canceled",30,N],[13,"AioNotCanceled","","Some requests were not canceled.  Their status should be checked with `AioCb::error`",30,N],[13,"AioAllDone","","All of the requests have already finished",30,N],[4,"Buffer","","Owns (uniquely or shared) a memory buffer to keep it from `Drop`ing while the kernel has a pointer to it.",N,N],[13,"None","","No buffer to own.",31,N],[13,"Phantom","","Keeps a reference to a slice",31,N],[13,"BoxedSlice","","Generic thing that keeps a buffer from dropping",31,N],[13,"BoxedMutSlice","","Generic thing that keeps a mutable buffer from dropping",31,N],[5,"aio_cancel_all","","Cancels outstanding AIO requests for a given file descriptor.",N,[[["rawfd"]],["result",["aiocancelstat"]]]],[5,"aio_suspend","","Suspends the calling process until at least one of the specified `AioCb`s has completed, a signal is delivered, or the timeout has passed.",N,N],[11,"clone","","",27,[[["self"]],["aiofsyncmode"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"hash","","",27,N],[11,"cmp","","",27,[[["self"],["aiofsyncmode"]],["ordering"]]],[11,"eq","","",27,[[["self"],["aiofsyncmode"]],["bool"]]],[11,"partial_cmp","","",27,[[["self"],["aiofsyncmode"]],["option",["ordering"]]]],[11,"clone","","",28,[[["self"]],["lioopcode"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"hash","","",28,N],[11,"cmp","","",28,[[["self"],["lioopcode"]],["ordering"]]],[11,"eq","","",28,[[["self"],["lioopcode"]],["bool"]]],[11,"partial_cmp","","",28,[[["self"],["lioopcode"]],["option",["ordering"]]]],[11,"clone","","",29,[[["self"]],["liomode"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"hash","","",29,N],[11,"cmp","","",29,[[["self"],["liomode"]],["ordering"]]],[11,"eq","","",29,[[["self"],["liomode"]],["bool"]]],[11,"partial_cmp","","",29,[[["self"],["liomode"]],["option",["ordering"]]]],[11,"clone","","",30,[[["self"]],["aiocancelstat"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"eq","","",30,[[["self"],["aiocancelstat"]],["bool"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"buffer","","Remove the inner `Buffer` and return it",32,[[["self"]],["buffer"]]],[11,"boxed_slice","","Remove the inner boxed slice, if any, and return it.",32,[[["self"]],["option",["box"]]]],[11,"boxed_mut_slice","","Remove the inner boxed mutable slice, if any, and return it.",32,[[["self"]],["option",["box"]]]],[11,"fd","","Returns the underlying file descriptor associated with the `AioCb`",32,[[["self"]],["rawfd"]]],[11,"from_fd","","Constructs a new `AioCb` with no associated buffer.",32,[[["rawfd"],["c_int"],["sigevnotify"]],["aiocb"]]],[11,"from_mut_slice","","Constructs a new `AioCb` from a mutable slice.",32,N],[11,"from_boxed_slice","","The safest and most flexible way to create an `AioCb`.",32,[[["rawfd"],["off_t"],["box",["borrow"]],["c_int"],["sigevnotify"],["lioopcode"]],["aiocb"]]],[11,"from_boxed_mut_slice","","The safest and most flexible way to create an `AioCb` for reading.",32,[[["rawfd"],["off_t"],["box",["borrowmut"]],["c_int"],["sigevnotify"],["lioopcode"]],["aiocb"]]],[11,"from_mut_ptr","","Constructs a new `AioCb` from a mutable raw pointer",32,N],[11,"from_ptr","","Constructs a new `AioCb` from a raw pointer.",32,N],[11,"from_slice","","Like `from_mut_slice`, but works on constant slices rather than mutable slices.",32,N],[11,"set_sigev_notify","","Update the notification settings for an existing `aiocb`",32,[[["self"],["sigevnotify"]]]],[11,"cancel","","Cancels an outstanding AIO request.",32,[[["self"]],["result",["aiocancelstat"]]]],[11,"error","","Retrieve error status of an asynchronous operation.",32,[[["self"]],["result"]]],[11,"fsync","","An asynchronous version of `fsync(2)`.",32,[[["self"],["aiofsyncmode"]],["result"]]],[11,"lio_opcode","","Returns the `aiocb`'s `LioOpcode` field",32,[[["self"]],["option",["lioopcode"]]]],[11,"nbytes","","Returns the requested length of the aio operation in bytes",32,[[["self"]],["usize"]]],[11,"offset","","Returns the file offset stored in the `AioCb`",32,[[["self"]],["off_t"]]],[11,"priority","","Returns the priority of the `AioCb`",32,[[["self"]],["c_int"]]],[11,"read","","Asynchronously reads from a file descriptor into a buffer",32,[[["self"]],["result"]]],[11,"sigevent","","Returns the `SigEvent` stored in the `AioCb`",32,[[["self"]],["sigevent"]]],[11,"aio_return","","Retrieve return status of an asynchronous operation.",32,[[["self"]],["result",["isize"]]]],[11,"write","","Asynchronously writes from a buffer to a file descriptor",32,[[["self"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"drop","","If the `AioCb` has no remaining state in the kernel, just drop it. Otherwise, dropping constitutes a resource leak, which is an error",32,[[["self"]]]],[11,"with_capacity","","Initialize an empty `LioCb`",26,[[["usize"]],["liocb"]]],[11,"listio","","Submits multiple asynchronous I/O requests with a single system call.",26,[[["self"],["liomode"],["sigevnotify"]],["result"]]],[11,"listio_resubmit","","Resubmits any incomplete operations with [`lio_listio`].",26,[[["self"],["liomode"],["sigevnotify"]],["result"]]],[11,"aio_return","","Collect final status for an individual `AioCb` submitted as part of an `LioCb`.",26,[[["self"],["usize"]],["result",["isize"]]]],[11,"error","","Retrieve error status of an individual `AioCb` submitted as part of an `LioCb`.",26,[[["self"],["usize"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"from","","",26,[[["vec",["aiocb"]]],["liocb"]]],[0,"epoll","nix::sys","",N,N],[3,"EpollFlags","nix::sys::epoll","",N,N],[3,"EpollCreateFlags","","",N,N],[3,"EpollEvent","","",N,N],[4,"EpollOp","","",N,N],[13,"EpollCtlAdd","","",33,N],[13,"EpollCtlDel","","",33,N],[13,"EpollCtlMod","","",33,N],[5,"epoll_create","","",N,[[],["result",["rawfd"]]]],[5,"epoll_create1","","",N,[[["epollcreateflags"]],["result",["rawfd"]]]],[5,"epoll_ctl","","",N,[[["rawfd"],["epollop"],["rawfd"],["t"]],["result"]]],[5,"epoll_wait","","",N,N],[11,"eq","","",34,[[["self"],["epollflags"]],["bool"]]],[11,"ne","","",34,[[["self"],["epollflags"]],["bool"]]],[11,"clone","","",34,[[["self"]],["epollflags"]]],[11,"partial_cmp","","",34,[[["self"],["epollflags"]],["option",["ordering"]]]],[11,"lt","","",34,[[["self"],["epollflags"]],["bool"]]],[11,"le","","",34,[[["self"],["epollflags"]],["bool"]]],[11,"gt","","",34,[[["self"],["epollflags"]],["bool"]]],[11,"ge","","",34,[[["self"],["epollflags"]],["bool"]]],[11,"cmp","","",34,[[["self"],["epollflags"]],["ordering"]]],[11,"hash","","",34,N],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[18,"EPOLLIN","","",34,N],[18,"EPOLLPRI","","",34,N],[18,"EPOLLOUT","","",34,N],[18,"EPOLLRDNORM","","",34,N],[18,"EPOLLRDBAND","","",34,N],[18,"EPOLLWRNORM","","",34,N],[18,"EPOLLWRBAND","","",34,N],[18,"EPOLLMSG","","",34,N],[18,"EPOLLERR","","",34,N],[18,"EPOLLHUP","","",34,N],[18,"EPOLLRDHUP","","",34,N],[18,"EPOLLEXCLUSIVE","","",34,N],[18,"EPOLLWAKEUP","","",34,N],[18,"EPOLLONESHOT","","",34,N],[18,"EPOLLET","","",34,N],[11,"empty","","Returns an empty set of flags.",34,[[],["epollflags"]]],[11,"all","","Returns the set containing all flags.",34,[[],["epollflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",34,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",34,[[["c_int"]],["option",["epollflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",34,[[["c_int"]],["epollflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",34,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",34,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",34,[[["self"],["epollflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",34,[[["self"],["epollflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",34,[[["self"],["epollflags"]]]],[11,"remove","","Removes the specified flags in-place.",34,[[["self"],["epollflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",34,[[["self"],["epollflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",34,[[["self"],["epollflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",34,[[["self"],["epollflags"]],["epollflags"]]],[11,"bitor_assign","","Adds the set of flags.",34,[[["self"],["epollflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",34,[[["self"],["epollflags"]],["epollflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",34,[[["self"],["epollflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",34,[[["self"],["epollflags"]],["epollflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",34,[[["self"],["epollflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",34,[[["self"],["epollflags"]],["epollflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",34,[[["self"],["epollflags"]]]],[11,"not","","Returns the complement of this set of flags.",34,[[["self"]],["epollflags"]]],[11,"extend","","",34,[[["self"],["t"]]]],[11,"from_iter","","",34,[[["t"]],["epollflags"]]],[11,"clone","","",33,[[["self"]],["epollop"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"hash","","",33,N],[11,"eq","","",33,[[["self"],["epollop"]],["bool"]]],[11,"eq","","",35,[[["self"],["epollcreateflags"]],["bool"]]],[11,"ne","","",35,[[["self"],["epollcreateflags"]],["bool"]]],[11,"clone","","",35,[[["self"]],["epollcreateflags"]]],[11,"partial_cmp","","",35,[[["self"],["epollcreateflags"]],["option",["ordering"]]]],[11,"lt","","",35,[[["self"],["epollcreateflags"]],["bool"]]],[11,"le","","",35,[[["self"],["epollcreateflags"]],["bool"]]],[11,"gt","","",35,[[["self"],["epollcreateflags"]],["bool"]]],[11,"ge","","",35,[[["self"],["epollcreateflags"]],["bool"]]],[11,"cmp","","",35,[[["self"],["epollcreateflags"]],["ordering"]]],[11,"hash","","",35,N],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[18,"EPOLL_CLOEXEC","","",35,N],[11,"empty","","Returns an empty set of flags.",35,[[],["epollcreateflags"]]],[11,"all","","Returns the set containing all flags.",35,[[],["epollcreateflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",35,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",35,[[["c_int"]],["option",["epollcreateflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",35,[[["c_int"]],["epollcreateflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",35,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",35,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",35,[[["self"],["epollcreateflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",35,[[["self"],["epollcreateflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",35,[[["self"],["epollcreateflags"]]]],[11,"remove","","Removes the specified flags in-place.",35,[[["self"],["epollcreateflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",35,[[["self"],["epollcreateflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",35,[[["self"],["epollcreateflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",35,[[["self"],["epollcreateflags"]],["epollcreateflags"]]],[11,"bitor_assign","","Adds the set of flags.",35,[[["self"],["epollcreateflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",35,[[["self"],["epollcreateflags"]],["epollcreateflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",35,[[["self"],["epollcreateflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",35,[[["self"],["epollcreateflags"]],["epollcreateflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",35,[[["self"],["epollcreateflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",35,[[["self"],["epollcreateflags"]],["epollcreateflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",35,[[["self"],["epollcreateflags"]]]],[11,"not","","Returns the complement of this set of flags.",35,[[["self"]],["epollcreateflags"]]],[11,"extend","","",35,[[["self"],["t"]]]],[11,"from_iter","","",35,[[["t"]],["epollcreateflags"]]],[11,"clone","","",36,[[["self"]],["epollevent"]]],[11,"new","","",36,[[["epollflags"],["u64"]],["self"]]],[11,"empty","","",36,[[],["self"]]],[11,"events","","",36,[[["self"]],["epollflags"]]],[11,"data","","",36,[[["self"]],["u64"]]],[0,"eventfd","nix::sys","",N,N],[3,"EfdFlags","nix::sys::eventfd","",N,N],[5,"eventfd","","",N,[[["c_uint"],["efdflags"]],["result",["rawfd"]]]],[11,"eq","","",37,[[["self"],["efdflags"]],["bool"]]],[11,"ne","","",37,[[["self"],["efdflags"]],["bool"]]],[11,"clone","","",37,[[["self"]],["efdflags"]]],[11,"partial_cmp","","",37,[[["self"],["efdflags"]],["option",["ordering"]]]],[11,"lt","","",37,[[["self"],["efdflags"]],["bool"]]],[11,"le","","",37,[[["self"],["efdflags"]],["bool"]]],[11,"gt","","",37,[[["self"],["efdflags"]],["bool"]]],[11,"ge","","",37,[[["self"],["efdflags"]],["bool"]]],[11,"cmp","","",37,[[["self"],["efdflags"]],["ordering"]]],[11,"hash","","",37,N],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[18,"EFD_CLOEXEC","","",37,N],[18,"EFD_NONBLOCK","","",37,N],[18,"EFD_SEMAPHORE","","",37,N],[11,"empty","","Returns an empty set of flags.",37,[[],["efdflags"]]],[11,"all","","Returns the set containing all flags.",37,[[],["efdflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",37,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",37,[[["c_int"]],["option",["efdflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",37,[[["c_int"]],["efdflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",37,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",37,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",37,[[["self"],["efdflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",37,[[["self"],["efdflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",37,[[["self"],["efdflags"]]]],[11,"remove","","Removes the specified flags in-place.",37,[[["self"],["efdflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",37,[[["self"],["efdflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",37,[[["self"],["efdflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",37,[[["self"],["efdflags"]],["efdflags"]]],[11,"bitor_assign","","Adds the set of flags.",37,[[["self"],["efdflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",37,[[["self"],["efdflags"]],["efdflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",37,[[["self"],["efdflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",37,[[["self"],["efdflags"]],["efdflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",37,[[["self"],["efdflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",37,[[["self"],["efdflags"]],["efdflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",37,[[["self"],["efdflags"]]]],[11,"not","","Returns the complement of this set of flags.",37,[[["self"]],["efdflags"]]],[11,"extend","","",37,[[["self"],["t"]]]],[11,"from_iter","","",37,[[["t"]],["efdflags"]]],[0,"ioctl","nix::sys","Provide helpers for making ioctl system calls.",N,N],[0,"memfd","","",N,N],[3,"MemFdCreateFlag","nix::sys::memfd","",N,N],[5,"memfd_create","","",N,[[["cstr"],["memfdcreateflag"]],["result",["rawfd"]]]],[11,"eq","","",38,[[["self"],["memfdcreateflag"]],["bool"]]],[11,"ne","","",38,[[["self"],["memfdcreateflag"]],["bool"]]],[11,"clone","","",38,[[["self"]],["memfdcreateflag"]]],[11,"partial_cmp","","",38,[[["self"],["memfdcreateflag"]],["option",["ordering"]]]],[11,"lt","","",38,[[["self"],["memfdcreateflag"]],["bool"]]],[11,"le","","",38,[[["self"],["memfdcreateflag"]],["bool"]]],[11,"gt","","",38,[[["self"],["memfdcreateflag"]],["bool"]]],[11,"ge","","",38,[[["self"],["memfdcreateflag"]],["bool"]]],[11,"cmp","","",38,[[["self"],["memfdcreateflag"]],["ordering"]]],[11,"hash","","",38,N],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[18,"MFD_CLOEXEC","","",38,N],[18,"MFD_ALLOW_SEALING","","",38,N],[11,"empty","","Returns an empty set of flags.",38,[[],["memfdcreateflag"]]],[11,"all","","Returns the set containing all flags.",38,[[],["memfdcreateflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",38,[[["self"]],["c_uint"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",38,[[["c_uint"]],["option",["memfdcreateflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",38,[[["c_uint"]],["memfdcreateflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",38,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",38,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",38,[[["self"],["memfdcreateflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",38,[[["self"],["memfdcreateflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",38,[[["self"],["memfdcreateflag"]]]],[11,"remove","","Removes the specified flags in-place.",38,[[["self"],["memfdcreateflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",38,[[["self"],["memfdcreateflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",38,[[["self"],["memfdcreateflag"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",38,[[["self"],["memfdcreateflag"]],["memfdcreateflag"]]],[11,"bitor_assign","","Adds the set of flags.",38,[[["self"],["memfdcreateflag"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",38,[[["self"],["memfdcreateflag"]],["memfdcreateflag"]]],[11,"bitxor_assign","","Toggles the set of flags.",38,[[["self"],["memfdcreateflag"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",38,[[["self"],["memfdcreateflag"]],["memfdcreateflag"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",38,[[["self"],["memfdcreateflag"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",38,[[["self"],["memfdcreateflag"]],["memfdcreateflag"]]],[11,"sub_assign","","Disables all flags enabled in the set.",38,[[["self"],["memfdcreateflag"]]]],[11,"not","","Returns the complement of this set of flags.",38,[[["self"]],["memfdcreateflag"]]],[11,"extend","","",38,[[["self"],["t"]]]],[11,"from_iter","","",38,[[["t"]],["memfdcreateflag"]]],[0,"mman","nix::sys","",N,N],[3,"ProtFlags","nix::sys::mman","Desired memory protection of a memory mapping.",N,N],[3,"MapFlags","","Additional parameters for `mmap()`.",N,N],[3,"MsFlags","","Configuration flags for `msync`.",N,N],[3,"MlockAllFlags","","Flags for `mlockall`.",N,N],[4,"MmapAdvise","","Usage information for a range of memory to allow for performance optimizations by the kernel.",N,N],[13,"MADV_NORMAL","","No further special treatment. This is the default.",39,N],[13,"MADV_RANDOM","","Expect random page references.",39,N],[13,"MADV_SEQUENTIAL","","Expect sequential page references.",39,N],[13,"MADV_WILLNEED","","Expect access in the near future.",39,N],[13,"MADV_DONTNEED","","Do not expect access in the near future.",39,N],[13,"MADV_REMOVE","","Free up a given range of pages and its associated backing store.",39,N],[13,"MADV_DONTFORK","","Do not make pages in this range available to the child after a `fork(2)`.",39,N],[13,"MADV_DOFORK","","Undo the effect of `MADV_DONTFORK`.",39,N],[13,"MADV_HWPOISON","","Poison the given pages.",39,N],[13,"MADV_MERGEABLE","","Enable Kernel Samepage Merging (KSM) for the given pages.",39,N],[13,"MADV_UNMERGEABLE","","Undo the effect of `MADV_MERGEABLE`",39,N],[13,"MADV_SOFT_OFFLINE","","Preserve the memory of each page but offline the original page.",39,N],[13,"MADV_HUGEPAGE","","Enable Transparent Huge Pages (THP) for pages in the given range.",39,N],[13,"MADV_NOHUGEPAGE","","Undo the effect of `MADV_HUGEPAGE`.",39,N],[13,"MADV_DONTDUMP","","Exclude the given range from a core dump.",39,N],[13,"MADV_DODUMP","","Undo the effect of an earlier `MADV_DONTDUMP`.",39,N],[13,"MADV_FREE","","Specify that the application no longer needs the pages in the given range.",39,N],[5,"mlock","","Locks all memory pages that contain part of the address range with `length` bytes starting at `addr`. Locked pages never move to the swap area.",N,N],[5,"munlock","","Unlocks all memory pages that contain part of the address range with `length` bytes starting at `addr`.",N,N],[5,"mlockall","","Locks all memory pages mapped into this process' address space. Locked pages never move to the swap area.",N,[[["mlockallflags"]],["result"]]],[5,"munlockall","","Unlocks all memory pages mapped into this process' address space.",N,[[],["result"]]],[5,"mmap","","Calls to mmap are inherently unsafe, so they must be made in an unsafe block. Typically a higher-level abstraction will hide the unsafe interactions with the mmap'd region.",N,N],[5,"munmap","","",N,N],[5,"madvise","","",N,N],[5,"msync","","",N,N],[5,"shm_open","","",N,[[["p"],["oflag"],["mode"]],["result",["rawfd"]]]],[5,"shm_unlink","","",N,[[["p"]],["result"]]],[11,"eq","","",40,[[["self"],["protflags"]],["bool"]]],[11,"ne","","",40,[[["self"],["protflags"]],["bool"]]],[11,"clone","","",40,[[["self"]],["protflags"]]],[11,"partial_cmp","","",40,[[["self"],["protflags"]],["option",["ordering"]]]],[11,"lt","","",40,[[["self"],["protflags"]],["bool"]]],[11,"le","","",40,[[["self"],["protflags"]],["bool"]]],[11,"gt","","",40,[[["self"],["protflags"]],["bool"]]],[11,"ge","","",40,[[["self"],["protflags"]],["bool"]]],[11,"cmp","","",40,[[["self"],["protflags"]],["ordering"]]],[11,"hash","","",40,N],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[18,"PROT_NONE","","Pages cannot be accessed.",40,N],[18,"PROT_READ","","Pages can be read.",40,N],[18,"PROT_WRITE","","Pages can be written.",40,N],[18,"PROT_EXEC","","Pages can be executed",40,N],[18,"PROT_GROWSDOWN","","Apply protection up to the end of a mapping that grows upwards.",40,N],[18,"PROT_GROWSUP","","Apply protection down to the beginning of a mapping that grows downwards.",40,N],[11,"empty","","Returns an empty set of flags.",40,[[],["protflags"]]],[11,"all","","Returns the set containing all flags.",40,[[],["protflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",40,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",40,[[["c_int"]],["option",["protflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",40,[[["c_int"]],["protflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",40,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",40,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",40,[[["self"],["protflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",40,[[["self"],["protflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",40,[[["self"],["protflags"]]]],[11,"remove","","Removes the specified flags in-place.",40,[[["self"],["protflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",40,[[["self"],["protflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",40,[[["self"],["protflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",40,[[["self"],["protflags"]],["protflags"]]],[11,"bitor_assign","","Adds the set of flags.",40,[[["self"],["protflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",40,[[["self"],["protflags"]],["protflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",40,[[["self"],["protflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",40,[[["self"],["protflags"]],["protflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",40,[[["self"],["protflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",40,[[["self"],["protflags"]],["protflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",40,[[["self"],["protflags"]]]],[11,"not","","Returns the complement of this set of flags.",40,[[["self"]],["protflags"]]],[11,"extend","","",40,[[["self"],["t"]]]],[11,"from_iter","","",40,[[["t"]],["protflags"]]],[11,"eq","","",41,[[["self"],["mapflags"]],["bool"]]],[11,"ne","","",41,[[["self"],["mapflags"]],["bool"]]],[11,"clone","","",41,[[["self"]],["mapflags"]]],[11,"partial_cmp","","",41,[[["self"],["mapflags"]],["option",["ordering"]]]],[11,"lt","","",41,[[["self"],["mapflags"]],["bool"]]],[11,"le","","",41,[[["self"],["mapflags"]],["bool"]]],[11,"gt","","",41,[[["self"],["mapflags"]],["bool"]]],[11,"ge","","",41,[[["self"],["mapflags"]],["bool"]]],[11,"cmp","","",41,[[["self"],["mapflags"]],["ordering"]]],[11,"hash","","",41,N],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[18,"MAP_FILE","","Compatibility flag. Ignored.",41,N],[18,"MAP_SHARED","","Share this mapping. Mutually exclusive with `MAP_PRIVATE`.",41,N],[18,"MAP_PRIVATE","","Create a private copy-on-write mapping. Mutually exclusive with `MAP_SHARED`.",41,N],[18,"MAP_FIXED","","Place the mapping at exactly the address specified in `addr`.",41,N],[18,"MAP_ANON","","Synonym for `MAP_ANONYMOUS`.",41,N],[18,"MAP_ANONYMOUS","","The mapping is not backed by any file.",41,N],[18,"MAP_32BIT","","Put the mapping into the first 2GB of the process address space.",41,N],[18,"MAP_GROWSDOWN","","Used for stacks; indicates to the kernel that the mapping should extend downward in memory.",41,N],[18,"MAP_DENYWRITE","","Compatibility flag. Ignored.",41,N],[18,"MAP_EXECUTABLE","","Compatibility flag. Ignored.",41,N],[18,"MAP_LOCKED","","Mark the mmaped region to be locked in the same way as `mlock(2)`.",41,N],[18,"MAP_NORESERVE","","Do not reserve swap space for this mapping.",41,N],[18,"MAP_POPULATE","","Populate page tables for a mapping.",41,N],[18,"MAP_NONBLOCK","","Only meaningful when used with `MAP_POPULATE`. Don't perform read-ahead.",41,N],[18,"MAP_HUGETLB","","Allocate the mapping using \"huge pages.\"",41,N],[18,"MAP_STACK","","Region grows down, like a stack.",41,N],[11,"empty","","Returns an empty set of flags.",41,[[],["mapflags"]]],[11,"all","","Returns the set containing all flags.",41,[[],["mapflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",41,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",41,[[["c_int"]],["option",["mapflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",41,[[["c_int"]],["mapflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",41,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",41,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",41,[[["self"],["mapflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",41,[[["self"],["mapflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",41,[[["self"],["mapflags"]]]],[11,"remove","","Removes the specified flags in-place.",41,[[["self"],["mapflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",41,[[["self"],["mapflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",41,[[["self"],["mapflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",41,[[["self"],["mapflags"]],["mapflags"]]],[11,"bitor_assign","","Adds the set of flags.",41,[[["self"],["mapflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",41,[[["self"],["mapflags"]],["mapflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",41,[[["self"],["mapflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",41,[[["self"],["mapflags"]],["mapflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",41,[[["self"],["mapflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",41,[[["self"],["mapflags"]],["mapflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",41,[[["self"],["mapflags"]]]],[11,"not","","Returns the complement of this set of flags.",41,[[["self"]],["mapflags"]]],[11,"extend","","",41,[[["self"],["t"]]]],[11,"from_iter","","",41,[[["t"]],["mapflags"]]],[11,"clone","","",39,[[["self"]],["mmapadvise"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"hash","","",39,N],[11,"cmp","","",39,[[["self"],["mmapadvise"]],["ordering"]]],[11,"eq","","",39,[[["self"],["mmapadvise"]],["bool"]]],[11,"partial_cmp","","",39,[[["self"],["mmapadvise"]],["option",["ordering"]]]],[11,"eq","","",42,[[["self"],["msflags"]],["bool"]]],[11,"ne","","",42,[[["self"],["msflags"]],["bool"]]],[11,"clone","","",42,[[["self"]],["msflags"]]],[11,"partial_cmp","","",42,[[["self"],["msflags"]],["option",["ordering"]]]],[11,"lt","","",42,[[["self"],["msflags"]],["bool"]]],[11,"le","","",42,[[["self"],["msflags"]],["bool"]]],[11,"gt","","",42,[[["self"],["msflags"]],["bool"]]],[11,"ge","","",42,[[["self"],["msflags"]],["bool"]]],[11,"cmp","","",42,[[["self"],["msflags"]],["ordering"]]],[11,"hash","","",42,N],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[18,"MS_ASYNC","","Schedule an update but return immediately.",42,N],[18,"MS_INVALIDATE","","Invalidate all cached data.",42,N],[18,"MS_SYNC","","Perform an update and wait for it to complete.",42,N],[11,"empty","","Returns an empty set of flags.",42,[[],["msflags"]]],[11,"all","","Returns the set containing all flags.",42,[[],["msflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",42,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",42,[[["c_int"]],["option",["msflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",42,[[["c_int"]],["msflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",42,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",42,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",42,[[["self"],["msflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",42,[[["self"],["msflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",42,[[["self"],["msflags"]]]],[11,"remove","","Removes the specified flags in-place.",42,[[["self"],["msflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",42,[[["self"],["msflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",42,[[["self"],["msflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",42,[[["self"],["msflags"]],["msflags"]]],[11,"bitor_assign","","Adds the set of flags.",42,[[["self"],["msflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",42,[[["self"],["msflags"]],["msflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",42,[[["self"],["msflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",42,[[["self"],["msflags"]],["msflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",42,[[["self"],["msflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",42,[[["self"],["msflags"]],["msflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",42,[[["self"],["msflags"]]]],[11,"not","","Returns the complement of this set of flags.",42,[[["self"]],["msflags"]]],[11,"extend","","",42,[[["self"],["t"]]]],[11,"from_iter","","",42,[[["t"]],["msflags"]]],[11,"eq","","",43,[[["self"],["mlockallflags"]],["bool"]]],[11,"ne","","",43,[[["self"],["mlockallflags"]],["bool"]]],[11,"clone","","",43,[[["self"]],["mlockallflags"]]],[11,"partial_cmp","","",43,[[["self"],["mlockallflags"]],["option",["ordering"]]]],[11,"lt","","",43,[[["self"],["mlockallflags"]],["bool"]]],[11,"le","","",43,[[["self"],["mlockallflags"]],["bool"]]],[11,"gt","","",43,[[["self"],["mlockallflags"]],["bool"]]],[11,"ge","","",43,[[["self"],["mlockallflags"]],["bool"]]],[11,"cmp","","",43,[[["self"],["mlockallflags"]],["ordering"]]],[11,"hash","","",43,N],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[18,"MCL_CURRENT","","Lock pages that are currently mapped into the address space of the process.",43,N],[18,"MCL_FUTURE","","Lock pages which will become mapped into the address space of the process in the future.",43,N],[11,"empty","","Returns an empty set of flags.",43,[[],["mlockallflags"]]],[11,"all","","Returns the set containing all flags.",43,[[],["mlockallflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",43,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",43,[[["c_int"]],["option",["mlockallflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",43,[[["c_int"]],["mlockallflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",43,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",43,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",43,[[["self"],["mlockallflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",43,[[["self"],["mlockallflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",43,[[["self"],["mlockallflags"]]]],[11,"remove","","Removes the specified flags in-place.",43,[[["self"],["mlockallflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",43,[[["self"],["mlockallflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",43,[[["self"],["mlockallflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",43,[[["self"],["mlockallflags"]],["mlockallflags"]]],[11,"bitor_assign","","Adds the set of flags.",43,[[["self"],["mlockallflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",43,[[["self"],["mlockallflags"]],["mlockallflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",43,[[["self"],["mlockallflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",43,[[["self"],["mlockallflags"]],["mlockallflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",43,[[["self"],["mlockallflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",43,[[["self"],["mlockallflags"]],["mlockallflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",43,[[["self"],["mlockallflags"]]]],[11,"not","","Returns the complement of this set of flags.",43,[[["self"]],["mlockallflags"]]],[11,"extend","","",43,[[["self"],["t"]]]],[11,"from_iter","","",43,[[["t"]],["mlockallflags"]]],[0,"pthread","nix::sys","",N,N],[5,"pthread_self","nix::sys::pthread","Obtain ID of the calling thread (see `pthread_self(3)`",N,[[],["pthread"]]],[6,"Pthread","","",N,N],[0,"ptrace","nix::sys","For detailed description of the ptrace requests, consult `man ptrace`.",N,N],[3,"Options","nix::sys::ptrace","Ptrace options used in conjunction with the PTRACE_SETOPTIONS request. See `man ptrace` for more details.",N,N],[4,"Request","","Ptrace Request enum defining the action to be taken.",N,N],[13,"PTRACE_TRACEME","","",44,N],[13,"PTRACE_PEEKTEXT","","",44,N],[13,"PTRACE_PEEKDATA","","",44,N],[13,"PTRACE_PEEKUSER","","",44,N],[13,"PTRACE_POKETEXT","","",44,N],[13,"PTRACE_POKEDATA","","",44,N],[13,"PTRACE_POKEUSER","","",44,N],[13,"PTRACE_CONT","","",44,N],[13,"PTRACE_KILL","","",44,N],[13,"PTRACE_SINGLESTEP","","",44,N],[13,"PTRACE_GETREGS","","",44,N],[13,"PTRACE_SETREGS","","",44,N],[13,"PTRACE_GETFPREGS","","",44,N],[13,"PTRACE_SETFPREGS","","",44,N],[13,"PTRACE_ATTACH","","",44,N],[13,"PTRACE_DETACH","","",44,N],[13,"PTRACE_GETFPXREGS","","",44,N],[13,"PTRACE_SETFPXREGS","","",44,N],[13,"PTRACE_SYSCALL","","",44,N],[13,"PTRACE_SETOPTIONS","","",44,N],[13,"PTRACE_GETEVENTMSG","","",44,N],[13,"PTRACE_GETSIGINFO","","",44,N],[13,"PTRACE_SETSIGINFO","","",44,N],[13,"PTRACE_GETREGSET","","",44,N],[13,"PTRACE_SETREGSET","","",44,N],[13,"PTRACE_SEIZE","","",44,N],[13,"PTRACE_INTERRUPT","","",44,N],[13,"PTRACE_LISTEN","","",44,N],[13,"PTRACE_PEEKSIGINFO","","",44,N],[4,"Event","","Using the ptrace options the tracer can configure the tracee to stop at certain events. This enum is used to define those events as defined in `man ptrace`.",N,N],[13,"PTRACE_EVENT_FORK","","Event that stops before a return from fork or clone.",45,N],[13,"PTRACE_EVENT_VFORK","","Event that stops before a return from vfork or clone.",45,N],[13,"PTRACE_EVENT_CLONE","","Event that stops before a return from clone.",45,N],[13,"PTRACE_EVENT_EXEC","","Event that stops before a return from execve.",45,N],[13,"PTRACE_EVENT_VFORK_DONE","","Event for a return from vfork.",45,N],[13,"PTRACE_EVENT_EXIT","","Event for a stop before an exit. Unlike the waitpid Exit status program. registers can still be examined",45,N],[13,"PTRACE_EVENT_SECCOMP","","STop triggered by a seccomp rule on a tracee.",45,N],[5,"ptrace","","Performs a ptrace request. If the request in question is provided by a specialised function this function will return an unsupported operation error.",N,N],[5,"setoptions","","Set options, as with `ptrace(PTRACE_SETOPTIONS,...)`.",N,[[["pid"],["options"]],["result"]]],[5,"getevent","","Gets a ptrace event as described by `ptrace(PTRACE_GETEVENTMSG,...)`",N,[[["pid"]],["result",["c_long"]]]],[5,"getsiginfo","","Get siginfo as with `ptrace(PTRACE_GETSIGINFO,...)`",N,[[["pid"]],["result",["siginfo_t"]]]],[5,"setsiginfo","","Set siginfo as with `ptrace(PTRACE_SETSIGINFO,...)`",N,[[["pid"],["siginfo_t"]],["result"]]],[5,"traceme","","Sets the process as traceable, as with `ptrace(PTRACE_TRACEME, ...)`",N,[[],["result"]]],[5,"syscall","","Ask for next syscall, as with `ptrace(PTRACE_SYSCALL, ...)`",N,[[["pid"]],["result"]]],[5,"attach","","Attach to a running process, as with `ptrace(PTRACE_ATTACH, ...)`",N,[[["pid"]],["result"]]],[5,"detach","","Detaches the current running process, as with `ptrace(PTRACE_DETACH, ...)`",N,[[["pid"]],["result"]]],[5,"cont","","Restart the stopped tracee process, as with `ptrace(PTRACE_CONT, ...)`",N,[[["pid"],["t"]],["result"]]],[5,"step","","Move the stopped tracee process forward by a single step as with  `ptrace(PTRACE_SINGLESTEP, ...)`",N,[[["pid"],["t"]],["result"]]],[11,"clone","","",44,[[["self"]],["request"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"hash","","",44,N],[11,"cmp","","",44,[[["self"],["request"]],["ordering"]]],[11,"eq","","",44,[[["self"],["request"]],["bool"]]],[11,"partial_cmp","","",44,[[["self"],["request"]],["option",["ordering"]]]],[11,"clone","","",45,[[["self"]],["event"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"hash","","",45,N],[11,"cmp","","",45,[[["self"],["event"]],["ordering"]]],[11,"eq","","",45,[[["self"],["event"]],["bool"]]],[11,"partial_cmp","","",45,[[["self"],["event"]],["option",["ordering"]]]],[11,"eq","","",46,[[["self"],["options"]],["bool"]]],[11,"ne","","",46,[[["self"],["options"]],["bool"]]],[11,"clone","","",46,[[["self"]],["options"]]],[11,"partial_cmp","","",46,[[["self"],["options"]],["option",["ordering"]]]],[11,"lt","","",46,[[["self"],["options"]],["bool"]]],[11,"le","","",46,[[["self"],["options"]],["bool"]]],[11,"gt","","",46,[[["self"],["options"]],["bool"]]],[11,"ge","","",46,[[["self"],["options"]],["bool"]]],[11,"cmp","","",46,[[["self"],["options"]],["ordering"]]],[11,"hash","","",46,N],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[18,"PTRACE_O_TRACESYSGOOD","","When delivering system call traps set a bit to allow tracer to distinguish between normal stops or syscall stops. May not work on all systems.",46,N],[18,"PTRACE_O_TRACEFORK","","Stop tracee at next fork and start tracing the forked process.",46,N],[18,"PTRACE_O_TRACEVFORK","","Stop tracee at next vfork call and trace the vforked process.",46,N],[18,"PTRACE_O_TRACECLONE","","Stop tracee at next clone call and trace the cloned process.",46,N],[18,"PTRACE_O_TRACEEXEC","","Stop tracee at next execve call.",46,N],[18,"PTRACE_O_TRACEVFORKDONE","","Stop tracee at vfork completion.",46,N],[18,"PTRACE_O_TRACEEXIT","","Stop tracee at next exit call. Stops before exit commences allowing tracer to see location of exit and register states.",46,N],[18,"PTRACE_O_TRACESECCOMP","","Stop tracee when a SECCOMP_RET_TRACE rule is triggered. See `man seccomp` for more details.",46,N],[18,"PTRACE_O_EXITKILL","","Send a SIGKILL to the tracee if the tracer exits.  This is useful for ptrace jailers to prevent tracees from escaping their control.",46,N],[11,"empty","","Returns an empty set of flags.",46,[[],["options"]]],[11,"all","","Returns the set containing all flags.",46,[[],["options"]]],[11,"bits","","Returns the raw value of the flags currently stored.",46,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",46,[[["c_int"]],["option",["options"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",46,[[["c_int"]],["options"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",46,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",46,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",46,[[["self"],["options"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",46,[[["self"],["options"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",46,[[["self"],["options"]]]],[11,"remove","","Removes the specified flags in-place.",46,[[["self"],["options"]]]],[11,"toggle","","Toggles the specified flags in-place.",46,[[["self"],["options"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",46,[[["self"],["options"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",46,[[["self"],["options"]],["options"]]],[11,"bitor_assign","","Adds the set of flags.",46,[[["self"],["options"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",46,[[["self"],["options"]],["options"]]],[11,"bitxor_assign","","Toggles the set of flags.",46,[[["self"],["options"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",46,[[["self"],["options"]],["options"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",46,[[["self"],["options"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",46,[[["self"],["options"]],["options"]]],[11,"sub_assign","","Disables all flags enabled in the set.",46,[[["self"],["options"]]]],[11,"not","","Returns the complement of this set of flags.",46,[[["self"]],["options"]]],[11,"extend","","",46,[[["self"],["t"]]]],[11,"from_iter","","",46,[[["t"]],["options"]]],[0,"quota","nix::sys","Set and configure disk quotas for users, groups, or projects.",N,N],[3,"QuotaValidFlags","nix::sys::quota","Indicates the quota fields that are valid to read from.",N,N],[3,"Dqblk","","Wrapper type for `if_dqblk`",N,N],[4,"QuotaType","","The scope of the quota.",N,N],[13,"USRQUOTA","","Specify a user quota",47,N],[13,"GRPQUOTA","","Specify a group quota",47,N],[4,"QuotaFmt","","The type of quota format to use.",N,N],[13,"QFMT_VFS_OLD","","Use the original quota format.",48,N],[13,"QFMT_VFS_V0","","Use the standard VFS v0 quota format.",48,N],[13,"QFMT_VFS_V1","","Use the VFS v1 quota format.",48,N],[5,"quotactl_on","","Turn on disk quotas for a block device.",N,[[["quotatype"],["p"],["quotafmt"],["p"]],["result"]]],[5,"quotactl_off","","Disable disk quotas for a block device.",N,[[["quotatype"],["p"]],["result"]]],[5,"quotactl_sync","","Update the on-disk copy of quota usages for a filesystem.",N,[[["quotatype"],["option"]],["result"]]],[5,"quotactl_get","","Get disk quota limits and current usage for the given user/group id.",N,[[["quotatype"],["p"],["c_int"]],["result",["dqblk"]]]],[5,"quotactl_set","","Configure quota values for the specified fields for a given user/group id.",N,[[["quotatype"],["p"],["c_int"],["dqblk"],["quotavalidflags"]],["result"]]],[11,"clone","","",47,[[["self"]],["quotatype"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"hash","","",47,N],[11,"cmp","","",47,[[["self"],["quotatype"]],["ordering"]]],[11,"eq","","",47,[[["self"],["quotatype"]],["bool"]]],[11,"partial_cmp","","",47,[[["self"],["quotatype"]],["option",["ordering"]]]],[11,"clone","","",48,[[["self"]],["quotafmt"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"hash","","",48,N],[11,"cmp","","",48,[[["self"],["quotafmt"]],["ordering"]]],[11,"eq","","",48,[[["self"],["quotafmt"]],["bool"]]],[11,"partial_cmp","","",48,[[["self"],["quotafmt"]],["option",["ordering"]]]],[11,"eq","","",49,[[["self"],["quotavalidflags"]],["bool"]]],[11,"ne","","",49,[[["self"],["quotavalidflags"]],["bool"]]],[11,"clone","","",49,[[["self"]],["quotavalidflags"]]],[11,"partial_cmp","","",49,[[["self"],["quotavalidflags"]],["option",["ordering"]]]],[11,"lt","","",49,[[["self"],["quotavalidflags"]],["bool"]]],[11,"le","","",49,[[["self"],["quotavalidflags"]],["bool"]]],[11,"gt","","",49,[[["self"],["quotavalidflags"]],["bool"]]],[11,"ge","","",49,[[["self"],["quotavalidflags"]],["bool"]]],[11,"cmp","","",49,[[["self"],["quotavalidflags"]],["ordering"]]],[11,"hash","","",49,N],[11,"default","","",49,[[],["quotavalidflags"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[18,"QIF_BLIMITS","","The block hard & soft limit fields.",49,N],[18,"QIF_SPACE","","The current space field.",49,N],[18,"QIF_ILIMITS","","The inode hard & soft limit fields.",49,N],[18,"QIF_INODES","","The current inodes field.",49,N],[18,"QIF_BTIME","","The disk use time limit field.",49,N],[18,"QIF_ITIME","","The file quote time limit field.",49,N],[18,"QIF_LIMITS","","All block & inode limits.",49,N],[18,"QIF_USAGE","","The space & inodes usage fields.",49,N],[18,"QIF_TIMES","","The time limit fields.",49,N],[18,"QIF_ALL","","All fields.",49,N],[11,"empty","","Returns an empty set of flags.",49,[[],["quotavalidflags"]]],[11,"all","","Returns the set containing all flags.",49,[[],["quotavalidflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",49,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",49,[[["u32"]],["option",["quotavalidflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",49,[[["u32"]],["quotavalidflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",49,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",49,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",49,[[["self"],["quotavalidflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",49,[[["self"],["quotavalidflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",49,[[["self"],["quotavalidflags"]]]],[11,"remove","","Removes the specified flags in-place.",49,[[["self"],["quotavalidflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",49,[[["self"],["quotavalidflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",49,[[["self"],["quotavalidflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",49,[[["self"],["quotavalidflags"]],["quotavalidflags"]]],[11,"bitor_assign","","Adds the set of flags.",49,[[["self"],["quotavalidflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",49,[[["self"],["quotavalidflags"]],["quotavalidflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",49,[[["self"],["quotavalidflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",49,[[["self"],["quotavalidflags"]],["quotavalidflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",49,[[["self"],["quotavalidflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",49,[[["self"],["quotavalidflags"]],["quotavalidflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",49,[[["self"],["quotavalidflags"]]]],[11,"not","","Returns the complement of this set of flags.",49,[[["self"]],["quotavalidflags"]]],[11,"extend","","",49,[[["self"],["t"]]]],[11,"from_iter","","",49,[[["t"]],["quotavalidflags"]]],[11,"clone","","",50,[[["self"]],["dqblk"]]],[11,"default","","",50,[[],["dqblk"]]],[11,"blocks_hard_limit","","The absolute limit on disk quota blocks allocated.",50,[[["self"]],["option",["u64"]]]],[11,"set_blocks_hard_limit","","Set the absolute limit on disk quota blocks allocated.",50,[[["self"],["u64"]]]],[11,"blocks_soft_limit","","Preferred limit on disk quota blocks",50,[[["self"]],["option",["u64"]]]],[11,"set_blocks_soft_limit","","Set the preferred limit on disk quota blocks allocated.",50,[[["self"],["u64"]]]],[11,"occupied_space","","Current occupied space (bytes).",50,[[["self"]],["option",["u64"]]]],[11,"inodes_hard_limit","","Maximum number of allocated inodes.",50,[[["self"]],["option",["u64"]]]],[11,"set_inodes_hard_limit","","Set the maximum number of allocated inodes.",50,[[["self"],["u64"]]]],[11,"inodes_soft_limit","","Preferred inode limit",50,[[["self"]],["option",["u64"]]]],[11,"set_inodes_soft_limit","","Set the preferred limit of allocated inodes.",50,[[["self"],["u64"]]]],[11,"allocated_inodes","","Current number of allocated inodes.",50,[[["self"]],["option",["u64"]]]],[11,"block_time_limit","","Time limit for excessive disk use.",50,[[["self"]],["option",["u64"]]]],[11,"set_block_time_limit","","Set the time limit for excessive disk use.",50,[[["self"],["u64"]]]],[11,"inode_time_limit","","Time limit for excessive files.",50,[[["self"]],["option",["u64"]]]],[11,"set_inode_time_limit","","Set the time limit for excessive files.",50,[[["self"],["u64"]]]],[0,"reboot","nix::sys","Reboot/shutdown or enable/disable Ctrl-Alt-Delete.",N,N],[4,"RebootMode","nix::sys::reboot","How exactly should the system be rebooted.",N,N],[13,"RB_HALT_SYSTEM","","",51,N],[13,"RB_KEXEC","","",51,N],[13,"RB_POWER_OFF","","",51,N],[13,"RB_AUTOBOOT","","",51,N],[13,"RB_SW_SUSPEND","","",51,N],[5,"reboot","","",N,[[["rebootmode"]],["result",["void"]]]],[5,"set_cad_enabled","","Enable or disable the reboot keystroke (Ctrl-Alt-Delete).",N,[[["bool"]],["result"]]],[11,"clone","","",51,[[["self"]],["rebootmode"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"hash","","",51,N],[11,"cmp","","",51,[[["self"],["rebootmode"]],["ordering"]]],[11,"eq","","",51,[[["self"],["rebootmode"]],["bool"]]],[11,"partial_cmp","","",51,[[["self"],["rebootmode"]],["option",["ordering"]]]],[0,"select","nix::sys","",N,N],[17,"FD_SETSIZE","nix::sys::select","",N,N],[3,"FdSet","","",N,N],[5,"select","","Monitors file descriptors for readiness",N,[[["n"],["r"],["w"],["e"],["t"]],["result",["c_int"]]]],[5,"pselect","","Monitors file descriptors for readiness with an altered signal mask.",N,[[["n"],["r"],["w"],["e"],["t"],["s"]],["result",["c_int"]]]],[11,"clone","","",52,[[["self"]],["fdset"]]],[11,"new","","",52,[[],["fdset"]]],[11,"insert","","",52,[[["self"],["rawfd"]]]],[11,"remove","","",52,[[["self"],["rawfd"]]]],[11,"contains","","",52,[[["self"],["rawfd"]],["bool"]]],[11,"clear","","",52,[[["self"]]]],[11,"highest","","Finds the highest file descriptor in the set.",52,[[["self"]],["option",["rawfd"]]]],[0,"sendfile","nix::sys","",N,N],[5,"sendfile","nix::sys::sendfile","Copy up to `count` bytes to `out_fd` from `in_fd` starting at `offset`.",N,[[["rawfd"],["rawfd"],["option",["off_t"]],["usize"]],["result",["usize"]]]],[0,"signal","nix::sys","",N,N],[3,"SigEvent","nix::sys::signal","Used to request asynchronous notification of the completion of certain events, such as POSIX AIO and timers.",N,N],[3,"SignalIterator","","",N,N],[3,"SaFlags","","",N,N],[3,"SigSet","","",N,N],[3,"SigAction","","Action to take on receipt of a signal. Corresponds to `sigaction`.",N,N],[4,"Signal","","",N,N],[13,"SIGHUP","","",53,N],[13,"SIGINT","","",53,N],[13,"SIGQUIT","","",53,N],[13,"SIGILL","","",53,N],[13,"SIGTRAP","","",53,N],[13,"SIGABRT","","",53,N],[13,"SIGBUS","","",53,N],[13,"SIGFPE","","",53,N],[13,"SIGKILL","","",53,N],[13,"SIGUSR1","","",53,N],[13,"SIGSEGV","","",53,N],[13,"SIGUSR2","","",53,N],[13,"SIGPIPE","","",53,N],[13,"SIGALRM","","",53,N],[13,"SIGTERM","","",53,N],[13,"SIGSTKFLT","","",53,N],[13,"SIGCHLD","","",53,N],[13,"SIGCONT","","",53,N],[13,"SIGSTOP","","",53,N],[13,"SIGTSTP","","",53,N],[13,"SIGTTIN","","",53,N],[13,"SIGTTOU","","",53,N],[13,"SIGURG","","",53,N],[13,"SIGXCPU","","",53,N],[13,"SIGXFSZ","","",53,N],[13,"SIGVTALRM","","",53,N],[13,"SIGPROF","","",53,N],[13,"SIGWINCH","","",53,N],[13,"SIGIO","","",53,N],[13,"SIGPWR","","",53,N],[13,"SIGSYS","","",53,N],[4,"SigmaskHow","","",N,N],[13,"SIG_BLOCK","","",54,N],[13,"SIG_UNBLOCK","","",54,N],[13,"SIG_SETMASK","","",54,N],[4,"SigHandler","","A signal handler.",N,N],[13,"SigDfl","","Default signal handling.",55,N],[13,"SigIgn","","Request that the signal be ignored.",55,N],[13,"Handler","","Use the given signal-catching function, which takes in the signal.",55,N],[13,"SigAction","","Use the given signal-catching function, which takes in the signal, information about how the signal was generated, and a pointer to the threads `ucontext_t`.",55,N],[4,"SigevNotify","","Used to request asynchronous notification of certain events, for example, with POSIX AIO, POSIX message queues, and POSIX timers.",N,N],[13,"SigevNone","","No notification will be delivered",56,N],[13,"SigevSignal","","The signal given by `signal` will be delivered to the process.  The value in `si_value` will be present in the `si_value` field of the `siginfo_t` structure of the queued signal.",56,N],[12,"signal","nix::sys::signal::SigevNotify","",56,N],[12,"si_value","","",56,N],[13,"SigevThreadId","nix::sys::signal","The signal `signal` is queued to the thread whose LWP ID is given in `thread_id`.  The value stored in `si_value` will be present in the `si_value` of the `siginfo_t` structure of the queued signal.",56,N],[12,"signal","nix::sys::signal::SigevNotify","",56,N],[12,"thread_id","","",56,N],[12,"si_value","","",56,N],[5,"sigaction","nix::sys::signal","Changes the action taken by a process on receipt of a specific signal.",N,[[["signal"],["sigaction"]],["result",["sigaction"]]]],[5,"pthread_sigmask","","Manages the signal mask (set of blocked signals) for the calling thread.",N,[[["sigmaskhow"],["option",["sigset"]],["option",["sigset"]]],["result"]]],[5,"sigprocmask","","Examine and change blocked signals.",N,[[["sigmaskhow"],["option",["sigset"]],["option",["sigset"]]],["result"]]],[5,"kill","","",N,[[["pid"],["t"]],["result"]]],[5,"raise","","",N,[[["signal"]],["result"]]],[11,"clone","","",57,[[["self"]],["sigevent"]]],[11,"new","","Note: this constructor does not allow the user to set the `sigev_notify_kevent_flags` field.  That's considered ok because on FreeBSD at least those flags don't do anything useful.  That field is part of a union that shares space with the more genuinely useful fields.",57,[[["sigevnotify"]],["sigevent"]]],[11,"sigevent","","",57,[[["self"]],["sigevent"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"from","","",57,[[["sigevent"]],["self"]]],[6,"type_of_thread_id","","",N,N],[17,"NSIG","","",N,N],[17,"SIGIOT","","",N,N],[17,"SIGPOLL","","",N,N],[17,"SIGUNUSED","","",N,N],[11,"clone","","",53,[[["self"]],["signal"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"hash","","",53,N],[11,"cmp","","",53,[[["self"],["signal"]],["ordering"]]],[11,"eq","","",53,[[["self"],["signal"]],["bool"]]],[11,"partial_cmp","","",53,[[["self"],["signal"]],["option",["ordering"]]]],[11,"clone","","",58,[[["self"]],["signaliterator"]]],[11,"next","","",58,[[["self"]],["option",["signal"]]]],[11,"iterator","","",53,[[],["signaliterator"]]],[11,"from_c_int","","",53,[[["c_int"]],["result",["signal"]]]],[11,"eq","","",59,[[["self"],["saflags"]],["bool"]]],[11,"ne","","",59,[[["self"],["saflags"]],["bool"]]],[11,"clone","","",59,[[["self"]],["saflags"]]],[11,"partial_cmp","","",59,[[["self"],["saflags"]],["option",["ordering"]]]],[11,"lt","","",59,[[["self"],["saflags"]],["bool"]]],[11,"le","","",59,[[["self"],["saflags"]],["bool"]]],[11,"gt","","",59,[[["self"],["saflags"]],["bool"]]],[11,"ge","","",59,[[["self"],["saflags"]],["bool"]]],[11,"cmp","","",59,[[["self"],["saflags"]],["ordering"]]],[11,"hash","","",59,N],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[18,"SA_NOCLDSTOP","","",59,N],[18,"SA_NOCLDWAIT","","",59,N],[18,"SA_NODEFER","","",59,N],[18,"SA_ONSTACK","","",59,N],[18,"SA_RESETHAND","","",59,N],[18,"SA_RESTART","","",59,N],[18,"SA_SIGINFO","","",59,N],[11,"empty","","Returns an empty set of flags.",59,[[],["saflags"]]],[11,"all","","Returns the set containing all flags.",59,[[],["saflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",59,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",59,[[["c_int"]],["option",["saflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",59,[[["c_int"]],["saflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",59,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",59,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",59,[[["self"],["saflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",59,[[["self"],["saflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",59,[[["self"],["saflags"]]]],[11,"remove","","Removes the specified flags in-place.",59,[[["self"],["saflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",59,[[["self"],["saflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",59,[[["self"],["saflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",59,[[["self"],["saflags"]],["saflags"]]],[11,"bitor_assign","","Adds the set of flags.",59,[[["self"],["saflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",59,[[["self"],["saflags"]],["saflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",59,[[["self"],["saflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",59,[[["self"],["saflags"]],["saflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",59,[[["self"],["saflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",59,[[["self"],["saflags"]],["saflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",59,[[["self"],["saflags"]]]],[11,"not","","Returns the complement of this set of flags.",59,[[["self"]],["saflags"]]],[11,"extend","","",59,[[["self"],["t"]]]],[11,"from_iter","","",59,[[["t"]],["saflags"]]],[11,"clone","","",54,[[["self"]],["sigmaskhow"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"hash","","",54,N],[11,"cmp","","",54,[[["self"],["sigmaskhow"]],["ordering"]]],[11,"eq","","",54,[[["self"],["sigmaskhow"]],["bool"]]],[11,"partial_cmp","","",54,[[["self"],["sigmaskhow"]],["option",["ordering"]]]],[11,"clone","","",60,[[["self"]],["sigset"]]],[11,"all","","",60,[[],["sigset"]]],[11,"empty","","",60,[[],["sigset"]]],[11,"add","","",60,[[["self"],["signal"]]]],[11,"clear","","",60,[[["self"]]]],[11,"remove","","",60,[[["self"],["signal"]]]],[11,"contains","","",60,[[["self"],["signal"]],["bool"]]],[11,"extend","","",60,[[["self"],["sigset"]]]],[11,"thread_get_mask","","Gets the currently blocked (masked) set of signals for the calling thread.",60,[[],["result",["sigset"]]]],[11,"thread_set_mask","","Sets the set of signals as the signal mask for the calling thread.",60,[[["self"]],["result"]]],[11,"thread_block","","Adds the set of signals to the signal mask for the calling thread.",60,[[["self"]],["result"]]],[11,"thread_unblock","","Removes the set of signals from the signal mask for the calling thread.",60,[[["self"]],["result"]]],[11,"thread_swap_mask","","Sets the set of signals as the signal mask, and returns the old mask.",60,[[["self"],["sigmaskhow"]],["result",["sigset"]]]],[11,"wait","","Suspends execution of the calling thread until one of the signals in the signal mask becomes pending, and returns the accepted signal.",60,[[["self"]],["result",["signal"]]]],[11,"as_ref","","",60,[[["self"]],["sigset_t"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"clone","","",55,[[["self"]],["sighandler"]]],[11,"eq","","",55,[[["self"],["sighandler"]],["bool"]]],[11,"ne","","",55,[[["self"],["sighandler"]],["bool"]]],[11,"clone","","",61,[[["self"]],["sigaction"]]],[11,"new","","Creates a new action.",61,[[["sighandler"],["saflags"],["sigset"]],["sigaction"]]],[11,"flags","","Returns the flags set on the action.",61,[[["self"]],["saflags"]]],[11,"mask","","Returns the set of signals that are blocked during execution of the action's signal-catching function.",61,[[["self"]],["sigset"]]],[11,"handler","","Returns the action's handler.",61,[[["self"]],["sighandler"]]],[11,"clone","","",56,[[["self"]],["sigevnotify"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"eq","","",56,[[["self"],["sigevnotify"]],["bool"]]],[11,"ne","","",56,[[["self"],["sigevnotify"]],["bool"]]],[0,"signalfd","nix::sys","Interface for the `signalfd` syscall.",N,N],[3,"siginfo","nix::sys::signalfd","",N,N],[12,"ssi_signo","","",62,N],[12,"ssi_errno","","",62,N],[12,"ssi_code","","",62,N],[12,"ssi_pid","","",62,N],[12,"ssi_uid","","",62,N],[12,"ssi_fd","","",62,N],[12,"ssi_tid","","",62,N],[12,"ssi_band","","",62,N],[12,"ssi_overrun","","",62,N],[12,"ssi_trapno","","",62,N],[12,"ssi_status","","",62,N],[12,"ssi_int","","",62,N],[12,"ssi_ptr","","",62,N],[12,"ssi_utime","","",62,N],[12,"ssi_stime","","",62,N],[12,"ssi_addr","","",62,N],[3,"SfdFlags","","",N,N],[3,"SignalFd","","A helper struct for creating, reading and closing a `signalfd` instance.",N,N],[5,"signalfd","","Creates a new file descriptor for reading signals.",N,[[["rawfd"],["sigset"],["sfdflags"]],["result",["rawfd"]]]],[17,"SIGNALFD_NEW","","",N,N],[17,"SIGNALFD_SIGINFO_SIZE","","",N,N],[11,"eq","","",63,[[["self"],["sfdflags"]],["bool"]]],[11,"ne","","",63,[[["self"],["sfdflags"]],["bool"]]],[11,"clone","","",63,[[["self"]],["sfdflags"]]],[11,"partial_cmp","","",63,[[["self"],["sfdflags"]],["option",["ordering"]]]],[11,"lt","","",63,[[["self"],["sfdflags"]],["bool"]]],[11,"le","","",63,[[["self"],["sfdflags"]],["bool"]]],[11,"gt","","",63,[[["self"],["sfdflags"]],["bool"]]],[11,"ge","","",63,[[["self"],["sfdflags"]],["bool"]]],[11,"cmp","","",63,[[["self"],["sfdflags"]],["ordering"]]],[11,"hash","","",63,N],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[18,"SFD_NONBLOCK","","",63,N],[18,"SFD_CLOEXEC","","",63,N],[11,"empty","","Returns an empty set of flags.",63,[[],["sfdflags"]]],[11,"all","","Returns the set containing all flags.",63,[[],["sfdflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",63,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",63,[[["c_int"]],["option",["sfdflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",63,[[["c_int"]],["sfdflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",63,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",63,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",63,[[["self"],["sfdflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",63,[[["self"],["sfdflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",63,[[["self"],["sfdflags"]]]],[11,"remove","","Removes the specified flags in-place.",63,[[["self"],["sfdflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",63,[[["self"],["sfdflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",63,[[["self"],["sfdflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",63,[[["self"],["sfdflags"]],["sfdflags"]]],[11,"bitor_assign","","Adds the set of flags.",63,[[["self"],["sfdflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",63,[[["self"],["sfdflags"]],["sfdflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",63,[[["self"],["sfdflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",63,[[["self"],["sfdflags"]],["sfdflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",63,[[["self"],["sfdflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",63,[[["self"],["sfdflags"]],["sfdflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",63,[[["self"],["sfdflags"]]]],[11,"not","","Returns the complement of this set of flags.",63,[[["self"]],["sfdflags"]]],[11,"extend","","",63,[[["self"],["t"]]]],[11,"from_iter","","",63,[[["t"]],["sfdflags"]]],[11,"clone","","",64,[[["self"]],["signalfd"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"hash","","",64,N],[11,"eq","","",64,[[["self"],["signalfd"]],["bool"]]],[11,"ne","","",64,[[["self"],["signalfd"]],["bool"]]],[11,"new","","",64,[[["sigset"]],["result",["signalfd"]]]],[11,"with_flags","","",64,[[["sigset"],["sfdflags"]],["result",["signalfd"]]]],[11,"set_mask","","",64,[[["self"],["sigset"]],["result"]]],[11,"read_signal","","",64,[[["self"]],["result",["option"]]]],[11,"drop","","",64,[[["self"]]]],[11,"as_raw_fd","","",64,[[["self"]],["rawfd"]]],[11,"next","","",64,[[["self"]],["option"]]],[0,"socket","nix::sys","Socket interface functions",N,N],[3,"cmsghdr","nix::sys::socket","",N,N],[12,"cmsg_len","","",65,N],[12,"cmsg_level","","",65,N],[12,"cmsg_type","","",65,N],[3,"msghdr","","",N,N],[12,"msg_name","","",66,N],[12,"msg_namelen","","",66,N],[12,"msg_iov","","",66,N],[12,"msg_iovlen","","",66,N],[12,"msg_control","","",66,N],[12,"msg_controllen","","",66,N],[12,"msg_flags","","",66,N],[6,"sa_family_t","","",N,N],[3,"sockaddr","","",N,N],[12,"sa_family","","",67,N],[12,"sa_data","","",67,N],[3,"sockaddr_in","","",N,N],[12,"sin_family","","",68,N],[12,"sin_port","","",68,N],[12,"sin_addr","","",68,N],[12,"sin_zero","","",68,N],[3,"sockaddr_in6","","",N,N],[12,"sin6_family","","",69,N],[12,"sin6_port","","",69,N],[12,"sin6_flowinfo","","",69,N],[12,"sin6_addr","","",69,N],[12,"sin6_scope_id","","",69,N],[3,"sockaddr_storage","","",N,N],[12,"ss_family","","",70,N],[3,"sockaddr_un","","",N,N],[12,"sun_family","","",71,N],[12,"sun_path","","",71,N],[3,"UnixAddr","","A wrapper around `sockaddr_un`.",N,N],[12,"0","","",72,N],[12,"1","","",72,N],[3,"Ipv4Addr","","",N,N],[12,"0","","",73,N],[3,"Ipv6Addr","","",N,N],[12,"0","","",74,N],[3,"LinkAddr","","Hardware Address",N,N],[12,"0","","",75,N],[3,"NetlinkAddr","","",N,N],[12,"0","","",76,N],[3,"SockFlag","","Additional socket options",N,N],[3,"MsgFlags","","Flags for send/recv and their relatives",N,N],[3,"UnixCredentials","","Unix credentials of the sending process.",N,N],[3,"IpMembershipRequest","","Request for multicast socket operations",N,N],[3,"Ipv6MembershipRequest","","Request for ipv6 multicast socket operations",N,N],[3,"CmsgSpace","","A structure used to make room in a cmsghdr passed to recvmsg. The size and alignment match that of a cmsghdr followed by a T, but the fields are not accessible, as the actual types will change on a call to recvmsg.",N,N],[3,"RecvMsg","","",N,N],[12,"bytes","","",77,N],[12,"address","","",77,N],[12,"flags","","",77,N],[3,"CmsgIterator","","",N,N],[4,"AddressFamily","","These constants specify the protocol family to be used in `socket` and `socketpair`",N,N],[13,"Unix","","Local communication (see `unix(7)`)",78,N],[13,"Inet","","IPv4 Internet protocols (see `ip(7)`)",78,N],[13,"Inet6","","IPv6 Internet protocols (see `ipv6(7)`)",78,N],[13,"Netlink","","Kernel user interface device (see `netlink(7)`)",78,N],[13,"Packet","","Low level packet interface (see `packet(7)`)",78,N],[13,"Ax25","","Amateur radio AX.25 protocol",78,N],[13,"Ipx","","IPX - Novell protocols",78,N],[13,"AppleTalk","","AppleTalk",78,N],[13,"NetRom","","",78,N],[13,"Bridge","","",78,N],[13,"AtmPvc","","Access to raw ATM PVCs",78,N],[13,"X25","","ITU-T X.25 / ISO-8208 protocol (see `x25(7)`)",78,N],[13,"Rose","","",78,N],[13,"Decnet","","",78,N],[13,"NetBeui","","",78,N],[13,"Security","","",78,N],[13,"Key","","",78,N],[13,"Ash","","",78,N],[13,"Econet","","",78,N],[13,"AtmSvc","","",78,N],[13,"Rds","","",78,N],[13,"Sna","","",78,N],[13,"Irda","","",78,N],[13,"Pppox","","",78,N],[13,"Wanpipe","","",78,N],[13,"Llc","","",78,N],[13,"Ib","","",78,N],[13,"Mpls","","",78,N],[13,"Can","","",78,N],[13,"Tipc","","",78,N],[13,"Bluetooth","","",78,N],[13,"Iucv","","",78,N],[13,"RxRpc","","",78,N],[13,"Isdn","","",78,N],[13,"Phonet","","",78,N],[13,"Ieee802154","","",78,N],[13,"Caif","","",78,N],[13,"Alg","","Interface to kernel crypto API",78,N],[13,"Nfc","","",78,N],[13,"Vsock","","",78,N],[4,"SockAddr","","Represents a socket address",N,N],[13,"Inet","","",79,N],[13,"Unix","","",79,N],[13,"Netlink","","",79,N],[13,"Link","","Datalink address (MAC)",79,N],[4,"InetAddr","","",N,N],[13,"V4","","",80,N],[13,"V6","","",80,N],[4,"IpAddr","","",N,N],[13,"V4","","",81,N],[13,"V6","","",81,N],[4,"SockType","","These constants are used to specify the communication semantics when creating a socket with `socket()`",N,N],[13,"Stream","","Provides sequenced, reliable, two-way, connection- based byte streams.  An out-of-band data transmission mechanism may be supported.",82,N],[13,"Datagram","","Supports datagrams (connectionless, unreliable messages of a fixed maximum length).",82,N],[13,"SeqPacket","","Provides a sequenced, reliable, two-way connection- based data transmission path for datagrams of fixed maximum length; a consumer is required to read an entire packet with each input system call.",82,N],[13,"Raw","","Provides raw network protocol access.",82,N],[13,"Rdm","","Provides a reliable datagram layer that does not guarantee ordering.",82,N],[4,"SockProtocol","","Constants used in `socket` and `socketpair` to specify the protocol to use.",N,N],[13,"Tcp","","TCP protocol (ip(7))",83,N],[13,"Udp","","UDP protocol (ip(7))",83,N],[4,"ControlMessage","","A type-safe wrapper around a single control message. More types may be added to this enum; do not exhaustively pattern-match it. Further reading",N,N],[13,"ScmRights","","A message of type `SCM_RIGHTS`, containing an array of file descriptors passed between processes.",84,N],[13,"ScmTimestamp","","A message of type `SCM_TIMESTAMP`, containing the time the packet was received by the kernel.",84,N],[4,"SockLevel","","The protocol level at which to get / set socket options. Used as an argument to `getsockopt` and `setsockopt`.",N,N],[13,"Socket","","",85,N],[13,"Tcp","","",85,N],[13,"Ip","","",85,N],[13,"Ipv6","","",85,N],[13,"Udp","","",85,N],[13,"Netlink","","",85,N],[4,"Shutdown","","",N,N],[13,"Read","","Further receptions will be disallowed.",86,N],[13,"Write","","Further  transmissions will be disallowed.",86,N],[13,"Both","","Further receptions and transmissions will be disallowed.",86,N],[5,"sendmsg","","Send data in scatter-gather vectors to a socket, possibly accompanied by ancillary data. Optionally direct the message at the given address, as with sendto.",N,N],[5,"recvmsg","","Receive message in scatter-gather vectors from a socket, and optionally receive ancillary data into the provided buffer. If no ancillary data is desired, use () as the type parameter.",N,N],[5,"socket","","Create an endpoint for communication",N,[[["addressfamily"],["socktype"],["sockflag"],["t"]],["result",["rawfd"]]]],[5,"socketpair","","Create a pair of connected sockets",N,[[["addressfamily"],["socktype"],["t"],["sockflag"]],["result"]]],[5,"listen","","Listen for connections on a socket",N,[[["rawfd"],["usize"]],["result"]]],[5,"bind","","Bind a name to a socket",N,[[["rawfd"],["sockaddr"]],["result"]]],[5,"accept","","Accept a connection on a socket",N,[[["rawfd"]],["result",["rawfd"]]]],[5,"accept4","","Accept a connection on a socket",N,[[["rawfd"],["sockflag"]],["result",["rawfd"]]]],[5,"connect","","Initiate a connection on a socket",N,[[["rawfd"],["sockaddr"]],["result"]]],[5,"recv","","Receive data from a connection-oriented socket. Returns the number of bytes read",N,N],[5,"recvfrom","","Receive data from a connectionless or connection-oriented socket. Returns the number of bytes read and the socket address of the sender.",N,N],[5,"sendto","","Send a message to a socket",N,N],[5,"send","","Send data to a connection-oriented socket. Returns the number of bytes read",N,N],[5,"getsockopt","","Get the current value for the requested socket option",N,[[["rawfd"],["o"]],["result"]]],[5,"setsockopt","","Sets the value for the requested socket option",N,N],[5,"getpeername","","Get the address of the peer connected to the socket `fd`.",N,[[["rawfd"]],["result",["sockaddr"]]]],[5,"getsockname","","Get the current address to which the socket `fd` is bound.",N,[[["rawfd"]],["result",["sockaddr"]]]],[5,"sockaddr_storage_to_addr","","Return the appropriate `SockAddr` type from a `sockaddr_storage` of a certain size.  In C this would usually be done by casting.  The `len` argument should be the number of bytes in the `sockaddr_storage` that are actually allocated and valid.  It must be at least as large as all the useful parts of the structure.  Note that in the case of a `sockaddr_un`, `len` need not include the terminating null.",N,[[["sockaddr_storage"],["usize"]],["result",["sockaddr"]]]],[5,"shutdown","","Shut down part of a full-duplex connection.",N,[[["rawfd"],["shutdown"]],["result"]]],[11,"clone","","",76,[[["self"]],["netlinkaddr"]]],[11,"eq","","",76,[[["self"],["self"]],["bool"]]],[11,"hash","","",76,[[["self"],["h"]]]],[11,"new","","",76,[[["u32"],["u32"]],["netlinkaddr"]]],[11,"pid","","",76,[[["self"]],["u32"]]],[11,"groups","","",76,[[["self"]],["u32"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"clone","","",75,[[["self"]],["linkaddr"]]],[11,"family","","Always AF_PACKET",75,[[["self"]],["addressfamily"]]],[11,"protocol","","Physical-layer protocol",75,[[["self"]],["u16"]]],[11,"ifindex","","Interface number",75,[[["self"]],["usize"]]],[11,"hatype","","ARP hardware type",75,[[["self"]],["u16"]]],[11,"pkttype","","Packet type",75,[[["self"]],["u8"]]],[11,"halen","","Length of MAC address",75,[[["self"]],["usize"]]],[11,"addr","","Physical-layer address (MAC)",75,N],[11,"eq","","",75,[[["self"],["self"]],["bool"]]],[11,"hash","","",75,[[["self"],["h"]]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"clone","","",78,[[["self"]],["addressfamily"]]],[11,"eq","","",78,[[["self"],["addressfamily"]],["bool"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"hash","","",78,N],[11,"from_i32","","Create a new `AddressFamily` from an integer value retrieved from `libc`, usually from the `sa_family` field of a `sockaddr`.",78,[[["i32"]],["option",["addressfamily"]]]],[11,"from_std","","",80,[[["socketaddr"]],["inetaddr"]]],[11,"new","","",80,[[["ipaddr"],["u16"]],["inetaddr"]]],[11,"ip","","Gets the IP address associated with this socket address.",80,[[["self"]],["ipaddr"]]],[11,"port","","Gets the port number associated with this socket address",80,[[["self"]],["u16"]]],[11,"to_std","","",80,[[["self"]],["socketaddr"]]],[11,"to_str","","",80,[[["self"]],["string"]]],[11,"eq","","",80,[[["self"],["inetaddr"]],["bool"]]],[11,"hash","","",80,[[["self"],["h"]]]],[11,"clone","","",80,[[["self"]],["inetaddr"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"clone","","",81,[[["self"]],["ipaddr"]]],[11,"new_v4","","Create a new IpAddr that contains an IPv4 address.",81,[[["u8"],["u8"],["u8"],["u8"]],["ipaddr"]]],[11,"new_v6","","Create a new IpAddr that contains an IPv6 address.",81,[[["u16"],["u16"],["u16"],["u16"],["u16"],["u16"],["u16"],["u16"]],["ipaddr"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"new","","",73,[[["u8"],["u8"],["u8"],["u8"]],["ipv4addr"]]],[11,"from_std","","",73,[[["ipv4addr"]],["ipv4addr"]]],[11,"any","","",73,[[],["ipv4addr"]]],[11,"octets","","",73,N],[11,"to_std","","",73,[[["self"]],["ipv4addr"]]],[11,"eq","","",73,[[["self"],["ipv4addr"]],["bool"]]],[11,"hash","","",73,[[["self"],["h"]]]],[11,"clone","","",73,[[["self"]],["ipv4addr"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"clone","","",74,[[["self"]],["ipv6addr"]]],[11,"new","","",74,[[["u16"],["u16"],["u16"],["u16"],["u16"],["u16"],["u16"],["u16"]],["ipv6addr"]]],[11,"from_std","","",74,[[["ipv6addr"]],["ipv6addr"]]],[11,"segments","","Return the eight 16-bit segments that make up this address",74,N],[11,"to_std","","",74,[[["self"]],["ipv6addr"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new sockaddr_un representing a filesystem path.",72,[[["p"]],["result",["unixaddr"]]]],[11,"new_abstract","","Create a new `sockaddr_un` representing an address in the \"abstract namespace\".",72,N],[11,"path","","If this address represents a filesystem path, return that path.",72,[[["self"]],["option",["path"]]]],[11,"as_abstract","","If this address represents an abstract socket, return its name.",72,[[["self"]],["option"]]],[11,"eq","","",72,[[["self"],["unixaddr"]],["bool"]]],[11,"hash","","",72,[[["self"],["h"]]]],[11,"clone","","",72,[[["self"]],["unixaddr"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"new_inet","","",79,[[["inetaddr"]],["sockaddr"]]],[11,"new_unix","","",79,[[["p"]],["result",["sockaddr"]]]],[11,"new_netlink","","",79,[[["u32"],["u32"]],["sockaddr"]]],[11,"family","","",79,[[["self"]],["addressfamily"]]],[11,"to_str","","",79,[[["self"]],["string"]]],[11,"from_libc_sockaddr","","Creates a `SockAddr` struct from libc's sockaddr.",79,N],[11,"as_ffi_pair","","Conversion from nix's SockAddr type to the underlying libc sockaddr type.",79,N],[11,"eq","","",79,[[["self"],["sockaddr"]],["bool"]]],[11,"hash","","",79,[[["self"],["h"]]]],[11,"clone","","",79,[[["self"]],["sockaddr"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[0,"sockopt","","",N,N],[3,"ReuseAddr","nix::sys::socket::sockopt","",N,N],[3,"ReusePort","","",N,N],[3,"TcpNoDelay","","",N,N],[3,"Linger","","",N,N],[3,"IpAddMembership","","",N,N],[3,"IpDropMembership","","",N,N],[3,"Ipv6AddMembership","","",N,N],[3,"Ipv6DropMembership","","",N,N],[3,"IpMulticastTtl","","",N,N],[3,"IpMulticastLoop","","",N,N],[3,"ReceiveTimeout","","",N,N],[3,"SendTimeout","","",N,N],[3,"Broadcast","","",N,N],[3,"OobInline","","",N,N],[3,"SocketError","","",N,N],[3,"KeepAlive","","",N,N],[3,"PeerCredentials","","",N,N],[3,"TcpKeepIdle","","",N,N],[3,"RcvBuf","","",N,N],[3,"SndBuf","","",N,N],[3,"RcvBufForce","","",N,N],[3,"SndBufForce","","",N,N],[3,"SockType","","",N,N],[3,"AcceptConn","","",N,N],[3,"OriginalDst","","",N,N],[3,"ReceiveTimestamp","","",N,N],[3,"IpTransparent","","",N,N],[3,"Mark","","",N,N],[11,"clone","","",87,[[["self"]],["reuseaddr"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"set","","",87,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"get","","",87,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"clone","","",88,[[["self"]],["reuseport"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"set","","",88,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"get","","",88,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"clone","","",89,[[["self"]],["tcpnodelay"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"set","","",89,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"get","","",89,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"clone","","",90,[[["self"]],["linger"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"set","","",90,[[["self"],["rawfd"],["linger"]],["result"]]],[11,"get","","",90,[[["self"],["rawfd"]],["result",["linger"]]]],[11,"clone","","",91,[[["self"]],["ipaddmembership"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"set","","",91,[[["self"],["rawfd"],["ipmembershiprequest"]],["result"]]],[11,"clone","","",92,[[["self"]],["ipdropmembership"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"set","","",92,[[["self"],["rawfd"],["ipmembershiprequest"]],["result"]]],[11,"clone","","",93,[[["self"]],["ipv6addmembership"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"set","","",93,[[["self"],["rawfd"],["ipv6membershiprequest"]],["result"]]],[11,"clone","","",94,[[["self"]],["ipv6dropmembership"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"set","","",94,[[["self"],["rawfd"],["ipv6membershiprequest"]],["result"]]],[11,"clone","","",95,[[["self"]],["ipmulticastttl"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"set","","",95,[[["self"],["rawfd"],["u8"]],["result"]]],[11,"get","","",95,[[["self"],["rawfd"]],["result",["u8"]]]],[11,"clone","","",96,[[["self"]],["ipmulticastloop"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"set","","",96,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"get","","",96,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"clone","","",97,[[["self"]],["receivetimeout"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"set","","",97,[[["self"],["rawfd"],["timeval"]],["result"]]],[11,"get","","",97,[[["self"],["rawfd"]],["result",["timeval"]]]],[11,"clone","","",98,[[["self"]],["sendtimeout"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"set","","",98,[[["self"],["rawfd"],["timeval"]],["result"]]],[11,"get","","",98,[[["self"],["rawfd"]],["result",["timeval"]]]],[11,"clone","","",99,[[["self"]],["broadcast"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"set","","",99,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"get","","",99,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"clone","","",100,[[["self"]],["oobinline"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"set","","",100,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"get","","",100,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"clone","","",101,[[["self"]],["socketerror"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"get","","",101,[[["self"],["rawfd"]],["result",["i32"]]]],[11,"clone","","",102,[[["self"]],["keepalive"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"set","","",102,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"get","","",102,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"clone","","",103,[[["self"]],["peercredentials"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"get","","",103,[[["self"],["rawfd"]],["result",["unixcredentials"]]]],[11,"clone","","",104,[[["self"]],["tcpkeepidle"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result"]]],[11,"set","","",104,[[["self"],["rawfd"],["u32"]],["result"]]],[11,"get","","",104,[[["self"],["rawfd"]],["result",["u32"]]]],[11,"clone","","",105,[[["self"]],["rcvbuf"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"set","","",105,[[["self"],["rawfd"],["usize"]],["result"]]],[11,"get","","",105,[[["self"],["rawfd"]],["result",["usize"]]]],[11,"clone","","",106,[[["self"]],["sndbuf"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"set","","",106,[[["self"],["rawfd"],["usize"]],["result"]]],[11,"get","","",106,[[["self"],["rawfd"]],["result",["usize"]]]],[11,"clone","","",107,[[["self"]],["rcvbufforce"]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result"]]],[11,"set","","",107,[[["self"],["rawfd"],["usize"]],["result"]]],[11,"clone","","",108,[[["self"]],["sndbufforce"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"set","","",108,[[["self"],["rawfd"],["usize"]],["result"]]],[11,"clone","","",109,[[["self"]],["socktype"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"get","","",109,[[["self"],["rawfd"]],["result",["socktype"]]]],[11,"clone","","",110,[[["self"]],["acceptconn"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"get","","",110,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"clone","","",111,[[["self"]],["originaldst"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"get","","",111,[[["self"],["rawfd"]],["result",["sockaddr_in"]]]],[11,"clone","","",112,[[["self"]],["receivetimestamp"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"set","","",112,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"get","","",112,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"clone","","",113,[[["self"]],["iptransparent"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"set","","",113,[[["self"],["rawfd"],["bool"]],["result"]]],[11,"get","","",113,[[["self"],["rawfd"]],["result",["bool"]]]],[11,"clone","","",114,[[["self"]],["mark"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"set","","",114,[[["self"],["rawfd"],["u32"]],["result"]]],[11,"get","","",114,[[["self"],["rawfd"]],["result",["u32"]]]],[8,"GetSockOpt","nix::sys::socket","Represents a socket option that can be accessed or set. Used as an argument to `getsockopt`",N,N],[16,"Val","","",115,N],[8,"SetSockOpt","","Represents a socket option that can be accessed or set. Used as an argument to `setsockopt`",N,N],[16,"Val","","",116,N],[11,"clone","","",82,[[["self"]],["socktype"]]],[11,"eq","","",82,[[["self"],["socktype"]],["bool"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"clone","","",83,[[["self"]],["sockprotocol"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"hash","","",83,N],[11,"eq","","",83,[[["self"],["sockprotocol"]],["bool"]]],[11,"eq","","",117,[[["self"],["sockflag"]],["bool"]]],[11,"ne","","",117,[[["self"],["sockflag"]],["bool"]]],[11,"clone","","",117,[[["self"]],["sockflag"]]],[11,"partial_cmp","","",117,[[["self"],["sockflag"]],["option",["ordering"]]]],[11,"lt","","",117,[[["self"],["sockflag"]],["bool"]]],[11,"le","","",117,[[["self"],["sockflag"]],["bool"]]],[11,"gt","","",117,[[["self"],["sockflag"]],["bool"]]],[11,"ge","","",117,[[["self"],["sockflag"]],["bool"]]],[11,"cmp","","",117,[[["self"],["sockflag"]],["ordering"]]],[11,"hash","","",117,N],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[18,"SOCK_NONBLOCK","","Set non-blocking mode on the new socket",117,N],[18,"SOCK_CLOEXEC","","Set close-on-exec on the new descriptor",117,N],[11,"empty","","Returns an empty set of flags.",117,[[],["sockflag"]]],[11,"all","","Returns the set containing all flags.",117,[[],["sockflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",117,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",117,[[["c_int"]],["option",["sockflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",117,[[["c_int"]],["sockflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",117,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",117,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",117,[[["self"],["sockflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",117,[[["self"],["sockflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",117,[[["self"],["sockflag"]]]],[11,"remove","","Removes the specified flags in-place.",117,[[["self"],["sockflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",117,[[["self"],["sockflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",117,[[["self"],["sockflag"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",117,[[["self"],["sockflag"]],["sockflag"]]],[11,"bitor_assign","","Adds the set of flags.",117,[[["self"],["sockflag"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",117,[[["self"],["sockflag"]],["sockflag"]]],[11,"bitxor_assign","","Toggles the set of flags.",117,[[["self"],["sockflag"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",117,[[["self"],["sockflag"]],["sockflag"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",117,[[["self"],["sockflag"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",117,[[["self"],["sockflag"]],["sockflag"]]],[11,"sub_assign","","Disables all flags enabled in the set.",117,[[["self"],["sockflag"]]]],[11,"not","","Returns the complement of this set of flags.",117,[[["self"]],["sockflag"]]],[11,"extend","","",117,[[["self"],["t"]]]],[11,"from_iter","","",117,[[["t"]],["sockflag"]]],[11,"eq","","",118,[[["self"],["msgflags"]],["bool"]]],[11,"ne","","",118,[[["self"],["msgflags"]],["bool"]]],[11,"clone","","",118,[[["self"]],["msgflags"]]],[11,"partial_cmp","","",118,[[["self"],["msgflags"]],["option",["ordering"]]]],[11,"lt","","",118,[[["self"],["msgflags"]],["bool"]]],[11,"le","","",118,[[["self"],["msgflags"]],["bool"]]],[11,"gt","","",118,[[["self"],["msgflags"]],["bool"]]],[11,"ge","","",118,[[["self"],["msgflags"]],["bool"]]],[11,"cmp","","",118,[[["self"],["msgflags"]],["ordering"]]],[11,"hash","","",118,N],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[18,"MSG_OOB","","Sends or requests out-of-band data on sockets that support this notion (e.g., of type `Stream`); the underlying protocol must also support out-of-band data.",118,N],[18,"MSG_PEEK","","Peeks at an incoming message. The data is treated as unread and the next `recv()` or similar function shall still return this data.",118,N],[18,"MSG_DONTWAIT","","Enables nonblocking operation; if the operation would block, `EAGAIN` or `EWOULDBLOCK` is returned.  This provides similar behavior to setting the `O_NONBLOCK` flag (via the `fcntl` `F_SETFL` operation), but differs in that `MSG_DONTWAIT` is a per- call option, whereas `O_NONBLOCK` is a setting on the open file description (see open(2)), which will affect all threads in the calling process and as well as other processes that hold file descriptors referring to the same open file description.",118,N],[18,"MSG_CTRUNC","","Receive flags: Control Data was discarded (buffer too small)",118,N],[18,"MSG_TRUNC","","For raw (`Packet`), Internet datagram (since Linux 2.4.27/2.6.8), netlink (since Linux 2.6.22) and UNIX datagram (since Linux 3.4) sockets: return the real length of the packet or datagram, even when it was longer than the passed buffer. Not implemented for UNIX domain (unix(7)) sockets.",118,N],[18,"MSG_EOR","","Terminates a record (when this notion is supported, as for sockets of type `SeqPacket`).",118,N],[18,"MSG_ERRQUEUE","","This flag specifies that queued errors should be received from the socket error queue. (For more details, see recvfrom(2))",118,N],[18,"MSG_CMSG_CLOEXEC","","Set the `close-on-exec` flag for the file descriptor received via a UNIX domain file descriptor using the `SCM_RIGHTS` operation (described in unix(7)). This flag is useful for the same reasons as the `O_CLOEXEC` flag of open(2).",118,N],[11,"empty","","Returns an empty set of flags.",118,[[],["msgflags"]]],[11,"all","","Returns the set containing all flags.",118,[[],["msgflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",118,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",118,[[["c_int"]],["option",["msgflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",118,[[["c_int"]],["msgflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",118,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",118,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",118,[[["self"],["msgflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",118,[[["self"],["msgflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",118,[[["self"],["msgflags"]]]],[11,"remove","","Removes the specified flags in-place.",118,[[["self"],["msgflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",118,[[["self"],["msgflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",118,[[["self"],["msgflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",118,[[["self"],["msgflags"]],["msgflags"]]],[11,"bitor_assign","","Adds the set of flags.",118,[[["self"],["msgflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",118,[[["self"],["msgflags"]],["msgflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",118,[[["self"],["msgflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",118,[[["self"],["msgflags"]],["msgflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",118,[[["self"],["msgflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",118,[[["self"],["msgflags"]],["msgflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",118,[[["self"],["msgflags"]]]],[11,"not","","Returns the complement of this set of flags.",118,[[["self"]],["msgflags"]]],[11,"extend","","",118,[[["self"],["t"]]]],[11,"from_iter","","",118,[[["t"]],["msgflags"]]],[11,"clone","","",119,[[["self"]],["unixcredentials"]]],[11,"pid","","Returns the process identifier",119,[[["self"]],["pid_t"]]],[11,"uid","","Returns the user identifier",119,[[["self"]],["uid_t"]]],[11,"gid","","Returns the group identifier",119,[[["self"]],["gid_t"]]],[11,"eq","","",119,[[["self"],["self"]],["bool"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"clone","","",120,[[["self"]],["ipmembershiprequest"]]],[11,"new","","Instantiate a new `IpMembershipRequest`",120,[[["ipv4addr"],["option",["ipv4addr"]]],["self"]]],[11,"eq","","",120,[[["self"],["self"]],["bool"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"clone","","",121,[[["self"]],["ipv6membershiprequest"]]],[11,"new","","Instantiate a new `Ipv6MembershipRequest`",121,[[["ipv6addr"]],["self"]]],[11,"eq","","",121,[[["self"],["self"]],["bool"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a CmsgSpace. The structure is used only for space, so the fields are uninitialized.",122,[[],["self"]]],[11,"cmsgs","","Iterate over the valid control messages pointed to by this msghdr.",77,[[["self"]],["cmsgiterator"]]],[11,"next","","",123,[[["self"]],["option",["controlmessage"]]]],[11,"clone","","",85,[[["self"]],["socklevel"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"hash","","",85,N],[11,"eq","","",85,[[["self"],["socklevel"]],["bool"]]],[11,"clone","","",86,[[["self"]],["shutdown"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"hash","","",86,N],[11,"eq","","",86,[[["self"],["shutdown"]],["bool"]]],[0,"stat","nix::sys","",N,N],[6,"dev_t","nix::sys::stat","",N,N],[3,"FileStat","","",N,N],[12,"st_dev","","",124,N],[12,"st_ino","","",124,N],[12,"st_nlink","","",124,N],[12,"st_mode","","",124,N],[12,"st_uid","","",124,N],[12,"st_gid","","",124,N],[12,"st_rdev","","",124,N],[12,"st_size","","",124,N],[12,"st_blksize","","",124,N],[12,"st_blocks","","",124,N],[12,"st_atime","","",124,N],[12,"st_atime_nsec","","",124,N],[12,"st_mtime","","",124,N],[12,"st_mtime_nsec","","",124,N],[12,"st_ctime","","",124,N],[12,"st_ctime_nsec","","",124,N],[5,"FileStat","","",N,N],[3,"SFlag","","",N,N],[3,"Mode","","",N,N],[4,"FchmodatFlags","","Flags for `fchmodat` function.",N,N],[13,"FollowSymlink","","",125,N],[13,"NoFollowSymlink","","",125,N],[5,"mknod","","",N,[[["p"],["sflag"],["mode"],["dev_t"]],["result"]]],[5,"major","","",N,[[["dev_t"]],["u64"]]],[5,"minor","","",N,[[["dev_t"]],["u64"]]],[5,"makedev","","",N,[[["u64"],["u64"]],["dev_t"]]],[5,"umask","","",N,[[["mode"]],["mode"]]],[5,"stat","","",N,[[["p"]],["result",["filestat"]]]],[5,"lstat","","",N,[[["p"]],["result",["filestat"]]]],[5,"fstat","","",N,[[["rawfd"]],["result",["filestat"]]]],[5,"fstatat","","",N,[[["rawfd"],["p"],["atflags"]],["result",["filestat"]]]],[5,"fchmod","","Change the file permission bits of the file specified by a file descriptor.",N,[[["rawfd"],["mode"]],["result"]]],[5,"fchmodat","","Change the file permission bits.",N,[[["option",["rawfd"]],["p"],["mode"],["fchmodatflags"]],["result"]]],[11,"eq","","",126,[[["self"],["sflag"]],["bool"]]],[11,"ne","","",126,[[["self"],["sflag"]],["bool"]]],[11,"clone","","",126,[[["self"]],["sflag"]]],[11,"partial_cmp","","",126,[[["self"],["sflag"]],["option",["ordering"]]]],[11,"lt","","",126,[[["self"],["sflag"]],["bool"]]],[11,"le","","",126,[[["self"],["sflag"]],["bool"]]],[11,"gt","","",126,[[["self"],["sflag"]],["bool"]]],[11,"ge","","",126,[[["self"],["sflag"]],["bool"]]],[11,"cmp","","",126,[[["self"],["sflag"]],["ordering"]]],[11,"hash","","",126,N],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[18,"S_IFIFO","","",126,N],[18,"S_IFCHR","","",126,N],[18,"S_IFDIR","","",126,N],[18,"S_IFBLK","","",126,N],[18,"S_IFREG","","",126,N],[18,"S_IFLNK","","",126,N],[18,"S_IFSOCK","","",126,N],[18,"S_IFMT","","",126,N],[11,"empty","","Returns an empty set of flags.",126,[[],["sflag"]]],[11,"all","","Returns the set containing all flags.",126,[[],["sflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",126,[[["self"]],["mode_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",126,[[["mode_t"]],["option",["sflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",126,[[["mode_t"]],["sflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",126,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",126,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",126,[[["self"],["sflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",126,[[["self"],["sflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",126,[[["self"],["sflag"]]]],[11,"remove","","Removes the specified flags in-place.",126,[[["self"],["sflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",126,[[["self"],["sflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",126,[[["self"],["sflag"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",126,[[["self"],["sflag"]],["sflag"]]],[11,"bitor_assign","","Adds the set of flags.",126,[[["self"],["sflag"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",126,[[["self"],["sflag"]],["sflag"]]],[11,"bitxor_assign","","Toggles the set of flags.",126,[[["self"],["sflag"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",126,[[["self"],["sflag"]],["sflag"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",126,[[["self"],["sflag"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",126,[[["self"],["sflag"]],["sflag"]]],[11,"sub_assign","","Disables all flags enabled in the set.",126,[[["self"],["sflag"]]]],[11,"not","","Returns the complement of this set of flags.",126,[[["self"]],["sflag"]]],[11,"extend","","",126,[[["self"],["t"]]]],[11,"from_iter","","",126,[[["t"]],["sflag"]]],[11,"eq","","",127,[[["self"],["mode"]],["bool"]]],[11,"ne","","",127,[[["self"],["mode"]],["bool"]]],[11,"clone","","",127,[[["self"]],["mode"]]],[11,"partial_cmp","","",127,[[["self"],["mode"]],["option",["ordering"]]]],[11,"lt","","",127,[[["self"],["mode"]],["bool"]]],[11,"le","","",127,[[["self"],["mode"]],["bool"]]],[11,"gt","","",127,[[["self"],["mode"]],["bool"]]],[11,"ge","","",127,[[["self"],["mode"]],["bool"]]],[11,"cmp","","",127,[[["self"],["mode"]],["ordering"]]],[11,"hash","","",127,N],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[18,"S_IRWXU","","",127,N],[18,"S_IRUSR","","",127,N],[18,"S_IWUSR","","",127,N],[18,"S_IXUSR","","",127,N],[18,"S_IRWXG","","",127,N],[18,"S_IRGRP","","",127,N],[18,"S_IWGRP","","",127,N],[18,"S_IXGRP","","",127,N],[18,"S_IRWXO","","",127,N],[18,"S_IROTH","","",127,N],[18,"S_IWOTH","","",127,N],[18,"S_IXOTH","","",127,N],[18,"S_ISUID","","",127,N],[18,"S_ISGID","","",127,N],[18,"S_ISVTX","","",127,N],[11,"empty","","Returns an empty set of flags.",127,[[],["mode"]]],[11,"all","","Returns the set containing all flags.",127,[[],["mode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",127,[[["self"]],["mode_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",127,[[["mode_t"]],["option",["mode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",127,[[["mode_t"]],["mode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",127,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",127,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",127,[[["self"],["mode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",127,[[["self"],["mode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",127,[[["self"],["mode"]]]],[11,"remove","","Removes the specified flags in-place.",127,[[["self"],["mode"]]]],[11,"toggle","","Toggles the specified flags in-place.",127,[[["self"],["mode"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",127,[[["self"],["mode"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",127,[[["self"],["mode"]],["mode"]]],[11,"bitor_assign","","Adds the set of flags.",127,[[["self"],["mode"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",127,[[["self"],["mode"]],["mode"]]],[11,"bitxor_assign","","Toggles the set of flags.",127,[[["self"],["mode"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",127,[[["self"],["mode"]],["mode"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",127,[[["self"],["mode"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",127,[[["self"],["mode"]],["mode"]]],[11,"sub_assign","","Disables all flags enabled in the set.",127,[[["self"],["mode"]]]],[11,"not","","Returns the complement of this set of flags.",127,[[["self"]],["mode"]]],[11,"extend","","",127,[[["self"],["t"]]]],[11,"from_iter","","",127,[[["t"]],["mode"]]],[11,"clone","","",125,[[["self"]],["fchmodatflags"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[0,"statfs","nix::sys","",N,N],[5,"statfs","nix::sys::statfs","",N,[[["p"],["statfs"]],["result"]]],[5,"fstatfs","","",N,[[["t"],["statfs"]],["result"]]],[0,"statvfs","nix::sys","Get filesystem statistics",N,N],[3,"FsFlags","nix::sys::statvfs","File system mount Flags",N,N],[3,"Statvfs","","Wrapper around the POSIX `statvfs` struct",N,N],[5,"statvfs","","Return a `Statvfs` object with information about the `path`",N,[[["p"]],["result",["statvfs"]]]],[5,"fstatvfs","","Return a `Statvfs` object with information about `fd`",N,[[["t"]],["result",["statvfs"]]]],[11,"eq","","",128,[[["self"],["fsflags"]],["bool"]]],[11,"ne","","",128,[[["self"],["fsflags"]],["bool"]]],[11,"clone","","",128,[[["self"]],["fsflags"]]],[11,"partial_cmp","","",128,[[["self"],["fsflags"]],["option",["ordering"]]]],[11,"lt","","",128,[[["self"],["fsflags"]],["bool"]]],[11,"le","","",128,[[["self"],["fsflags"]],["bool"]]],[11,"gt","","",128,[[["self"],["fsflags"]],["bool"]]],[11,"ge","","",128,[[["self"],["fsflags"]],["bool"]]],[11,"cmp","","",128,[[["self"],["fsflags"]],["ordering"]]],[11,"hash","","",128,N],[11,"default","","",128,[[],["fsflags"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[18,"ST_RDONLY","","Read Only",128,N],[18,"ST_NOSUID","","Do not allow the set-uid bits to have an effect",128,N],[18,"ST_NODEV","","Do not interpret character or block-special devices",128,N],[18,"ST_NOEXEC","","Do not allow execution of binaries on the filesystem",128,N],[18,"ST_SYNCHRONOUS","","All IO should be done synchronously",128,N],[18,"ST_MANDLOCK","","Allow mandatory locks on the filesystem",128,N],[18,"ST_WRITE","","Write on file/directory/symlink",128,N],[18,"ST_APPEND","","Append-only file",128,N],[18,"ST_IMMUTABLE","","Immutable file",128,N],[18,"ST_NOATIME","","Do not update access times on files",128,N],[18,"ST_NODIRATIME","","Do not update access times on files",128,N],[18,"ST_RELATIME","","Update access time relative to modify/change time",128,N],[11,"empty","","Returns an empty set of flags.",128,[[],["fsflags"]]],[11,"all","","Returns the set containing all flags.",128,[[],["fsflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",128,[[["self"]],["c_ulong"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",128,[[["c_ulong"]],["option",["fsflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",128,[[["c_ulong"]],["fsflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",128,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",128,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",128,[[["self"],["fsflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",128,[[["self"],["fsflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",128,[[["self"],["fsflags"]]]],[11,"remove","","Removes the specified flags in-place.",128,[[["self"],["fsflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",128,[[["self"],["fsflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",128,[[["self"],["fsflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",128,[[["self"],["fsflags"]],["fsflags"]]],[11,"bitor_assign","","Adds the set of flags.",128,[[["self"],["fsflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",128,[[["self"],["fsflags"]],["fsflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",128,[[["self"],["fsflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",128,[[["self"],["fsflags"]],["fsflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",128,[[["self"],["fsflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",128,[[["self"],["fsflags"]],["fsflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",128,[[["self"],["fsflags"]]]],[11,"not","","Returns the complement of this set of flags.",128,[[["self"]],["fsflags"]]],[11,"extend","","",128,[[["self"],["t"]]]],[11,"from_iter","","",128,[[["t"]],["fsflags"]]],[11,"clone","","",129,[[["self"]],["statvfs"]]],[11,"block_size","","get the file system block size",129,[[["self"]],["c_ulong"]]],[11,"fragment_size","","Get the fundamental file system block size",129,[[["self"]],["c_ulong"]]],[11,"blocks","","Get the number of blocks.",129,[[["self"]],["fsblkcnt_t"]]],[11,"blocks_free","","Get the number of free blocks in the file system",129,[[["self"]],["fsblkcnt_t"]]],[11,"blocks_available","","Get the number of free blocks for unprivileged users",129,[[["self"]],["fsblkcnt_t"]]],[11,"files","","Get the total number of file inodes",129,[[["self"]],["fsfilcnt_t"]]],[11,"files_free","","Get the number of free file inodes",129,[[["self"]],["fsfilcnt_t"]]],[11,"files_available","","Get the number of free file inodes for unprivileged users",129,[[["self"]],["fsfilcnt_t"]]],[11,"filesystem_id","","Get the file system id",129,[[["self"]],["c_ulong"]]],[11,"flags","","Get the mount flags",129,[[["self"]],["fsflags"]]],[11,"name_max","","Get the maximum filename length",129,[[["self"]],["c_ulong"]]],[0,"termios","nix::sys","An interface for controlling asynchronous communication ports",N,N],[17,"NCCS","nix::sys::termios","",N,N],[17,"_POSIX_VDISABLE","","",N,N],[3,"Termios","","Stores settings for the termios API",N,N],[12,"input_flags","","Input mode flags (see `termios.c_iflag` documentation)",130,N],[12,"output_flags","","Output mode flags (see `termios.c_oflag` documentation)",130,N],[12,"control_flags","","Control mode flags (see `termios.c_cflag` documentation)",130,N],[12,"local_flags","","Local mode flags (see `termios.c_lflag` documentation)",130,N],[12,"control_chars","","Control characters (see `termios.c_cc` documentation)",130,N],[3,"InputFlags","","Flags for configuring the input mode of a terminal",N,N],[3,"OutputFlags","","Flags for configuring the output mode of a terminal",N,N],[3,"ControlFlags","","Flags for setting the control mode of a terminal",N,N],[3,"LocalFlags","","Flags for setting any local modes",N,N],[4,"BaudRate","","Baud rates supported by the system.",N,N],[13,"B0","","",131,N],[13,"B50","","",131,N],[13,"B75","","",131,N],[13,"B110","","",131,N],[13,"B134","","",131,N],[13,"B150","","",131,N],[13,"B200","","",131,N],[13,"B300","","",131,N],[13,"B600","","",131,N],[13,"B1200","","",131,N],[13,"B1800","","",131,N],[13,"B2400","","",131,N],[13,"B4800","","",131,N],[13,"B9600","","",131,N],[13,"B19200","","",131,N],[13,"B38400","","",131,N],[13,"B57600","","",131,N],[13,"B115200","","",131,N],[13,"B230400","","",131,N],[13,"B460800","","",131,N],[13,"B500000","","",131,N],[13,"B576000","","",131,N],[13,"B921600","","",131,N],[13,"B1000000","","",131,N],[13,"B1152000","","",131,N],[13,"B1500000","","",131,N],[13,"B2000000","","",131,N],[13,"B2500000","","",131,N],[13,"B3000000","","",131,N],[13,"B3500000","","",131,N],[13,"B4000000","","",131,N],[4,"SetArg","","Specify when a port configuration change should occur.",N,N],[13,"TCSANOW","","The change will occur immediately",132,N],[13,"TCSADRAIN","","The change occurs after all output has been written",132,N],[13,"TCSAFLUSH","","Same as `TCSADRAIN`, but will also flush the input buffer",132,N],[4,"FlushArg","","Specify a combination of the input and output buffers to flush",N,N],[13,"TCIFLUSH","","Flush data that was received but not read",133,N],[13,"TCOFLUSH","","Flush data written but not transmitted",133,N],[13,"TCIOFLUSH","","Flush both received data not read and written data not transmitted",133,N],[4,"FlowArg","","Specify how transmission flow should be altered",N,N],[13,"TCOOFF","","Suspend transmission",134,N],[13,"TCOON","","Resume transmission",134,N],[13,"TCIOFF","","Transmit a STOP character, which should disable a connected terminal device",134,N],[13,"TCION","","Transmit a START character, which should re-enable a connected terminal device",134,N],[4,"SpecialCharacterIndices","","Indices into the `termios.c_cc` array for special characters.",N,N],[13,"VDISCARD","","",135,N],[13,"VEOF","","",135,N],[13,"VEOL","","",135,N],[13,"VEOL2","","",135,N],[13,"VERASE","","",135,N],[13,"VINTR","","",135,N],[13,"VKILL","","",135,N],[13,"VLNEXT","","",135,N],[13,"VMIN","","",135,N],[13,"VQUIT","","",135,N],[13,"VREPRINT","","",135,N],[13,"VSTART","","",135,N],[13,"VSTOP","","",135,N],[13,"VSUSP","","",135,N],[13,"VSWTC","","",135,N],[13,"VTIME","","",135,N],[13,"VWERASE","","",135,N],[5,"cfgetispeed","","Get input baud rate (see cfgetispeed(3p)).",N,[[["termios"]],["baudrate"]]],[5,"cfgetospeed","","Get output baud rate (see cfgetospeed(3p)).",N,[[["termios"]],["baudrate"]]],[5,"cfsetispeed","","Set input baud rate (see cfsetispeed(3p)).",N,[[["termios"],["baudrate"]],["result"]]],[5,"cfsetospeed","","Set output baud rate (see cfsetospeed(3p)).",N,[[["termios"],["baudrate"]],["result"]]],[5,"cfsetspeed","","Set both the input and output baud rates (see termios(3)).",N,[[["termios"],["baudrate"]],["result"]]],[5,"cfmakeraw","","Configures the port to something like the \"raw\" mode of the old Version 7 terminal driver (see termios(3)).",N,[[["termios"]]]],[5,"tcgetattr","","Return the configuration of a port tcgetattr(3p)).",N,[[["rawfd"]],["result",["termios"]]]],[5,"tcsetattr","","Set the configuration for a terminal (see tcsetattr(3p)).",N,[[["rawfd"],["setarg"],["termios"]],["result"]]],[5,"tcdrain","","Block until all output data is written (see tcdrain(3p)).",N,[[["rawfd"]],["result"]]],[5,"tcflow","","Suspend or resume the transmission or reception of data (see tcflow(3p)).",N,[[["rawfd"],["flowarg"]],["result"]]],[5,"tcflush","","Discard data in the output or input queue (see tcflush(3p)).",N,[[["rawfd"],["flusharg"]],["result"]]],[5,"tcsendbreak","","Send a break for a specific duration (see tcsendbreak(3p)).",N,[[["rawfd"],["c_int"]],["result"]]],[5,"tcgetsid","","Get the session controlled by the given terminal (see tcgetsid(3)).",N,[[["rawfd"]],["result",["pid"]]]],[11,"clone","","",130,[[["self"]],["termios"]]],[11,"from","","",130,[[["termios"]],["self"]]],[11,"clone","","",131,[[["self"]],["baudrate"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"hash","","",131,N],[11,"cmp","","",131,[[["self"],["baudrate"]],["ordering"]]],[11,"eq","","",131,[[["self"],["baudrate"]],["bool"]]],[11,"partial_cmp","","",131,[[["self"],["baudrate"]],["option",["ordering"]]]],[11,"from","","",131,[[["speed_t"]],["baudrate"]]],[11,"clone","","",132,[[["self"]],["setarg"]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result"]]],[11,"hash","","",132,N],[11,"cmp","","",132,[[["self"],["setarg"]],["ordering"]]],[11,"eq","","",132,[[["self"],["setarg"]],["bool"]]],[11,"partial_cmp","","",132,[[["self"],["setarg"]],["option",["ordering"]]]],[11,"clone","","",133,[[["self"]],["flusharg"]]],[11,"fmt","","",133,[[["self"],["formatter"]],["result"]]],[11,"hash","","",133,N],[11,"cmp","","",133,[[["self"],["flusharg"]],["ordering"]]],[11,"eq","","",133,[[["self"],["flusharg"]],["bool"]]],[11,"partial_cmp","","",133,[[["self"],["flusharg"]],["option",["ordering"]]]],[11,"clone","","",134,[[["self"]],["flowarg"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"hash","","",134,N],[11,"cmp","","",134,[[["self"],["flowarg"]],["ordering"]]],[11,"eq","","",134,[[["self"],["flowarg"]],["bool"]]],[11,"partial_cmp","","",134,[[["self"],["flowarg"]],["option",["ordering"]]]],[11,"clone","","",135,[[["self"]],["specialcharacterindices"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result"]]],[11,"hash","","",135,N],[11,"cmp","","",135,[[["self"],["specialcharacterindices"]],["ordering"]]],[11,"eq","","",135,[[["self"],["specialcharacterindices"]],["bool"]]],[11,"partial_cmp","","",135,[[["self"],["specialcharacterindices"]],["option",["ordering"]]]],[11,"eq","","",136,[[["self"],["inputflags"]],["bool"]]],[11,"ne","","",136,[[["self"],["inputflags"]],["bool"]]],[11,"clone","","",136,[[["self"]],["inputflags"]]],[11,"partial_cmp","","",136,[[["self"],["inputflags"]],["option",["ordering"]]]],[11,"lt","","",136,[[["self"],["inputflags"]],["bool"]]],[11,"le","","",136,[[["self"],["inputflags"]],["bool"]]],[11,"gt","","",136,[[["self"],["inputflags"]],["bool"]]],[11,"ge","","",136,[[["self"],["inputflags"]],["bool"]]],[11,"cmp","","",136,[[["self"],["inputflags"]],["ordering"]]],[11,"hash","","",136,N],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[18,"IGNBRK","","",136,N],[18,"BRKINT","","",136,N],[18,"IGNPAR","","",136,N],[18,"PARMRK","","",136,N],[18,"INPCK","","",136,N],[18,"ISTRIP","","",136,N],[18,"INLCR","","",136,N],[18,"IGNCR","","",136,N],[18,"ICRNL","","",136,N],[18,"IXON","","",136,N],[18,"IXOFF","","",136,N],[18,"IXANY","","",136,N],[18,"IMAXBEL","","",136,N],[18,"IUTF8","","",136,N],[11,"empty","","Returns an empty set of flags.",136,[[],["inputflags"]]],[11,"all","","Returns the set containing all flags.",136,[[],["inputflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",136,[[["self"]],["tcflag_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",136,[[["tcflag_t"]],["option",["inputflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",136,[[["tcflag_t"]],["inputflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",136,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",136,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",136,[[["self"],["inputflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",136,[[["self"],["inputflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",136,[[["self"],["inputflags"]]]],[11,"remove","","Removes the specified flags in-place.",136,[[["self"],["inputflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",136,[[["self"],["inputflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",136,[[["self"],["inputflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",136,[[["self"],["inputflags"]],["inputflags"]]],[11,"bitor_assign","","Adds the set of flags.",136,[[["self"],["inputflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",136,[[["self"],["inputflags"]],["inputflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",136,[[["self"],["inputflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",136,[[["self"],["inputflags"]],["inputflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",136,[[["self"],["inputflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",136,[[["self"],["inputflags"]],["inputflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",136,[[["self"],["inputflags"]]]],[11,"not","","Returns the complement of this set of flags.",136,[[["self"]],["inputflags"]]],[11,"extend","","",136,[[["self"],["t"]]]],[11,"from_iter","","",136,[[["t"]],["inputflags"]]],[11,"eq","","",137,[[["self"],["outputflags"]],["bool"]]],[11,"ne","","",137,[[["self"],["outputflags"]],["bool"]]],[11,"clone","","",137,[[["self"]],["outputflags"]]],[11,"partial_cmp","","",137,[[["self"],["outputflags"]],["option",["ordering"]]]],[11,"lt","","",137,[[["self"],["outputflags"]],["bool"]]],[11,"le","","",137,[[["self"],["outputflags"]],["bool"]]],[11,"gt","","",137,[[["self"],["outputflags"]],["bool"]]],[11,"ge","","",137,[[["self"],["outputflags"]],["bool"]]],[11,"cmp","","",137,[[["self"],["outputflags"]],["ordering"]]],[11,"hash","","",137,N],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[18,"OPOST","","",137,N],[18,"OLCUC","","",137,N],[18,"ONLCR","","",137,N],[18,"OCRNL","","",137,N],[18,"ONOCR","","",137,N],[18,"ONLRET","","",137,N],[18,"OFILL","","",137,N],[18,"OFDEL","","",137,N],[18,"NL0","","",137,N],[18,"NL1","","",137,N],[18,"CR0","","",137,N],[18,"CR1","","",137,N],[18,"CR2","","",137,N],[18,"CR3","","",137,N],[18,"TAB0","","",137,N],[18,"TAB1","","",137,N],[18,"TAB2","","",137,N],[18,"TAB3","","",137,N],[18,"XTABS","","",137,N],[18,"BS0","","",137,N],[18,"BS1","","",137,N],[18,"VT0","","",137,N],[18,"VT1","","",137,N],[18,"FF0","","",137,N],[18,"FF1","","",137,N],[18,"NLDLY","","",137,N],[18,"CRDLY","","",137,N],[18,"TABDLY","","",137,N],[18,"BSDLY","","",137,N],[18,"VTDLY","","",137,N],[18,"FFDLY","","",137,N],[11,"empty","","Returns an empty set of flags.",137,[[],["outputflags"]]],[11,"all","","Returns the set containing all flags.",137,[[],["outputflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",137,[[["self"]],["tcflag_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",137,[[["tcflag_t"]],["option",["outputflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",137,[[["tcflag_t"]],["outputflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",137,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",137,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",137,[[["self"],["outputflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",137,[[["self"],["outputflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",137,[[["self"],["outputflags"]]]],[11,"remove","","Removes the specified flags in-place.",137,[[["self"],["outputflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",137,[[["self"],["outputflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",137,[[["self"],["outputflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",137,[[["self"],["outputflags"]],["outputflags"]]],[11,"bitor_assign","","Adds the set of flags.",137,[[["self"],["outputflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",137,[[["self"],["outputflags"]],["outputflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",137,[[["self"],["outputflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",137,[[["self"],["outputflags"]],["outputflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",137,[[["self"],["outputflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",137,[[["self"],["outputflags"]],["outputflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",137,[[["self"],["outputflags"]]]],[11,"not","","Returns the complement of this set of flags.",137,[[["self"]],["outputflags"]]],[11,"extend","","",137,[[["self"],["t"]]]],[11,"from_iter","","",137,[[["t"]],["outputflags"]]],[11,"eq","","",138,[[["self"],["controlflags"]],["bool"]]],[11,"ne","","",138,[[["self"],["controlflags"]],["bool"]]],[11,"clone","","",138,[[["self"]],["controlflags"]]],[11,"partial_cmp","","",138,[[["self"],["controlflags"]],["option",["ordering"]]]],[11,"lt","","",138,[[["self"],["controlflags"]],["bool"]]],[11,"le","","",138,[[["self"],["controlflags"]],["bool"]]],[11,"gt","","",138,[[["self"],["controlflags"]],["bool"]]],[11,"ge","","",138,[[["self"],["controlflags"]],["bool"]]],[11,"cmp","","",138,[[["self"],["controlflags"]],["ordering"]]],[11,"hash","","",138,N],[11,"fmt","","",138,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result"]]],[18,"CS5","","",138,N],[18,"CS6","","",138,N],[18,"CS7","","",138,N],[18,"CS8","","",138,N],[18,"CSTOPB","","",138,N],[18,"CREAD","","",138,N],[18,"PARENB","","",138,N],[18,"PARODD","","",138,N],[18,"HUPCL","","",138,N],[18,"CLOCAL","","",138,N],[18,"CRTSCTS","","",138,N],[18,"CBAUD","","",138,N],[18,"CMSPAR","","",138,N],[18,"CIBAUD","","",138,N],[18,"CBAUDEX","","",138,N],[18,"CSIZE","","",138,N],[11,"empty","","Returns an empty set of flags.",138,[[],["controlflags"]]],[11,"all","","Returns the set containing all flags.",138,[[],["controlflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",138,[[["self"]],["tcflag_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",138,[[["tcflag_t"]],["option",["controlflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",138,[[["tcflag_t"]],["controlflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",138,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",138,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",138,[[["self"],["controlflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",138,[[["self"],["controlflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",138,[[["self"],["controlflags"]]]],[11,"remove","","Removes the specified flags in-place.",138,[[["self"],["controlflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",138,[[["self"],["controlflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",138,[[["self"],["controlflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",138,[[["self"],["controlflags"]],["controlflags"]]],[11,"bitor_assign","","Adds the set of flags.",138,[[["self"],["controlflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",138,[[["self"],["controlflags"]],["controlflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",138,[[["self"],["controlflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",138,[[["self"],["controlflags"]],["controlflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",138,[[["self"],["controlflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",138,[[["self"],["controlflags"]],["controlflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",138,[[["self"],["controlflags"]]]],[11,"not","","Returns the complement of this set of flags.",138,[[["self"]],["controlflags"]]],[11,"extend","","",138,[[["self"],["t"]]]],[11,"from_iter","","",138,[[["t"]],["controlflags"]]],[11,"eq","","",139,[[["self"],["localflags"]],["bool"]]],[11,"ne","","",139,[[["self"],["localflags"]],["bool"]]],[11,"clone","","",139,[[["self"]],["localflags"]]],[11,"partial_cmp","","",139,[[["self"],["localflags"]],["option",["ordering"]]]],[11,"lt","","",139,[[["self"],["localflags"]],["bool"]]],[11,"le","","",139,[[["self"],["localflags"]],["bool"]]],[11,"gt","","",139,[[["self"],["localflags"]],["bool"]]],[11,"ge","","",139,[[["self"],["localflags"]],["bool"]]],[11,"cmp","","",139,[[["self"],["localflags"]],["ordering"]]],[11,"hash","","",139,N],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[18,"ECHOKE","","",139,N],[18,"ECHOE","","",139,N],[18,"ECHOK","","",139,N],[18,"ECHO","","",139,N],[18,"ECHONL","","",139,N],[18,"ECHOPRT","","",139,N],[18,"ECHOCTL","","",139,N],[18,"ISIG","","",139,N],[18,"ICANON","","",139,N],[18,"IEXTEN","","",139,N],[18,"EXTPROC","","",139,N],[18,"TOSTOP","","",139,N],[18,"FLUSHO","","",139,N],[18,"PENDIN","","",139,N],[18,"NOFLSH","","",139,N],[11,"empty","","Returns an empty set of flags.",139,[[],["localflags"]]],[11,"all","","Returns the set containing all flags.",139,[[],["localflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",139,[[["self"]],["tcflag_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",139,[[["tcflag_t"]],["option",["localflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",139,[[["tcflag_t"]],["localflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",139,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",139,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",139,[[["self"],["localflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",139,[[["self"],["localflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",139,[[["self"],["localflags"]]]],[11,"remove","","Removes the specified flags in-place.",139,[[["self"],["localflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",139,[[["self"],["localflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",139,[[["self"],["localflags"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",139,[[["self"],["localflags"]],["localflags"]]],[11,"bitor_assign","","Adds the set of flags.",139,[[["self"],["localflags"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",139,[[["self"],["localflags"]],["localflags"]]],[11,"bitxor_assign","","Toggles the set of flags.",139,[[["self"],["localflags"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",139,[[["self"],["localflags"]],["localflags"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",139,[[["self"],["localflags"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",139,[[["self"],["localflags"]],["localflags"]]],[11,"sub_assign","","Disables all flags enabled in the set.",139,[[["self"],["localflags"]]]],[11,"not","","Returns the complement of this set of flags.",139,[[["self"]],["localflags"]]],[11,"extend","","",139,[[["self"],["t"]]]],[11,"from_iter","","",139,[[["t"]],["localflags"]]],[0,"time","nix::sys","",N,N],[3,"TimeSpec","nix::sys::time","",N,N],[3,"TimeVal","","",N,N],[8,"TimeValLike","","",N,N],[11,"zero","","",140,[[],["self"]]],[11,"hours","","",140,[[["i64"]],["self"]]],[11,"minutes","","",140,[[["i64"]],["self"]]],[10,"seconds","","",140,[[["i64"]],["self"]]],[10,"milliseconds","","",140,[[["i64"]],["self"]]],[10,"microseconds","","",140,[[["i64"]],["self"]]],[10,"nanoseconds","","",140,[[["i64"]],["self"]]],[11,"num_hours","","",140,[[["self"]],["i64"]]],[11,"num_minutes","","",140,[[["self"]],["i64"]]],[10,"num_seconds","","",140,[[["self"]],["i64"]]],[10,"num_milliseconds","","",140,[[["self"]],["i64"]]],[10,"num_microseconds","","",140,[[["self"]],["i64"]]],[10,"num_nanoseconds","","",140,[[["self"]],["i64"]]],[11,"clone","","",141,[[["self"]],["timespec"]]],[11,"as_ref","","",141,[[["self"]],["timespec"]]],[11,"fmt","","",141,[[["self"],["formatter"]],["result"]]],[11,"eq","","",141,[[["self"],["timespec"]],["bool"]]],[11,"cmp","","",141,[[["self"],["timespec"]],["ordering"]]],[11,"partial_cmp","","",141,[[["self"],["timespec"]],["option",["ordering"]]]],[11,"seconds","","",141,[[["i64"]],["timespec"]]],[11,"milliseconds","","",141,[[["i64"]],["timespec"]]],[11,"microseconds","","Makes a new `TimeSpec` with given number of microseconds.",141,[[["i64"]],["timespec"]]],[11,"nanoseconds","","Makes a new `TimeSpec` with given number of nanoseconds.",141,[[["i64"]],["timespec"]]],[11,"num_seconds","","",141,[[["self"]],["i64"]]],[11,"num_milliseconds","","",141,[[["self"]],["i64"]]],[11,"num_microseconds","","",141,[[["self"]],["i64"]]],[11,"num_nanoseconds","","",141,[[["self"]],["i64"]]],[11,"tv_sec","","",141,[[["self"]],["time_t"]]],[11,"tv_nsec","","",141,[[["self"]],["c_long"]]],[11,"neg","","",141,[[["self"]],["timespec"]]],[11,"add","","",141,[[["self"],["timespec"]],["timespec"]]],[11,"sub","","",141,[[["self"],["timespec"]],["timespec"]]],[11,"mul","","",141,[[["self"],["i32"]],["timespec"]]],[11,"div","","",141,[[["self"],["i32"]],["timespec"]]],[11,"fmt","","",141,[[["self"],["formatter"]],["result"]]],[11,"clone","","",142,[[["self"]],["timeval"]]],[11,"as_ref","","",142,[[["self"]],["timeval"]]],[11,"fmt","","",142,[[["self"],["formatter"]],["result"]]],[11,"eq","","",142,[[["self"],["timeval"]],["bool"]]],[11,"cmp","","",142,[[["self"],["timeval"]],["ordering"]]],[11,"partial_cmp","","",142,[[["self"],["timeval"]],["option",["ordering"]]]],[11,"seconds","","",142,[[["i64"]],["timeval"]]],[11,"milliseconds","","",142,[[["i64"]],["timeval"]]],[11,"microseconds","","Makes a new `TimeVal` with given number of microseconds.",142,[[["i64"]],["timeval"]]],[11,"nanoseconds","","Makes a new `TimeVal` with given number of nanoseconds.  Some precision will be lost",142,[[["i64"]],["timeval"]]],[11,"num_seconds","","",142,[[["self"]],["i64"]]],[11,"num_milliseconds","","",142,[[["self"]],["i64"]]],[11,"num_microseconds","","",142,[[["self"]],["i64"]]],[11,"num_nanoseconds","","",142,[[["self"]],["i64"]]],[11,"tv_sec","","",142,[[["self"]],["time_t"]]],[11,"tv_usec","","",142,[[["self"]],["suseconds_t"]]],[11,"neg","","",142,[[["self"]],["timeval"]]],[11,"add","","",142,[[["self"],["timeval"]],["timeval"]]],[11,"sub","","",142,[[["self"],["timeval"]],["timeval"]]],[11,"mul","","",142,[[["self"],["i32"]],["timeval"]]],[11,"div","","",142,[[["self"],["i32"]],["timeval"]]],[11,"fmt","","",142,[[["self"],["formatter"]],["result"]]],[0,"uio","nix::sys","",N,N],[3,"RemoteIoVec","nix::sys::uio","A slice of memory in a remote process, starting at address `base` and consisting of `len` bytes.",N,N],[12,"base","","The starting address of this slice (`iov_base`).",143,N],[12,"len","","The number of bytes in this slice (`iov_len`).",143,N],[3,"IoVec","","",N,N],[5,"writev","","",N,N],[5,"readv","","",N,N],[5,"pwritev","","Write to `fd` at `offset` from buffers in `iov`.",N,N],[5,"preadv","","Read from `fd` at `offset` filling buffers in `iov`.",N,N],[5,"pwrite","","",N,N],[5,"pread","","",N,N],[5,"process_vm_writev","","Write data directly to another process's virtual memory (see [`process_vm_writev`(2)]).",N,N],[5,"process_vm_readv","","Read data directly from another process's virtual memory (see [`process_vm_readv`(2)]).",N,N],[11,"clone","","",143,[[["self"]],["remoteiovec"]]],[11,"as_slice","","",144,N],[11,"from_slice","","",144,N],[11,"from_mut_slice","","",144,N],[0,"utsname","nix::sys","",N,N],[3,"UtsName","nix::sys::utsname","",N,N],[5,"uname","","",N,[[],["utsname"]]],[11,"clone","","",145,[[["self"]],["utsname"]]],[11,"sysname","","",145,[[["self"]],["str"]]],[11,"nodename","","",145,[[["self"]],["str"]]],[11,"release","","",145,[[["self"]],["str"]]],[11,"version","","",145,[[["self"]],["str"]]],[11,"machine","","",145,[[["self"]],["str"]]],[0,"wait","nix::sys","",N,N],[3,"WaitPidFlag","nix::sys::wait","",N,N],[4,"WaitStatus","","Possible return values from `wait()` or `waitpid()`.",N,N],[13,"Exited","","The process exited normally (as with `exit()` or returning from `main`) with the given exit code. This case matches the C macro `WIFEXITED(status)`; the second field is `WEXITSTATUS(status)`.",146,N],[13,"Signaled","","The process was killed by the given signal. The third field indicates whether the signal generated a core dump. This case matches the C macro `WIFSIGNALED(status)`; the last two fields correspond to `WTERMSIG(status)` and `WCOREDUMP(status)`.",146,N],[13,"Stopped","","The process is alive, but was stopped by the given signal. This is only reported if `WaitPidFlag::WUNTRACED` was passed. This case matches the C macro `WIFSTOPPED(status)`; the second field is `WSTOPSIG(status)`.",146,N],[13,"PtraceEvent","","The traced process was stopped by a `PTRACE_EVENT_*` event. See [`nix::sys::ptrace`] and [`ptrace`(2)] for more information. All currently-defined events use `SIGTRAP` as the signal; the third field is the `PTRACE_EVENT_*` value of the event.",146,N],[13,"PtraceSyscall","","The traced process was stopped by execution of a system call, and `PTRACE_O_TRACESYSGOOD` is in effect. See [`ptrace`(2)] for more information.",146,N],[13,"Continued","","The process was previously stopped but has resumed execution after receiving a `SIGCONT` signal. This is only reported if `WaitPidFlag::WCONTINUED` was passed. This case matches the C macro `WIFCONTINUED(status)`.",146,N],[13,"StillAlive","","There are currently no state changes to report in any awaited child process. This is only returned if `WaitPidFlag::WNOHANG` was used (otherwise `wait()` or `waitpid()` would block until there was something to report).",146,N],[5,"waitpid","","",N,[[["p"],["option",["waitpidflag"]]],["result",["waitstatus"]]]],[5,"wait","","",N,[[],["result",["waitstatus"]]]],[11,"eq","","",147,[[["self"],["waitpidflag"]],["bool"]]],[11,"ne","","",147,[[["self"],["waitpidflag"]],["bool"]]],[11,"clone","","",147,[[["self"]],["waitpidflag"]]],[11,"partial_cmp","","",147,[[["self"],["waitpidflag"]],["option",["ordering"]]]],[11,"lt","","",147,[[["self"],["waitpidflag"]],["bool"]]],[11,"le","","",147,[[["self"],["waitpidflag"]],["bool"]]],[11,"gt","","",147,[[["self"],["waitpidflag"]],["bool"]]],[11,"ge","","",147,[[["self"],["waitpidflag"]],["bool"]]],[11,"cmp","","",147,[[["self"],["waitpidflag"]],["ordering"]]],[11,"hash","","",147,N],[11,"fmt","","",147,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",147,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",147,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",147,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",147,[[["self"],["formatter"]],["result"]]],[18,"WNOHANG","","",147,N],[18,"WUNTRACED","","",147,N],[18,"WEXITED","","",147,N],[18,"WCONTINUED","","",147,N],[18,"WSTOPPED","","",147,N],[18,"WNOWAIT","","Don't reap, just poll status.",147,N],[18,"__WNOTHREAD","","Don't wait on children of other threads in this group",147,N],[18,"__WALL","","Wait on all children, regardless of type",147,N],[18,"__WCLONE","","",147,N],[11,"empty","","Returns an empty set of flags.",147,[[],["waitpidflag"]]],[11,"all","","Returns the set containing all flags.",147,[[],["waitpidflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",147,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",147,[[["c_int"]],["option",["waitpidflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",147,[[["c_int"]],["waitpidflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",147,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",147,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",147,[[["self"],["waitpidflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",147,[[["self"],["waitpidflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",147,[[["self"],["waitpidflag"]]]],[11,"remove","","Removes the specified flags in-place.",147,[[["self"],["waitpidflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",147,[[["self"],["waitpidflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",147,[[["self"],["waitpidflag"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",147,[[["self"],["waitpidflag"]],["waitpidflag"]]],[11,"bitor_assign","","Adds the set of flags.",147,[[["self"],["waitpidflag"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",147,[[["self"],["waitpidflag"]],["waitpidflag"]]],[11,"bitxor_assign","","Toggles the set of flags.",147,[[["self"],["waitpidflag"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",147,[[["self"],["waitpidflag"]],["waitpidflag"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",147,[[["self"],["waitpidflag"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",147,[[["self"],["waitpidflag"]],["waitpidflag"]]],[11,"sub_assign","","Disables all flags enabled in the set.",147,[[["self"],["waitpidflag"]]]],[11,"not","","Returns the complement of this set of flags.",147,[[["self"]],["waitpidflag"]]],[11,"extend","","",147,[[["self"],["t"]]]],[11,"from_iter","","",147,[[["t"]],["waitpidflag"]]],[11,"eq","","",146,[[["self"],["waitstatus"]],["bool"]]],[11,"ne","","",146,[[["self"],["waitstatus"]],["bool"]]],[11,"clone","","",146,[[["self"]],["waitstatus"]]],[11,"fmt","","",146,[[["self"],["formatter"]],["result"]]],[11,"pid","","Extracts the PID from the WaitStatus unless it equals StillAlive.",146,[[["self"]],["option",["pid"]]]],[11,"from_raw","","Convert a raw `wstatus` as returned by `waitpid`/`wait` into a `WaitStatus`",146,[[["pid"],["i32"]],["result",["waitstatus"]]]],[0,"ucontext","nix","",N,N],[3,"UContext","nix::ucontext","",N,N],[11,"clone","","",148,[[["self"]],["ucontext"]]],[11,"get","","",148,[[],["result",["ucontext"]]]],[11,"set","","",148,[[["self"]],["result"]]],[11,"sigmask_mut","","",148,[[["self"]],["sigset"]]],[11,"sigmask","","",148,[[["self"]],["sigset"]]],[0,"unistd","nix","Safe wrappers around functions found in libc \"unistd.h\" header",N,N],[3,"Uid","nix::unistd","User identifier",N,N],[3,"Gid","","Group identifier",N,N],[3,"Pid","","Process identifier",N,N],[4,"ForkResult","","Represents the successful result of calling `fork`",N,N],[13,"Parent","","",149,N],[12,"child","nix::unistd::ForkResult","",149,N],[13,"Child","nix::unistd","",149,N],[4,"Whence","","Directive that tells [`lseek`] and [`lseek64`] what the offset is relative to.",N,N],[13,"SeekSet","","Specify an offset relative to the start of the file.",150,N],[13,"SeekCur","","Specify an offset relative to the current file location.",150,N],[13,"SeekEnd","","Specify an offset relative to the end of the file.",150,N],[13,"SeekData","","Specify an offset relative to the next location in the file greater than or equal to offset that contains some data. If offset points to some data, then the file offset is set to offset.",150,N],[13,"SeekHole","","Specify an offset relative to the next hole in the file greater than or equal to offset. If offset points into the middle of a hole, then the file offset should be set to offset. If there is no hole past offset, then the file offset should be adjusted to the end of the file (i.e., there is an implicit hole at the end of any file).",150,N],[4,"PathconfVar","","Variable names for `pathconf`",N,N],[13,"FILESIZEBITS","","Minimum number of bits needed to represent, as a signed integer value, the maximum size of a regular file allowed in the specified directory.",151,N],[13,"LINK_MAX","","Maximum number of links to a single file.",151,N],[13,"MAX_CANON","","Maximum number of bytes in a terminal canonical input line.",151,N],[13,"MAX_INPUT","","Minimum number of bytes for which space is available in a terminal input queue; therefore, the maximum number of bytes a conforming application may require to be typed as input before reading them.",151,N],[13,"NAME_MAX","","Maximum number of bytes in a filename (not including the terminating null of a filename string).",151,N],[13,"PATH_MAX","","Maximum number of bytes the implementation will store as a pathname in a user-supplied buffer of unspecified size, including the terminating null character. Minimum number the implementation will accept as the maximum number of bytes in a pathname.",151,N],[13,"PIPE_BUF","","Maximum number of bytes that is guaranteed to be atomic when writing to a pipe.",151,N],[13,"POSIX2_SYMLINKS","","Symbolic links can be created.",151,N],[13,"POSIX_ALLOC_SIZE_MIN","","Minimum number of bytes of storage actually allocated for any portion of a file.",151,N],[13,"POSIX_REC_INCR_XFER_SIZE","","Recommended increment for file transfer sizes between the `POSIX_REC_MIN_XFER_SIZE` and `POSIX_REC_MAX_XFER_SIZE` values.",151,N],[13,"POSIX_REC_MAX_XFER_SIZE","","Maximum recommended file transfer size.",151,N],[13,"POSIX_REC_MIN_XFER_SIZE","","Minimum recommended file transfer size.",151,N],[13,"POSIX_REC_XFER_ALIGN","","Recommended file transfer buffer alignment.",151,N],[13,"SYMLINK_MAX","","Maximum number of bytes in a symbolic link.",151,N],[13,"_POSIX_CHOWN_RESTRICTED","","The use of `chown` and `fchown` is restricted to a process with appropriate privileges, and to changing the group ID of a file only to the effective group ID of the process or to one of its supplementary group IDs.",151,N],[13,"_POSIX_NO_TRUNC","","Pathname components longer than {NAME_MAX} generate an error.",151,N],[13,"_POSIX_VDISABLE","","This symbol shall be defined to be the value of a character that shall disable terminal special character handling.",151,N],[13,"_POSIX_ASYNC_IO","","Asynchronous input or output operations may be performed for the associated file.",151,N],[13,"_POSIX_PRIO_IO","","Prioritized input or output operations may be performed for the associated file.",151,N],[13,"_POSIX_SYNC_IO","","Synchronized input or output operations may be performed for the associated file.",151,N],[4,"SysconfVar","","Variable names for `sysconf`",N,N],[13,"AIO_LISTIO_MAX","","Maximum number of I/O operations in a single list I/O call supported by the implementation.",152,N],[13,"AIO_MAX","","Maximum number of outstanding asynchronous I/O operations supported by the implementation.",152,N],[13,"AIO_PRIO_DELTA_MAX","","The maximum amount by which a process can decrease its asynchronous I/O priority level from its own scheduling priority.",152,N],[13,"ARG_MAX","","Maximum length of argument to the exec functions including environment data.",152,N],[13,"ATEXIT_MAX","","Maximum number of functions that may be registered with `atexit`.",152,N],[13,"BC_BASE_MAX","","Maximum obase values allowed by the bc utility.",152,N],[13,"BC_DIM_MAX","","Maximum number of elements permitted in an array by the bc utility.",152,N],[13,"BC_SCALE_MAX","","Maximum scale value allowed by the bc utility.",152,N],[13,"BC_STRING_MAX","","Maximum length of a string constant accepted by the bc utility.",152,N],[13,"CHILD_MAX","","Maximum number of simultaneous processes per real user ID.",152,N],[13,"COLL_WEIGHTS_MAX","","Maximum number of weights that can be assigned to an entry of the LC_COLLATE order keyword in the locale definition file",152,N],[13,"DELAYTIMER_MAX","","Maximum number of timer expiration overruns.",152,N],[13,"EXPR_NEST_MAX","","Maximum number of expressions that can be nested within parentheses by the expr utility.",152,N],[13,"HOST_NAME_MAX","","Maximum length of a host name (not including the terminating null) as returned from the `gethostname` function",152,N],[13,"IOV_MAX","","Maximum number of iovec structures that one process has available for use with `readv` or `writev`.",152,N],[13,"LINE_MAX","","Unless otherwise noted, the maximum length, in bytes, of a utility's input line (either standard input or another file), when the utility is described as processing text files. The length includes room for the trailing .",152,N],[13,"LOGIN_NAME_MAX","","Maximum length of a login name.",152,N],[13,"NGROUPS_MAX","","Maximum number of simultaneous supplementary group IDs per process.",152,N],[13,"GETGR_R_SIZE_MAX","","Initial size of `getgrgid_r` and `getgrnam_r` data buffers",152,N],[13,"GETPW_R_SIZE_MAX","","Initial size of `getpwuid_r` and `getpwnam_r` data buffers",152,N],[13,"MQ_OPEN_MAX","","The maximum number of open message queue descriptors a process may hold.",152,N],[13,"MQ_PRIO_MAX","","The maximum number of message priorities supported by the implementation.",152,N],[13,"OPEN_MAX","","A value one greater than the maximum value that the system may assign to a newly-created file descriptor.",152,N],[13,"_POSIX_ADVISORY_INFO","","The implementation supports the Advisory Information option.",152,N],[13,"_POSIX_BARRIERS","","The implementation supports barriers.",152,N],[13,"_POSIX_ASYNCHRONOUS_IO","","The implementation supports asynchronous input and output.",152,N],[13,"_POSIX_CLOCK_SELECTION","","The implementation supports clock selection.",152,N],[13,"_POSIX_CPUTIME","","The implementation supports the Process CPU-Time Clocks option.",152,N],[13,"_POSIX_FSYNC","","The implementation supports the File Synchronization option.",152,N],[13,"_POSIX_IPV6","","The implementation supports the IPv6 option.",152,N],[13,"_POSIX_JOB_CONTROL","","The implementation supports job control.",152,N],[13,"_POSIX_MAPPED_FILES","","The implementation supports memory mapped Files.",152,N],[13,"_POSIX_MEMLOCK","","The implementation supports the Process Memory Locking option.",152,N],[13,"_POSIX_MEMLOCK_RANGE","","The implementation supports the Range Memory Locking option.",152,N],[13,"_POSIX_MEMORY_PROTECTION","","The implementation supports memory protection.",152,N],[13,"_POSIX_MESSAGE_PASSING","","The implementation supports the Message Passing option.",152,N],[13,"_POSIX_MONOTONIC_CLOCK","","The implementation supports the Monotonic Clock option.",152,N],[13,"_POSIX_PRIORITIZED_IO","","The implementation supports the Prioritized Input and Output option.",152,N],[13,"_POSIX_PRIORITY_SCHEDULING","","The implementation supports the Process Scheduling option.",152,N],[13,"_POSIX_RAW_SOCKETS","","The implementation supports the Raw Sockets option.",152,N],[13,"_POSIX_READER_WRITER_LOCKS","","The implementation supports read-write locks.",152,N],[13,"_POSIX_REALTIME_SIGNALS","","The implementation supports realtime signals.",152,N],[13,"_POSIX_REGEXP","","The implementation supports the Regular Expression Handling option.",152,N],[13,"_POSIX_SAVED_IDS","","Each process has a saved set-user-ID and a saved set-group-ID.",152,N],[13,"_POSIX_SEMAPHORES","","The implementation supports semaphores.",152,N],[13,"_POSIX_SHARED_MEMORY_OBJECTS","","The implementation supports the Shared Memory Objects option.",152,N],[13,"_POSIX_SHELL","","The implementation supports the POSIX shell.",152,N],[13,"_POSIX_SPAWN","","The implementation supports the Spawn option.",152,N],[13,"_POSIX_SPIN_LOCKS","","The implementation supports spin locks.",152,N],[13,"_POSIX_SPORADIC_SERVER","","The implementation supports the Process Sporadic Server option.",152,N],[13,"_POSIX_SS_REPL_MAX","","",152,N],[13,"_POSIX_SYNCHRONIZED_IO","","The implementation supports the Synchronized Input and Output option.",152,N],[13,"_POSIX_THREAD_ATTR_STACKADDR","","The implementation supports the Thread Stack Address Attribute option.",152,N],[13,"_POSIX_THREAD_ATTR_STACKSIZE","","The implementation supports the Thread Stack Size Attribute option.",152,N],[13,"_POSIX_THREAD_CPUTIME","","The implementation supports the Thread CPU-Time Clocks option.",152,N],[13,"_POSIX_THREAD_PRIO_INHERIT","","The implementation supports the Non-Robust Mutex Priority Inheritance option.",152,N],[13,"_POSIX_THREAD_PRIO_PROTECT","","The implementation supports the Non-Robust Mutex Priority Protection option.",152,N],[13,"_POSIX_THREAD_PRIORITY_SCHEDULING","","The implementation supports the Thread Execution Scheduling option.",152,N],[13,"_POSIX_THREAD_PROCESS_SHARED","","The implementation supports the Thread Process-Shared Synchronization option.",152,N],[13,"_POSIX_THREAD_ROBUST_PRIO_INHERIT","","The implementation supports the Robust Mutex Priority Inheritance option.",152,N],[13,"_POSIX_THREAD_ROBUST_PRIO_PROTECT","","The implementation supports the Robust Mutex Priority Protection option.",152,N],[13,"_POSIX_THREAD_SAFE_FUNCTIONS","","The implementation supports thread-safe functions.",152,N],[13,"_POSIX_THREAD_SPORADIC_SERVER","","The implementation supports the Thread Sporadic Server option.",152,N],[13,"_POSIX_THREADS","","The implementation supports threads.",152,N],[13,"_POSIX_TIMEOUTS","","The implementation supports timeouts.",152,N],[13,"_POSIX_TIMERS","","The implementation supports timers.",152,N],[13,"_POSIX_TRACE","","The implementation supports the Trace option.",152,N],[13,"_POSIX_TRACE_EVENT_FILTER","","The implementation supports the Trace Event Filter option.",152,N],[13,"_POSIX_TRACE_EVENT_NAME_MAX","","",152,N],[13,"_POSIX_TRACE_INHERIT","","The implementation supports the Trace Inherit option.",152,N],[13,"_POSIX_TRACE_LOG","","The implementation supports the Trace Log option.",152,N],[13,"_POSIX_TRACE_NAME_MAX","","",152,N],[13,"_POSIX_TRACE_SYS_MAX","","",152,N],[13,"_POSIX_TRACE_USER_EVENT_MAX","","",152,N],[13,"_POSIX_TYPED_MEMORY_OBJECTS","","The implementation supports the Typed Memory Objects option.",152,N],[13,"_POSIX_VERSION","","Integer value indicating version of this standard (C-language binding) to which the implementation conforms. For implementations conforming to POSIX.1-2008, the value shall be 200809L.",152,N],[13,"_POSIX_V6_ILP32_OFF32","","The implementation provides a C-language compilation environment with 32-bit `int`, `long`, `pointer`, and `off_t` types.",152,N],[13,"_POSIX_V6_ILP32_OFFBIG","","The implementation provides a C-language compilation environment with 32-bit `int`, `long`, and pointer types and an `off_t` type using at least 64 bits.",152,N],[13,"_POSIX_V6_LP64_OFF64","","The implementation provides a C-language compilation environment with 32-bit `int` and 64-bit `long`, `pointer`, and `off_t` types.",152,N],[13,"_POSIX_V6_LPBIG_OFFBIG","","The implementation provides a C-language compilation environment with an `int` type using at least 32 bits and `long`, pointer, and `off_t` types using at least 64 bits.",152,N],[13,"_POSIX2_C_BIND","","The implementation supports the C-Language Binding option.",152,N],[13,"_POSIX2_C_DEV","","The implementation supports the C-Language Development Utilities option.",152,N],[13,"_POSIX2_CHAR_TERM","","The implementation supports the Terminal Characteristics option.",152,N],[13,"_POSIX2_FORT_DEV","","The implementation supports the FORTRAN Development Utilities option.",152,N],[13,"_POSIX2_FORT_RUN","","The implementation supports the FORTRAN Runtime Utilities option.",152,N],[13,"_POSIX2_LOCALEDEF","","The implementation supports the creation of locales by the localedef utility.",152,N],[13,"_POSIX2_PBS","","The implementation supports the Batch Environment Services and Utilities option.",152,N],[13,"_POSIX2_PBS_ACCOUNTING","","The implementation supports the Batch Accounting option.",152,N],[13,"_POSIX2_PBS_CHECKPOINT","","The implementation supports the Batch Checkpoint/Restart option.",152,N],[13,"_POSIX2_PBS_LOCATE","","The implementation supports the Locate Batch Job Request option.",152,N],[13,"_POSIX2_PBS_MESSAGE","","The implementation supports the Batch Job Message Request option.",152,N],[13,"_POSIX2_PBS_TRACK","","The implementation supports the Track Batch Job Request option.",152,N],[13,"_POSIX2_SW_DEV","","The implementation supports the Software Development Utilities option.",152,N],[13,"_POSIX2_UPE","","The implementation supports the User Portability Utilities option.",152,N],[13,"_POSIX2_VERSION","","Integer value indicating version of the Shell and Utilities volume of POSIX.1 to which the implementation conforms.",152,N],[13,"PAGE_SIZE","","The size of a system page in bytes.",152,N],[13,"PTHREAD_DESTRUCTOR_ITERATIONS","","",152,N],[13,"PTHREAD_KEYS_MAX","","",152,N],[13,"PTHREAD_STACK_MIN","","",152,N],[13,"PTHREAD_THREADS_MAX","","",152,N],[13,"RE_DUP_MAX","","",152,N],[13,"RTSIG_MAX","","",152,N],[13,"SEM_NSEMS_MAX","","",152,N],[13,"SEM_VALUE_MAX","","",152,N],[13,"SIGQUEUE_MAX","","",152,N],[13,"STREAM_MAX","","",152,N],[13,"SYMLOOP_MAX","","",152,N],[13,"TIMER_MAX","","",152,N],[13,"TTY_NAME_MAX","","",152,N],[13,"TZNAME_MAX","","",152,N],[13,"_XOPEN_CRYPT","","The implementation supports the X/Open Encryption Option Group.",152,N],[13,"_XOPEN_ENH_I18N","","The implementation supports the Issue 4, Version 2 Enhanced Internationalization Option Group.",152,N],[13,"_XOPEN_LEGACY","","",152,N],[13,"_XOPEN_REALTIME","","The implementation supports the X/Open Realtime Option Group.",152,N],[13,"_XOPEN_REALTIME_THREADS","","The implementation supports the X/Open Realtime Threads Option Group.",152,N],[13,"_XOPEN_SHM","","The implementation supports the Issue 4, Version 2 Shared Memory Option Group.",152,N],[13,"_XOPEN_STREAMS","","The implementation supports the XSI STREAMS Option Group.",152,N],[13,"_XOPEN_UNIX","","The implementation supports the XSI option",152,N],[13,"_XOPEN_VERSION","","Integer value indicating version of the X/Open Portability Guide to which the implementation conforms.",152,N],[5,"pivot_root","","",N,[[["p1"],["p2"]],["result"]]],[5,"setresuid","","Sets the real, effective, and saved uid. (see setresuid(2))",N,[[["uid"],["uid"],["uid"]],["result"]]],[5,"setresgid","","Sets the real, effective, and saved gid. (see setresuid(2))",N,[[["gid"],["gid"],["gid"]],["result"]]],[5,"fork","","Create a new child process duplicating the parent process (see fork(2)).",N,[[],["result",["forkresult"]]]],[5,"getpid","","Get the pid of this process (see getpid(2)).",N,[[],["pid"]]],[5,"getppid","","Get the pid of this processes' parent (see getpid(2)).",N,[[],["pid"]]],[5,"setpgid","","Set a process group ID (see setpgid(2)).",N,[[["pid"],["pid"]],["result"]]],[5,"getpgid","","",N,[[["option",["pid"]]],["result",["pid"]]]],[5,"setsid","","Create new session and set process group id (see setsid(2)).",N,[[],["result",["pid"]]]],[5,"getsid","","Get the process group ID of a session leader getsid(2).",N,[[["option",["pid"]]],["result",["pid"]]]],[5,"tcgetpgrp","","Get the terminal foreground process group (see tcgetpgrp(3)).",N,[[["c_int"]],["result",["pid"]]]],[5,"tcsetpgrp","","Set the terminal foreground process group (see tcgetpgrp(3)).",N,[[["c_int"],["pid"]],["result"]]],[5,"getpgrp","","Get the group id of the calling process (see getpgrp(3)).",N,[[],["pid"]]],[5,"gettid","","Get the caller's thread ID (see gettid(2).",N,[[],["pid"]]],[5,"dup","","Create a copy of the specified file descriptor (see dup(2)).",N,[[["rawfd"]],["result",["rawfd"]]]],[5,"dup2","","Create a copy of the specified file descriptor using the specified fd (see dup(2)).",N,[[["rawfd"],["rawfd"]],["result",["rawfd"]]]],[5,"dup3","","Create a new copy of the specified file descriptor using the specified fd and flags (see dup(2)).",N,[[["rawfd"],["rawfd"],["oflag"]],["result",["rawfd"]]]],[5,"chdir","","Change the current working directory of the calling process (see chdir(2)).",N,[[["p"]],["result"]]],[5,"fchdir","","Change the current working directory of the process to the one given as an open file descriptor (see fchdir(2)).",N,[[["rawfd"]],["result"]]],[5,"mkdir","","Creates new directory `path` with access rights `mode`.  (see mkdir(2))",N,[[["p"],["mode"]],["result"]]],[5,"mkfifo","","Creates new fifo special file (named pipe) with path `path` and access rights `mode`.",N,[[["p"],["mode"]],["result"]]],[5,"getcwd","","Returns the current directory as a `PathBuf`",N,[[],["result",["pathbuf"]]]],[5,"chown","","Change the ownership of the file at `path` to be owned by the specified `owner` (user) and `group` (see chown(2)).",N,[[["p"],["option",["uid"]],["option",["gid"]]],["result"]]],[5,"execv","","Replace the current process image with a new one (see exec(3)).",N,N],[5,"execve","","Replace the current process image with a new one (see execve(2)).",N,N],[5,"execvp","","Replace the current process image with a new one and replicate shell `PATH` searching behavior (see exec(3)).",N,N],[5,"fexecve","","Replace the current process image with a new one (see fexecve(2)).",N,N],[5,"execveat","","Execute program relative to a directory file descriptor (see execveat(2)).",N,N],[5,"daemon","","Daemonize this process by detaching from the controlling terminal (see daemon(3)).",N,[[["bool"],["bool"]],["result"]]],[5,"sethostname","","Set the system host name (see sethostname(2)).",N,[[["s"]],["result"]]],[5,"gethostname","","Get the host name and store it in the provided buffer, returning a pointer the `CStr` in that buffer on success (see gethostname(2)).",N,N],[5,"close","","Close a raw file descriptor",N,[[["rawfd"]],["result"]]],[5,"read","","Read from a raw file descriptor.",N,N],[5,"write","","Write to a raw file descriptor.",N,N],[5,"lseek","","Move the read/write file offset.",N,[[["rawfd"],["off_t"],["whence"]],["result",["off_t"]]]],[5,"lseek64","","",N,[[["rawfd"],["off64_t"],["whence"]],["result",["off64_t"]]]],[5,"pipe","","Create an interprocess channel.",N,[[],["result"]]],[5,"pipe2","","Like `pipe`, but allows setting certain file descriptor flags.",N,[[["oflag"]],["result"]]],[5,"ftruncate","","Truncate a file to a specified length",N,[[["rawfd"],["off_t"]],["result"]]],[5,"isatty","","",N,[[["rawfd"]],["result",["bool"]]]],[5,"unlink","","Remove a directory entry",N,[[["p"]],["result"]]],[5,"chroot","","",N,[[["p"]],["result"]]],[5,"fsync","","Synchronize changes to a file",N,[[["rawfd"]],["result"]]],[5,"fdatasync","","Synchronize the data of a file",N,[[["rawfd"]],["result"]]],[5,"getuid","","Get a real user ID",N,[[],["uid"]]],[5,"geteuid","","Get the effective user ID",N,[[],["uid"]]],[5,"getgid","","Get the real group ID",N,[[],["gid"]]],[5,"getegid","","Get the effective group ID",N,[[],["gid"]]],[5,"setuid","","Set the user ID",N,[[["uid"]],["result"]]],[5,"setgid","","Set the user ID",N,[[["gid"]],["result"]]],[5,"getgroups","","Get the list of supplementary group IDs of the calling process.",N,[[],["result",["vec"]]]],[5,"setgroups","","Set the list of supplementary group IDs for the calling process.",N,N],[5,"getgrouplist","","Calculate the supplementary group access list.",N,[[["cstr"],["gid"]],["result",["vec"]]]],[5,"initgroups","","Initialize the supplementary group access list.",N,[[["cstr"],["gid"]],["result"]]],[5,"pause","","Suspend the thread until a signal is received.",N,[[]]],[5,"sleep","","Suspend execution for an interval of time",N,[[["c_uint"]],["c_uint"]]],[5,"mkstemp","","Creates a regular file which persists even after process termination",N,[[["p"]],["result"]]],[5,"fpathconf","","Like `pathconf`, but works with file descriptors instead of paths (see fpathconf(2))",N,[[["rawfd"],["pathconfvar"]],["result",["option"]]]],[5,"pathconf","","Get path-dependent configurable system variables (see pathconf(2))",N,[[["p"],["pathconfvar"]],["result",["option"]]]],[5,"sysconf","","Get configurable system variables (see sysconf(3))",N,[[["sysconfvar"]],["result",["option"]]]],[0,"alarm","","Alarm signal scheduling.",N,N],[5,"set","nix::unistd::alarm","Schedule an alarm signal.",N,[[["c_uint"]],["option",["c_uint"]]]],[5,"cancel","","Cancel an previously set alarm signal.",N,[[],["option",["c_uint"]]]],[17,"ROOT","nix::unistd","Constant for UID = 0",N,N],[11,"fmt","","",153,[[["self"],["formatter"]],["result"]]],[11,"clone","","",153,[[["self"]],["uid"]]],[11,"eq","","",153,[[["self"],["uid"]],["bool"]]],[11,"ne","","",153,[[["self"],["uid"]],["bool"]]],[11,"hash","","",153,N],[11,"from_raw","","Creates `Uid` from raw `uid_t`.",153,[[["uid_t"]],["self"]]],[11,"current","","Returns Uid of calling process. This is practically a more Rusty alias for `getuid`.",153,[[],["self"]]],[11,"effective","","Returns effective Uid of calling process. This is practically a more Rusty alias for `geteuid`.",153,[[],["self"]]],[11,"is_root","","Returns true if the `Uid` represents privileged user - root. (If it equals zero.)",153,[[["self"]],["bool"]]],[11,"fmt","","",153,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",154,[[["self"],["formatter"]],["result"]]],[11,"clone","","",154,[[["self"]],["gid"]]],[11,"eq","","",154,[[["self"],["gid"]],["bool"]]],[11,"ne","","",154,[[["self"],["gid"]],["bool"]]],[11,"hash","","",154,N],[11,"from_raw","","Creates `Gid` from raw `gid_t`.",154,[[["gid_t"]],["self"]]],[11,"current","","Returns Gid of calling process. This is practically a more Rusty alias for `getgid`.",154,[[],["self"]]],[11,"effective","","Returns effective Gid of calling process. This is practically a more Rusty alias for `getgid`.",154,[[],["self"]]],[11,"fmt","","",154,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",155,[[["self"],["formatter"]],["result"]]],[11,"clone","","",155,[[["self"]],["pid"]]],[11,"eq","","",155,[[["self"],["pid"]],["bool"]]],[11,"ne","","",155,[[["self"],["pid"]],["bool"]]],[11,"hash","","",155,N],[11,"from_raw","","Creates `Pid` from raw `pid_t`.",155,[[["pid_t"]],["self"]]],[11,"this","","Returns PID of calling process",155,[[],["self"]]],[11,"parent","","Returns PID of parent of calling process",155,[[],["self"]]],[11,"from","","",156,[[["pid"]],["self"]]],[11,"fmt","","",155,[[["self"],["formatter"]],["result"]]],[11,"clone","","",149,[[["self"]],["forkresult"]]],[11,"fmt","","",149,[[["self"],["formatter"]],["result"]]],[11,"is_child","","Return `true` if this is the child process of the `fork()`",149,[[["self"]],["bool"]]],[11,"is_parent","","Returns `true` if this is the parent process of the `fork()`",149,[[["self"]],["bool"]]],[11,"clone","","",150,[[["self"]],["whence"]]],[11,"fmt","","",150,[[["self"],["formatter"]],["result"]]],[11,"clone","","",151,[[["self"]],["pathconfvar"]]],[11,"fmt","","",151,[[["self"],["formatter"]],["result"]]],[11,"hash","","",151,N],[11,"eq","","",151,[[["self"],["pathconfvar"]],["bool"]]],[11,"clone","","",152,[[["self"]],["sysconfvar"]]],[11,"fmt","","",152,[[["self"],["formatter"]],["result"]]],[11,"hash","","",152,N],[11,"eq","","",152,[[["self"],["sysconfvar"]],["bool"]]],[6,"Result","nix","Nix Result Type",N,N],[8,"NixPath","","",N,N],[10,"len","","",157,[[["self"]],["usize"]]],[10,"with_nix_path","","",157,[[["self"],["f"]],["result"]]],[11,"clone","","",0,[[["self"]],["error"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["error"]],["bool"]]],[11,"ne","","",0,[[["self"],["error"]],["bool"]]],[11,"from_errno","","Create a nix Error from a given errno",0,[[["errno"]],["error"]]],[11,"last","","Get the current errno and convert it to a nix Error",0,[[],["error"]]],[11,"invalid_argument","","Create a new invalid argument error (`EINVAL`)",0,[[],["error"]]],[11,"from","","",0,[[["errno"]],["error"]]],[11,"from","","",0,[[["fromutf8error"]],["error"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[14,"request_code_none","","Generate an ioctl request code for a command that passes no data.",N,N],[14,"request_code_read","","Generate an ioctl request code for a command that reads.",N,N],[14,"request_code_write","","Generate an ioctl request code for a command that writes.",N,N],[14,"request_code_readwrite","","Generate an ioctl request code for a command that reads and writes.",N,N],[14,"ioctl_none","","Generates a wrapper function for an ioctl that passes no data to the kernel.",N,N],[14,"ioctl_none_bad","","Generates a wrapper function for a \"bad\" ioctl that passes no data to the kernel.",N,N],[14,"ioctl_read","","Generates a wrapper function for an ioctl that reads data from the kernel.",N,N],[14,"ioctl_read_bad","","Generates a wrapper function for a \"bad\" ioctl that reads data from the kernel.",N,N],[14,"ioctl_write_ptr","","Generates a wrapper function for an ioctl that writes data through a pointer to the kernel.",N,N],[14,"ioctl_write_ptr_bad","","Generates a wrapper function for a \"bad\" ioctl that writes data through a pointer to the kernel.",N,N],[14,"ioctl_write_int","","Generates a wrapper function for a ioctl that writes an integer to the kernel.",N,N],[14,"ioctl_write_int_bad","","Generates a wrapper function for a \"bad\" ioctl that writes an integer to the kernel.",N,N],[14,"ioctl_readwrite","","Generates a wrapper function for an ioctl that reads and writes data to the kernel.",N,N],[14,"ioctl_readwrite_bad","","Generates a wrapper function for a \"bad\" ioctl that reads and writes data to the kernel.",N,N],[14,"ioctl_read_buf","","Generates a wrapper function for an ioctl that reads an array of elements from the kernel.",N,N],[14,"ioctl_write_buf","","Generates a wrapper function for an ioctl that writes an array of elements to the kernel.",N,N],[14,"ioctl_readwrite_buf","","Generates a wrapper function for an ioctl that reads and writes an array of elements to the kernel.",N,N],[11,"clone","nix::sys::socket","",66,[[["self"]],["msghdr"]]],[11,"clone","","",69,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",65,[[["self"]],["cmsghdr"]]],[11,"clone","","",67,[[["self"]],["sockaddr"]]],[11,"clone","","",68,[[["self"]],["sockaddr_in"]]],[11,"clone","","",70,[[["self"]],["sockaddr_storage"]]],[11,"clone","nix::sys::stat","",124,[[["self"]],["stat"]]],[11,"clone","nix::sys::signalfd","",62,[[["self"]],["signalfd_siginfo"]]],[11,"clone","nix::pty","",21,[[["self"]],["winsize"]]],[11,"clone","nix::sys::socket","",71,[[["self"]],["sockaddr_un"]]]],"paths":[[4,"Error"],[4,"Errno"],[8,"ErrnoSentinel"],[4,"FcntlArg"],[4,"FlockArg"],[3,"AtFlags"],[3,"OFlag"],[3,"SealFlag"],[3,"FdFlag"],[3,"SpliceFFlags"],[3,"FallocateFlags"],[3,"InterfaceAddress"],[3,"InterfaceAddressIterator"],[3,"MsFlags"],[3,"MntFlags"],[3,"MQ_OFlag"],[3,"FdFlag"],[3,"MqAttr"],[3,"InterfaceFlags"],[3,"PollFd"],[3,"EventFlags"],[3,"Winsize"],[3,"OpenptyResult"],[3,"PtyMaster"],[3,"CloneFlags"],[3,"CpuSet"],[3,"LioCb"],[4,"AioFsyncMode"],[4,"LioOpcode"],[4,"LioMode"],[4,"AioCancelStat"],[4,"Buffer"],[3,"AioCb"],[4,"EpollOp"],[3,"EpollFlags"],[3,"EpollCreateFlags"],[3,"EpollEvent"],[3,"EfdFlags"],[3,"MemFdCreateFlag"],[4,"MmapAdvise"],[3,"ProtFlags"],[3,"MapFlags"],[3,"MsFlags"],[3,"MlockAllFlags"],[4,"Request"],[4,"Event"],[3,"Options"],[4,"QuotaType"],[4,"QuotaFmt"],[3,"QuotaValidFlags"],[3,"Dqblk"],[4,"RebootMode"],[3,"FdSet"],[4,"Signal"],[4,"SigmaskHow"],[4,"SigHandler"],[4,"SigevNotify"],[3,"SigEvent"],[3,"SignalIterator"],[3,"SaFlags"],[3,"SigSet"],[3,"SigAction"],[3,"siginfo"],[3,"SfdFlags"],[3,"SignalFd"],[3,"cmsghdr"],[3,"msghdr"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_storage"],[3,"sockaddr_un"],[3,"UnixAddr"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[3,"LinkAddr"],[3,"NetlinkAddr"],[3,"RecvMsg"],[4,"AddressFamily"],[4,"SockAddr"],[4,"InetAddr"],[4,"IpAddr"],[4,"SockType"],[4,"SockProtocol"],[4,"ControlMessage"],[4,"SockLevel"],[4,"Shutdown"],[3,"ReuseAddr"],[3,"ReusePort"],[3,"TcpNoDelay"],[3,"Linger"],[3,"IpAddMembership"],[3,"IpDropMembership"],[3,"Ipv6AddMembership"],[3,"Ipv6DropMembership"],[3,"IpMulticastTtl"],[3,"IpMulticastLoop"],[3,"ReceiveTimeout"],[3,"SendTimeout"],[3,"Broadcast"],[3,"OobInline"],[3,"SocketError"],[3,"KeepAlive"],[3,"PeerCredentials"],[3,"TcpKeepIdle"],[3,"RcvBuf"],[3,"SndBuf"],[3,"RcvBufForce"],[3,"SndBufForce"],[3,"SockType"],[3,"AcceptConn"],[3,"OriginalDst"],[3,"ReceiveTimestamp"],[3,"IpTransparent"],[3,"Mark"],[8,"GetSockOpt"],[8,"SetSockOpt"],[3,"SockFlag"],[3,"MsgFlags"],[3,"UnixCredentials"],[3,"IpMembershipRequest"],[3,"Ipv6MembershipRequest"],[3,"CmsgSpace"],[3,"CmsgIterator"],[3,"FileStat"],[4,"FchmodatFlags"],[3,"SFlag"],[3,"Mode"],[3,"FsFlags"],[3,"Statvfs"],[3,"Termios"],[4,"BaudRate"],[4,"SetArg"],[4,"FlushArg"],[4,"FlowArg"],[4,"SpecialCharacterIndices"],[3,"InputFlags"],[3,"OutputFlags"],[3,"ControlFlags"],[3,"LocalFlags"],[8,"TimeValLike"],[3,"TimeSpec"],[3,"TimeVal"],[3,"RemoteIoVec"],[3,"IoVec"],[3,"UtsName"],[4,"WaitStatus"],[3,"WaitPidFlag"],[3,"UContext"],[4,"ForkResult"],[4,"Whence"],[4,"PathconfVar"],[4,"SysconfVar"],[3,"Uid"],[3,"Gid"],[3,"Pid"],[6,"SessionId"],[8,"NixPath"]]};
searchIndex["nodrop"]={"doc":"The nodrop crate has the following cargo feature flags:","items":[[3,"NoDrop","nodrop","A type holding T that will not call its destructor on drop",N,N],[11,"new","","Create a new NoDrop.",0,[[["t"]],["nodrop"]]],[11,"into_inner","","Extract the inner value.",0,[[["self"]],["t"]]],[11,"drop","","",0,[[["self"]]]],[11,"deref","","",0,[[["self"]],["t"]]],[11,"deref_mut","","",0,[[["self"]],["t"]]]],"paths":[[3,"NoDrop"]]};
searchIndex["num_cpus"]={"doc":"A crate with utilities to determine the number of CPUs available on the current system.","items":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",N,[[],["usize"]]],[5,"get_physical","","Returns the number of physical cores of the current system.",N,[[],["usize"]]]],"paths":[]};
searchIndex["num_derive"]={"doc":"Procedural macros to derive numeric traits in Rust.","items":[[5,"from_primitive","num_derive","Derives [`num_traits::FromPrimitive`][from] for simple enums and newtypes.",N,[[["tokenstream"]],["tokenstream"]]],[5,"to_primitive","","Derives [`num_traits::ToPrimitive`][to] for simple enums and newtypes.",N,[[["tokenstream"]],["tokenstream"]]],[5,"num_ops","","Derives [`num_traits::NumOps`][num_ops] for newtypes.  The inner type must already implement `NumOps`.",N,[[["tokenstream"]],["tokenstream"]]],[5,"num_cast","","Derives [`num_traits::NumCast`][num_cast] for newtypes.  The inner type must already implement `NumCast`.",N,[[["tokenstream"]],["tokenstream"]]],[5,"zero","","Derives [`num_traits::Zero`][zero] for newtypes.  The inner type must already implement `Zero`.",N,[[["tokenstream"]],["tokenstream"]]],[5,"one","","Derives [`num_traits::One`][one] for newtypes.  The inner type must already implement `One`.",N,[[["tokenstream"]],["tokenstream"]]],[5,"num","","Derives [`num_traits::Num`][num] for newtypes.  The inner type must already implement `Num`.",N,[[["tokenstream"]],["tokenstream"]]],[5,"float","","Derives [`num_traits::Float`][float] for newtypes.  The inner type must already implement `Float`.",N,[[["tokenstream"]],["tokenstream"]]]],"paths":[]};
searchIndex["num_integer"]={"doc":"Integer trait and functions.","items":[[3,"IterBinomial","num_integer","An iterator over binomial coefficients.",N,N],[5,"sqrt","","Returns the truncated principal square root of an integer -- see Roots::sqrt.",N,[[["t"]],["t"]]],[5,"cbrt","","Returns the truncated principal cube root of an integer -- see Roots::cbrt.",N,[[["t"]],["t"]]],[5,"nth_root","","Returns the truncated principal `n`th root of an integer -- see Roots::nth_root.",N,[[["t"],["u32"]],["t"]]],[5,"div_rem","","Simultaneous integer division and modulus",N,N],[5,"div_floor","","Floored integer division",N,[[["t"],["t"]],["t"]]],[5,"mod_floor","","Floored integer modulus",N,[[["t"],["t"]],["t"]]],[5,"div_mod_floor","","Simultaneous floored integer division and modulus",N,N],[5,"gcd","","Calculates the Greatest Common Divisor (GCD) of the number and `other`. The result is always positive.",N,[[["t"],["t"]],["t"]]],[5,"lcm","","Calculates the Lowest Common Multiple (LCM) of the number and `other`.",N,[[["t"],["t"]],["t"]]],[5,"binomial","","Calculate the binomial coefficient.",N,[[["t"],["t"]],["t"]]],[5,"multinomial","","Calculate the multinomial coefficient.",N,N],[8,"Roots","","Provides methods to compute an integer's square root, cube root, and arbitrary `n`th root.",N,N],[10,"nth_root","","Returns the truncated principal `n`th root of an integer -- `if x >= 0 { ⌊ⁿ√x⌋ } else { ⌈ⁿ√x⌉ }`",0,[[["self"],["u32"]],["self"]]],[11,"sqrt","","Returns the truncated principal square root of an integer -- `⌊√x⌋`",0,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer -- `if x >= 0 { ⌊∛x⌋ } else { ⌈∛x⌉ }`",0,[[["self"]],["self"]]],[8,"Integer","","",N,N],[10,"div_floor","","Floored integer division.",1,[[["self"],["self"]],["self"]]],[10,"mod_floor","","Floored integer modulo, satisfying:",1,[[["self"],["self"]],["self"]]],[10,"gcd","","Greatest Common Divisor (GCD).",1,[[["self"],["self"]],["self"]]],[10,"lcm","","Lowest Common Multiple (LCM).",1,[[["self"],["self"]],["self"]]],[10,"divides","","Deprecated, use `is_multiple_of` instead.",1,[[["self"],["self"]],["bool"]]],[10,"is_multiple_of","","Returns `true` if `self` is a multiple of `other`.",1,[[["self"],["self"]],["bool"]]],[10,"is_even","","Returns `true` if the number is even.",1,[[["self"]],["bool"]]],[10,"is_odd","","Returns `true` if the number is odd.",1,[[["self"]],["bool"]]],[10,"div_rem","","Simultaneous truncated integer division and modulus. Returns `(quotient, remainder)`.",1,N],[11,"div_mod_floor","","Simultaneous floored integer division and modulus. Returns `(quotient, remainder)`.",1,N],[11,"new","","For a given n, iterate over all binomial coefficients binomial(n, k), for k=0...n.",2,[[["t"]],["iterbinomial"]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"sqrt","","Returns the truncated principal square root of an integer -- `⌊√x⌋`",0,[[["self"]],["self"]]],[11,"cbrt","","Returns the truncated principal cube root of an integer -- `if x >= 0 { ⌊∛x⌋ } else { ⌈∛x⌉ }`",0,[[["self"]],["self"]]]],"paths":[[8,"Roots"],[8,"Integer"],[3,"IterBinomial"]]};
searchIndex["num_iter"]={"doc":"External iterators for generic mathematics","items":[[3,"Range","num_iter","An iterator over the range [start, stop)",N,N],[3,"RangeInclusive","","An iterator over the range [start, stop]",N,N],[3,"RangeStep","","An iterator over the range [start, stop) by `step`. It handles overflow by stopping.",N,N],[3,"RangeStepInclusive","","An iterator over the range [start, stop] by `step`. It handles overflow by stopping.",N,N],[5,"range","","Returns an iterator over the given range [start, stop) (that is, starting at start (inclusive), and ending at stop (exclusive)).",N,[[["a"],["a"]],["range"]]],[5,"range_inclusive","","Return an iterator over the range [start, stop]",N,[[["a"],["a"]],["rangeinclusive"]]],[5,"range_step","","Return an iterator over the range [start, stop) by `step`. It handles overflow by stopping.",N,[[["a"],["a"],["a"]],["rangestep"]]],[5,"range_step_inclusive","","Return an iterator over the range [start, stop] by `step`. It handles overflow by stopping.",N,[[["a"],["a"],["a"]],["rangestepinclusive"]]],[11,"clone","","",0,[[["self"]],["range"]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,N],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"clone","","",1,[[["self"]],["rangeinclusive"]]],[11,"next","","",1,[[["self"]],["option"]]],[11,"size_hint","","",1,N],[11,"next_back","","",1,[[["self"]],["option"]]],[11,"clone","","",2,[[["self"]],["rangestep"]]],[11,"next","","",2,[[["self"]],["option"]]],[11,"clone","","",3,[[["self"]],["rangestepinclusive"]]],[11,"next","","",3,[[["self"]],["option"]]]],"paths":[[3,"Range"],[3,"RangeInclusive"],[3,"RangeStep"],[3,"RangeStepInclusive"]]};
searchIndex["num_rational"]={"doc":"Rational numbers","items":[[3,"Ratio","num_rational","Represents the ratio between two numbers.",N,N],[3,"ParseRatioError","","",N,N],[11,"sum","","",0,[[["i"]],["self"]]],[11,"sum","","",0,[[["i"]],["self"]]],[11,"product","","",0,[[["i"]],["self"]]],[11,"product","","",0,[[["i"]],["self"]]],[11,"add_assign","","",0,[[["self"],["ratio"]]]],[11,"div_assign","","",0,[[["self"],["ratio"]]]],[11,"mul_assign","","",0,[[["self"],["ratio"]]]],[11,"rem_assign","","",0,[[["self"],["ratio"]]]],[11,"sub_assign","","",0,[[["self"],["ratio"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[11,"add_assign","","",0,[[["self"],["ratio"]]]],[11,"add_assign","","",0,[[["self"],["t"]]]],[11,"div_assign","","",0,[[["self"],["ratio"]]]],[11,"div_assign","","",0,[[["self"],["t"]]]],[11,"mul_assign","","",0,[[["self"],["ratio"]]]],[11,"mul_assign","","",0,[[["self"],["t"]]]],[11,"rem_assign","","",0,[[["self"],["ratio"]]]],[11,"rem_assign","","",0,[[["self"],["t"]]]],[11,"sub_assign","","",0,[[["self"],["ratio"]]]],[11,"sub_assign","","",0,[[["self"],["t"]]]],[6,"Rational","","Alias for a `Ratio` of machine-sized integers.",N,N],[6,"Rational32","","Alias for a `Ratio` of 32-bit-sized integers.",N,N],[6,"Rational64","","Alias for a `Ratio` of 64-bit-sized integers.",N,N],[11,"clone","","",0,[[["self"]],["ratio"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new `Ratio`. Fails if `denom` is zero.",0,[[["t"],["t"]],["ratio"]]],[11,"from_integer","","Creates a `Ratio` representing the integer `t`.",0,[[["t"]],["ratio"]]],[11,"new_raw","","Creates a `Ratio` without checking for `denom == 0` or reducing.",0,[[["t"],["t"]],["ratio"]]],[11,"to_integer","","Converts to an integer, rounding towards zero.",0,[[["self"]],["t"]]],[11,"numer","","Gets an immutable reference to the numerator.",0,[[["self"]],["t"]]],[11,"denom","","Gets an immutable reference to the denominator.",0,[[["self"]],["t"]]],[11,"is_integer","","Returns true if the rational number is an integer (denominator is 1).",0,[[["self"]],["bool"]]],[11,"reduced","","Returns a reduced copy of self.",0,[[["self"]],["ratio"]]],[11,"recip","","Returns the reciprocal.",0,[[["self"]],["ratio"]]],[11,"floor","","Rounds towards minus infinity.",0,[[["self"]],["ratio"]]],[11,"ceil","","Rounds towards plus infinity.",0,[[["self"]],["ratio"]]],[11,"round","","Rounds to the nearest integer. Rounds half-way cases away from zero.",0,[[["self"]],["ratio"]]],[11,"trunc","","Rounds towards zero.",0,[[["self"]],["ratio"]]],[11,"fract","","Returns the fractional part of a number, with division rounded towards zero.",0,[[["self"]],["ratio"]]],[11,"pow","","Raises the `Ratio` to the power of an exponent.",0,[[["self"],["i32"]],["ratio"]]],[11,"pow","","",0,[[["self"],["i8"]],["ratio"]]],[11,"pow","","",0,[[["self"],["i8"]],["ratio"]]],[11,"pow","","",0,[[["self"],["i16"]],["ratio"]]],[11,"pow","","",0,[[["self"],["i16"]],["ratio"]]],[11,"pow","","",0,[[["self"],["i32"]],["ratio"]]],[11,"pow","","",0,[[["self"],["i32"]],["ratio"]]],[11,"pow","","",0,[[["self"],["i64"]],["ratio"]]],[11,"pow","","",0,[[["self"],["i64"]],["ratio"]]],[11,"pow","","",0,[[["self"],["isize"]],["ratio"]]],[11,"pow","","",0,[[["self"],["isize"]],["ratio"]]],[11,"pow","","",0,[[["self"],["u8"]],["ratio"]]],[11,"pow","","",0,[[["self"],["u8"]],["ratio"]]],[11,"pow","","",0,[[["self"],["u16"]],["ratio"]]],[11,"pow","","",0,[[["self"],["u16"]],["ratio"]]],[11,"pow","","",0,[[["self"],["u32"]],["ratio"]]],[11,"pow","","",0,[[["self"],["u32"]],["ratio"]]],[11,"pow","","",0,[[["self"],["u64"]],["ratio"]]],[11,"pow","","",0,[[["self"],["u64"]],["ratio"]]],[11,"pow","","",0,[[["self"],["usize"]],["ratio"]]],[11,"pow","","",0,[[["self"],["usize"]],["ratio"]]],[11,"from","","",0,[[["t"]],["ratio"]]],[11,"from","","",0,N],[11,"cmp","","",0,[[["self"],["self"]],["ordering"]]],[11,"partial_cmp","","",0,[[["self"],["self"]],["option",["ordering"]]]],[11,"eq","","",0,[[["self"],["self"]],["bool"]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"mul","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"mul","","",0,[[["self"],["t"]],["ratio"]]],[11,"mul","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"mul","","",0,[[["self"],["t"]],["ratio"]]],[11,"div","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"div","","",0,[[["self"],["t"]],["ratio"]]],[11,"div","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"div","","",0,[[["self"],["t"]],["ratio"]]],[11,"add","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"add","","",0,[[["self"],["t"]],["ratio"]]],[11,"add","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"add","","",0,[[["self"],["t"]],["ratio"]]],[11,"sub","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"sub","","",0,[[["self"],["t"]],["ratio"]]],[11,"sub","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"sub","","",0,[[["self"],["t"]],["ratio"]]],[11,"rem","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"rem","","",0,[[["self"],["t"]],["ratio"]]],[11,"rem","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"rem","","",0,[[["self"],["t"]],["ratio"]]],[11,"checked_mul","","",0,[[["self"],["ratio"]],["option",["ratio"]]]],[11,"checked_div","","",0,[[["self"],["ratio"]],["option",["ratio"]]]],[11,"checked_add","","",0,[[["self"],["ratio"]],["option",["ratio"]]]],[11,"checked_sub","","",0,[[["self"],["ratio"]],["option",["ratio"]]]],[11,"neg","","",0,[[["self"]],["ratio"]]],[11,"inv","","",0,[[["self"]],["ratio"]]],[11,"zero","","",0,[[],["ratio"]]],[11,"is_zero","","",0,[[["self"]],["bool"]]],[11,"one","","",0,[[],["ratio"]]],[11,"is_one","","",0,[[["self"]],["bool"]]],[11,"from_str_radix","","Parses `numer/denom` where the numbers are in base `radix`.",0,[[["str"],["u32"]],["result",["ratio","parseratioerror"]]]],[11,"abs","","",0,[[["self"]],["ratio"]]],[11,"abs_sub","","",0,[[["self"],["ratio"]],["ratio"]]],[11,"signum","","",0,[[["self"]],["ratio"]]],[11,"is_positive","","",0,[[["self"]],["bool"]]],[11,"is_negative","","",0,[[["self"]],["bool"]]],[11,"fmt","","Renders as `numer/denom`. If denom=1, renders as numer.",0,[[["self"],["formatter"]],["result"]]],[11,"from_str","","Parses `numer/denom` or just `numer`.",0,[[["str"]],["result",["ratio","parseratioerror"]]]],[11,"into","","",0,N],[11,"clone","","",1,[[["self"]],["parseratioerror"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",1,[[["self"],["parseratioerror"]],["bool"]]],[11,"ne","","",1,[[["self"],["parseratioerror"]],["bool"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"from_i64","","",0,[[["i64"]],["option"]]],[11,"from_i128","","",0,[[["i128"]],["option"]]],[11,"from_u64","","",0,[[["u64"]],["option"]]],[11,"from_u128","","",0,[[["u128"]],["option"]]],[11,"from_f32","","",0,[[["f32"]],["option"]]],[11,"from_f64","","",0,[[["f64"]],["option"]]],[11,"approximate_float","","",0,[[["f"]],["option",["ratio"]]]]],"paths":[[3,"Ratio"],[3,"ParseRatioError"]]};
searchIndex["num_traits"]={"doc":"Numeric traits for generic mathematics","items":[[8,"Bounded","num_traits","Numbers which have upper and lower bounds",N,N],[10,"min_value","","returns the smallest finite number this type can represent",0,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",0,[[],["self"]]],[8,"Float","","Generic trait for floating point numbers",N,N],[10,"nan","","Returns the `NaN` value.",1,[[],["self"]]],[10,"infinity","","Returns the infinite value.",1,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",1,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",1,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can represent.",1,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",1,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",1,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can represent.",1,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",1,[[["self"]],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",1,[[["self"]],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",1,[[["self"]],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",1,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",1,[[["self"]],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",1,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",1,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",1,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",1,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",1,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",1,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",1,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.",1,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.",1,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",1,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",1,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",1,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",1,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",1,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",1,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",1,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",1,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",1,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",1,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",1,[[["self"]],["self"]]],[11,"to_degrees","","Converts radians to degrees.",1,[[["self"]],["self"]]],[11,"to_radians","","Converts degrees to radians.",1,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",1,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",1,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",1,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",1,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",1,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",1,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",1,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",1,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",1,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",1,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",1,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",1,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",1,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",1,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",1,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",1,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",1,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",1,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",1,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",1,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",1,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`.",1,N],[8,"FloatConst","","",N,N],[10,"E","","Return Euler’s number.",2,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",2,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",2,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",2,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",2,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",2,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",2,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",2,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",2,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",2,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",2,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",2,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",2,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",2,[[],["self"]]],[10,"PI","","Return Archimedes’ constant.",2,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",2,[[],["self"]]],[8,"Zero","","Defines an additive identity element for `Self`.",N,N],[10,"zero","","Returns the additive identity element of `Self`, `0`.",3,[[],["self"]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",3,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",N,N],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",4,[[],["self"]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative identity.",4,[[["self"]],["bool"]]],[5,"zero","","Returns the additive identity, `0`.",N,[[],["t"]]],[5,"one","","Returns the multiplicative identity, `1`.",N,[[],["t"]]],[8,"CheckedAdd","","Performs addition that returns `None` instead of wrapping around on overflow.",N,N],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",5,[[["self"],["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",N,N],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",6,[[["self"],["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",N,N],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",7,[[["self"],["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",N,N],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",8,[[["self"],["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on overflow.",N,N],[10,"checked_shl","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",9,[[["self"],["u32"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on overflow.",N,N],[10,"checked_shr","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",10,[[["self"],["u32"]],["option"]]],[8,"WrappingAdd","","Performs addition that wraps around on overflow.",N,N],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of the type.",11,[[["self"],["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",N,N],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary of the type.",12,[[["self"],["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",N,N],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary of the type.",13,[[["self"],["self"]],["self"]]],[8,"Saturating","","Saturating math operations",N,N],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",14,[[["self"],["self"]],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",14,[[["self"],["self"]],["self"]]],[8,"Signed","","Useful functions for signed numbers (i.e. numbers that can be negative).",N,N],[10,"abs","","Computes the absolute value.",15,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",15,[[["self"],["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",15,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",15,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",15,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",N,N],[5,"abs","","Computes the absolute value.",N,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",N,[[["t"],["t"]],["t"]]],[5,"signum","","Returns the sign of the number.",N,[[["t"]],["t"]]],[8,"AsPrimitive","","A generic interface for casting between machine scalars with the `as` operator, which admits narrowing and precision loss. Implementers of this trait AsPrimitive should behave like a primitive numeric type (e.g. a newtype around another primitive), and the intended conversion must never fail.",N,N],[10,"as_","","Convert a value to another, using the `as` operator.",16,[[["self"]],["t"]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, then `None` is returned.",17,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["i64"]],["option"]]],[11,"from_i128","","Convert an `i128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["i128"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["u64"]],["option"]]],[11,"from_u128","","Convert an `u128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["u128"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["f64"]],["option"]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",18,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",18,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",18,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",18,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",18,[[["self"]],["option",["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`.",18,[[["self"]],["option",["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",18,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",18,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",18,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",18,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",18,[[["self"]],["option",["u64"]]]],[11,"to_u128","","Converts the value of `self` to an `u128`.",18,[[["self"]],["option",["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",18,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",18,[[["self"]],["option",["f64"]]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",19,[[["t"]],["option"]]],[5,"cast","","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[8,"PrimInt","","",N,N],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",20,[[["self"]],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",20,[[["self"]],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",20,[[["self"]],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",20,[[["self"]],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",20,[[["self"],["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",20,[[["self"],["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",20,[[["self"],["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",20,[[["self"],["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",20,[[["self"],["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",20,[[["self"],["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",20,[[["self"]],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's endianness.",20,[[["self"]],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's endianness.",20,[[["self"]],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",20,[[["self"]],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's endianness.",20,[[["self"]],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",20,[[["self"],["u32"]],["self"]]],[5,"pow","","Raises a value to the power of exp, using exponentiation by squaring.",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",N,[[["t"],["usize"]],["option"]]],[8,"Num","","The base trait for numeric types, covering `0` and `1` values, comparisons, basic numeric operations, and string conversion.",N,N],[16,"FromStrRadixErr","","",21,N],[10,"from_str_radix","","Convert from a string and radix <= 36.",21,[[["str"],["u32"]],["result"]]],[8,"NumOps","","The trait for types implementing basic numeric operations",N,N],[8,"NumRef","","The trait for `Num` types which also implement numeric operations taking the second operand by reference.",N,N],[8,"RefNum","","The trait for references which implement numeric operations, taking the second operand either by value or by reference.",N,N],[8,"NumAssignOps","","The trait for types implementing numeric assignment operators (like `+=`).",N,N],[8,"NumAssign","","The trait for `Num` types which also implement assignment operators.",N,N],[8,"NumAssignRef","","The trait for `NumAssign` types which also implement assignment operations taking the second operand by reference.",N,N],[4,"FloatErrorKind","","",N,N],[13,"Empty","","",22,N],[13,"Invalid","","",22,N],[3,"ParseFloatError","","",N,N],[12,"kind","","",23,N],[5,"clamp","","A value bounded by a minimum and a maximum",N,[[["t"],["t"],["t"]],["t"]]],[0,"identities","","",N,N],[8,"Zero","num_traits::identities","Defines an additive identity element for `Self`.",N,N],[10,"zero","","Returns the additive identity element of `Self`, `0`.",3,[[],["self"]]],[10,"is_zero","","Returns `true` if `self` is equal to the additive identity.",3,[[["self"]],["bool"]]],[8,"One","","Defines a multiplicative identity element for `Self`.",N,N],[10,"one","","Returns the multiplicative identity element of `Self`, `1`.",4,[[],["self"]]],[11,"is_one","","Returns `true` if `self` is equal to the multiplicative identity.",4,[[["self"]],["bool"]]],[5,"zero","","Returns the additive identity, `0`.",N,[[],["t"]]],[5,"one","","Returns the multiplicative identity, `1`.",N,[[],["t"]]],[0,"sign","num_traits","",N,N],[8,"Signed","num_traits::sign","Useful functions for signed numbers (i.e. numbers that can be negative).",N,N],[10,"abs","","Computes the absolute value.",15,[[["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",15,[[["self"],["self"]],["self"]]],[10,"signum","","Returns the sign of the number.",15,[[["self"]],["self"]]],[10,"is_positive","","Returns true if the number is positive and false if the number is zero or negative.",15,[[["self"]],["bool"]]],[10,"is_negative","","Returns true if the number is negative and false if the number is zero or positive.",15,[[["self"]],["bool"]]],[8,"Unsigned","","A trait for values which cannot be negative",N,N],[5,"abs","","Computes the absolute value.",N,[[["t"]],["t"]]],[5,"abs_sub","","The positive difference of two numbers.",N,[[["t"],["t"]],["t"]]],[5,"signum","","Returns the sign of the number.",N,[[["t"]],["t"]]],[0,"ops","num_traits","",N,N],[0,"saturating","num_traits::ops","",N,N],[8,"Saturating","num_traits::ops::saturating","Saturating math operations",N,N],[10,"saturating_add","","Saturating addition operator. Returns a+b, saturating at the numeric bounds instead of overflowing.",14,[[["self"],["self"]],["self"]]],[10,"saturating_sub","","Saturating subtraction operator. Returns a-b, saturating at the numeric bounds instead of overflowing.",14,[[["self"],["self"]],["self"]]],[0,"checked","num_traits::ops","",N,N],[8,"CheckedAdd","num_traits::ops::checked","Performs addition that returns `None` instead of wrapping around on overflow.",N,N],[10,"checked_add","","Adds two numbers, checking for overflow. If overflow happens, `None` is returned.",5,[[["self"],["self"]],["option"]]],[8,"CheckedSub","","Performs subtraction that returns `None` instead of wrapping around on underflow.",N,N],[10,"checked_sub","","Subtracts two numbers, checking for underflow. If underflow happens, `None` is returned.",6,[[["self"],["self"]],["option"]]],[8,"CheckedMul","","Performs multiplication that returns `None` instead of wrapping around on underflow or overflow.",N,N],[10,"checked_mul","","Multiplies two numbers, checking for underflow or overflow. If underflow or overflow happens, `None` is returned.",7,[[["self"],["self"]],["option"]]],[8,"CheckedDiv","","Performs division that returns `None` instead of panicking on division by zero and instead of wrapping around on underflow and overflow.",N,N],[10,"checked_div","","Divides two numbers, checking for underflow, overflow and division by zero. If any of that happens, `None` is returned.",8,[[["self"],["self"]],["option"]]],[8,"CheckedShl","","Performs a left shift that returns `None` on overflow.",N,N],[10,"checked_shl","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",9,[[["self"],["u32"]],["option"]]],[8,"CheckedShr","","Performs a right shift that returns `None` on overflow.",N,N],[10,"checked_shr","","Shifts a number to the left, checking for overflow. If overflow happens, `None` is returned.",10,[[["self"],["u32"]],["option"]]],[0,"wrapping","num_traits::ops","",N,N],[8,"WrappingAdd","num_traits::ops::wrapping","Performs addition that wraps around on overflow.",N,N],[10,"wrapping_add","","Wrapping (modular) addition. Computes `self + other`, wrapping around at the boundary of the type.",11,[[["self"],["self"]],["self"]]],[8,"WrappingMul","","Performs multiplication that wraps around on overflow.",N,N],[10,"wrapping_mul","","Wrapping (modular) multiplication. Computes `self * other`, wrapping around at the boundary of the type.",12,[[["self"],["self"]],["self"]]],[8,"WrappingSub","","Performs subtraction that wraps around on overflow.",N,N],[10,"wrapping_sub","","Wrapping (modular) subtraction. Computes `self - other`, wrapping around at the boundary of the type.",13,[[["self"],["self"]],["self"]]],[0,"bounds","num_traits","",N,N],[8,"Bounded","num_traits::bounds","Numbers which have upper and lower bounds",N,N],[10,"min_value","","returns the smallest finite number this type can represent",0,[[],["self"]]],[10,"max_value","","returns the largest finite number this type can represent",0,[[],["self"]]],[0,"float","num_traits","",N,N],[8,"Float","num_traits::float","Generic trait for floating point numbers",N,N],[10,"nan","","Returns the `NaN` value.",1,[[],["self"]]],[10,"infinity","","Returns the infinite value.",1,[[],["self"]]],[10,"neg_infinity","","Returns the negative infinite value.",1,[[],["self"]]],[10,"neg_zero","","Returns `-0.0`.",1,[[],["self"]]],[10,"min_value","","Returns the smallest finite value that this type can represent.",1,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",1,[[],["self"]]],[11,"epsilon","","Returns epsilon, a small positive value.",1,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can represent.",1,[[],["self"]]],[10,"is_nan","","Returns `true` if this value is `NaN` and false otherwise.",1,[[["self"]],["bool"]]],[10,"is_infinite","","Returns `true` if this value is positive infinity or negative infinity and false otherwise.",1,[[["self"]],["bool"]]],[10,"is_finite","","Returns `true` if this number is neither infinite nor `NaN`.",1,[[["self"]],["bool"]]],[10,"is_normal","","Returns `true` if the number is neither zero, infinite, [subnormal][subnormal], or `NaN`.",1,[[["self"]],["bool"]]],[10,"classify","","Returns the floating point category of the number. If only one property is going to be tested, it is generally faster to use the specific predicate instead.",1,[[["self"]],["fpcategory"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",1,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",1,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",1,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",1,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",1,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",1,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",1,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and since Rust 1.20 also `Float::nan()`.",1,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and since Rust 1.20 also `-Float::nan()`.",1,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",1,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",1,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",1,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a floating point power.",1,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",1,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",1,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",1,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",1,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",1,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",1,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",1,[[["self"]],["self"]]],[11,"to_degrees","","Converts radians to degrees.",1,[[["self"]],["self"]]],[11,"to_radians","","Converts degrees to radians.",1,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",1,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",1,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",1,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",1,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",1,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",1,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",1,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",1,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",1,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",1,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",1,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",1,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",1,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",1,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",1,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",1,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",1,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",1,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",1,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",1,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",1,[[["self"]],["self"]]],[10,"integer_decode","","Returns the mantissa, base 2 exponent, and sign as integers, respectively. The original number can be recovered by `sign * mantissa * 2 ^ exponent`.",1,N],[8,"FloatConst","","",N,N],[10,"E","","Return Euler’s number.",2,[[],["self"]]],[10,"FRAC_1_PI","","Return `1.0 / π`.",2,[[],["self"]]],[10,"FRAC_1_SQRT_2","","Return `1.0 / sqrt(2.0)`.",2,[[],["self"]]],[10,"FRAC_2_PI","","Return `2.0 / π`.",2,[[],["self"]]],[10,"FRAC_2_SQRT_PI","","Return `2.0 / sqrt(π)`.",2,[[],["self"]]],[10,"FRAC_PI_2","","Return `π / 2.0`.",2,[[],["self"]]],[10,"FRAC_PI_3","","Return `π / 3.0`.",2,[[],["self"]]],[10,"FRAC_PI_4","","Return `π / 4.0`.",2,[[],["self"]]],[10,"FRAC_PI_6","","Return `π / 6.0`.",2,[[],["self"]]],[10,"FRAC_PI_8","","Return `π / 8.0`.",2,[[],["self"]]],[10,"LN_10","","Return `ln(10.0)`.",2,[[],["self"]]],[10,"LN_2","","Return `ln(2.0)`.",2,[[],["self"]]],[10,"LOG10_E","","Return `log10(e)`.",2,[[],["self"]]],[10,"LOG2_E","","Return `log2(e)`.",2,[[],["self"]]],[10,"PI","","Return Archimedes’ constant.",2,[[],["self"]]],[10,"SQRT_2","","Return `sqrt(2.0)`.",2,[[],["self"]]],[0,"real","num_traits","",N,N],[8,"Real","num_traits::real","A trait for real number types that do not necessarily have floating-point-specific characteristics such as NaN and infinity.",N,N],[10,"min_value","","Returns the smallest finite value that this type can represent.",24,[[],["self"]]],[10,"min_positive_value","","Returns the smallest positive, normalized value that this type can represent.",24,[[],["self"]]],[10,"epsilon","","Returns epsilon, a small positive value.",24,[[],["self"]]],[10,"max_value","","Returns the largest finite value that this type can represent.",24,[[],["self"]]],[10,"floor","","Returns the largest integer less than or equal to a number.",24,[[["self"]],["self"]]],[10,"ceil","","Returns the smallest integer greater than or equal to a number.",24,[[["self"]],["self"]]],[10,"round","","Returns the nearest integer to a number. Round half-way cases away from `0.0`.",24,[[["self"]],["self"]]],[10,"trunc","","Return the integer part of a number.",24,[[["self"]],["self"]]],[10,"fract","","Returns the fractional part of a number.",24,[[["self"]],["self"]]],[10,"abs","","Computes the absolute value of `self`. Returns `Float::nan()` if the number is `Float::nan()`.",24,[[["self"]],["self"]]],[10,"signum","","Returns a number that represents the sign of `self`.",24,[[["self"]],["self"]]],[10,"is_sign_positive","","Returns `true` if `self` is positive, including `+0.0`, `Float::infinity()`, and with newer versions of Rust `f64::NAN`.",24,[[["self"]],["bool"]]],[10,"is_sign_negative","","Returns `true` if `self` is negative, including `-0.0`, `Float::neg_infinity()`, and with newer versions of Rust `-f64::NAN`.",24,[[["self"]],["bool"]]],[10,"mul_add","","Fused multiply-add. Computes `(self * a) + b` with only one rounding error, yielding a more accurate result than an unfused multiply-add.",24,[[["self"],["self"],["self"]],["self"]]],[10,"recip","","Take the reciprocal (inverse) of a number, `1/x`.",24,[[["self"]],["self"]]],[10,"powi","","Raise a number to an integer power.",24,[[["self"],["i32"]],["self"]]],[10,"powf","","Raise a number to a real number power.",24,[[["self"],["self"]],["self"]]],[10,"sqrt","","Take the square root of a number.",24,[[["self"]],["self"]]],[10,"exp","","Returns `e^(self)`, (the exponential function).",24,[[["self"]],["self"]]],[10,"exp2","","Returns `2^(self)`.",24,[[["self"]],["self"]]],[10,"ln","","Returns the natural logarithm of the number.",24,[[["self"]],["self"]]],[10,"log","","Returns the logarithm of the number with respect to an arbitrary base.",24,[[["self"],["self"]],["self"]]],[10,"log2","","Returns the base 2 logarithm of the number.",24,[[["self"]],["self"]]],[10,"log10","","Returns the base 10 logarithm of the number.",24,[[["self"]],["self"]]],[10,"to_degrees","","Converts radians to degrees.",24,[[["self"]],["self"]]],[10,"to_radians","","Converts degrees to radians.",24,[[["self"]],["self"]]],[10,"max","","Returns the maximum of the two numbers.",24,[[["self"],["self"]],["self"]]],[10,"min","","Returns the minimum of the two numbers.",24,[[["self"],["self"]],["self"]]],[10,"abs_sub","","The positive difference of two numbers.",24,[[["self"],["self"]],["self"]]],[10,"cbrt","","Take the cubic root of a number.",24,[[["self"]],["self"]]],[10,"hypot","","Calculate the length of the hypotenuse of a right-angle triangle given legs of length `x` and `y`.",24,[[["self"],["self"]],["self"]]],[10,"sin","","Computes the sine of a number (in radians).",24,[[["self"]],["self"]]],[10,"cos","","Computes the cosine of a number (in radians).",24,[[["self"]],["self"]]],[10,"tan","","Computes the tangent of a number (in radians).",24,[[["self"]],["self"]]],[10,"asin","","Computes the arcsine of a number. Return value is in radians in the range [-pi/2, pi/2] or NaN if the number is outside the range [-1, 1].",24,[[["self"]],["self"]]],[10,"acos","","Computes the arccosine of a number. Return value is in radians in the range [0, pi] or NaN if the number is outside the range [-1, 1].",24,[[["self"]],["self"]]],[10,"atan","","Computes the arctangent of a number. Return value is in radians in the range [-pi/2, pi/2];",24,[[["self"]],["self"]]],[10,"atan2","","Computes the four quadrant arctangent of `self` (`y`) and `other` (`x`).",24,[[["self"],["self"]],["self"]]],[10,"sin_cos","","Simultaneously computes the sine and cosine of the number, `x`. Returns `(sin(x), cos(x))`.",24,N],[10,"exp_m1","","Returns `e^(self) - 1` in a way that is accurate even if the number is close to zero.",24,[[["self"]],["self"]]],[10,"ln_1p","","Returns `ln(1+n)` (natural logarithm) more accurately than if the operations were performed separately.",24,[[["self"]],["self"]]],[10,"sinh","","Hyperbolic sine function.",24,[[["self"]],["self"]]],[10,"cosh","","Hyperbolic cosine function.",24,[[["self"]],["self"]]],[10,"tanh","","Hyperbolic tangent function.",24,[[["self"]],["self"]]],[10,"asinh","","Inverse hyperbolic sine function.",24,[[["self"]],["self"]]],[10,"acosh","","Inverse hyperbolic cosine function.",24,[[["self"]],["self"]]],[10,"atanh","","Inverse hyperbolic tangent function.",24,[[["self"]],["self"]]],[0,"cast","num_traits","",N,N],[8,"AsPrimitive","num_traits::cast","A generic interface for casting between machine scalars with the `as` operator, which admits narrowing and precision loss. Implementers of this trait AsPrimitive should behave like a primitive numeric type (e.g. a newtype around another primitive), and the intended conversion must never fail.",N,N],[10,"as_","","Convert a value to another, using the `as` operator.",16,[[["self"]],["t"]]],[8,"FromPrimitive","","A generic trait for converting a number to a value.",N,N],[11,"from_isize","","Convert an `isize` to return an optional value of this type. If the value cannot be represented by this value, then `None` is returned.",17,[[["isize"]],["option"]]],[11,"from_i8","","Convert an `i8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["i8"]],["option"]]],[11,"from_i16","","Convert an `i16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["i16"]],["option"]]],[11,"from_i32","","Convert an `i32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["i32"]],["option"]]],[10,"from_i64","","Convert an `i64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["i64"]],["option"]]],[11,"from_i128","","Convert an `i128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["i128"]],["option"]]],[11,"from_usize","","Convert a `usize` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["usize"]],["option"]]],[11,"from_u8","","Convert an `u8` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["u8"]],["option"]]],[11,"from_u16","","Convert an `u16` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["u16"]],["option"]]],[11,"from_u32","","Convert an `u32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["u32"]],["option"]]],[10,"from_u64","","Convert an `u64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["u64"]],["option"]]],[11,"from_u128","","Convert an `u128` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["u128"]],["option"]]],[11,"from_f32","","Convert a `f32` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["f32"]],["option"]]],[11,"from_f64","","Convert a `f64` to return an optional value of this type. If the type cannot be represented by this value, then `None` is returned.",17,[[["f64"]],["option"]]],[8,"ToPrimitive","","A generic trait for converting a value to a number.",N,N],[11,"to_isize","","Converts the value of `self` to an `isize`.",18,[[["self"]],["option",["isize"]]]],[11,"to_i8","","Converts the value of `self` to an `i8`.",18,[[["self"]],["option",["i8"]]]],[11,"to_i16","","Converts the value of `self` to an `i16`.",18,[[["self"]],["option",["i16"]]]],[11,"to_i32","","Converts the value of `self` to an `i32`.",18,[[["self"]],["option",["i32"]]]],[10,"to_i64","","Converts the value of `self` to an `i64`.",18,[[["self"]],["option",["i64"]]]],[11,"to_i128","","Converts the value of `self` to an `i128`.",18,[[["self"]],["option",["i128"]]]],[11,"to_usize","","Converts the value of `self` to a `usize`.",18,[[["self"]],["option",["usize"]]]],[11,"to_u8","","Converts the value of `self` to an `u8`.",18,[[["self"]],["option",["u8"]]]],[11,"to_u16","","Converts the value of `self` to an `u16`.",18,[[["self"]],["option",["u16"]]]],[11,"to_u32","","Converts the value of `self` to an `u32`.",18,[[["self"]],["option",["u32"]]]],[10,"to_u64","","Converts the value of `self` to an `u64`.",18,[[["self"]],["option",["u64"]]]],[11,"to_u128","","Converts the value of `self` to an `u128`.",18,[[["self"]],["option",["u128"]]]],[11,"to_f32","","Converts the value of `self` to an `f32`.",18,[[["self"]],["option",["f32"]]]],[11,"to_f64","","Converts the value of `self` to an `f64`.",18,[[["self"]],["option",["f64"]]]],[8,"NumCast","","An interface for casting between machine scalars.",N,N],[10,"from","","Creates a number from another value that can be converted into a primitive via the `ToPrimitive` trait.",19,[[["t"]],["option"]]],[5,"cast","","Cast from one machine scalar to another.",N,[[["t"]],["option"]]],[0,"int","num_traits","",N,N],[8,"PrimInt","num_traits::int","",N,N],[10,"count_ones","","Returns the number of ones in the binary representation of `self`.",20,[[["self"]],["u32"]]],[10,"count_zeros","","Returns the number of zeros in the binary representation of `self`.",20,[[["self"]],["u32"]]],[10,"leading_zeros","","Returns the number of leading zeros in the binary representation of `self`.",20,[[["self"]],["u32"]]],[10,"trailing_zeros","","Returns the number of trailing zeros in the binary representation of `self`.",20,[[["self"]],["u32"]]],[10,"rotate_left","","Shifts the bits to the left by a specified amount amount, `n`, wrapping the truncated bits to the end of the resulting integer.",20,[[["self"],["u32"]],["self"]]],[10,"rotate_right","","Shifts the bits to the right by a specified amount amount, `n`, wrapping the truncated bits to the beginning of the resulting integer.",20,[[["self"],["u32"]],["self"]]],[10,"signed_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",20,[[["self"],["u32"]],["self"]]],[10,"signed_shr","","Shifts the bits to the right by a specified amount amount, `n`, copying the \"sign bit\" in the most significant bits even for unsigned types.",20,[[["self"],["u32"]],["self"]]],[10,"unsigned_shl","","Shifts the bits to the left by a specified amount amount, `n`, filling zeros in the least significant bits.",20,[[["self"],["u32"]],["self"]]],[10,"unsigned_shr","","Shifts the bits to the right by a specified amount amount, `n`, filling zeros in the most significant bits.",20,[[["self"],["u32"]],["self"]]],[10,"swap_bytes","","Reverses the byte order of the integer.",20,[[["self"]],["self"]]],[10,"from_be","","Convert an integer from big endian to the target's endianness.",20,[[["self"]],["self"]]],[10,"from_le","","Convert an integer from little endian to the target's endianness.",20,[[["self"]],["self"]]],[10,"to_be","","Convert `self` to big endian from the target's endianness.",20,[[["self"]],["self"]]],[10,"to_le","","Convert `self` to little endian from the target's endianness.",20,[[["self"]],["self"]]],[10,"pow","","Raises self to the power of `exp`, using exponentiation by squaring.",20,[[["self"],["u32"]],["self"]]],[0,"pow","num_traits","",N,N],[5,"pow","num_traits::pow","Raises a value to the power of exp, using exponentiation by squaring.",N,[[["t"],["usize"]],["t"]]],[5,"checked_pow","","Raises a value to the power of exp, returning `None` if an overflow occurred.",N,[[["t"],["usize"]],["option"]]],[11,"fmt","num_traits","",22,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result",["error"]]]]],"paths":[[8,"Bounded"],[8,"Float"],[8,"FloatConst"],[8,"Zero"],[8,"One"],[8,"CheckedAdd"],[8,"CheckedSub"],[8,"CheckedMul"],[8,"CheckedDiv"],[8,"CheckedShl"],[8,"CheckedShr"],[8,"WrappingAdd"],[8,"WrappingMul"],[8,"WrappingSub"],[8,"Saturating"],[8,"Signed"],[8,"AsPrimitive"],[8,"FromPrimitive"],[8,"ToPrimitive"],[8,"NumCast"],[8,"PrimInt"],[8,"Num"],[4,"FloatErrorKind"],[3,"ParseFloatError"],[8,"Real"]]};
searchIndex["opengl_graphics"]={"doc":"An OpenGL back-end for Rust-Graphics","items":[[4,"OpenGL","opengl_graphics","",N,N],[13,"V2_0","","",0,N],[13,"V2_1","","",0,N],[13,"V3_0","","",0,N],[13,"V3_1","","",0,N],[13,"V3_2","","",0,N],[13,"V3_3","","",0,N],[13,"V4_0","","",0,N],[13,"V4_1","","",0,N],[13,"V4_2","","",0,N],[13,"V4_3","","",0,N],[13,"V4_4","","",0,N],[13,"V4_5","","",0,N],[3,"Shaders","","Shader picker.",N,N],[4,"GLSL","","For OpenGL version 3.3 and above, the GLSL version is the same as the OpenGL version.",N,N],[13,"V1_10","","",1,N],[13,"V1_20","","",1,N],[13,"V1_30","","",1,N],[13,"V1_40","","",1,N],[13,"V1_50","","",1,N],[13,"V3_30","","",1,N],[13,"V4_00","","",1,N],[13,"V4_10","","",1,N],[13,"V4_20","","",1,N],[13,"V4_30","","",1,N],[13,"V4_40","","",1,N],[13,"V4_50","","",1,N],[0,"ops","","Image operations for textures.",N,N],[5,"flip_vertical","opengl_graphics::ops","Flips the image vertically.",N,N],[5,"alpha_to_rgba8","","Converts from alpha to rgba8.",N,N],[8,"ImageSize","opengl_graphics","Implemented by all images to be used with generic algorithms.",N,N],[10,"get_size","","Get the image size.",2,N],[11,"get_width","","Gets the image width.",2,[[["self"]],["u32"]]],[11,"get_height","","Gets the image height.",2,[[["self"]],["u32"]]],[3,"TextureSettings","","Texture creation parameters.",N,N],[4,"Format","","Texture format.",N,N],[13,"Rgba8","","`(red, green, blue, alpha)` with values 0-255.",3,N],[8,"CreateTexture","","Implemented by textures for creation.",N,N],[16,"Error","","The error when creating texture.",4,N],[10,"create","","Create texture from memory.",4,N],[8,"UpdateTexture","","Implemented by textures for updating.",N,N],[16,"Error","","The error when updating texture.",5,N],[10,"update","","Update the texture.",5,N],[4,"Filter","","Sampling filter",N,N],[13,"Linear","","A Weighted Linear Blend",6,N],[13,"Nearest","","Nearest Texel",6,N],[3,"Colored","","Describes how to render colored objects.",N,N],[3,"Textured","","Describes how to render textured objects.",N,N],[3,"GlGraphics","","Contains OpenGL data.",N,N],[3,"Texture","","Wraps OpenGL texture data. The texture gets deleted when running out of scope.",N,N],[0,"shader_utils","","Helper functions for dealing with shaders.",N,N],[3,"DynamicAttribute","opengl_graphics::shader_utils","Describes a shader attribute.",N,N],[5,"compile_shader","","Compiles a shader.",N,[[["glenum"],["str"]],["result",["gluint","string"]]]],[5,"attribute_location","","Finds attribute location from a program.",N,[[["gluint"],["str"]],["result",["gluint","string"]]]],[5,"uniform_location","","Finds uniform location from a program.",N,[[["gluint"],["str"]],["result",["gluint","string"]]]],[11,"drop","","",7,[[["self"]]]],[11,"xyz","","Create XYZ vertex attribute.",7,[[["gluint"],["str"],["gluint"]],["result",["dynamicattribute","string"]]]],[11,"xy","","Create XY vertex attribute.",7,[[["gluint"],["str"],["gluint"]],["result",["dynamicattribute","string"]]]],[11,"rgb","","Create RGB color attribute.",7,[[["gluint"],["str"],["gluint"]],["result",["dynamicattribute","string"]]]],[11,"rgba","","Create RGBA color attribute.",7,[[["gluint"],["str"],["gluint"]],["result",["dynamicattribute","string"]]]],[11,"uv","","Create texture coordinate attribute.",7,[[["gluint"],["str"],["gluint"]],["result",["dynamicattribute","string"]]]],[11,"set","","Sets attribute data.",7,N],[0,"error","opengl_graphics","Errors",N,N],[4,"Error","opengl_graphics::error","An enum to represent various possible run-time errors that may occur.",N,N],[13,"IoError","","An error happened with I/O.",8,N],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"from","","",8,[[["error"]],["error"]]],[0,"shader_uniforms","opengl_graphics","Types and methods for setting shader uniforms",N,N],[3,"ShaderUniform","opengl_graphics::shader_uniforms","Describes a shader uniform of a given type.",N,N],[3,"SUFloat","","Shader uniform float",N,N],[3,"SUInt","","Shader uniform integer",N,N],[3,"SUVec2","","Shader uniform vector of size 2 Vector elements are floats",N,N],[3,"SUVec3","","Shader uniform vector of size 3 Vector elements are floats",N,N],[3,"SUVec4","","Shader uniform vector of size 4 Vector elements are floats",N,N],[3,"SUMat2x2","","Shader uniform 2x2 matrix Matrix elements are floats",N,N],[3,"SUMat3x3","","Shader uniform 3x3 matrix Matrix elements are floats",N,N],[3,"SUMat4x4","","Shader uniform 4x4 matrix Matrix elements are floats",N,N],[8,"UniformType","","Shader uniform type",N,N],[11,"clone","","",9,[[["self"]],["shaderuniform"]]],[11,"clone","","",10,[[["self"]],["sufloat"]]],[11,"clone","","",11,[[["self"]],["suint"]]],[11,"clone","","",12,[[["self"]],["suvec2"]]],[11,"clone","","",13,[[["self"]],["suvec3"]]],[11,"clone","","",14,[[["self"]],["suvec4"]]],[11,"clone","","",15,[[["self"]],["sumat2x2"]]],[11,"clone","","",16,[[["self"]],["sumat3x3"]]],[11,"clone","","",17,[[["self"]],["sumat4x4"]]],[11,"get_uniform","opengl_graphics","Try to get uniform from the current shader of a given name.",18,[[["self"],["str"]],["option",["shaderuniform"]]]],[11,"set","opengl_graphics::shader_uniforms","Set the value of the float uniform.",9,[[["self"],["glgraphics"],["f32"]]]],[11,"set","","Set the value of the integer uniform.",9,[[["self"],["glgraphics"],["i32"]]]],[11,"set","","Set the value of the vector 2 uniform.",9,N],[11,"set","","Set the value of the vector 3 uniform.",9,N],[11,"set","","Set the value of the vector 4 uniform.",9,N],[11,"set","","Set the value of the 2x2 matrix uniform.",9,N],[11,"set","","Set the value of the 3x3 matrix uniform.",9,N],[11,"set","","Set the value of the 4x4 matrix uniform.",9,N],[11,"drop","opengl_graphics","",19,[[["self"]]]],[11,"new","","Generate using pass-through shaders.",19,[[["glsl"]],["self"]]],[11,"from_vs_fs","","Generate using custom vertex and fragment shaders.",19,[[["glsl"],["shaders"],["shaders"]],["result",["string"]]]],[11,"drop","","",20,[[["self"]]]],[11,"new","","Generate using pass-through shaders.",20,[[["glsl"]],["self"]]],[11,"from_vs_fs","","Generate using custom vertex and fragment shaders.",20,[[["glsl"],["shaders"],["shaders"]],["result",["string"]]]],[11,"new","","Creates a new OpenGL back-end.",18,[[["opengl"]],["self"]]],[11,"from_colored_textured","","Create a new OpenGL back-end with `Colored` and `Textured` structs to describe how to render objects.",18,[[["colored"],["textured"]],["self"]]],[11,"viewport","","Sets viewport with normalized coordinates and center as origin.",18,[[["self"],["i32"],["i32"],["i32"],["i32"]]]],[11,"get_current_program","","Returns the current program",18,[[["self"]],["option",["gluint"]]]],[11,"use_program","","Sets the current program only if the program is not in use.",18,[[["self"],["gluint"]]]],[11,"clear_program","","Unset the current program.",18,[[["self"]]]],[11,"use_draw_state","","Sets the current draw state, by detecting changes.",18,[[["self"],["drawstate"]]]],[11,"clear_draw_state","","Unsets the current draw state.",18,[[["self"]]]],[11,"draw_begin","","Setup that should be called at the start of a frame's draw call.",18,[[["self"],["viewport"]],["context"]]],[11,"draw_end","","Finalize the frame's draw calls.",18,[[["self"]]]],[11,"draw","","Convenience for wrapping draw calls with the begin and end methods.",18,[[["self"],["viewport"],["f"]],["u"]]],[11,"has_texture_alpha","","Assume all textures has alpha channel for now.",18,[[["self"],["texture"]],["bool"]]],[11,"clear_color","","",18,N],[11,"clear_stencil","","",18,[[["self"],["u8"]]]],[11,"tri_list","","",18,N],[11,"tri_list_uv","","",18,N],[11,"new","","Creates a new texture.",21,[[["gluint"],["u32"],["u32"]],["self"]]],[11,"get_id","","Gets the OpenGL id of the texture.",21,[[["self"]],["gluint"]]],[11,"empty","","Returns empty texture.",21,[[["texturesettings"]],["result",["string"]]]],[11,"from_memory_alpha","","Loads image from memory, the format is 8-bit greyscale.",21,N],[11,"from_path","","Loads image by relative file name to the asset root.",21,[[["p"],["texturesettings"]],["result",["string"]]]],[11,"from_image","","Creates a texture from image.",21,[[["rgbaimage"],["texturesettings"]],["self"]]],[11,"update","","Updates image with a new one.",21,[[["self"],["rgbaimage"]]]],[11,"drop","","",21,[[["self"]]]],[11,"get_size","","",21,N],[11,"create","","",21,N],[11,"update","","",21,N],[6,"GlyphCache","","Glyph cache implementation for OpenGL backend.",N,N],[11,"get_major_minor","","Gets the minor version of OpenGL.",0,N],[11,"to_glsl","","Gets GLSL version associated with OpenGL.",0,[[["self"]],["glsl"]]],[11,"clone","","",0,[[["self"]],["opengl"]]],[11,"clone","","",1,[[["self"]],["glsl"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"partial_cmp","","",0,[[["self"],["opengl"]],["option",["ordering"]]]],[11,"partial_cmp","","",1,[[["self"],["glsl"]],["option",["ordering"]]]],[11,"cmp","","",0,[[["self"],["opengl"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["glsl"]],["ordering"]]],[11,"from_str","","",1,[[["str"]],["result",["glsl"]]]],[11,"from_str","","",0,[[["str"]],["result",["opengl"]]]],[11,"pick_shader","","",1,[[["self"],["shaders"]],["option"]]],[11,"eq","","",0,[[["self"],["opengl"]],["bool"]]],[11,"eq","","",1,[[["self"],["glsl"]],["bool"]]],[11,"clone","","",3,[[["self"]],["format"]]],[11,"clone","","",6,[[["self"]],["filter"]]],[11,"clone","","",22,[[["self"]],["texturesettings"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"new","","Creates a new shader picker.",23,[[],["shaders"]]],[11,"set","","Sets source for a shader version.",23,[[["self"],["v"],["s"]],["shaders"]]],[11,"get","","Get the closest shader to a shader version.",23,[[["self"],["v"]],["option"]]],[11,"to_opengl","","Gets OpenGL version associated with GLSL.",1,[[["self"]],["opengl"]]],[11,"new","","Create default settings.",22,[[],["texturesettings"]]],[11,"get_convert_gamma","","Gets whether to convert gamma, treated as sRGB color space.",22,[[["self"]],["bool"]]],[11,"set_convert_gamma","","Sets convert gamma.",22,N],[11,"convert_gamma","","Sets convert gamma.",22,[[["self"],["bool"]],["texturesettings"]]],[11,"get_compress","","Gets wheter compress on the GPU.",22,[[["self"]],["bool"]]],[11,"set_compress","","Sets compress.",22,N],[11,"compress","","Sets compress.",22,[[["self"],["bool"]],["texturesettings"]]],[11,"get_generate_mipmap","","Gets generate mipmap.",22,[[["self"]],["bool"]]],[11,"set_generate_mipmap","","Sets generate mipmap.",22,N],[11,"generate_mipmap","","Sets generate mipmap.",22,[[["self"],["bool"]],["texturesettings"]]],[11,"get_min","","Gets minify filter.",22,[[["self"]],["filter"]]],[11,"set_min","","Sets minify filter.",22,N],[11,"min","","Sets minify filter.",22,[[["self"],["filter"]],["texturesettings"]]],[11,"get_mag","","Gets magnify filter",22,[[["self"]],["filter"]]],[11,"set_mag","","Sets magnify filter",22,N],[11,"mag","","Sets magnify filter",22,[[["self"],["filter"]],["texturesettings"]]],[11,"get_mipmap","","Gets minify mipmap filter",22,[[["self"]],["filter"]]],[11,"set_mipmap","","Sets magnify mipmap filter, and sets generate_mipmap to true.",22,N],[11,"mipmap","","Sets magnify mipmap filter, and sets generate_mipmap to true",22,[[["self"],["filter"]],["texturesettings"]]],[11,"get_filter","","Returns the min and mag filter",22,N],[11,"set_filter","","Sets the min and mag filter",22,N],[11,"filter","","Sets the min and mag filter",22,[[["self"],["filter"]],["texturesettings"]]]],"paths":[[4,"OpenGL"],[4,"GLSL"],[8,"ImageSize"],[4,"Format"],[8,"CreateTexture"],[8,"UpdateTexture"],[4,"Filter"],[3,"DynamicAttribute"],[4,"Error"],[3,"ShaderUniform"],[3,"SUFloat"],[3,"SUInt"],[3,"SUVec2"],[3,"SUVec3"],[3,"SUVec4"],[3,"SUMat2x2"],[3,"SUMat3x3"],[3,"SUMat4x4"],[3,"GlGraphics"],[3,"Colored"],[3,"Textured"],[3,"Texture"],[3,"TextureSettings"],[3,"Shaders"]]};
searchIndex["ordered_float"]={"doc":"Wrappers for total order on Floats.","items":[[3,"OrderedFloat","ordered_float","A wrapper around Floats providing an implementation of Ord and Hash.",N,N],[12,"0","","",0,N],[3,"NotNaN","","A wrapper around Floats providing an implementation of Ord and Hash.",N,N],[3,"FloatIsNaN","","An error indicating an attempt to construct NotNaN from a NaN",N,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"default","","",0,[[],["orderedfloat"]]],[11,"clone","","",0,[[["self"]],["orderedfloat"]]],[11,"into_inner","","Get the value out.",0,[[["self"]],["t"]]],[11,"as_ref","","",0,[[["self"]],["t"]]],[11,"as_mut","","",0,[[["self"]],["t"]]],[11,"partial_cmp","","",0,[[["self"],["self"]],["option",["ordering"]]]],[11,"cmp","","",0,[[["self"],["self"]],["ordering"]]],[11,"eq","","",0,[[["self"],["orderedfloat"]],["bool"]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"into","","",0,[[["self"]],["f32"]]],[11,"into","","",0,[[["self"]],["f64"]]],[11,"from","","",0,[[["t"]],["self"]]],[11,"deref","","",0,N],[11,"deref_mut","","",0,N],[11,"partial_cmp","","",1,[[["self"],["notnan"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["notnan"]],["bool"]]],[11,"le","","",1,[[["self"],["notnan"]],["bool"]]],[11,"gt","","",1,[[["self"],["notnan"]],["bool"]]],[11,"ge","","",1,[[["self"],["notnan"]],["bool"]]],[11,"eq","","",1,[[["self"],["notnan"]],["bool"]]],[11,"ne","","",1,[[["self"],["notnan"]],["bool"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"default","","",1,[[],["notnan"]]],[11,"clone","","",1,[[["self"]],["notnan"]]],[11,"new","","Create a NotNaN value.",1,[[["t"]],["result",["floatisnan"]]]],[11,"unchecked_new","","Create a NotNaN value from a value that is guaranteed to not be NaN",1,[[["t"]],["self"]]],[11,"into_inner","","Get the value out.",1,[[["self"]],["t"]]],[11,"as_ref","","",1,[[["self"]],["t"]]],[11,"cmp","","",1,[[["self"],["notnan"]],["ordering"]]],[11,"hash","","",1,[[["self"],["h"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"into","","",1,[[["self"]],["f32"]]],[11,"into","","",1,[[["self"]],["f64"]]],[11,"from","","",1,[[["t"]],["self"]]],[11,"deref","","",1,N],[11,"add","","",1,[[["self"],["self"]],["self"]]],[11,"add","","",1,[[["self"],["t"]],["self"]]],[11,"add_assign","","",1,[[["self"],["self"]]]],[11,"add_assign","","",1,[[["self"],["self"]]]],[11,"add_assign","","",1,[[["self"],["f64"]]]],[11,"add_assign","","",1,[[["self"],["f32"]]]],[11,"sub","","",1,[[["self"],["self"]],["self"]]],[11,"sub","","",1,[[["self"],["t"]],["self"]]],[11,"sub_assign","","",1,[[["self"],["self"]]]],[11,"sub_assign","","",1,[[["self"],["self"]]]],[11,"sub_assign","","",1,[[["self"],["f64"]]]],[11,"sub_assign","","",1,[[["self"],["f32"]]]],[11,"mul","","",1,[[["self"],["self"]],["self"]]],[11,"mul","","",1,[[["self"],["t"]],["self"]]],[11,"mul_assign","","",1,[[["self"],["self"]]]],[11,"mul_assign","","",1,[[["self"],["self"]]]],[11,"mul_assign","","",1,[[["self"],["f64"]]]],[11,"mul_assign","","",1,[[["self"],["f32"]]]],[11,"div","","",1,[[["self"],["self"]],["self"]]],[11,"div","","",1,[[["self"],["t"]],["self"]]],[11,"div_assign","","",1,[[["self"],["self"]]]],[11,"div_assign","","",1,[[["self"],["self"]]]],[11,"div_assign","","",1,[[["self"],["f64"]]]],[11,"div_assign","","",1,[[["self"],["f32"]]]],[11,"rem","","",1,[[["self"],["self"]],["self"]]],[11,"rem","","",1,[[["self"],["t"]],["self"]]],[11,"rem_assign","","",1,[[["self"],["self"]]]],[11,"rem_assign","","",1,[[["self"],["self"]]]],[11,"rem_assign","","",1,[[["self"],["f64"]]]],[11,"rem_assign","","",1,[[["self"],["f32"]]]],[11,"neg","","",1,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["floatisnan"]]],[11,"eq","","",2,[[["self"],["floatisnan"]],["bool"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"into","","",2,[[["self"]],["error"]]]],"paths":[[3,"OrderedFloat"],[3,"NotNaN"],[3,"FloatIsNaN"]]};
searchIndex["osmesa_sys"]={"doc":"","items":[[3,"OsMesa","osmesa_sys","Symbols loaded from a shared library.",N,N],[12,"OSMesaColorClamp","","",0,N],[12,"OSMesaCreateContext","","",0,N],[12,"OSMesaCreateContextExt","","",0,N],[12,"OSMesaCreateContextAttribs","","",0,N],[12,"OSMesaDestroyContext","","",0,N],[12,"OSMesaGetColorBuffer","","",0,N],[12,"OSMesaGetCurrentContext","","",0,N],[12,"OSMesaGetDepthBuffer","","",0,N],[12,"OSMesaGetIntegerv","","",0,N],[12,"OSMesaGetProcAddress","","",0,N],[12,"OSMesaMakeCurrent","","",0,N],[12,"OSMesaPixelStore","","",0,N],[3,"osmesa_context","","",N,N],[5,"OSMesaColorClamp","","",N,N],[5,"OSMesaCreateContext","","",N,[[["c_uint"],["osmesacontext"]],["osmesacontext"]]],[5,"OSMesaCreateContextExt","","",N,[[["c_uint"],["c_int"],["c_int"],["c_int"],["osmesacontext"]],["osmesacontext"]]],[5,"OSMesaCreateContextAttribs","","",N,N],[5,"OSMesaDestroyContext","","",N,N],[5,"OSMesaGetColorBuffer","","",N,N],[5,"OSMesaGetCurrentContext","","",N,[[],["osmesacontext"]]],[5,"OSMesaGetDepthBuffer","","",N,N],[5,"OSMesaGetIntegerv","","",N,N],[5,"OSMesaGetProcAddress","","",N,N],[5,"OSMesaMakeCurrent","","",N,N],[5,"OSMesaPixelStore","","",N,N],[6,"OSMesaContext","","",N,N],[6,"OSMESAproc","","",N,N],[17,"OSMESA_BGRA","","",N,N],[17,"OSMESA_ARGB","","",N,N],[17,"OSMESA_BGR","","",N,N],[17,"OSMESA_RGB_565","","",N,N],[17,"OSMESA_COLOR_INDEX","","",N,N],[17,"OSMESA_RGB","","",N,N],[17,"OSMESA_RGBA","","",N,N],[17,"OSMESA_WIDTH","","",N,N],[17,"OSMESA_HEIGHT","","",N,N],[17,"OSMESA_FORMAT","","",N,N],[17,"OSMESA_TYPE","","",N,N],[17,"OSMESA_MAX_WIDTH","","",N,N],[17,"OSMESA_MAX_HEIGHT","","",N,N],[17,"OSMESA_ROW_LENGTH","","",N,N],[17,"OSMESA_Y_UP","","",N,N],[17,"OSMESA_DEPTH_BITS","","",N,N],[17,"OSMESA_STENCIL_BITS","","",N,N],[17,"OSMESA_ACCUM_BITS","","",N,N],[17,"OSMESA_PROFILE","","",N,N],[17,"OSMESA_CORE_PROFILE","","",N,N],[17,"OSMESA_COMPAT_PROFILE","","",N,N],[17,"OSMESA_CONTEXT_MAJOR_VERSION","","",N,N],[17,"OSMESA_CONTEXT_MINOR_VERSION","","",N,N],[11,"open","","Tries to open the dynamic library.",0,[[["path"]],["result",["osmesa","loadingerror"]]]],[11,"try_loading","","Try loading the static symbols linked to this library.",0,[[],["result",["osmesa","loadingerror"]]]]],"paths":[[3,"OsMesa"]]};
searchIndex["owning_ref"]={"doc":"An owning reference.","items":[[8,"StableAddress","owning_ref","An unsafe marker trait for types that deref to a stable address, even when moved. For example, this is implemented by Box, Vec, Rc, Arc and String, among others. Even when a Box is moved, the underlying storage remains at a fixed location.",N,N],[8,"CloneStableAddress","","An unsafe marker trait for types where clones deref to the same address. This has all the requirements of StableDeref, and additionally requires that after calling clone(), both the old and new value deref to the same address. For example, Rc and Arc implement CloneStableDeref, but Box and Vec do not.",N,N],[3,"OwningRef","","An owning reference.",N,N],[3,"OwningRefMut","","An mutable owning reference.",N,N],[3,"OwningHandle","","`OwningHandle` is a complement to `OwningRef`. Where `OwningRef` allows consumers to pass around an owned object and a dependent reference, `OwningHandle` contains an owned object and a dependent object.",N,N],[6,"BoxRef","","Typedef of a owning reference that uses a `Box` as the owner.",N,N],[6,"VecRef","","Typedef of a owning reference that uses a `Vec` as the owner.",N,N],[6,"StringRef","","Typedef of a owning reference that uses a `String` as the owner.",N,N],[6,"RcRef","","Typedef of a owning reference that uses a `Rc` as the owner.",N,N],[6,"ArcRef","","Typedef of a owning reference that uses a `Arc` as the owner.",N,N],[6,"RefRef","","Typedef of a owning reference that uses a `Ref` as the owner.",N,N],[6,"RefMutRef","","Typedef of a owning reference that uses a `RefMut` as the owner.",N,N],[6,"MutexGuardRef","","Typedef of a owning reference that uses a `MutexGuard` as the owner.",N,N],[6,"RwLockReadGuardRef","","Typedef of a owning reference that uses a `RwLockReadGuard` as the owner.",N,N],[6,"RwLockWriteGuardRef","","Typedef of a owning reference that uses a `RwLockWriteGuard` as the owner.",N,N],[6,"BoxRefMut","","Typedef of a mutable owning reference that uses a `Box` as the owner.",N,N],[6,"VecRefMut","","Typedef of a mutable owning reference that uses a `Vec` as the owner.",N,N],[6,"StringRefMut","","Typedef of a mutable owning reference that uses a `String` as the owner.",N,N],[6,"RefMutRefMut","","Typedef of a mutable owning reference that uses a `RefMut` as the owner.",N,N],[6,"MutexGuardRefMut","","Typedef of a mutable owning reference that uses a `MutexGuard` as the owner.",N,N],[6,"RwLockWriteGuardRefMut","","Typedef of a mutable owning reference that uses a `RwLockWriteGuard` as the owner.",N,N],[6,"ErasedBoxRef","","Typedef of a owning reference that uses an erased `Box` as the owner.",N,N],[6,"ErasedRcRef","","Typedef of a owning reference that uses an erased `Rc` as the owner.",N,N],[6,"ErasedArcRef","","Typedef of a owning reference that uses an erased `Arc` as the owner.",N,N],[6,"ErasedBoxRefMut","","Typedef of a mutable owning reference that uses an erased `Box` as the owner.",N,N],[8,"Erased","","Helper trait for an erased concrete type an owner dereferences to. This is used in form of a trait object for keeping something around to (virtually) call the destructor.",N,N],[8,"IntoErased","","Helper trait for erasing the concrete type of what an owner derferences to, for example `Box<T> -> Box<Erased>`. This would be unneeded with higher kinded types support in the language.",N,N],[16,"Erased","","Owner with the dereference type substituted to `Erased`.",0,N],[10,"into_erased","","Perform the type erasure.",0,N],[8,"ToHandle","","Trait to implement the conversion of owner to handle for common types.",N,N],[16,"Handle","","The type of handle to be encapsulated by the OwningHandle.",1,N],[10,"to_handle","","Given an appropriately-long-lived pointer to ourselves, create a handle to be encapsulated by the `OwningHandle`.",1,N],[8,"ToHandleMut","","Trait to implement the conversion of owner to mutable handle for common types.",N,N],[16,"HandleMut","","The type of handle to be encapsulated by the OwningHandle.",2,N],[10,"to_handle_mut","","Given an appropriately-long-lived pointer to ourselves, create a mutable handle to be encapsulated by the `OwningHandle`.",2,N],[11,"new","","Creates a new owning reference from a owner initialized to the direct dereference of it.",3,[[["o"]],["self"]]],[11,"new_assert_stable_address","","Like `new`, but doesn’t require `O` to implement the `StableAddress` trait. Instead, the caller is responsible to make the same promises as implementing the trait.",3,[[["o"]],["self"]]],[11,"map","","Converts `self` into a new owning reference that points at something reachable from the previous one.",3,[[["self"],["f"]],["owningref"]]],[11,"try_map","","Tries to convert `self` into a new owning reference that points at something reachable from the previous one.",3,[[["self"],["f"]],["result",["owningref"]]]],[11,"map_owner","","Converts `self` into a new owning reference with a different owner type.",3,[[["self"],["f"]],["owningref"]]],[11,"map_owner_box","","Converts `self` into a new owning reference where the owner is wrapped in an additional `Box<O>`.",3,[[["self"]],["owningref",["box"]]]],[11,"erase_owner","","Erases the concrete base type of the owner with a trait object.",3,[[["self"]],["owningref"]]],[11,"owner","","A getter for the underlying owner.",3,[[["self"]],["o"]]],[11,"into_inner","","Discards the reference and retrieves the owner.",3,[[["self"]],["o"]]],[11,"new","","Creates a new owning reference from a owner initialized to the direct dereference of it.",4,[[["o"]],["self"]]],[11,"new_assert_stable_address","","Like `new`, but doesn’t require `O` to implement the `StableAddress` trait. Instead, the caller is responsible to make the same promises as implementing the trait.",4,[[["o"]],["self"]]],[11,"map","","Converts `self` into a new shared owning reference that points at something reachable from the previous one.",4,[[["self"],["f"]],["owningref"]]],[11,"map_mut","","Converts `self` into a new mutable owning reference that points at something reachable from the previous one.",4,[[["self"],["f"]],["owningrefmut"]]],[11,"try_map","","Tries to convert `self` into a new shared owning reference that points at something reachable from the previous one.",4,[[["self"],["f"]],["result",["owningref"]]]],[11,"try_map_mut","","Tries to convert `self` into a new mutable owning reference that points at something reachable from the previous one.",4,[[["self"],["f"]],["result",["owningrefmut"]]]],[11,"map_owner","","Converts `self` into a new owning reference with a different owner type.",4,[[["self"],["f"]],["owningrefmut"]]],[11,"map_owner_box","","Converts `self` into a new owning reference where the owner is wrapped in an additional `Box<O>`.",4,[[["self"]],["owningrefmut",["box"]]]],[11,"erase_owner","","Erases the concrete base type of the owner with a trait object.",4,[[["self"]],["owningrefmut"]]],[11,"owner","","A getter for the underlying owner.",4,[[["self"]],["o"]]],[11,"into_inner","","Discards the reference and retrieves the owner.",4,[[["self"]],["o"]]],[11,"deref","","",5,N],[11,"deref_mut","","",5,N],[11,"new","","Create a new `OwningHandle` for a type that implements `ToHandle`. For types that don't implement `ToHandle`, callers may invoke `new_with_fn`, which accepts a callback to perform the conversion.",5,[[["o"]],["self"]]],[11,"new_mut","","Create a new mutable `OwningHandle` for a type that implements `ToHandleMut`.",5,[[["o"]],["self"]]],[11,"new_with_fn","","Create a new OwningHandle. The provided callback will be invoked with a pointer to the object owned by `o`, and the returned value is stored as the object to which this `OwningHandle` will forward `Deref` and `DerefMut`.",5,[[["o"],["f"]],["self"]]],[11,"try_new","","Create a new OwningHandle. The provided callback will be invoked with a pointer to the object owned by `o`, and the returned value is stored as the object to which this `OwningHandle` will forward `Deref` and `DerefMut`.",5,[[["o"],["f"]],["result"]]],[11,"deref","","",3,[[["self"]],["t"]]],[11,"deref","","",4,[[["self"]],["t"]]],[11,"deref_mut","","",4,[[["self"]],["t"]]],[11,"as_ref","","",3,[[["self"]],["t"]]],[11,"as_ref","","",4,[[["self"]],["t"]]],[11,"as_mut","","",4,[[["self"]],["t"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"from","","",3,[[["o"]],["self"]]],[11,"from","","",4,[[["o"]],["self"]]],[11,"from","","",3,[[["owningrefmut"]],["self"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",3,[[["self"],["self"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["self"]],["option",["ordering"]]]],[11,"cmp","","",3,[[["self"],["self"]],["ordering"]]],[11,"hash","","",3,[[["self"],["h"]]]],[11,"eq","","",4,[[["self"],["self"]],["bool"]]],[11,"partial_cmp","","",4,[[["self"],["self"]],["option",["ordering"]]]],[11,"cmp","","",4,[[["self"],["self"]],["ordering"]]],[11,"hash","","",4,[[["self"],["h"]]]]],"paths":[[8,"IntoErased"],[8,"ToHandle"],[8,"ToHandleMut"],[3,"OwningRef"],[3,"OwningRefMut"],[3,"OwningHandle"],[8,"Erased"]]};
searchIndex["parking_lot"]={"doc":"This library provides implementations of `Mutex`, `RwLock`, `Condvar` and `Once` that are smaller, faster and more flexible than those in the Rust standard library. It also provides a `ReentrantMutex` type.","items":[[3,"Condvar","parking_lot","A Condition Variable",N,N],[3,"WaitTimeoutResult","","A type indicating whether a timed wait on a condition variable returned due to a time out or not.",N,N],[3,"Once","","A synchronization primitive which can be used to run a one-time initialization. Useful for one-time initialization for globals, FFI or related functionality.",N,N],[3,"RawMutex","","Raw mutex type backed by the parking lot.",N,N],[3,"RawRwLock","","Raw reader-writer lock type backed by the parking lot.",N,N],[3,"RawThreadId","","Implementation of the `GetThreadId` trait for `lock_api::ReentrantMutex`.",N,N],[4,"OnceState","","Current state of a `Once`.",N,N],[13,"New","","A closure has not been executed yet",0,N],[13,"Poisoned","","A closure was executed but panicked.",0,N],[13,"InProgress","","A thread is currently executing a closure.",0,N],[13,"Done","","A closure has completed sucessfully.",0,N],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",1,[[["self"],["waittimeoutresult"]],["bool"]]],[11,"ne","","",1,[[["self"],["waittimeoutresult"]],["bool"]]],[11,"clone","","",1,[[["self"]],["waittimeoutresult"]]],[11,"timed_out","","Returns whether the wait was known to have timed out.",1,[[["self"]],["bool"]]],[11,"new","","Creates a new condition variable which is ready to be waited on and notified.",2,[[],["condvar"]]],[11,"notify_one","","Wakes up one blocked thread on this condvar.",2,[[["self"]]]],[11,"notify_all","","Wakes up all blocked threads on this condvar.",2,[[["self"]]]],[11,"wait","","Blocks the current thread until this condition variable receives a notification.",2,[[["self"],["mutexguard"]]]],[11,"wait_until","","Waits on this condition variable for a notification, timing out after the specified time instant.",2,[[["self"],["mutexguard"],["instant"]],["waittimeoutresult"]]],[11,"wait_for","","Waits on this condition variable for a notification, timing out after a specified duration.",2,[[["self"],["mutexguard"],["duration"]],["waittimeoutresult"]]],[11,"default","","",2,[[],["condvar"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["oncestate"]]],[11,"eq","","",0,[[["self"],["oncestate"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"poisoned","","Returns whether the associated `Once` has been poisoned.",0,[[["self"]],["bool"]]],[11,"done","","Returns whether the associated `Once` has successfullly executed a closure.",0,[[["self"]],["bool"]]],[11,"new","","Creates a new `Once` value.",3,[[],["once"]]],[11,"state","","Returns the current state of this `Once`.",3,[[["self"]],["oncestate"]]],[11,"call_once","","Performs an initialization routine once and only once. The given closure will be executed if this is the first time `call_once` has been called, and otherwise the routine will not be invoked.",3,[[["self"],["f"]]]],[11,"call_once_force","","Performs the same function as `call_once` except ignores poisoning.",3,[[["self"],["f"]]]],[11,"default","","",3,[[],["once"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"lock","","",4,[[["self"]]]],[11,"try_lock","","",4,[[["self"]],["bool"]]],[11,"unlock","","",4,[[["self"]]]],[11,"unlock_fair","","",4,[[["self"]]]],[11,"bump","","",4,[[["self"]]]],[11,"try_lock_until","","",4,[[["self"],["instant"]],["bool"]]],[11,"try_lock_for","","",4,[[["self"],["duration"]],["bool"]]],[11,"lock_exclusive","","",5,[[["self"]]]],[11,"try_lock_exclusive","","",5,[[["self"]],["bool"]]],[11,"unlock_exclusive","","",5,[[["self"]]]],[11,"lock_shared","","",5,[[["self"]]]],[11,"try_lock_shared","","",5,[[["self"]],["bool"]]],[11,"unlock_shared","","",5,[[["self"]]]],[11,"unlock_shared_fair","","",5,[[["self"]]]],[11,"unlock_exclusive_fair","","",5,[[["self"]]]],[11,"bump_shared","","",5,[[["self"]]]],[11,"bump_exclusive","","",5,[[["self"]]]],[11,"downgrade","","",5,[[["self"]]]],[11,"try_lock_shared_for","","",5,N],[11,"try_lock_shared_until","","",5,N],[11,"try_lock_exclusive_for","","",5,[[["self"],["duration"]],["bool"]]],[11,"try_lock_exclusive_until","","",5,[[["self"],["instant"]],["bool"]]],[11,"lock_shared_recursive","","",5,[[["self"]]]],[11,"try_lock_shared_recursive","","",5,[[["self"]],["bool"]]],[11,"try_lock_shared_recursive_for","","",5,N],[11,"try_lock_shared_recursive_until","","",5,N],[11,"lock_upgradable","","",5,[[["self"]]]],[11,"try_lock_upgradable","","",5,[[["self"]],["bool"]]],[11,"unlock_upgradable","","",5,[[["self"]]]],[11,"upgrade","","",5,[[["self"]]]],[11,"try_upgrade","","",5,[[["self"]],["bool"]]],[11,"unlock_upgradable_fair","","",5,[[["self"]]]],[11,"bump_upgradable","","",5,[[["self"]]]],[11,"downgrade_upgradable","","",5,[[["self"]]]],[11,"downgrade_to_upgradable","","",5,[[["self"]]]],[11,"try_lock_upgradable_until","","",5,[[["self"],["instant"]],["bool"]]],[11,"try_lock_upgradable_for","","",5,[[["self"],["duration"]],["bool"]]],[11,"try_upgrade_until","","",5,[[["self"],["instant"]],["bool"]]],[11,"try_upgrade_for","","",5,[[["self"],["duration"]],["bool"]]],[11,"nonzero_thread_id","","",6,[[["self"]],["usize"]]],[6,"MappedMutexGuard","","An RAII mutex guard returned by `MutexGuard::map`, which can point to a subfield of the protected data.",N,N],[6,"Mutex","","A mutual exclusion primitive useful for protecting shared data",N,N],[6,"MutexGuard","","An RAII implementation of a \"scoped lock\" of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked.",N,N],[6,"MappedReentrantMutexGuard","","An RAII mutex guard returned by `ReentrantMutexGuard::map`, which can point to a subfield of the protected data.",N,N],[6,"ReentrantMutex","","A mutex which can be recursively locked by a single thread.",N,N],[6,"ReentrantMutexGuard","","An RAII implementation of a \"scoped lock\" of a reentrant mutex. When this structure is dropped (falls out of scope), the lock will be unlocked.",N,N],[6,"MappedRwLockReadGuard","","An RAII read lock guard returned by `RwLockReadGuard::map`, which can point to a subfield of the protected data.",N,N],[6,"MappedRwLockWriteGuard","","An RAII write lock guard returned by `RwLockWriteGuard::map`, which can point to a subfield of the protected data.",N,N],[6,"RwLock","","A reader-writer lock",N,N],[6,"RwLockReadGuard","","RAII structure used to release the shared read access of a lock when dropped.",N,N],[6,"RwLockUpgradableReadGuard","","RAII structure used to release the upgradable read access of a lock when dropped.",N,N],[6,"RwLockWriteGuard","","RAII structure used to release the exclusive write access of a lock when dropped.",N,N],[17,"ONCE_INIT","","Initialization value for static `Once` values.",N,N]],"paths":[[4,"OnceState"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"Once"],[3,"RawMutex"],[3,"RawRwLock"],[3,"RawThreadId"]]};
searchIndex["parking_lot_core"]={"doc":"This library exposes a low-level API for creating your own efficient synchronization primitives.","items":[[3,"ParkToken","parking_lot_core","A value associated with a parked thread which can be used by `unpark_filter`.",N,N],[12,"0","","",0,N],[3,"UnparkResult","","Result of an unpark operation.",N,N],[12,"unparked_threads","","The number of threads that were unparked.",1,N],[12,"have_more_threads","","Whether there are any threads remaining in the queue. This only returns true if a thread was unparked.",1,N],[12,"be_fair","","This is set to true on average once every 0.5ms for any given key. It should be used to switch to a fair unlocking mechanism for a particular unlock.",1,N],[3,"UnparkToken","","A value which is passed from an unparker to a parked thread.",N,N],[12,"0","","",2,N],[3,"SpinWait","","A counter used to perform exponential backoff in spin loops.",N,N],[4,"FilterOp","","Operation that `unpark_filter` should perform for each thread.",N,N],[13,"Unpark","","Unpark the thread and continue scanning the list of parked threads.",3,N],[13,"Skip","","Don't unpark the thread and continue scanning the list of parked threads.",3,N],[13,"Stop","","Don't unpark the thread and stop scanning the list of parked threads.",3,N],[4,"ParkResult","","Result of a park operation.",N,N],[13,"Unparked","","We were unparked by another thread with the given token.",4,N],[13,"Invalid","","The validation callback returned false.",4,N],[13,"TimedOut","","The timeout expired.",4,N],[4,"RequeueOp","","Operation that `unpark_requeue` should perform.",N,N],[13,"Abort","","Abort the operation without doing anything.",5,N],[13,"UnparkOneRequeueRest","","Unpark one thread and requeue the rest onto the target queue.",5,N],[13,"RequeueAll","","Requeue all threads onto the target queue.",5,N],[5,"park","","Parks the current thread in the queue associated with the given key.",N,[[["usize"],["v"],["b"],["t"],["parktoken"],["option",["instant"]]],["parkresult"]]],[5,"unpark_all","","Unparks all threads in the queue associated with the given key.",N,[[["usize"],["unparktoken"]],["usize"]]],[5,"unpark_filter","","Unparks a number of threads from the front of the queue associated with `key` depending on the results of a filter function which inspects the `ParkToken` associated with each thread.",N,[[["usize"],["f"],["c"]],["unparkresult"]]],[5,"unpark_one","","Unparks one thread from the queue associated with the given key.",N,[[["usize"],["c"]],["unparkresult"]]],[5,"unpark_requeue","","Removes all threads from the queue associated with `key_from`, optionally unparks the first one and requeues the rest onto the queue associated with `key_to`.",N,[[["usize"],["usize"],["v"],["c"]],["unparkresult"]]],[11,"clone","","",4,[[["self"]],["parkresult"]]],[11,"eq","","",4,[[["self"],["parkresult"]],["bool"]]],[11,"ne","","",4,[[["self"],["parkresult"]],["bool"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"is_unparked","","Returns true if we were unparked by another thread.",4,[[["self"]],["bool"]]],[11,"clone","","",1,[[["self"]],["unparkresult"]]],[11,"eq","","",1,[[["self"],["unparkresult"]],["bool"]]],[11,"ne","","",1,[[["self"],["unparkresult"]],["bool"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",5,[[["self"]],["requeueop"]]],[11,"eq","","",5,[[["self"],["requeueop"]],["bool"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"clone","","",3,[[["self"]],["filterop"]]],[11,"eq","","",3,[[["self"],["filterop"]],["bool"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"clone","","",2,[[["self"]],["unparktoken"]]],[11,"eq","","",2,[[["self"],["unparktoken"]],["bool"]]],[11,"ne","","",2,[[["self"],["unparktoken"]],["bool"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["parktoken"]]],[11,"eq","","",0,[[["self"],["parktoken"]],["bool"]]],[11,"ne","","",0,[[["self"],["parktoken"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"new","","Creates a new `SpinWait`.",6,[[],["spinwait"]]],[11,"reset","","Resets a `SpinWait` to its initial state.",6,[[["self"]]]],[11,"spin","","Spins until the sleep threshold has been reached.",6,[[["self"]],["bool"]]],[11,"spin_no_yield","","Spins without yielding the thread to the OS.",6,[[["self"]]]],[11,"default","","",6,[[],["spinwait"]]],[0,"deadlock","","[Experimental] Deadlock detection",N,N],[5,"acquire_resource","parking_lot_core::deadlock","Acquire a resource identified by key in the deadlock detector Noop if deadlock_detection feature isn't enabled. Note: Call after the resource is acquired",N,[[["usize"]]]],[5,"release_resource","","Release a resource identified by key in the deadlock detector. Noop if deadlock_detection feature isn't enabled. Note: Call before the resource is released # Panics Panics if the resource was already released or wasn't acquired in this thread.",N,[[["usize"]]]],[17,"DEFAULT_PARK_TOKEN","parking_lot_core","A default park token to use.",N,N],[17,"DEFAULT_UNPARK_TOKEN","","A default unpark token to use.",N,N]],"paths":[[3,"ParkToken"],[3,"UnparkResult"],[3,"UnparkToken"],[4,"FilterOp"],[4,"ParkResult"],[4,"RequeueOp"],[3,"SpinWait"]]};
searchIndex["percent_encoding"]={"doc":"URLs use special chacters to indicate the parts of the request.  For example, a forward slash indicates a path.  In order for that charcter to exist outside of a path separator, that charcter would need to be encoded.","items":[[3,"SIMPLE_ENCODE_SET","percent_encoding","This encode set is used for the path of cannot-be-a-base URLs.",N,N],[3,"QUERY_ENCODE_SET","","This encode set is used in the URL parser for query strings.",N,N],[3,"DEFAULT_ENCODE_SET","","This encode set is used for path components.",N,N],[3,"PATH_SEGMENT_ENCODE_SET","","This encode set is used for on '/'-separated path segment",N,N],[3,"USERINFO_ENCODE_SET","","This encode set is used for username and password.",N,N],[3,"PercentEncode","","The return type of `percent_encode()` and `utf8_percent_encode()`.",N,N],[3,"PercentDecode","","The return type of `percent_decode()`.",N,N],[5,"percent_encode_byte","","Return the percent-encoding of the given bytes.",N,[[["u8"]],["str"]]],[5,"percent_encode","","Percent-encode the given bytes with the given encode set.",N,N],[5,"utf8_percent_encode","","Percent-encode the UTF-8 encoding of the given string.",N,[[["str"],["e"]],["percentencode"]]],[5,"percent_decode","","Percent-decode the given bytes.",N,N],[8,"EncodeSet","","Represents a set of characters / bytes that should be percent-encoded.",N,N],[10,"contains","","Called with UTF-8 bytes rather than code points. Should return true for all non-ASCII bytes.",0,[[["self"],["u8"]],["bool"]]],[11,"clone","","",1,[[["self"]],["simple_encode_set"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"contains","","",1,[[["self"],["u8"]],["bool"]]],[11,"clone","","",2,[[["self"]],["query_encode_set"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"contains","","",2,[[["self"],["u8"]],["bool"]]],[11,"clone","","",3,[[["self"]],["default_encode_set"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"contains","","",3,[[["self"],["u8"]],["bool"]]],[11,"clone","","",4,[[["self"]],["path_segment_encode_set"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"contains","","",4,[[["self"],["u8"]],["bool"]]],[11,"clone","","",5,[[["self"]],["userinfo_encode_set"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"contains","","",5,[[["self"],["u8"]],["bool"]]],[11,"clone","","",6,[[["self"]],["percentencode"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"next","","",6,[[["self"]],["option",["str"]]]],[11,"size_hint","","",6,N],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"clone","","",7,[[["self"]],["percentdecode"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"next","","",7,[[["self"]],["option",["u8"]]]],[11,"size_hint","","",7,N],[11,"if_any","","If the percent-decoding is different from the input, return it as a new bytes vector.",7,[[["self"]],["option",["vec"]]]],[11,"decode_utf8","","Decode the result of percent-decoding as UTF-8.",7,[[["self"]],["result",["cow","utf8error"]]]],[11,"decode_utf8_lossy","","Decode the result of percent-decoding as UTF-8, lossily.",7,[[["self"]],["cow",["str"]]]],[14,"define_encode_set","","Define a new struct that implements the `EncodeSet` trait, for use in `percent_decode()` and related functions.",N,N]],"paths":[[8,"EncodeSet"],[3,"SIMPLE_ENCODE_SET"],[3,"QUERY_ENCODE_SET"],[3,"DEFAULT_ENCODE_SET"],[3,"PATH_SEGMENT_ENCODE_SET"],[3,"USERINFO_ENCODE_SET"],[3,"PercentEncode"],[3,"PercentDecode"]]};
searchIndex["piston"]={"doc":"A user friendly game engine written in Rust.","items":[],"paths":[]};
searchIndex["png"]={"doc":"PNG encoder and decoder This crate contains a PNG encoder and decoder. It supports reading of single lines or whole frames. ## The decoder The most important types for decoding purposes are `Decoder` and `Reader`. They both wrap a `std::io::Read`. `Decoder` serves as a builder for `Reader`. Calling `Decoder::read_info` reads from the `Read` until the image data is reached. ### Using the decoder     use std::fs::File;","items":[[3,"PixelDimensions","png","Pixel dimensions information",N,N],[12,"xppu","","Pixels per unit, X axis",0,N],[12,"yppu","","Pixels per unit, Y axis",0,N],[12,"unit","","Either Meter or Unspecified",0,N],[3,"FrameControl","","Frame control information",N,N],[12,"sequence_number","","Sequence number of the animation chunk, starting from 0",1,N],[12,"width","","Width of the following frame",1,N],[12,"height","","Height of the following frame",1,N],[12,"x_offset","","X position at which to render the following frame",1,N],[12,"y_offset","","Y position at which to render the following frame",1,N],[12,"delay_num","","Frame delay fraction numerator",1,N],[12,"delay_den","","Frame delay fraction denominator",1,N],[12,"dispose_op","","Type of frame area disposal to be done after rendering this frame",1,N],[12,"blend_op","","Type of frame area rendering for this frame",1,N],[3,"AnimationControl","","Animation control information",N,N],[12,"num_frames","","Number of frames",2,N],[12,"num_plays","","Number of times to loop this APNG.  0 indicates infinite looping.",2,N],[3,"Info","","PNG info struct",N,N],[12,"width","","",3,N],[12,"height","","",3,N],[12,"bit_depth","","",3,N],[12,"color_type","","",3,N],[12,"interlaced","","",3,N],[12,"trns","","",3,N],[12,"pixel_dims","","",3,N],[12,"palette","","",3,N],[12,"frame_control","","",3,N],[12,"animation_control","","",3,N],[3,"Transformations","","Output transformations",N,N],[3,"Decoder","","PNG Decoder",N,N],[3,"Reader","","PNG reader (mostly high-level interface)",N,N],[3,"OutputInfo","","Output info",N,N],[12,"width","","",4,N],[12,"height","","",4,N],[12,"color_type","","",4,N],[12,"bit_depth","","",4,N],[12,"line_size","","",4,N],[3,"StreamingDecoder","","PNG StreamingDecoder (low-level interface)",N,N],[3,"Encoder","","PNG Encoder",N,N],[3,"Writer","","PNG writer",N,N],[4,"ColorType","","",N,N],[13,"Grayscale","","",5,N],[13,"RGB","","",5,N],[13,"Indexed","","",5,N],[13,"GrayscaleAlpha","","",5,N],[13,"RGBA","","",5,N],[4,"BitDepth","","Bit depth of the png file",N,N],[13,"One","","",6,N],[13,"Two","","",6,N],[13,"Four","","",6,N],[13,"Eight","","",6,N],[13,"Sixteen","","",6,N],[4,"Unit","","Physical unit of the pixel dimensions",N,N],[13,"Unspecified","","",7,N],[13,"Meter","","",7,N],[4,"Decoded","","Result of the decoding process",N,N],[13,"Nothing","","Nothing decoded yet",8,N],[13,"Header","","",8,N],[13,"ChunkBegin","","",8,N],[13,"ChunkComplete","","",8,N],[13,"PixelDimensions","","",8,N],[13,"AnimationControl","","",8,N],[13,"FrameControl","","",8,N],[13,"ImageData","","Decoded raw image data.",8,N],[13,"PartialChunk","","",8,N],[13,"ImageEnd","","",8,N],[4,"DecodingError","","",N,N],[13,"IoError","","",9,N],[13,"Format","","",9,N],[13,"InvalidSignature","","",9,N],[13,"CrcMismatch","","",9,N],[12,"recover","png::DecodingError","bytes to skip to try to recover from this error",9,N],[12,"crc_val","","Stored CRC32 value",9,N],[12,"crc_sum","","Calculated CRC32 sum",9,N],[12,"chunk","","",9,N],[13,"Other","png","",9,N],[13,"CorruptFlateStream","","",9,N],[4,"EncodingError","","",N,N],[13,"IoError","","",10,N],[13,"Format","","",10,N],[0,"chunk","","Chunk types and functions",N,N],[5,"is_critical","png::chunk","Returns true if the chunk is critical.",N,[[["chunktype"]],["bool"]]],[5,"is_private","","Returns true if the chunk is private.",N,[[["chunktype"]],["bool"]]],[5,"reserved_set","","Checks whether the reserved bit of the chunk name is set. If it is set the chunk name is invalid.",N,[[["chunktype"]],["bool"]]],[5,"safe_to_copy","","Returns true if the chunk is safe to copy if unknown.",N,[[["chunktype"]],["bool"]]],[6,"ChunkType","","",N,N],[17,"IHDR","","Image header",N,N],[17,"PLTE","","Palette",N,N],[17,"IDAT","","Image data",N,N],[17,"IEND","","Image trailer",N,N],[17,"tRNS","","Transparency",N,N],[17,"bKGD","","Background colour",N,N],[17,"tIME","","Image last-modification time",N,N],[17,"pHYs","","Physical pixel dimensions",N,N],[17,"acTL","","Animation control",N,N],[17,"fcTL","","Frame control",N,N],[17,"fdAT","","Frame data",N,N],[11,"fmt","png","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"description","","",9,[[["self"]],["str"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result",["error"]]]],[11,"from","","",9,[[["error"]],["decodingerror"]]],[11,"from","","",9,[[["string"]],["decodingerror"]]],[11,"new","","Creates a new StreamingDecoder",11,[[],["streamingdecoder"]]],[11,"reset","","Resets the StreamingDecoder",11,[[["self"]]]],[11,"update","","Low level StreamingDecoder interface.",11,N],[11,"set_param","","",12,[[["self"],["decoder"]]]],[11,"buffer_size","","Returns the size needed to hold a decoded frame",4,[[["self"]],["usize"]]],[11,"new","","",13,[[["r"]],["decoder"]]],[11,"read_info","","Reads all meta data until the first IDAT chunk",13,[[["self"]],["result",["decodingerror"]]]],[11,"info","","",14,[[["self"]],["info"]]],[11,"next_frame","","Decodes the next frame into `buf`",14,N],[11,"next_row","","Returns the next processed row of the image",14,[[["self"]],["result",["option","decodingerror"]]]],[11,"next_interlaced_row","","Returns the next processed row of the image",14,[[["self"]],["result",["option","decodingerror"]]]],[11,"output_color_type","","Returns the color type and the number of bits per sample of the data returned by `Reader::next_row` and Reader::frames`.",14,N],[11,"output_buffer_size","","Returns the number of bytes required to hold a deinterlaced image frame that is decoded using the given input transformations.",14,[[["self"]],["usize"]]],[11,"output_line_size","","Returns the number of bytes required to hold a deinterlaced row.",14,[[["self"],["u32"]],["usize"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"description","","",10,[[["self"]],["str"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result",["error"]]]],[11,"from","","",10,[[["error"]],["encodingerror"]]],[11,"new","","",15,[[["w"],["u32"],["u32"]],["encoder"]]],[11,"write_header","","",15,[[["self"]],["result",["writer","encodingerror"]]]],[11,"set_param","","",5,[[["self"],["encoder"]]]],[11,"set_param","","",6,[[["self"],["encoder"]]]],[11,"write_chunk","","",16,N],[11,"write_image_data","","Writes the image data.",16,N],[11,"drop","","",16,[[["self"]]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"clone","","",5,[[["self"]],["colortype"]]],[11,"eq","","",5,[[["self"],["colortype"]],["bool"]]],[11,"samples","","Returns the number of samples used per pixel of `ColorType`",5,[[["self"]],["usize"]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a canonical one.",5,[[["u8"]],["option",["colortype"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"clone","","",6,[[["self"]],["bitdepth"]]],[11,"eq","","",6,[[["self"],["bitdepth"]],["bool"]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a canonical one.",6,[[["u8"]],["option",["bitdepth"]]]],[11,"clone","","",0,[[["self"]],["pixeldimensions"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"clone","","",7,[[["self"]],["unit"]]],[11,"eq","","",7,[[["self"],["unit"]],["bool"]]],[11,"from_u8","","u8 -> Self. Temporary solution until Rust provides a canonical one.",7,[[["u8"]],["option",["unit"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",2,[[["self"]],["animationcontrol"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"default","","",3,[[],["info"]]],[11,"size","","Size of the image",3,N],[11,"is_animated","","Returns true if the image is an APNG image.",3,[[["self"]],["bool"]]],[11,"animation_control","","Returns the frame control information of the image",3,[[["self"]],["option",["animationcontrol"]]]],[11,"frame_control","","Returns the frame control information of the current frame",3,[[["self"]],["option",["framecontrol"]]]],[11,"bits_per_pixel","","Returns the bits per pixel",3,[[["self"]],["usize"]]],[11,"bytes_per_pixel","","Returns the bytes per pixel",3,[[["self"]],["usize"]]],[11,"raw_bytes","","Returns the number of bytes needed for one deinterlaced image",3,[[["self"]],["usize"]]],[11,"raw_row_length","","Returns the number of bytes needed for one deinterlaced row ",3,[[["self"]],["usize"]]],[11,"raw_row_length_from_width","","Returns the number of bytes needed for one deinterlaced row of width `width`",3,[[["self"],["u32"]],["usize"]]],[11,"eq","","",12,[[["self"],["transformations"]],["bool"]]],[11,"ne","","",12,[[["self"],["transformations"]],["bool"]]],[11,"clone","","",12,[[["self"]],["transformations"]]],[11,"partial_cmp","","",12,[[["self"],["transformations"]],["option",["ordering"]]]],[11,"lt","","",12,[[["self"],["transformations"]],["bool"]]],[11,"le","","",12,[[["self"],["transformations"]],["bool"]]],[11,"gt","","",12,[[["self"],["transformations"]],["bool"]]],[11,"ge","","",12,[[["self"],["transformations"]],["bool"]]],[11,"cmp","","",12,[[["self"],["transformations"]],["ordering"]]],[11,"hash","","",12,N],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[18,"IDENTITY","","No transformation",12,N],[18,"STRIP_16","","Strip 16-bit samples to 8 bits",12,N],[18,"STRIP_ALPHA","","Discard the alpha channel",12,N],[18,"PACKING","","Expand 1; 2 and 4-bit samples to bytes",12,N],[18,"PACKSWAP","","Change order of packed pixels to LSB first",12,N],[18,"EXPAND","","Expand paletted images to RGB; expand grayscale images of less than 8-bit depth to 8-bit depth; and expand tRNS chunks to alpha channels.",12,N],[18,"INVERT_MONO","","Invert monochrome images",12,N],[18,"SHIFT","","Normalize pixels to the sBIT depth",12,N],[18,"BGR","","Flip RGB to BGR; RGBA to BGRA",12,N],[18,"SWAP_ALPHA","","Flip RGBA to ARGB or GA to AG",12,N],[18,"SWAP_ENDIAN","","Byte-swap 16-bit samples",12,N],[18,"INVERT_ALPHA","","Change alpha from opacity to transparency",12,N],[18,"STRIP_FILLER","","",12,N],[18,"STRIP_FILLER_BEFORE","","",12,N],[18,"STRIP_FILLER_AFTER","","",12,N],[18,"GRAY_TO_RGB","","",12,N],[18,"EXPAND_16","","",12,N],[18,"SCALE_16","","",12,N],[11,"empty","","Returns an empty set of flags.",12,[[],["transformations"]]],[11,"all","","Returns the set containing all flags.",12,[[],["transformations"]]],[11,"bits","","Returns the raw value of the flags currently stored.",12,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",12,[[["u32"]],["option",["transformations"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",12,[[["u32"]],["transformations"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",12,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",12,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",12,[[["self"],["transformations"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",12,[[["self"],["transformations"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",12,[[["self"],["transformations"]]]],[11,"remove","","Removes the specified flags in-place.",12,[[["self"],["transformations"]]]],[11,"toggle","","Toggles the specified flags in-place.",12,[[["self"],["transformations"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",12,[[["self"],["transformations"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",12,[[["self"],["transformations"]],["transformations"]]],[11,"bitor_assign","","Adds the set of flags.",12,[[["self"],["transformations"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",12,[[["self"],["transformations"]],["transformations"]]],[11,"bitxor_assign","","Toggles the set of flags.",12,[[["self"],["transformations"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",12,[[["self"],["transformations"]],["transformations"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",12,[[["self"],["transformations"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",12,[[["self"],["transformations"]],["transformations"]]],[11,"sub_assign","","Disables all flags enabled in the set.",12,[[["self"],["transformations"]]]],[11,"not","","Returns the complement of this set of flags.",12,[[["self"]],["transformations"]]],[11,"extend","","",12,[[["self"],["t"]]]],[11,"from_iter","","",12,[[["t"]],["transformations"]]],[8,"Parameter","","Configuration parameter trait",N,N],[10,"set_param","","",17,[[["self"],["object"]]]],[8,"HasParameters","","Object has parameters",N,N],[11,"set","","",18,[[["self"],["t"]],["self"]]],[11,"set","","",18,[[["self"],["t"]],["self"]]]],"paths":[[3,"PixelDimensions"],[3,"FrameControl"],[3,"AnimationControl"],[3,"Info"],[3,"OutputInfo"],[4,"ColorType"],[4,"BitDepth"],[4,"Unit"],[4,"Decoded"],[4,"DecodingError"],[4,"EncodingError"],[3,"StreamingDecoder"],[3,"Transformations"],[3,"Decoder"],[3,"Reader"],[3,"Encoder"],[3,"Writer"],[8,"Parameter"],[8,"HasParameters"]]};
searchIndex["proc_macro2"]={"doc":"A \"shim crate\" intended to multiplex the [`proc_macro`] API on to stable Rust.","items":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a sequence of token trees.",N,N],[3,"LexError","","Error returned from `TokenStream::from_str`.",N,N],[3,"Span","","A region of source code, along with macro expansion information.",N,N],[3,"Group","","A delimited token stream.",N,N],[3,"Punct","","An `Punct` is an single punctuation character like `+`, `-` or `#`.",N,N],[3,"Ident","","A word of Rust code, which may be a keyword or legal variable name.",N,N],[3,"Literal","","A literal string (`\"hello\"`), byte string (`b\"hello\"`), character (`'a'`), byte character (`b'a'`), an integer or floating point number with or without a suffix (`1`, `1u8`, `2.3`, `2.3f32`).",N,N],[4,"TokenTree","","A single token or a delimited sequence of token trees (e.g. `[1, (), ..]`).",N,N],[13,"Group","","A token stream surrounded by bracket delimiters.",0,N],[13,"Ident","","An identifier.",0,N],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",0,N],[13,"Literal","","A literal character (`'a'`), string (`\"hello\"`), number (`2.3`), etc.",0,N],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",N,N],[13,"Parenthesis","","`( ... )`",1,N],[13,"Brace","","`{ ... }`",1,N],[13,"Bracket","","`[ ... ]`",1,N],[13,"None","","`Ø ... Ø`",1,N],[4,"Spacing","","Whether an `Punct` is followed immediately by another `Punct` or followed by another token or whitespace.",N,N],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,N],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `'#`.",2,N],[11,"from","","",3,[[["span"]],["span"]]],[0,"token_stream","","Public implementation details for the `TokenStream` type, such as iterators.",N,N],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`'s `TokenTree`s.",N,N],[11,"next","","",4,[[["self"]],["option",["tokentree"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"into_iter","proc_macro2","",5,[[["self"]],["intoiter"]]],[11,"clone","","",5,[[["self"]],["tokenstream"]]],[11,"new","","Returns an empty `TokenStream` containing no token trees.",5,[[],["tokenstream"]]],[11,"empty","","",5,[[],["tokenstream"]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",5,[[["self"]],["bool"]]],[11,"default","","",5,[[],["self"]]],[11,"from_str","","",5,[[["str"]],["result",["tokenstream","lexerror"]]]],[11,"from","","",5,[[["tokenstream"]],["tokenstream"]]],[11,"extend","","",5,[[["self"],["i"]]]],[11,"extend","","",5,[[["self"],["i"]]]],[11,"from_iter","","",5,[[["i"]],["self"]]],[11,"from_iter","","",5,[[["i"]],["self"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"clone","","",3,[[["self"]],["span"]]],[11,"call_site","","The span of the invocation of the current procedural macro.",3,[[],["span"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["tokentree"]]],[11,"span","","Returns the span of this tree, delegating to the `span` method of the contained token or a delimited stream.",0,[[["self"]],["span"]]],[11,"set_span","","Configures the span for only this token.",0,[[["self"],["span"]]]],[11,"from","","",0,[[["group"]],["tokentree"]]],[11,"from","","",0,[[["ident"]],["tokentree"]]],[11,"from","","",0,[[["punct"]],["tokentree"]]],[11,"from","","",0,[[["literal"]],["tokentree"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",7,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["delimiter"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",1,[[["self"],["delimiter"]],["bool"]]],[11,"new","","Creates a new `Group` with the given delimiter and token stream.",7,[[["delimiter"],["tokenstream"]],["group"]]],[11,"delimiter","","Returns the delimiter of this `Group`",7,[[["self"]],["delimiter"]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in this `Group`.",7,[[["self"]],["tokenstream"]]],[11,"span","","Returns the span for the delimiters of this token stream, spanning the entire `Group`.",7,[[["self"]],["span"]]],[11,"set_span","","Configures the span for this `Group`'s delimiters, but not its internal tokens.",7,[[["self"],["span"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"clone","","",8,[[["self"]],["punct"]]],[11,"clone","","",2,[[["self"]],["spacing"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"eq","","",2,[[["self"],["spacing"]],["bool"]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",8,[[["char"],["spacing"]],["punct"]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",8,[[["self"]],["char"]]],[11,"spacing","","Returns the spacing of this punctuation character, indicating whether it's immediately followed by another `Punct` in the token stream, so they can potentially be combined into a multicharacter operator (`Joint`), or it's followed by some other token or whitespace (`Alone`) so the operator has certainly ended.",8,[[["self"]],["spacing"]]],[11,"span","","Returns the span for this punctuation character.",8,[[["self"]],["span"]]],[11,"set_span","","Configure the span for this punctuation character.",8,[[["self"],["span"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"clone","","",9,[[["self"]],["ident"]]],[11,"new","","Creates a new `Ident` with the given `string` as well as the specified `span`.",9,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",9,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its hygiene context.",9,[[["self"],["span"]]]],[11,"eq","","",9,[[["self"],["ident"]],["bool"]]],[11,"eq","","",9,[[["self"],["t"]],["bool"]]],[11,"partial_cmp","","",9,[[["self"],["ident"]],["option",["ordering"]]]],[11,"cmp","","",9,[[["self"],["ident"]],["ordering"]]],[11,"hash","","",9,[[["self"],["h"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"clone","","",10,[[["self"]],["literal"]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["u8"]],["literal"]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["u16"]],["literal"]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["u32"]],["literal"]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["u64"]],["literal"]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["usize"]],["literal"]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["i8"]],["literal"]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["i16"]],["literal"]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["i32"]],["literal"]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["i64"]],["literal"]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified value.",10,[[["isize"]],["literal"]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["u8"]],["literal"]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["u16"]],["literal"]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["u32"]],["literal"]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["u64"]],["literal"]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["usize"]],["literal"]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["i8"]],["literal"]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["i16"]],["literal"]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["i32"]],["literal"]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["i64"]],["literal"]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the specified value.",10,[[["isize"]],["literal"]]],[11,"f64_unsuffixed","","",10,[[["f64"]],["literal"]]],[11,"f64_suffixed","","",10,[[["f64"]],["literal"]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",10,[[["f32"]],["literal"]]],[11,"f32_suffixed","","",10,[[["f32"]],["literal"]]],[11,"string","","",10,[[["str"]],["literal"]]],[11,"character","","",10,[[["char"]],["literal"]]],[11,"byte_string","","",10,N],[11,"span","","",10,[[["self"]],["span"]]],[11,"set_span","","",10,[[["self"],["span"]]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"Span"],[3,"IntoIter"],[3,"TokenStream"],[3,"LexError"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"]]};
searchIndex["quote"]={"doc":"This crate provides the [`quote!`] macro for turning Rust syntax tree data structures into tokens of source code.","items":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending tokens.",N,N],[10,"append","","",0,[[["self"],["u"]]]],[10,"append_all","","",0,[[["self"],["i"]]]],[10,"append_separated","","",0,[[["self"],["i"],["u"]]]],[10,"append_terminated","","",0,[[["self"],["i"],["u"]]]],[8,"ToTokens","","Types that can be interpolated inside a [`quote!`] invocation.",N,N],[10,"to_tokens","","Write `self` to the given `TokenStream`.",1,[[["self"],["tokenstream"]]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[["self"]],["tokenstream"]]],[14,"quote","","The whole point.",N,N],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens originating within the macro invocation.",N,N],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",1,[[["self"]],["tokenstream"]]]],"paths":[[8,"TokenStreamExt"],[8,"ToTokens"]]};
searchIndex["rand"]={"doc":"Utilities for random number generation","items":[[8,"RngCore","rand","The core of a random number generator.",N,N],[10,"next_u32","","Return the next random `u32`.",0,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",0,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",0,N],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",0,N],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or [`BlockRngCore`] implementation is supposed to be cryptographically secure.",N,N],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",N,N],[16,"Seed","","Seed type, which is restricted to types mutably-dereferencable as `u8` arrays (we recommend `[u8; N]` for some `N`).",1,N],[10,"from_seed","","Create a new PRNG using the given seed.",1,N],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",1,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",1,[[["r"]],["result",["error"]]]],[4,"ErrorKind","","Error kind which can be matched over.",N,N],[13,"Unavailable","","Feature is not available; not recoverable.",2,N],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",2,N],[13,"Transient","","A transient failure which likely can be resolved or worked around.",2,N],[13,"NotReady","","Not ready yet: recommended to try again a little later.",2,N],[3,"Error","","Error type of random number generators",N,N],[12,"kind","","The error kind",3,N],[12,"msg","","The error message",3,N],[3,"Generator","","Iterator which will generate a stream of random items.",N,N],[3,"AsciiGenerator","","Iterator which will continuously generate random ascii characters.",N,N],[5,"thread_rng","","Retrieve the lazily-initialized thread-local random number generator, seeded by the system. Intended to be used in method chaining style, e.g. `thread_rng().gen::<i32>()`, or cached locally, e.g. `let mut rng = thread_rng();`.",N,[[],["threadrng"]]],[5,"weak_rng","","DEPRECATED: use [`SmallRng`] instead.",N,[[],["xorshiftrng"]]],[5,"random","","Generates a random value using the thread-local random number generator.",N,[[],["t"]]],[5,"sample","","DEPRECATED: use `seq::sample_iter` instead.",N,[[["r"],["i"],["usize"]],["vec"]]],[0,"distributions","","Generating random samples from probability distributions.",N,N],[3,"Alphanumeric","rand::distributions","Sample a `char`, uniformly distributed over ASCII letters and numbers: a-z, A-Z and 0-9.",N,N],[3,"Uniform","","Sample values uniformly between two bounds.",N,N],[3,"OpenClosed01","","A distribution to sample floating point numbers uniformly in the half-open interval `(0, 1]`, i.e. including 1 but not 0.",N,N],[3,"Open01","","A distribution to sample floating point numbers uniformly in the open interval `(0, 1)`, i.e. not including either endpoint.",N,N],[3,"Gamma","","The Gamma distribution `Gamma(shape, scale)` distribution.",N,N],[3,"ChiSquared","","The chi-squared distribution `χ²(k)`, where `k` is the degrees of freedom.",N,N],[3,"FisherF","","The Fisher F distribution `F(m, n)`.",N,N],[3,"StudentT","","The Student t distribution, `t(nu)`, where `nu` is the degrees of freedom.",N,N],[3,"Normal","","The normal distribution `N(mean, std_dev**2)`.",N,N],[3,"LogNormal","","The log-normal distribution `ln N(mean, std_dev**2)`.",N,N],[3,"StandardNormal","","Samples floating-point numbers according to the normal distribution `N(0, 1)` (a.k.a. a standard normal, or Gaussian). This is equivalent to `Normal::new(0.0, 1.0)` but faster.",N,N],[3,"Exp","","The exponential distribution `Exp(lambda)`.",N,N],[3,"Exp1","","Samples floating-point numbers according to the exponential distribution, with rate parameter `λ = 1`. This is equivalent to `Exp::new(1.0)` or sampling with `-rng.gen::<f64>().ln()`, but faster.",N,N],[3,"Pareto","","Samples floating-point numbers according to the Pareto distribution",N,N],[3,"Poisson","","The Poisson distribution `Poisson(lambda)`.",N,N],[3,"Binomial","","The binomial distribution `Binomial(n, p)`.",N,N],[3,"Bernoulli","","The Bernoulli distribution.",N,N],[3,"Cauchy","","The Cauchy distribution `Cauchy(median, scale)`.",N,N],[3,"DistIter","","An iterator that generates random values of `T` with distribution `D`, using `R` as the source of randomness.",N,N],[3,"Standard","","A generic random value distribution, implemented for many primitive types. Usually generates values with a numerically uniform distribution, and with a range appropriate to the type.",N,N],[3,"Weighted","","A value with a particular weight for use with `WeightedChoice`.",N,N],[12,"weight","","The numerical weight of this item",4,N],[12,"item","","The actual item which is being weighted",4,N],[3,"WeightedChoice","","A distribution that selects from a finite collection of weighted items.",N,N],[0,"uniform","","A distribution uniformly sampling numbers within a given range.",N,N],[3,"Uniform","rand::distributions::uniform","Sample values uniformly between two bounds.",N,N],[3,"UniformInt","","The back-end implementing [`UniformSampler`] for integer types.",N,N],[3,"UniformFloat","","The back-end implementing [`UniformSampler`] for floating-point types.",N,N],[3,"UniformDuration","","The back-end implementing [`UniformSampler`] for `Duration`.",N,N],[8,"SampleUniform","","Helper trait for creating objects using the correct implementation of [`UniformSampler`] for the sampling type.",N,N],[16,"Sampler","","The `UniformSampler` implementation supporting type `X`.",5,N],[8,"UniformSampler","","Helper trait handling actual uniform sampling.",N,N],[16,"X","","The type sampled by this implementation.",6,N],[10,"new","","Construct self, with inclusive lower bound and exclusive upper bound `[low, high)`.",6,N],[10,"new_inclusive","","Construct self, with inclusive bounds `[low, high]`.",6,N],[10,"sample","","Sample a value.",6,N],[11,"sample_single","","Sample a single value uniformly from a range with inclusive lower bound and exclusive upper bound `[low, high)`.",6,N],[11,"clone","","",7,[[["self"]],["uniform"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new `Uniform` instance which samples uniformly from the half open range `[low, high)` (excluding `high`). Panics if `low >= high`.",7,[[["x"],["x"]],["uniform"]]],[11,"new_inclusive","","Create a new `Uniform` instance which samples uniformly from the closed range `[low, high]` (inclusive). Panics if `low > high`.",7,[[["x"],["x"]],["uniform"]]],[11,"sample","","",7,[[["self"],["r"]],["x"]]],[11,"from","","",7,[[["range"]],["uniform"]]],[11,"clone","","",8,[[["self"]],["uniformint"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"new","","",8,N],[11,"new_inclusive","","",8,N],[11,"sample","","",8,N],[11,"sample_single","","",8,N],[11,"new","","",8,N],[11,"new_inclusive","","",8,N],[11,"sample","","",8,N],[11,"sample_single","","",8,N],[11,"new","","",8,N],[11,"new_inclusive","","",8,N],[11,"sample","","",8,N],[11,"sample_single","","",8,N],[11,"new","","",8,N],[11,"new_inclusive","","",8,N],[11,"sample","","",8,N],[11,"sample_single","","",8,N],[11,"new","","",8,N],[11,"new_inclusive","","",8,N],[11,"sample","","",8,N],[11,"sample_single","","",8,N],[11,"new","","",8,N],[11,"new_inclusive","","",8,N],[11,"sample","","",8,N],[11,"sample_single","","",8,N],[11,"new","","",8,N],[11,"new_inclusive","","",8,N],[11,"sample","","",8,N],[11,"sample_single","","",8,N],[11,"new","","",8,N],[11,"new_inclusive","","",8,N],[11,"sample","","",8,N],[11,"sample_single","","",8,N],[11,"new","","",8,N],[11,"new_inclusive","","",8,N],[11,"sample","","",8,N],[11,"sample_single","","",8,N],[11,"new","","",8,N],[11,"new_inclusive","","",8,N],[11,"sample","","",8,N],[11,"sample_single","","",8,N],[11,"clone","","",9,[[["self"]],["uniformfloat"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"new","","",9,N],[11,"new_inclusive","","",9,N],[11,"sample","","",9,N],[11,"sample_single","","",9,N],[11,"new","","",9,N],[11,"new_inclusive","","",9,N],[11,"sample","","",9,N],[11,"sample_single","","",9,N],[11,"clone","","",10,[[["self"]],["uniformduration"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"new","","",10,[[["duration"],["duration"]],["uniformduration"]]],[11,"new_inclusive","","",10,[[["duration"],["duration"]],["uniformduration"]]],[11,"sample","","",10,[[["self"],["r"]],["duration"]]],[11,"clone","rand::distributions","",11,[[["self"]],["gamma"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct an object representing the `Gamma(shape, scale)` distribution.",11,[[["f64"],["f64"]],["gamma"]]],[11,"sample","","",11,[[["self"],["r"]],["f64"]]],[11,"clone","","",12,[[["self"]],["chisquared"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new chi-squared distribution with degrees-of-freedom `k`. Panics if `k < 0`.",12,[[["f64"]],["chisquared"]]],[11,"sample","","",12,[[["self"],["r"]],["f64"]]],[11,"clone","","",13,[[["self"]],["fisherf"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new `FisherF` distribution, with the given parameter. Panics if either `m` or `n` are not positive.",13,[[["f64"],["f64"]],["fisherf"]]],[11,"sample","","",13,[[["self"],["r"]],["f64"]]],[11,"clone","","",14,[[["self"]],["studentt"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new Student t distribution with `n` degrees of freedom. Panics if `n <= 0`.",14,[[["f64"]],["studentt"]]],[11,"sample","","",14,[[["self"],["r"]],["f64"]]],[11,"clone","","",15,[[["self"]],["standardnormal"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"sample","","",15,[[["self"],["r"]],["f64"]]],[11,"clone","","",16,[[["self"]],["normal"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new `Normal` distribution with the given mean and standard deviation.",16,[[["f64"],["f64"]],["normal"]]],[11,"sample","","",16,[[["self"],["r"]],["f64"]]],[11,"clone","","",17,[[["self"]],["lognormal"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new `LogNormal` distribution with the given mean and standard deviation.",17,[[["f64"],["f64"]],["lognormal"]]],[11,"sample","","",17,[[["self"],["r"]],["f64"]]],[11,"clone","","",18,[[["self"]],["exp1"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"sample","","",18,[[["self"],["r"]],["f64"]]],[11,"clone","","",19,[[["self"]],["exp"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new `Exp` with the given shape parameter `lambda`. Panics if `lambda <= 0`.",19,[[["f64"]],["exp"]]],[11,"sample","","",19,[[["self"],["r"]],["f64"]]],[11,"clone","","",20,[[["self"]],["pareto"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new Pareto distribution with given `scale` and `shape`.",20,[[["f64"],["f64"]],["pareto"]]],[11,"sample","","",20,[[["self"],["r"]],["f64"]]],[11,"clone","","",21,[[["self"]],["poisson"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new `Poisson` with the given shape parameter `lambda`. Panics if `lambda <= 0`.",21,[[["f64"]],["poisson"]]],[11,"sample","","",21,[[["self"],["r"]],["u64"]]],[11,"clone","","",22,[[["self"]],["binomial"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new `Binomial` with the given shape parameters `n` (number of trials) and `p` (probability of success).",22,[[["u64"],["f64"]],["binomial"]]],[11,"sample","","",22,[[["self"],["r"]],["u64"]]],[11,"clone","","",23,[[["self"]],["bernoulli"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new `Bernoulli` with the given probability of success `p`.",23,[[["f64"]],["bernoulli"]]],[11,"sample","","",23,[[["self"],["r"]],["bool"]]],[11,"clone","","",24,[[["self"]],["cauchy"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new `Cauchy` with the given shape parameters `median` the peak location and `scale` the scale factor. Panics if `scale <= 0`.",24,[[["f64"],["f64"]],["cauchy"]]],[11,"sample","","",24,[[["self"],["r"]],["f64"]]],[11,"clone","","",25,[[["self"]],["openclosed01"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"clone","","",26,[[["self"]],["open01"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"sample","","",27,[[["self"],["r"]],["f32"]]],[11,"sample","","",25,[[["self"],["r"]],["f32"]]],[11,"sample","","",26,[[["self"],["r"]],["f32"]]],[11,"sample","","",27,[[["self"],["r"]],["f64"]]],[11,"sample","","",25,[[["self"],["r"]],["f64"]]],[11,"sample","","",26,[[["self"],["r"]],["f64"]]],[11,"sample","","",27,[[["self"],["r"]],["u8"]]],[11,"sample","","",27,[[["self"],["r"]],["u16"]]],[11,"sample","","",27,[[["self"],["r"]],["u32"]]],[11,"sample","","",27,[[["self"],["r"]],["u64"]]],[11,"sample","","",27,[[["self"],["r"]],["usize"]]],[11,"sample","","",27,[[["self"],["r"]],["i8"]]],[11,"sample","","",27,[[["self"],["r"]],["i16"]]],[11,"sample","","",27,[[["self"],["r"]],["i32"]]],[11,"sample","","",27,[[["self"],["r"]],["i64"]]],[11,"sample","","",27,[[["self"],["r"]],["isize"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"sample","","",27,[[["self"],["r"]],["char"]]],[11,"sample","","",28,[[["self"],["r"]],["char"]]],[11,"sample","","",27,[[["self"],["r"]],["bool"]]],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,N],[11,"sample","","",27,[[["self"],["r"]],["option"]]],[11,"sample","","",27,[[["self"],["r"]],["wrapping"]]],[0,"range","","DEPRECATED: Use `distributions::uniform` instead.",N,N],[11,"sample","","",29,[[["self"],["r"]],["t"]]],[11,"ind_sample","","",29,[[["self"],["r"]],["t"]]],[11,"sample","rand::distributions::uniform","",7,[[["self"],["r"]],["t"]]],[11,"ind_sample","","",7,[[["self"],["r"]],["t"]]],[11,"sample","rand::distributions","",19,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",19,[[["self"],["r"]],["f64"]]],[11,"sample","","",11,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",11,[[["self"],["r"]],["f64"]]],[11,"sample","","",12,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",12,[[["self"],["r"]],["f64"]]],[11,"sample","","",13,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",13,[[["self"],["r"]],["f64"]]],[11,"sample","","",14,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",14,[[["self"],["r"]],["f64"]]],[11,"sample","","",16,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",16,[[["self"],["r"]],["f64"]]],[11,"sample","","",17,[[["self"],["r"]],["f64"]]],[11,"ind_sample","","",17,[[["self"],["r"]],["f64"]]],[8,"Sample","","Types that can be used to create a random instance of `Support`.",N,N],[10,"sample","","Generate a random value of `Support`, using `rng` as the source of randomness.",30,[[["self"],["r"]],["support"]]],[8,"IndependentSample","","`Sample`s that do not require keeping track of state.",N,N],[10,"ind_sample","","Generate a random value.",31,[[["self"],["r"]],["support"]]],[8,"Distribution","","Types (distributions) that can be used to create a random instance of `T`.",N,N],[10,"sample","","Generate a random value of `T`, using `rng` as the source of randomness.",32,[[["self"],["r"]],["t"]]],[11,"sample_iter","","Create an iterator that generates random values of `T`, using `rng` as the source of randomness.",32,[[["self"],["r"]],["distiter"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"next","","",33,[[["self"]],["option"]]],[11,"size_hint","","",33,N],[11,"clone","","",27,[[["self"]],["standard"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"clone","","",4,[[["self"]],["weighted"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new `WeightedChoice`.",29,N],[11,"sample","","",29,[[["self"],["r"]],["t"]]],[0,"prelude","rand","Convenience re-export of common members",N,N],[0,"prng","","Pseudo-random number generators.",N,N],[3,"XorShiftRng","rand::prng","An Xorshift random number generator.",N,N],[0,"chacha","","The ChaCha random number generator.",N,N],[3,"ChaChaRng","rand::prng::chacha","A cryptographically secure random number generator that uses the ChaCha algorithm.",N,N],[3,"ChaChaCore","","The core of `ChaChaRng`, used with `BlockRng`.",N,N],[11,"clone","","",34,[[["self"]],["chacharng"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"next_u32","","",34,[[["self"]],["u32"]]],[11,"next_u64","","",34,[[["self"]],["u64"]]],[11,"fill_bytes","","",34,N],[11,"try_fill_bytes","","",34,N],[11,"from_seed","","",34,N],[11,"from_rng","","",34,[[["r"]],["result",["error"]]]],[11,"new_unseeded","","Create an ChaCha random number generator using the default fixed key of 8 zero words.",34,[[],["chacharng"]]],[11,"set_stream","","Set the stream number.",34,[[["self"],["u64"]]]],[11,"clone","","",35,[[["self"]],["chachacore"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"generate","","",35,N],[11,"from_seed","","",35,N],[11,"from","","",34,[[["chachacore"]],["self"]]],[0,"hc128","rand::prng","The HC-128 random number generator.",N,N],[3,"Hc128Rng","rand::prng::hc128","A cryptographically secure random number generator that uses the HC-128 algorithm.",N,N],[3,"Hc128Core","","The core of `Hc128Rng`, used with `BlockRng`.",N,N],[11,"clone","","",36,[[["self"]],["hc128rng"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"next_u32","","",36,[[["self"]],["u32"]]],[11,"next_u64","","",36,[[["self"]],["u64"]]],[11,"fill_bytes","","",36,N],[11,"try_fill_bytes","","",36,N],[11,"from_seed","","",36,N],[11,"from_rng","","",36,[[["r"]],["result",["error"]]]],[11,"clone","","",37,[[["self"]],["hc128core"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"generate","","",37,N],[11,"from_seed","","Create an HC-128 random number generator with a seed. The seed has to be 256 bits in length, matching the 128 bit `key` followed by 128 bit `iv` when HC-128 where to be used as a stream cipher.",37,N],[0,"isaac","rand::prng","The ISAAC random number generator.",N,N],[3,"IsaacRng","rand::prng::isaac","A random number generator that uses the ISAAC algorithm.",N,N],[3,"IsaacCore","","The core of `IsaacRng`, used with `BlockRng`.",N,N],[11,"clone","","",38,[[["self"]],["isaacrng"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"next_u32","","",38,[[["self"]],["u32"]]],[11,"next_u64","","",38,[[["self"]],["u64"]]],[11,"fill_bytes","","",38,N],[11,"try_fill_bytes","","",38,N],[11,"from_seed","","",38,N],[11,"from_rng","","",38,[[["s"]],["result",["error"]]]],[11,"new_unseeded","","Create an ISAAC random number generator using the default fixed seed.",38,[[],["self"]]],[11,"new_from_u64","","Create an ISAAC random number generator using an `u64` as seed. If `seed == 0` this will produce the same stream of random numbers as the reference implementation when used unseeded.",38,[[["u64"]],["self"]]],[11,"clone","","",39,[[["self"]],["isaaccore"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"generate","","Refills the output buffer, `results`. See also the pseudocode desciption of the algorithm in the [`IsaacRng`] documentation.",39,[[["self"],["isaacarray"]]]],[11,"from_seed","","",39,N],[11,"from_rng","","",39,[[["r"]],["result",["error"]]]],[0,"isaac64","rand::prng","The ISAAC-64 random number generator.",N,N],[3,"Isaac64Rng","rand::prng::isaac64","A random number generator that uses ISAAC-64, the 64-bit variant of the ISAAC algorithm.",N,N],[3,"Isaac64Core","","The core of `Isaac64Rng`, used with `BlockRng`.",N,N],[11,"clone","","",40,[[["self"]],["isaac64rng"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"next_u32","","",40,[[["self"]],["u32"]]],[11,"next_u64","","",40,[[["self"]],["u64"]]],[11,"fill_bytes","","",40,N],[11,"try_fill_bytes","","",40,N],[11,"from_seed","","",40,N],[11,"from_rng","","",40,[[["s"]],["result",["error"]]]],[11,"new_unseeded","","Create a 64-bit ISAAC random number generator using the default fixed seed.",40,[[],["self"]]],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an `u64` as seed. If `seed == 0` this will produce the same stream of random numbers as the reference implementation when used unseeded.",40,[[["u64"]],["self"]]],[11,"clone","","",41,[[["self"]],["isaac64core"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"generate","","Refills the output buffer, `results`. See also the pseudocode desciption of the algorithm in the [`Isaac64Rng`] documentation.",41,[[["self"],["isaacarray"]]]],[11,"new_from_u64","","Create an ISAAC-64 random number generator using an `u64` as seed. If `seed == 0` this will produce the same stream of random numbers as the reference implementation when used unseeded.",41,[[["u64"]],["self"]]],[11,"from_seed","","",41,N],[11,"from_rng","","",41,[[["r"]],["result",["error"]]]],[11,"clone","rand::prng","",42,[[["self"]],["xorshiftrng"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"new_unseeded","","Creates a new XorShiftRng instance which is not seeded.",42,[[],["xorshiftrng"]]],[11,"next_u32","","",42,[[["self"]],["u32"]]],[11,"next_u64","","",42,[[["self"]],["u64"]]],[11,"fill_bytes","","",42,N],[11,"try_fill_bytes","","",42,N],[11,"from_seed","","",42,N],[11,"from_rng","","",42,[[["r"]],["result",["error"]]]],[0,"rngs","rand","Random number generators and adapters for common usage:",N,N],[3,"JitterRng","rand::rngs","A true random number generator based on jitter in the CPU execution time, and jitter in memory access time.",N,N],[3,"EntropyRng","","An interface returning random data from external source(s), provided specifically for securely seeding algorithmic generators (PRNGs).",N,N],[3,"SmallRng","","An RNG recommended when small state, cheap initialization and good performance are required. The PRNG algorithm in `SmallRng` is chosen to be efficient on the current platform, without consideration for cryptography or security. The size of its state is much smaller than for [`StdRng`].",N,N],[3,"StdRng","","The standard RNG. The PRNG algorithm in `StdRng` is chosen to be efficient on the current platform, to be statistically strong and unpredictable (meaning a cryptographically secure PRNG).",N,N],[3,"ThreadRng","","The type returned by [`thread_rng`], essentially just a reference to the PRNG in thread-local memory.",N,N],[3,"OsRng","","A random number generator that retrieves randomness straight from the operating system.",N,N],[4,"TimerError","","An error that can occur when [`JitterRng::test_timer`] fails.",N,N],[13,"NoTimer","","No timer available.",43,N],[13,"CoarseTimer","","Timer too coarse to use as an entropy source.",43,N],[13,"NotMonotonic","","Timer is not monotonically increasing.",43,N],[13,"TinyVariantions","","Variations of deltas of time too small.",43,N],[13,"TooManyStuck","","Too many stuck results (indicating no added entropy).",43,N],[0,"adapter","","Wrappers / adapters forming RNGs",N,N],[3,"ReadRng","rand::rngs::adapter","An RNG that reads random bytes straight from any type supporting `std::io::Read`, for example files.",N,N],[3,"ReseedingRng","","A wrapper around any PRNG which reseeds the underlying PRNG after it has generated a certain number of random bytes.",N,N],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new `ReadRng` from a `Read`.",44,[[["r"]],["readrng"]]],[11,"next_u32","","",44,[[["self"]],["u32"]]],[11,"next_u64","","",44,[[["self"]],["u64"]]],[11,"fill_bytes","","",44,N],[11,"try_fill_bytes","","",44,N],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new `ReseedingRng` with the given parameters.",45,[[["r"],["u64"],["rsdr"]],["self"]]],[11,"reseed","","Reseed the internal PRNG.",45,[[["self"]],["result",["error"]]]],[11,"next_u32","","",45,[[["self"]],["u32"]]],[11,"next_u64","","",45,[[["self"]],["u64"]]],[11,"fill_bytes","","",45,N],[11,"try_fill_bytes","","",45,N],[11,"clone","","",45,[[["self"]],["reseedingrng"]]],[11,"fmt","rand::rngs","",46,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new `EntropyRng`.",46,[[],["self"]]],[11,"default","","",46,[[],["self"]]],[11,"next_u32","","",46,[[["self"]],["u32"]]],[11,"next_u64","","",46,[[["self"]],["u64"]]],[11,"fill_bytes","","",46,N],[11,"try_fill_bytes","","",46,N],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"clone","","",47,[[["self"]],["jitterrng"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"clone","","",43,[[["self"]],["timererror"]]],[11,"eq","","",43,[[["self"],["timererror"]],["bool"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"description","","",43,[[["self"]],["str"]]],[11,"from","rand","",3,[[["timererror"]],["error"]]],[11,"new","rand::rngs","Create a new `JitterRng`. Makes use of `std::time` for a timer, or a platform-specific function with higher accuracy if necessary and available.",47,[[],["result",["jitterrng","timererror"]]]],[11,"new_with_timer","","Create a new `JitterRng`. A custom timer can be supplied, making it possible to use `JitterRng` in `no_std` environments.",47,N],[11,"set_rounds","","Configures how many rounds are used to generate each 64-bit value. This must be greater than zero, and has a big impact on performance and output quality.",47,[[["self"],["u8"]]]],[11,"test_timer","","Basic quality tests on the timer, by measuring CPU timing jitter a few hundred times.",47,[[["self"]],["result",["u8","timererror"]]]],[11,"timer_stats","","Statistical test: return the timer delta of one normal run of the `JitterRng` entropy collector.",47,[[["self"],["bool"]],["i64"]]],[11,"next_u32","","",47,[[["self"]],["u32"]]],[11,"next_u64","","",47,[[["self"]],["u64"]]],[11,"fill_bytes","","",47,N],[11,"try_fill_bytes","","",47,N],[0,"mock","","Mock random number generator",N,N],[3,"StepRng","rand::rngs::mock","A simple implementation of `RngCore` for testing purposes.",N,N],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"clone","","",48,[[["self"]],["steprng"]]],[11,"new","","Create a `StepRng`, yielding an arithmetic sequence starting with `initial` and incremented by `increment` each time.",48,[[["u64"],["u64"]],["self"]]],[11,"next_u32","","",48,[[["self"]],["u32"]]],[11,"next_u64","","",48,[[["self"]],["u64"]]],[11,"fill_bytes","","",48,N],[11,"try_fill_bytes","","",48,N],[11,"clone","rand::rngs","",49,[[["self"]],["smallrng"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"next_u32","","",49,[[["self"]],["u32"]]],[11,"next_u64","","",49,[[["self"]],["u64"]]],[11,"fill_bytes","","",49,N],[11,"try_fill_bytes","","",49,N],[11,"from_seed","","",49,N],[11,"from_rng","","",49,[[["r"]],["result",["error"]]]],[11,"clone","","",50,[[["self"]],["stdrng"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"next_u32","","",50,[[["self"]],["u32"]]],[11,"next_u64","","",50,[[["self"]],["u64"]]],[11,"fill_bytes","","",50,N],[11,"try_fill_bytes","","",50,N],[11,"from_seed","","",50,N],[11,"from_rng","","",50,[[["r"]],["result",["error"]]]],[11,"clone","","",51,[[["self"]],["threadrng"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"next_u32","","",51,[[["self"]],["u32"]]],[11,"next_u64","","",51,[[["self"]],["u64"]]],[11,"fill_bytes","","",51,N],[11,"try_fill_bytes","","",51,N],[11,"clone","","",52,[[["self"]],["osrng"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new `OsRng`.",52,[[],["result",["osrng","error"]]]],[11,"next_u32","","",52,[[["self"]],["u32"]]],[11,"next_u64","","",52,[[["self"]],["u64"]]],[11,"fill_bytes","","",52,N],[11,"try_fill_bytes","","",52,N],[0,"seq","rand","Functions for randomly accessing and sampling sequences.",N,N],[5,"sample_iter","rand::seq","Randomly sample `amount` elements from a finite iterator.",N,[[["r"],["i"],["usize"]],["result",["vec","vec"]]]],[5,"sample_slice","","Randomly sample exactly `amount` values from `slice`.",N,N],[5,"sample_slice_ref","","Randomly sample exactly `amount` references from `slice`.",N,N],[5,"sample_indices","","Randomly sample exactly `amount` indices from `0..length`.",N,[[["r"],["usize"],["usize"]],["vec",["usize"]]]],[8,"Rand","rand","A type that can be randomly generated using an [`Rng`].",N,N],[10,"rand","","Generates a random instance of this type using the specified source of randomness.",53,[[["r"]],["self"]]],[8,"Rng","","An automatically-implemented extension trait on [`RngCore`] providing high-level generic methods for sampling values and other convenience methods.",N,N],[11,"gen","","Return a random value supporting the [`Standard`] distribution.",54,[[["self"]],["t"]]],[11,"gen_range","","Generate a random value in the range [`low`, `high`), i.e. inclusive of `low` and exclusive of `high`.",54,[[["self"],["t"],["t"]],["t"]]],[11,"sample","","Sample a new value, using the given distribution.",54,[[["self"],["d"]],["t"]]],[11,"sample_iter","","Create an iterator that generates values using the given distribution.",54,[[["self"],["d"]],["distiter"]]],[11,"fill","","Fill `dest` entirely with random bytes (uniform value distribution), where `dest` is any type supporting [`AsByteSliceMut`], namely slices and arrays over primitive integer types (`i8`, `i16`, `u32`, etc.).",54,[[["self"],["t"]]]],[11,"try_fill","","Fill `dest` entirely with random bytes (uniform value distribution), where `dest` is any type supporting [`AsByteSliceMut`], namely slices and arrays over primitive integer types (`i8`, `i16`, `u32`, etc.).",54,[[["self"],["t"]],["result",["error"]]]],[11,"gen_bool","","Return a bool with a probability `p` of being true.",54,[[["self"],["f64"]],["bool"]]],[11,"choose","","Return a random element from `values`.",54,N],[11,"choose_mut","","Return a mutable pointer to a random element from `values`.",54,N],[11,"shuffle","","Shuffle a mutable slice in place.",54,N],[11,"gen_iter","","Return an iterator that will yield an infinite number of randomly generated items.",54,[[["self"]],["generator"]]],[11,"gen_weighted_bool","","Return a bool with a 1 in n chance of true",54,[[["self"],["u32"]],["bool"]]],[11,"gen_ascii_chars","","Return an iterator of random characters from the set A-Z,a-z,0-9.",54,[[["self"]],["asciigenerator"]]],[8,"AsByteSliceMut","","Trait for casting types to byte slices",N,N],[10,"as_byte_slice_mut","","Return a mutable reference to self as a byte slice",55,N],[10,"to_le","","Call `to_le` on each element (i.e. byte-swap on Big Endian platforms).",55,[[["self"]]]],[8,"FromEntropy","","A convenience extension to [`SeedableRng`] allowing construction from fresh entropy. This trait is automatically implemented for any PRNG implementing [`SeedableRng`] and is not intended to be implemented by users.",N,N],[10,"from_entropy","","Creates a new instance, automatically seeded with fresh entropy.",56,[[],["self"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"next","","",57,[[["self"]],["option"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"next","","",58,[[["self"]],["option",["char"]]]],[11,"clone","","",2,[[["self"]],["errorkind"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",3,[[["self"]],["str"]]],[11,"cause","","",3,[[["self"]],["option",["error"]]]],[11,"read","","",0,N],[11,"fmt","","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",2,[[["self"],["errorkind"]],["bool"]]],[11,"should_retry","","True if this kind of error may resolve itself on retry.",2,[[["self"]],["bool"]]],[11,"should_wait","","True if we should retry but wait before retrying",2,[[["self"]],["bool"]]],[11,"description","","A description of this error kind",2,[[["self"]],["str"]]],[11,"new","","Create a new instance, with specified kind and a message.",3,[[["errorkind"],["str"]],["error"]]],[11,"with_cause","","Create a new instance, with specified kind, message, and a chained cause.",3,[[["errorkind"],["str"],["e"]],["error"]]],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to be extracted. This uses `Option::take`, leaving `self` with no cause.",3,[[["self"]],["option",["box"]]]]],"paths":[[8,"RngCore"],[8,"SeedableRng"],[4,"ErrorKind"],[3,"Error"],[3,"Weighted"],[8,"SampleUniform"],[8,"UniformSampler"],[3,"Uniform"],[3,"UniformInt"],[3,"UniformFloat"],[3,"UniformDuration"],[3,"Gamma"],[3,"ChiSquared"],[3,"FisherF"],[3,"StudentT"],[3,"StandardNormal"],[3,"Normal"],[3,"LogNormal"],[3,"Exp1"],[3,"Exp"],[3,"Pareto"],[3,"Poisson"],[3,"Binomial"],[3,"Bernoulli"],[3,"Cauchy"],[3,"OpenClosed01"],[3,"Open01"],[3,"Standard"],[3,"Alphanumeric"],[3,"WeightedChoice"],[8,"Sample"],[8,"IndependentSample"],[8,"Distribution"],[3,"DistIter"],[3,"ChaChaRng"],[3,"ChaChaCore"],[3,"Hc128Rng"],[3,"Hc128Core"],[3,"IsaacRng"],[3,"IsaacCore"],[3,"Isaac64Rng"],[3,"Isaac64Core"],[3,"XorShiftRng"],[4,"TimerError"],[3,"ReadRng"],[3,"ReseedingRng"],[3,"EntropyRng"],[3,"JitterRng"],[3,"StepRng"],[3,"SmallRng"],[3,"StdRng"],[3,"ThreadRng"],[3,"OsRng"],[8,"Rand"],[8,"Rng"],[8,"AsByteSliceMut"],[8,"FromEntropy"],[3,"Generator"],[3,"AsciiGenerator"]]};
searchIndex["rand_core"]={"doc":"Random number generation traits","items":[[4,"ErrorKind","rand_core","Error kind which can be matched over.",N,N],[13,"Unavailable","","Feature is not available; not recoverable.",0,N],[13,"Unexpected","","General failure; there may be a chance of recovery on retry.",0,N],[13,"Transient","","A transient failure which likely can be resolved or worked around.",0,N],[13,"NotReady","","Not ready yet: recommended to try again a little later.",0,N],[3,"Error","","Error type of random number generators",N,N],[12,"kind","","The error kind",1,N],[12,"msg","","The error message",1,N],[0,"block","","The `BlockRngCore` trait and implementation helpers",N,N],[8,"BlockRngCore","rand_core::block","A trait for RNGs which do not generate random numbers individually, but in blocks (typically `[u32; N]`). This technique is commonly used by cryptographic RNGs to improve performance.",N,N],[16,"Item","","Results element type, e.g. `u32`.",2,N],[16,"Results","","Results type. This is the 'block' an RNG implementing `BlockRngCore` generates, which will usually be an array like `[u32; 16]`.",2,N],[10,"generate","","Generate a new block of results.",2,N],[3,"BlockRng","","A wrapper type implementing [`RngCore`] for some type implementing [`BlockRngCore`] with `u32` array buffer; i.e. this can be used to implement a full RNG from just a `generate` function.",N,N],[12,"core","","The core part of the RNG, implementing the `generate` function.",3,N],[3,"BlockRng64","","A wrapper type implementing [`RngCore`] for some type implementing [`BlockRngCore`] with `u64` array buffer; i.e. this can be used to implement a full RNG from just a `generate` function.",N,N],[12,"core","","The core part of the RNG, implementing the `generate` function.",4,N],[0,"impls","rand_core","Helper functions for implementing `RngCore` functions.",N,N],[5,"next_u64_via_u32","rand_core::impls","Implement `next_u64` via `next_u32`, little-endian order.",N,[[["r"]],["u64"]]],[5,"fill_bytes_via_next","","Implement `fill_bytes` via `next_u64` and `next_u32`, little-endian order.",N,N],[5,"fill_via_u32_chunks","","Implement `fill_bytes` by reading chunks from the output buffer of a block based RNG.",N,N],[5,"fill_via_u64_chunks","","Implement `fill_bytes` by reading chunks from the output buffer of a block based RNG.",N,N],[5,"next_u32_via_fill","","Implement `next_u32` via `fill_bytes`, little-endian order.",N,[[["r"]],["u32"]]],[5,"next_u64_via_fill","","Implement `next_u64` via `fill_bytes`, little-endian order.",N,[[["r"]],["u64"]]],[0,"le","rand_core","Little-Endian utilities",N,N],[5,"read_u32_into","rand_core::le","Reads unsigned 32 bit integers from `src` into `dst`. Borrowed from the `byteorder` crate.",N,N],[5,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`. Borrowed from the `byteorder` crate.",N,N],[8,"RngCore","rand_core","The core of a random number generator.",N,N],[10,"next_u32","","Return the next random `u32`.",5,[[["self"]],["u32"]]],[10,"next_u64","","Return the next random `u64`.",5,[[["self"]],["u64"]]],[10,"fill_bytes","","Fill `dest` with random data.",5,N],[10,"try_fill_bytes","","Fill `dest` entirely with random data.",5,N],[8,"CryptoRng","","A marker trait used to indicate that an [`RngCore`] or [`BlockRngCore`] implementation is supposed to be cryptographically secure.",N,N],[8,"SeedableRng","","A random number generator that can be explicitly seeded.",N,N],[16,"Seed","","Seed type, which is restricted to types mutably-dereferencable as `u8` arrays (we recommend `[u8; N]` for some `N`).",6,N],[10,"from_seed","","Create a new PRNG using the given seed.",6,N],[11,"seed_from_u64","","Create a new PRNG using a `u64` seed.",6,[[["u64"]],["self"]]],[11,"from_rng","","Create a new PRNG seeded from another `Rng`.",6,[[["r"]],["result",["error"]]]],[11,"should_retry","","True if this kind of error may resolve itself on retry.",0,[[["self"]],["bool"]]],[11,"should_wait","","True if we should retry but wait before retrying",0,[[["self"]],["bool"]]],[11,"description","","A description of this error kind",0,[[["self"]],["str"]]],[11,"clone","","",0,[[["self"]],["errorkind"]]],[11,"clone","rand_core::block","",3,[[["self"]],["blockrng"]]],[11,"clone","","",4,[[["self"]],["blockrng64"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rand_core","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","rand_core::block","",3,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","rand_core","",1,[[["self"]],["str"]]],[11,"cause","","",1,[[["self"]],["option",["error"]]]],[11,"from_seed","rand_core::block","",3,N],[11,"seed_from_u64","","",3,[[["u64"]],["blockrng"]]],[11,"from_rng","","",3,[[["s"]],["result",["blockrng","error"]]]],[11,"from_seed","","",4,N],[11,"seed_from_u64","","",4,[[["u64"]],["blockrng64"]]],[11,"from_rng","","",4,[[["s"]],["result",["blockrng64","error"]]]],[11,"next_u32","","",3,[[["self"]],["u32"]]],[11,"next_u64","","",3,[[["self"]],["u64"]]],[11,"fill_bytes","","",3,N],[11,"try_fill_bytes","","",3,N],[11,"next_u32","","",4,[[["self"]],["u32"]]],[11,"next_u64","","",4,[[["self"]],["u64"]]],[11,"fill_bytes","","",4,N],[11,"try_fill_bytes","","",4,N],[11,"read","rand_core","",5,N],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",0,[[["self"],["errorkind"]],["bool"]]],[11,"new","","Create a new instance, with specified kind and a message.",1,[[["errorkind"],["str"]],["error"]]],[11,"with_cause","","Create a new instance, with specified kind, message, and a chained cause.",1,[[["errorkind"],["str"],["e"]],["error"]]],[11,"take_cause","","Take the cause, if any. This allows the embedded cause to be extracted. This uses `Option::take`, leaving `self` with no cause.",1,[[["self"]],["option",["box"]]]],[11,"new","rand_core::block","Create a new `BlockRng` from an existing RNG implementing `BlockRngCore`. Results will be generated on first use.",3,[[["r"]],["blockrng"]]],[11,"index","","Get the index into the result buffer.",3,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a new set of results to be generated on next use.",3,N],[11,"generate_and_set","","Generate a new set of results immediately, setting the index to the given value.",3,N],[11,"new","","Create a new `BlockRng` from an existing RNG implementing `BlockRngCore`. Results will be generated on first use.",4,[[["r"]],["blockrng64"]]],[11,"index","","Get the index into the result buffer.",4,[[["self"]],["usize"]]],[11,"reset","","Reset the number of available results. This will force a new set of results to be generated on next use.",4,N],[11,"generate_and_set","","Generate a new set of results immediately, setting the index to the given value.",4,N]],"paths":[[4,"ErrorKind"],[3,"Error"],[8,"BlockRngCore"],[3,"BlockRng"],[3,"BlockRng64"],[8,"RngCore"],[8,"SeedableRng"]]};
searchIndex["rayon"]={"doc":"Data-parallelism library that makes it easy to convert sequential computations into parallel","items":[[5,"current_num_threads","rayon","Returns the number of threads in the current registry. If this code is executing within a Rayon thread-pool, then this will be the number of threads for the thread-pool of the current thread. Otherwise, it will be the number of threads for the global thread-pool.",N,[[],["usize"]]],[3,"ThreadPool","","Represents a user created [thread-pool].",N,N],[3,"ThreadPoolBuilder","","Used to create a new [`ThreadPool`] or to configure the global rayon thread pool. ## Creating a ThreadPool The following creates a thread pool with 22 threads.",N,N],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",N,N],[5,"join","","Takes two closures and potentially runs them in parallel. It returns a pair of the results from those closures.",N,N],[5,"join_context","","Identical to `join`, except that the closures have a parameter that provides context for the way the closure has been called, especially indicating whether they're executing on a different thread than where `join_context` was called.  This will occur if the second job is stolen by a different thread, or if `join_context` was called from outside the thread pool to begin with.",N,N],[3,"FnContext","","Provides the calling context to a closure called by `join_context`.",N,N],[5,"scope","","Create a \"fork-join\" scope `s` and invokes the closure with a reference to `s`. This closure can then spawn asynchronous tasks into `s`. Those tasks may run asynchronously with respect to the closure; they may themselves spawn additional tasks into `s`. When the closure returns, it will block until all tasks that have been spawned into `s` complete.",N,[[["op"]],["r"]]],[3,"Scope","","Represents a fork-join scope which can be used to spawn any number of tasks. See [`scope()`] for more information.",N,N],[5,"spawn","","Fires off a task into the Rayon threadpool in the \"static\" or \"global\" scope.  Just like a standard thread, this task is not tied to the current stack frame, and hence it cannot hold any references other than those with `'static` lifetime. If you want to spawn a task that references stack data, use [the `scope()` function][scope] to create a scope.",N,N],[0,"collections","","Parallel iterator types for [standard collections][std::collections]",N,N],[0,"binary_heap","rayon::collections","This module contains the parallel iterator types for heaps (`BinaryHeap<T>`). You will rarely need to interact with it directly unless you have need to name one of the iterator types.",N,N],[3,"IntoIter","rayon::collections::binary_heap","Parallel iterator over a binary heap",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a binary heap",N,N],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["intoiter"]]],[11,"drive_unindexed","","",0,N],[11,"opt_len","","",0,[[["self"]],["option",["usize"]]]],[11,"drive","","",0,N],[11,"len","","",0,[[["self"]],["usize"]]],[11,"with_producer","","",0,N],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"drive_unindexed","","",1,N],[11,"opt_len","","",1,[[["self"]],["option",["usize"]]]],[11,"drive","","",1,N],[11,"len","","",1,[[["self"]],["usize"]]],[11,"with_producer","","",1,N],[0,"btree_map","rayon::collections","This module contains the parallel iterator types for B-Tree maps (`BTreeMap<K, V>`). You will rarely need to interact with it directly unless you have need to name one of the iterator types.",N,N],[3,"IntoIter","rayon::collections::btree_map","Parallel iterator over a B-Tree map",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree map",N,N],[3,"IterMut","","Parallel iterator over a mutable reference to a B-Tree map",N,N],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",2,N],[11,"opt_len","","",2,[[["self"]],["option",["usize"]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"drive_unindexed","","",3,N],[11,"opt_len","","",3,[[["self"]],["option",["usize"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",4,N],[11,"opt_len","","",4,[[["self"]],["option",["usize"]]]],[0,"btree_set","rayon::collections","This module contains the parallel iterator types for B-Tree sets (`BTreeSet<T>`). You will rarely need to interact with it directly unless you have need to name one of the iterator types.",N,N],[3,"IntoIter","rayon::collections::btree_set","Parallel iterator over a B-Tree set",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree set",N,N],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",5,N],[11,"opt_len","","",5,[[["self"]],["option",["usize"]]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"clone","","",6,[[["self"]],["self"]]],[11,"drive_unindexed","","",6,N],[11,"opt_len","","",6,[[["self"]],["option",["usize"]]]],[0,"hash_map","rayon::collections","This module contains the parallel iterator types for hash maps (`HashMap<K, V>`). You will rarely need to interact with it directly unless you have need to name one of the iterator types.",N,N],[3,"IntoIter","rayon::collections::hash_map","Parallel iterator over a hash map",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a hash map",N,N],[3,"IterMut","","Parallel iterator over a mutable reference to a hash map",N,N],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",7,N],[11,"opt_len","","",7,[[["self"]],["option",["usize"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"clone","","",8,[[["self"]],["self"]]],[11,"drive_unindexed","","",8,N],[11,"opt_len","","",8,[[["self"]],["option",["usize"]]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",9,N],[11,"opt_len","","",9,[[["self"]],["option",["usize"]]]],[0,"hash_set","rayon::collections","This module contains the parallel iterator types for hash sets (`HashSet<T>`). You will rarely need to interact with it directly unless you have need to name one of the iterator types.",N,N],[3,"IntoIter","rayon::collections::hash_set","Parallel iterator over a hash set",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a hash set",N,N],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",10,N],[11,"opt_len","","",10,[[["self"]],["option",["usize"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"clone","","",11,[[["self"]],["self"]]],[11,"drive_unindexed","","",11,N],[11,"opt_len","","",11,[[["self"]],["option",["usize"]]]],[0,"linked_list","rayon::collections","This module contains the parallel iterator types for linked lists (`LinkedList<T>`). You will rarely need to interact with it directly unless you have need to name one of the iterator types.",N,N],[3,"IntoIter","rayon::collections::linked_list","Parallel iterator over a linked list",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a linked list",N,N],[3,"IterMut","","Parallel iterator over a mutable reference to a linked list",N,N],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"clone","","",12,[[["self"]],["intoiter"]]],[11,"drive_unindexed","","",12,N],[11,"opt_len","","",12,[[["self"]],["option",["usize"]]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"clone","","",13,[[["self"]],["self"]]],[11,"drive_unindexed","","",13,N],[11,"opt_len","","",13,[[["self"]],["option",["usize"]]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",14,N],[11,"opt_len","","",14,[[["self"]],["option",["usize"]]]],[0,"vec_deque","rayon::collections","This module contains the parallel iterator types for double-ended queues (`VecDeque<T>`). You will rarely need to interact with it directly unless you have need to name one of the iterator types.",N,N],[3,"IntoIter","rayon::collections::vec_deque","Parallel iterator over a double-ended queue",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a double-ended queue",N,N],[3,"IterMut","","Parallel iterator over a mutable reference to a double-ended queue",N,N],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"clone","","",15,[[["self"]],["intoiter"]]],[11,"drive_unindexed","","",15,N],[11,"opt_len","","",15,[[["self"]],["option",["usize"]]]],[11,"drive","","",15,N],[11,"len","","",15,[[["self"]],["usize"]]],[11,"with_producer","","",15,N],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"clone","","",16,[[["self"]],["self"]]],[11,"drive_unindexed","","",16,N],[11,"opt_len","","",16,[[["self"]],["option",["usize"]]]],[11,"drive","","",16,N],[11,"len","","",16,[[["self"]],["usize"]]],[11,"with_producer","","",16,N],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",17,N],[11,"opt_len","","",17,[[["self"]],["option",["usize"]]]],[11,"drive","","",17,N],[11,"len","","",17,[[["self"]],["usize"]]],[11,"with_producer","","",17,N],[0,"iter","rayon","Traits for writing parallel programs using an iterator-style interface",N,N],[4,"Either","rayon::iter","The enum `Either` with variants `Left` and `Right` is a general purpose sum type with two cases.",N,N],[13,"Left","","A value of type `L`.",18,N],[13,"Right","","A value of type `R`.",18,N],[3,"IterBridge","","`IterBridge` is a parallel iterator that wraps a sequential iterator.",N,N],[3,"Chain","","`Chain` is an iterator that joins `b` after `a` in one continuous iterator. This struct is created by the [`chain()`] method on [`ParallelIterator`]",N,N],[3,"Chunks","","`Chunks` is an iterator that groups elements of an underlying iterator.",N,N],[3,"Enumerate","","`Enumerate` is an iterator that returns the current count along with the element. This struct is created by the [`enumerate()`] method on [`IndexedParallelIterator`]",N,N],[3,"Filter","","`Filter` takes a predicate `filter_op` and filters out elements that match. This struct is created by the [`filter()`] method on [`ParallelIterator`]",N,N],[3,"FilterMap","","`FilterMap` creates an iterator that uses `filter_op` to both filter and map elements. This struct is created by the [`filter_map()`] method on [`ParallelIterator`].",N,N],[3,"FlatMap","","`FlatMap` maps each element to an iterator, then flattens these iterators together. This struct is created by the [`flat_map()`] method on [`ParallelIterator`]",N,N],[3,"Flatten","","`Flatten` turns each element to an iterator, then flattens these iterators together. This struct is created by the [`flatten()`] method on [`ParallelIterator`].",N,N],[3,"Fold","","`Fold` is an iterator that applies a function over an iterator producing a single value. This struct is created by the [`fold()`] method on [`ParallelIterator`]",N,N],[3,"FoldWith","","`FoldWith` is an iterator that applies a function over an iterator producing a single value. This struct is created by the [`fold_with()`] method on [`ParallelIterator`]",N,N],[3,"TryFold","","`TryFold` is an iterator that applies a function over an iterator producing a single value. This struct is created by the [`try_fold()`] method on [`ParallelIterator`]",N,N],[3,"TryFoldWith","","`TryFoldWith` is an iterator that applies a function over an iterator producing a single value. This struct is created by the [`try_fold_with()`] method on [`ParallelIterator`]",N,N],[3,"Skip","","`Skip` is an iterator that skips over the first `n` elements. This struct is created by the [`skip()`] method on [`IndexedParallelIterator`]",N,N],[3,"Split","","`Split` is a parallel iterator using arbitrary data and a splitting function. This struct is created by the [`split()`] function.",N,N],[3,"Take","","`Take` is an iterator that iterates over the first `n` elements. This struct is created by the [`take()`] method on [`IndexedParallelIterator`]",N,N],[3,"Map","","`Map` is an iterator that transforms the elements of an underlying iterator.",N,N],[3,"MapWith","","`MapWith` is an iterator that transforms the elements of an underlying iterator.",N,N],[3,"Zip","","`Zip` is an iterator that zips up `a` and `b` into a single iterator of pairs. This struct is created by the [`zip()`] method on [`IndexedParallelIterator`]",N,N],[3,"ZipEq","","An [`IndexedParallelIterator`] that iterates over two parallel iterators of equal length simultaneously.",N,N],[3,"Interleave","","`Interleave` is an iterator that interleaves elements of iterators `i` and `j` in one continuous iterator. This struct is created by the [`interleave()`] method on [`IndexedParallelIterator`]",N,N],[3,"InterleaveShortest","","`InterleaveShortest` is an iterator that works similarly to `Interleave`, but this version stops returning elements once one of the iterators run out.",N,N],[3,"Intersperse","","`Intersperse` is an iterator that inserts a particular item between each item of the adapted iterator.  This struct is created by the [`intersperse()`] method on [`ParallelIterator`]",N,N],[3,"Update","","`Update` is an iterator that mutates the elements of an underlying iterator before they are yielded.",N,N],[3,"Rev","","`Rev` is an iterator that produces elements in reverse order. This struct is created by the [`rev()`] method on [`IndexedParallelIterator`]",N,N],[3,"MinLen","","`MinLen` is an iterator that imposes a minimum length on iterator splits. This struct is created by the [`min_len()`] method on [`IndexedParallelIterator`]",N,N],[3,"MaxLen","","`MaxLen` is an iterator that imposes a maximum length on iterator splits. This struct is created by the [`max_len()`] method on [`IndexedParallelIterator`]",N,N],[3,"Cloned","","`Cloned` is an iterator that clones the elements of an underlying iterator.",N,N],[3,"Inspect","","`Inspect` is an iterator that calls a function with a reference to each element before yielding it.",N,N],[3,"WhileSome","","`WhileSome` is an iterator that yields the `Some` elements of an iterator, halting as soon as any `None` is produced.",N,N],[3,"Repeat","","Iterator adaptor for the `repeat()` function.",N,N],[3,"RepeatN","","Iterator adaptor for the `repeatn()` function.",N,N],[3,"Empty","","Iterator adaptor for the `empty()` function.",N,N],[3,"Once","","Iterator adaptor for the `once()` function.",N,N],[5,"split","","The `split` function takes arbitrary data and a closure that knows how to split it, and turns this into a `ParallelIterator`.",N,[[["d"],["s"]],["split"]]],[5,"repeat","","Creates a parallel iterator that endlessly repeats `elt` (by cloning it). Note that this iterator has \"infinite\" length, so typically you would want to use `zip` or `take` or some other means to shorten it, or consider using the `repeatn()` function instead.",N,[[["t"]],["repeat"]]],[5,"repeatn","","Creates a parallel iterator that produces `n` repeats of `elt` (by cloning it).",N,[[["t"],["usize"]],["repeatn"]]],[5,"empty","","Creates a parallel iterator that produces nothing.",N,[[],["empty"]]],[5,"once","","Creates a parallel iterator that produces an element exactly once.",N,[[["t"]],["once"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"clone","","",19,[[["self"]],["iterbridge"]]],[11,"drive_unindexed","","",19,N],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"clone","","",20,[[["self"]],["chain"]]],[11,"drive_unindexed","","",20,N],[11,"opt_len","","",20,[[["self"]],["option",["usize"]]]],[11,"drive","","",20,N],[11,"len","","",20,[[["self"]],["usize"]]],[11,"with_producer","","",20,N],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"clone","","",21,[[["self"]],["chunks"]]],[11,"drive_unindexed","","",21,N],[11,"opt_len","","",21,[[["self"]],["option",["usize"]]]],[11,"drive","","",21,N],[11,"len","","",21,[[["self"]],["usize"]]],[11,"with_producer","","",21,N],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"clone","","",22,[[["self"]],["enumerate"]]],[11,"drive_unindexed","","",22,N],[11,"opt_len","","",22,[[["self"]],["option",["usize"]]]],[11,"drive","","",22,N],[11,"len","","",22,[[["self"]],["usize"]]],[11,"with_producer","","",22,N],[11,"clone","","",23,[[["self"]],["filter"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",23,N],[11,"clone","","",24,[[["self"]],["filtermap"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",24,N],[11,"clone","","",25,[[["self"]],["flatmap"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",25,N],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"clone","","",26,[[["self"]],["flatten"]]],[11,"drive_unindexed","","",26,N],[0,"plumbing","","Traits and functions used to implement parallel iteration.  These are low-level details -- users of parallel iterators should not need to interact with them directly.  See [the `plumbing` README][r] for a high-level overview.",N,N],[5,"bridge","rayon::iter::plumbing","This helper function is used to \"connect\" a parallel iterator to a consumer. It will convert the `par_iter` into a producer P and then pull items from P and feed them to `consumer`, splitting and creating parallel threads as needed.",N,N],[5,"bridge_producer_consumer","","This helper function is used to \"connect\" a producer and a consumer. You may prefer to call [`bridge`], which wraps this function. This function will draw items from `producer` and feed them to `consumer`, splitting and creating parallel tasks when needed.",N,N],[5,"bridge_unindexed","","A variant of [`bridge_producer_consumer`] where the producer is an unindexed producer.",N,N],[8,"ProducerCallback","","The `ProducerCallback` trait is a kind of generic closure, [analogous to `FnOnce`][FnOnce]. See [the corresponding section in the plumbing README][r] for more details.",N,N],[16,"Output","","The type of value returned by this callback. Analogous to [`Output` from the `FnOnce` trait][Output].",27,N],[10,"callback","","Invokes the callback with the given producer as argument. The key point of this trait is that this method is generic over `P`, and hence implementors must be defined for any producer.",27,N],[8,"Producer","","A `Producer` is effectively a \"splittable `IntoIterator`\". That is, a producer is a value which can be converted into an iterator at any time: at that point, it simply produces items on demand, like any iterator. But what makes a `Producer` special is that, before we convert to an iterator, we can also split it at a particular point using the `split_at` method. This will yield up two producers, one producing the items before that point, and one producing the items after that point (these two producers can then independently be split further, or be converted into iterators). In Rayon, this splitting is used to divide between threads. See [the `plumbing` README][r] for further details.",N,N],[16,"Item","","The type of item that will be produced by this producer once it is converted into an iterator.",28,N],[16,"IntoIter","","The type of iterator we will become.",28,N],[10,"into_iter","","Convert `self` into an iterator; at this point, no more parallel splits are possible.",28,N],[11,"min_len","","The minimum number of items that we will process sequentially. Defaults to 1, which means that we will split all the way down to a single item. This can be raised higher using the [`with_min_len`] method, which will force us to create sequential tasks at a larger granularity. Note that Rayon automatically normally attempts to adjust the size of parallel splits to reduce overhead, so this should not be needed.",28,[[["self"]],["usize"]]],[11,"max_len","","The maximum number of items that we will process sequentially. Defaults to MAX, which means that we can choose not to split at all. This can be lowered using the [`with_max_len`] method, which will force us to create more parallel tasks. Note that Rayon automatically normally attempts to adjust the size of parallel splits to reduce overhead, so this should not be needed.",28,[[["self"]],["usize"]]],[10,"split_at","","Split into two producers; one produces items `0..index`, the other `index..N`. Index must be less than or equal to `N`.",28,N],[11,"fold_with","","Iterate the producer, feeding each element to `folder`, and stop when the folder is full (or all elements have been consumed).",28,[[["self"],["f"]],["f"]]],[8,"Consumer","","A consumer is effectively a [generalized \"fold\" operation][fold], and in fact each consumer will eventually be converted into a [`Folder`]. What makes a consumer special is that, like a [`Producer`], it can be split into multiple consumers using the `split_at` method. When a consumer is split, it produces two consumers, as well as a reducer. The two consumers can be fed items independently, and when they are done the reducer is used to combine their two results into one. See [the `plumbing` README][r] for further details.",N,N],[16,"Folder","","The type of folder that this consumer can be converted into.",29,N],[16,"Reducer","","The type of reducer that is produced if this consumer is split.",29,N],[16,"Result","","The type of result that this consumer will ultimately produce.",29,N],[10,"split_at","","Divide the consumer into two consumers, one processing items `0..index` and one processing items from `index..`. Also produces a reducer that can be used to reduce the results at the end.",29,N],[10,"into_folder","","Convert the consumer into a folder that can consume items sequentially, eventually producing a final result.",29,N],[10,"full","","Hint whether this `Consumer` would like to stop processing further items, e.g. if a search has been completed.",29,[[["self"]],["bool"]]],[8,"Folder","","The `Folder` trait encapsulates [the standard fold operation][fold].  It can be fed many items using the `consume` method. At the end, once all items have been consumed, it can then be converted (using `complete`) into a final value.",N,N],[16,"Result","","The type of result that will ultimately be produced by the folder.",30,N],[10,"consume","","Consume next item and return new sequential state.",30,[[["self"],["item"]],["self"]]],[11,"consume_iter","","Consume items from the iterator until full, and return new sequential state.",30,[[["self"],["i"]],["self"]]],[10,"complete","","Finish consuming items, produce final result.",30,N],[10,"full","","Hint whether this `Folder` would like to stop processing further items, e.g. if a search has been completed.",30,[[["self"]],["bool"]]],[8,"Reducer","","The reducer is the final step of a `Consumer` -- after a consumer has been split into two parts, and each of those parts has been fully processed, we are left with two results. The reducer is then used to combine those two results into one. See [the `plumbing` README][r] for further details.",N,N],[10,"reduce","","Reduce two final results into one; this is executed after a split.",31,[[["self"],["result"],["result"]],["result"]]],[8,"UnindexedConsumer","","A stateless consumer can be freely copied. These consumers can be used like regular consumers, but they also support a `split_off_left` method that does not take an index to split, but simply splits at some arbitrary point (`for_each`, for example, produces an unindexed consumer).",N,N],[10,"split_off_left","","Splits off a \"left\" consumer and returns it. The `self` consumer should then be used to consume the \"right\" portion of the data. (The ordering matters for methods like find_first -- values produced by the returned value are given precedence over values produced by `self`.) Once the left and right halves have been fully consumed, you should reduce the results with the result of `to_reducer`.",32,[[["self"]],["self"]]],[10,"to_reducer","","Creates a reducer that can be used to combine the results from a split consumer.",32,N],[8,"UnindexedProducer","","A variant on `Producer` which does not know its exact length or cannot represent it in a `usize`. These producers act like ordinary producers except that they cannot be told to split at a particular point. Instead, you just ask them to split 'somewhere'.",N,N],[16,"Item","","The type of item returned by this producer.",33,N],[10,"split","","Split midway into a new producer if possible, otherwise return `None`.",33,N],[10,"fold_with","","Iterate the producer, feeding each element to `folder`, and stop when the folder is full (or all elements have been consumed).",33,[[["self"],["f"]],["f"]]],[11,"clone","rayon::iter","",34,[[["self"]],["fold"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",34,N],[11,"clone","","",35,[[["self"]],["foldwith"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",35,N],[11,"clone","","",36,[[["self"]],["tryfold"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",36,N],[11,"clone","","",37,[[["self"]],["tryfoldwith"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",37,N],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"clone","","",38,[[["self"]],["skip"]]],[11,"drive_unindexed","","",38,N],[11,"opt_len","","",38,[[["self"]],["option",["usize"]]]],[11,"len","","",38,[[["self"]],["usize"]]],[11,"drive","","",38,N],[11,"with_producer","","",38,N],[11,"clone","","",39,[[["self"]],["split"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",39,N],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"clone","","",40,[[["self"]],["take"]]],[11,"drive_unindexed","","",40,N],[11,"opt_len","","",40,[[["self"]],["option",["usize"]]]],[11,"len","","",40,[[["self"]],["usize"]]],[11,"drive","","",40,N],[11,"with_producer","","",40,N],[11,"clone","","",41,[[["self"]],["map"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",41,N],[11,"opt_len","","",41,[[["self"]],["option",["usize"]]]],[11,"drive","","",41,N],[11,"len","","",41,[[["self"]],["usize"]]],[11,"with_producer","","",41,N],[11,"clone","","",42,[[["self"]],["mapwith"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",42,N],[11,"opt_len","","",42,[[["self"]],["option",["usize"]]]],[11,"drive","","",42,N],[11,"len","","",42,[[["self"]],["usize"]]],[11,"with_producer","","",42,N],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"clone","","",43,[[["self"]],["zip"]]],[11,"drive_unindexed","","",43,N],[11,"opt_len","","",43,[[["self"]],["option",["usize"]]]],[11,"drive","","",43,N],[11,"len","","",43,[[["self"]],["usize"]]],[11,"with_producer","","",43,N],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"clone","","",44,[[["self"]],["zipeq"]]],[11,"drive_unindexed","","",44,N],[11,"opt_len","","",44,[[["self"]],["option",["usize"]]]],[11,"drive","","",44,N],[11,"len","","",44,[[["self"]],["usize"]]],[11,"with_producer","","",44,N],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"clone","","",45,[[["self"]],["interleave"]]],[11,"drive_unindexed","","",45,N],[11,"opt_len","","",45,[[["self"]],["option",["usize"]]]],[11,"drive","","",45,N],[11,"len","","",45,[[["self"]],["usize"]]],[11,"with_producer","","",45,N],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"clone","","",46,[[["self"]],["interleaveshortest"]]],[11,"drive_unindexed","","",46,N],[11,"opt_len","","",46,[[["self"]],["option",["usize"]]]],[11,"drive","","",46,N],[11,"len","","",46,[[["self"]],["usize"]]],[11,"with_producer","","",46,N],[11,"clone","","",47,[[["self"]],["intersperse"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",47,N],[11,"opt_len","","",47,[[["self"]],["option",["usize"]]]],[11,"drive","","",47,N],[11,"len","","",47,[[["self"]],["usize"]]],[11,"with_producer","","",47,N],[11,"clone","","",48,[[["self"]],["update"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",48,N],[11,"opt_len","","",48,[[["self"]],["option",["usize"]]]],[11,"drive","","",48,N],[11,"len","","",48,[[["self"]],["usize"]]],[11,"with_producer","","",48,N],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"clone","","",49,[[["self"]],["rev"]]],[11,"drive_unindexed","","",49,N],[11,"opt_len","","",49,[[["self"]],["option",["usize"]]]],[11,"drive","","",49,N],[11,"len","","",49,[[["self"]],["usize"]]],[11,"with_producer","","",49,N],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"clone","","",50,[[["self"]],["minlen"]]],[11,"drive_unindexed","","",50,N],[11,"opt_len","","",50,[[["self"]],["option",["usize"]]]],[11,"drive","","",50,N],[11,"len","","",50,[[["self"]],["usize"]]],[11,"with_producer","","",50,N],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"clone","","",51,[[["self"]],["maxlen"]]],[11,"drive_unindexed","","",51,N],[11,"opt_len","","",51,[[["self"]],["option",["usize"]]]],[11,"drive","","",51,N],[11,"len","","",51,[[["self"]],["usize"]]],[11,"with_producer","","",51,N],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"clone","","",52,[[["self"]],["cloned"]]],[11,"drive_unindexed","","",52,N],[11,"opt_len","","",52,[[["self"]],["option",["usize"]]]],[11,"drive","","",52,N],[11,"len","","",52,[[["self"]],["usize"]]],[11,"with_producer","","",52,N],[11,"clone","","",53,[[["self"]],["inspect"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",53,N],[11,"opt_len","","",53,[[["self"]],["option",["usize"]]]],[11,"drive","","",53,N],[11,"len","","",53,[[["self"]],["usize"]]],[11,"with_producer","","",53,N],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"clone","","",54,[[["self"]],["whilesome"]]],[11,"drive_unindexed","","",54,N],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"clone","","",55,[[["self"]],["repeat"]]],[11,"take","","Take only `n` repeats of the element, similar to the general `take()`.",55,[[["self"],["usize"]],["repeatn"]]],[11,"zip","","Iterate tuples repeating the element with items from another iterator, similar to the general `zip()`.",55,[[["self"],["z"]],["zip",["repeatn"]]]],[11,"drive_unindexed","","",55,N],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"clone","","",56,[[["self"]],["repeatn"]]],[11,"drive_unindexed","","",56,N],[11,"opt_len","","",56,[[["self"]],["option",["usize"]]]],[11,"drive","","",56,N],[11,"with_producer","","",56,N],[11,"len","","",56,[[["self"]],["usize"]]],[11,"clone","","",57,[[["self"]],["self"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",57,N],[11,"opt_len","","",57,[[["self"]],["option",["usize"]]]],[11,"drive","","",57,N],[11,"len","","",57,[[["self"]],["usize"]]],[11,"with_producer","","",57,N],[11,"clone","","",58,[[["self"]],["once"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",58,N],[11,"opt_len","","",58,[[["self"]],["option",["usize"]]]],[11,"drive","","",58,N],[11,"len","","",58,[[["self"]],["usize"]]],[11,"with_producer","","",58,N],[8,"ParallelBridge","","Conversion trait to convert an `Iterator` to a `ParallelIterator`.",N,N],[10,"par_bridge","","Create a bridge from this type to a `ParallelIterator`.",59,[[["self"]],["iterbridge"]]],[8,"IntoParallelIterator","","`IntoParallelIterator` implements the conversion to a [`ParallelIterator`].",N,N],[16,"Iter","","The parallel iterator type that will be created.",60,N],[16,"Item","","The type of item that the parallel iterator will produce.",60,N],[10,"into_par_iter","","Converts `self` into a parallel iterator.",60,N],[8,"IntoParallelRefIterator","","`IntoParallelRefIterator` implements the conversion to a [`ParallelIterator`], providing shared references to the data.",N,N],[16,"Iter","","The type of the parallel iterator that will be returned.",61,N],[16,"Item","","The type of item that the parallel iterator will produce. This will typically be an `&'data T` reference type.",61,N],[10,"par_iter","","Converts `self` into a parallel iterator.",61,N],[8,"IntoParallelRefMutIterator","","`IntoParallelRefMutIterator` implements the conversion to a [`ParallelIterator`], providing mutable references to the data.",N,N],[16,"Iter","","The type of iterator that will be created.",62,N],[16,"Item","","The type of item that will be produced; this is typically an `&'data mut T` reference.",62,N],[10,"par_iter_mut","","Creates the parallel iterator from `self`.",62,N],[8,"ParallelIterator","","Parallel version of the standard iterator trait.",N,N],[16,"Item","","The type of item that this parallel iterator produces. For example, if you use the [`for_each`] method, this is the type of item that your closure will be invoked with.",63,N],[11,"for_each","","Executes `OP` on each item produced by the iterator, in parallel.",63,[[["self"],["op"]]]],[11,"for_each_with","","Executes `OP` on the given `init` value with each item produced by the iterator, in parallel.",63,[[["self"],["t"],["op"]]]],[11,"try_for_each","","Executes a fallible `OP` on each item produced by the iterator, in parallel.",63,[[["self"],["op"]],["r"]]],[11,"try_for_each_with","","Executes a fallible `OP` on the given `init` value with each item produced by the iterator, in parallel.",63,[[["self"],["t"],["op"]],["r"]]],[11,"count","","Counts the number of items in this parallel iterator.",63,[[["self"]],["usize"]]],[11,"map","","Applies `map_op` to each item of this iterator, producing a new iterator with the results.",63,[[["self"],["f"]],["map"]]],[11,"map_with","","Applies `map_op` to the given `init` value with each item of this iterator, producing a new iterator with the results.",63,[[["self"],["t"],["f"]],["mapwith"]]],[11,"cloned","","Creates an iterator which clones all of its elements.  This may be useful when you have an iterator over `&T`, but you need `T`.",63,[[["self"]],["cloned"]]],[11,"inspect","","Applies `inspect_op` to a reference to each item of this iterator, producing a new iterator passing through the original items.  This is often useful for debugging to see what's happening in iterator stages.",63,[[["self"],["op"]],["inspect"]]],[11,"update","","Mutates each item of this iterator before yielding it.",63,[[["self"],["f"]],["update"]]],[11,"filter","","Applies `filter_op` to each item of this iterator, producing a new iterator with only the items that gave `true` results.",63,[[["self"],["p"]],["filter"]]],[11,"filter_map","","Applies `filter_op` to each item of this iterator to get an `Option`, producing a new iterator with only the items from `Some` results.",63,[[["self"],["p"]],["filtermap"]]],[11,"flat_map","","Applies `map_op` to each item of this iterator to get nested iterators, producing a new iterator that flattens these back into one.",63,[[["self"],["f"]],["flatmap"]]],[11,"flatten","","An adaptor that flattens iterable `Item`s into one large iterator",63,[[["self"]],["flatten"]]],[11,"reduce","","Reduces the items in the iterator into one item using `op`. The argument `identity` should be a closure that can produce \"identity\" value which may be inserted into the sequence as needed to create opportunities for parallel execution. So, for example, if you are doing a summation, then `identity()` ought to produce something that represents the zero for your type (but consider just calling `sum()` in that case).",63,N],[11,"reduce_with","","Reduces the items in the iterator into one item using `op`. If the iterator is empty, `None` is returned; otherwise, `Some` is returned.",63,[[["self"],["op"]],["option"]]],[11,"try_reduce","","Reduces the items in the iterator into one item using a fallible `op`. The `identity` argument is used the same way as in [`reduce()`].",63,N],[11,"try_reduce_with","","Reduces the items in the iterator into one item using a fallible `op`.",63,[[["self"],["op"]],["option"]]],[11,"fold","","Parallel fold is similar to sequential fold except that the sequence of items may be subdivided before it is folded. Consider a list of numbers like `22 3 77 89 46`. If you used sequential fold to add them (`fold(0, |a,b| a+b)`, you would wind up first adding 0 + 22, then 22 + 3, then 25 + 77, and so forth. The parallel fold works similarly except that it first breaks up your list into sublists, and hence instead of yielding up a single sum at the end, it yields up multiple sums. The number of results is nondeterministic, as is the point where the breaks occur.",63,[[["self"],["id"],["f"]],["fold"]]],[11,"fold_with","","Applies `fold_op` to the given `init` value with each item of this iterator, finally producing the value for further use.",63,[[["self"],["t"],["f"]],["foldwith"]]],[11,"try_fold","","Perform a fallible parallel fold.",63,[[["self"],["id"],["f"]],["tryfold"]]],[11,"try_fold_with","","Perform a fallible parallel fold with a cloneable `init` value.",63,[[["self"],["t"],["f"]],["tryfoldwith"]]],[11,"sum","","Sums up the items in the iterator.",63,[[["self"]],["s"]]],[11,"product","","Multiplies all the items in the iterator.",63,[[["self"]],["p"]]],[11,"min","","Computes the minimum of all the items in the iterator. If the iterator is empty, `None` is returned; otherwise, `Some(min)` is returned.",63,[[["self"]],["option"]]],[11,"min_by","","Computes the minimum of all the items in the iterator with respect to the given comparison function. If the iterator is empty, `None` is returned; otherwise, `Some(min)` is returned.",63,[[["self"],["f"]],["option"]]],[11,"min_by_key","","Computes the item that yields the minimum value for the given function. If the iterator is empty, `None` is returned; otherwise, `Some(item)` is returned.",63,[[["self"],["f"]],["option"]]],[11,"max","","Computes the maximum of all the items in the iterator. If the iterator is empty, `None` is returned; otherwise, `Some(max)` is returned.",63,[[["self"]],["option"]]],[11,"max_by","","Computes the maximum of all the items in the iterator with respect to the given comparison function. If the iterator is empty, `None` is returned; otherwise, `Some(min)` is returned.",63,[[["self"],["f"]],["option"]]],[11,"max_by_key","","Computes the item that yields the maximum value for the given function. If the iterator is empty, `None` is returned; otherwise, `Some(item)` is returned.",63,[[["self"],["f"]],["option"]]],[11,"chain","","Takes two iterators and creates a new iterator over both.",63,[[["self"],["c"]],["chain"]]],[11,"find_any","","Searches for some item in the parallel iterator that matches the given predicate and returns it. This operation is similar to [`find` on sequential iterators][find] but the item returned may not be the first one in the parallel sequence which matches, since we search the entire sequence in parallel.",63,[[["self"],["p"]],["option"]]],[11,"find_first","","Searches for the sequentially first item in the parallel iterator that matches the given predicate and returns it.",63,[[["self"],["p"]],["option"]]],[11,"find_last","","Searches for the sequentially last item in the parallel iterator that matches the given predicate and returns it.",63,[[["self"],["p"]],["option"]]],[11,"any","","Searches for some item in the parallel iterator that matches the given predicate, and if so returns true.  Once a match is found, we'll attempt to stop process the rest of the items.  Proving that there's no match, returning false, does require visiting every item.",63,[[["self"],["p"]],["bool"]]],[11,"all","","Tests that every item in the parallel iterator matches the given predicate, and if so returns true.  If a counter-example is found, we'll attempt to stop processing more items, then return false.",63,[[["self"],["p"]],["bool"]]],[11,"while_some","","Creates an iterator over the `Some` items of this iterator, halting as soon as any `None` is found.",63,[[["self"]],["whilesome"]]],[11,"collect","","Create a fresh collection containing all the element produced by this parallel iterator.",63,[[["self"]],["c"]]],[11,"unzip","","Unzips the items of a parallel iterator into a pair of arbitrary `ParallelExtend` containers.",63,N],[11,"partition","","Partitions the items of a parallel iterator into a pair of arbitrary `ParallelExtend` containers.  Items for which the `predicate` returns true go into the first container, and the rest go into the second.",63,N],[11,"partition_map","","Partitions and maps the items of a parallel iterator into a pair of arbitrary `ParallelExtend` containers.  `Either::Left` items go into the first container, and `Either::Right` items go into the second.",63,N],[11,"intersperse","","Intersperses clones of an element between items of this iterator.",63,N],[10,"drive_unindexed","","Internal method used to define the behavior of this parallel iterator. You should not need to call this directly.",63,N],[11,"opt_len","","Internal method used to define the behavior of this parallel iterator. You should not need to call this directly.",63,[[["self"]],["option",["usize"]]]],[8,"IndexedParallelIterator","","An iterator that supports \"random access\" to its data, meaning that you can split it at arbitrary indices and draw data from those points.",N,N],[11,"collect_into_vec","","Collects the results of the iterator into the specified vector. The vector is always truncated before execution begins. If possible, reusing the vector across calls can lead to better performance since it reuses the same backing buffer.",64,[[["self"],["vec"]]]],[11,"unzip_into_vecs","","Unzips the results of the iterator into the specified vectors. The vectors are always truncated before execution begins. If possible, reusing the vectors across calls can lead to better performance since they reuse the same backing buffer.",64,[[["self"],["vec"],["vec"]]]],[11,"zip","","Iterate over tuples `(A, B)`, where the items `A` are from this iterator and `B` are from the iterator given as argument. Like the `zip` method on ordinary iterators, if the two iterators are of unequal length, you only get the items they have in common.",64,[[["self"],["z"]],["zip"]]],[11,"zip_eq","","The same as `Zip`, but requires that both iterators have the same length.",64,[[["self"],["z"]],["zipeq"]]],[11,"interleave","","Interleave elements of this iterator and the other given iterator. Alternately yields elements from this iterator and the given iterator, until both are exhausted. If one iterator is exhausted before the other, the last elements are provided from the other.",64,[[["self"],["i"]],["interleave"]]],[11,"interleave_shortest","","Interleave elements of this iterator and the other given iterator, until one is exhausted.",64,[[["self"],["i"]],["interleaveshortest"]]],[11,"chunks","","Split an iterator up into fixed-size chunks.",64,[[["self"],["usize"]],["chunks"]]],[11,"cmp","","Lexicographically compares the elements of this `ParallelIterator` with those of another.",64,[[["self"],["i"]],["ordering"]]],[11,"partial_cmp","","Lexicographically compares the elements of this `ParallelIterator` with those of another.",64,[[["self"],["i"]],["option",["ordering"]]]],[11,"eq","","Determines if the elements of this `ParallelIterator` are equal to those of another",64,[[["self"],["i"]],["bool"]]],[11,"ne","","Determines if the elements of this `ParallelIterator` are unequal to those of another",64,[[["self"],["i"]],["bool"]]],[11,"lt","","Determines if the elements of this `ParallelIterator` are lexicographically less than those of another.",64,[[["self"],["i"]],["bool"]]],[11,"le","","Determines if the elements of this `ParallelIterator` are less or equal to those of another.",64,[[["self"],["i"]],["bool"]]],[11,"gt","","Determines if the elements of this `ParallelIterator` are lexicographically greater than those of another.",64,[[["self"],["i"]],["bool"]]],[11,"ge","","Determines if the elements of this `ParallelIterator` are less or equal to those of another.",64,[[["self"],["i"]],["bool"]]],[11,"enumerate","","Yields an index along with each item.",64,[[["self"]],["enumerate"]]],[11,"skip","","Creates an iterator that skips the first `n` elements.",64,[[["self"],["usize"]],["skip"]]],[11,"take","","Creates an iterator that yields the first `n` elements.",64,[[["self"],["usize"]],["take"]]],[11,"position_any","","Searches for some item in the parallel iterator that matches the given predicate, and returns its index.  Like `ParallelIterator::find_any`, the parallel search will not necessarily find the first match, and once a match is found we'll attempt to stop processing any more.",64,[[["self"],["p"]],["option",["usize"]]]],[11,"position_first","","Searches for the sequentially first item in the parallel iterator that matches the given predicate, and returns its index.",64,[[["self"],["p"]],["option",["usize"]]]],[11,"position_last","","Searches for the sequentially last item in the parallel iterator that matches the given predicate, and returns its index.",64,[[["self"],["p"]],["option",["usize"]]]],[11,"rev","","Produces a new iterator with the elements of this iterator in reverse order.",64,[[["self"]],["rev"]]],[11,"with_min_len","","Sets the minimum length of iterators desired to process in each thread.  Rayon will not split any smaller than this length, but of course an iterator could already be smaller to begin with.",64,[[["self"],["usize"]],["minlen"]]],[11,"with_max_len","","Sets the maximum length of iterators desired to process in each thread.  Rayon will try to split at least below this length, unless that would put it below the length from `with_min_len()`. For example, given min=10 and max=15, a length of 16 will not be split any further.",64,[[["self"],["usize"]],["maxlen"]]],[10,"len","","Produces an exact count of how many items this iterator will produce, presuming no panic occurs.",64,[[["self"]],["usize"]]],[10,"drive","","Internal method used to define the behavior of this parallel iterator. You should not need to call this directly.",64,N],[10,"with_producer","","Internal method used to define the behavior of this parallel iterator. You should not need to call this directly.",64,N],[8,"FromParallelIterator","","`FromParallelIterator` implements the creation of a collection from a [`ParallelIterator`]. By implementing `FromParallelIterator` for a given type, you define how it will be created from an iterator.",N,N],[10,"from_par_iter","","Creates an instance of the collection from the parallel iterator `par_iter`.",65,[[["i"]],["self"]]],[8,"ParallelExtend","","`ParallelExtend` extends an existing collection with items from a [`ParallelIterator`].",N,N],[10,"par_extend","","Extends an instance of the collection with the elements drawn from the parallel iterator `par_iter`.",66,[[["self"],["i"]]]],[0,"option","rayon","Parallel iterator types for [options][std::option]",N,N],[3,"IntoIter","rayon::option","A parallel iterator over the value in [`Some`] variant of an [`Option`].",N,N],[3,"Iter","","A parallel iterator over a reference to the [`Some`] variant of an [`Option`].",N,N],[3,"IterMut","","A parallel iterator over a mutable reference to the [`Some`] variant of an [`Option`].",N,N],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"clone","","",67,[[["self"]],["intoiter"]]],[11,"drive_unindexed","","",67,N],[11,"opt_len","","",67,[[["self"]],["option",["usize"]]]],[11,"drive","","",67,N],[11,"len","","",67,[[["self"]],["usize"]]],[11,"with_producer","","",67,N],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"clone","","",68,[[["self"]],["self"]]],[11,"drive_unindexed","","",68,N],[11,"opt_len","","",68,[[["self"]],["option",["usize"]]]],[11,"drive","","",68,N],[11,"len","","",68,[[["self"]],["usize"]]],[11,"with_producer","","",68,N],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",69,N],[11,"opt_len","","",69,[[["self"]],["option",["usize"]]]],[11,"drive","","",69,N],[11,"len","","",69,[[["self"]],["usize"]]],[11,"with_producer","","",69,N],[0,"prelude","rayon","The rayon prelude imports the various `ParallelIterator` traits. The intention is that one can include `use rayon::prelude::*` and have easy access to the various traits and methods you will need.",N,N],[8,"ParallelBridge","rayon::prelude","Conversion trait to convert an `Iterator` to a `ParallelIterator`.",N,N],[10,"par_bridge","","Create a bridge from this type to a `ParallelIterator`.",59,[[["self"]],["iterbridge"]]],[0,"range","rayon","Parallel iterator types for [ranges][std::range], the type for values created by `a..b` expressions",N,N],[3,"Iter","rayon::range","Parallel iterator over a range, implemented for all integer types.",N,N],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"clone","","",70,[[["self"]],["iter"]]],[11,"drive_unindexed","","",70,N],[11,"opt_len","","",70,[[["self"]],["option",["usize"]]]],[11,"drive","","",70,N],[11,"len","","",70,[[["self"]],["usize"]]],[11,"with_producer","","",70,N],[11,"drive_unindexed","","",70,N],[11,"opt_len","","",70,[[["self"]],["option",["usize"]]]],[11,"drive","","",70,N],[11,"len","","",70,[[["self"]],["usize"]]],[11,"with_producer","","",70,N],[11,"drive_unindexed","","",70,N],[11,"opt_len","","",70,[[["self"]],["option",["usize"]]]],[11,"drive","","",70,N],[11,"len","","",70,[[["self"]],["usize"]]],[11,"with_producer","","",70,N],[11,"drive_unindexed","","",70,N],[11,"opt_len","","",70,[[["self"]],["option",["usize"]]]],[11,"drive","","",70,N],[11,"len","","",70,[[["self"]],["usize"]]],[11,"with_producer","","",70,N],[11,"drive_unindexed","","",70,N],[11,"opt_len","","",70,[[["self"]],["option",["usize"]]]],[11,"drive","","",70,N],[11,"len","","",70,[[["self"]],["usize"]]],[11,"with_producer","","",70,N],[11,"drive_unindexed","","",70,N],[11,"opt_len","","",70,[[["self"]],["option",["usize"]]]],[11,"drive","","",70,N],[11,"len","","",70,[[["self"]],["usize"]]],[11,"with_producer","","",70,N],[11,"drive_unindexed","","",70,N],[11,"opt_len","","",70,[[["self"]],["option",["usize"]]]],[11,"drive","","",70,N],[11,"len","","",70,[[["self"]],["usize"]]],[11,"with_producer","","",70,N],[11,"drive_unindexed","","",70,N],[11,"opt_len","","",70,[[["self"]],["option",["usize"]]]],[11,"drive","","",70,N],[11,"len","","",70,[[["self"]],["usize"]]],[11,"with_producer","","",70,N],[11,"drive_unindexed","","",70,N],[11,"opt_len","","",70,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",70,N],[11,"opt_len","","",70,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",70,N],[11,"opt_len","","",70,[[["self"]],["option",["usize"]]]],[11,"drive_unindexed","","",70,N],[11,"opt_len","","",70,[[["self"]],["option",["usize"]]]],[0,"result","rayon","Parallel iterator types for [results][std::result]",N,N],[3,"IntoIter","rayon::result","Parallel iterator over a result",N,N],[3,"Iter","","Parallel iterator over an immutable reference to a result",N,N],[3,"IterMut","","Parallel iterator over a mutable reference to a result",N,N],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"clone","","",71,[[["self"]],["intoiter"]]],[11,"drive_unindexed","","",71,N],[11,"opt_len","","",71,[[["self"]],["option",["usize"]]]],[11,"drive","","",71,N],[11,"len","","",71,[[["self"]],["usize"]]],[11,"with_producer","","",71,N],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"clone","","",72,[[["self"]],["self"]]],[11,"drive_unindexed","","",72,N],[11,"opt_len","","",72,[[["self"]],["option",["usize"]]]],[11,"drive","","",72,N],[11,"len","","",72,[[["self"]],["usize"]]],[11,"with_producer","","",72,N],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",73,N],[11,"opt_len","","",73,[[["self"]],["option",["usize"]]]],[11,"drive","","",73,N],[11,"len","","",73,[[["self"]],["usize"]]],[11,"with_producer","","",73,N],[0,"slice","rayon","Parallel iterator types for [slices][std::slice]",N,N],[3,"Iter","rayon::slice","Parallel iterator over immutable items in a slice",N,N],[3,"Chunks","","Parallel iterator over immutable non-overlapping chunks of a slice",N,N],[3,"Windows","","Parallel iterator over immutable overlapping windows of a slice",N,N],[3,"IterMut","","Parallel iterator over mutable items in a slice",N,N],[3,"ChunksMut","","Parallel iterator over mutable non-overlapping chunks of a slice",N,N],[3,"Split","","Parallel iterator over slices separated by a predicate",N,N],[3,"SplitMut","","Parallel iterator over mutable slices separated by a predicate",N,N],[8,"ParallelSlice","","Parallel extensions for slices.",N,N],[10,"as_parallel_slice","","Returns a plain slice, which is used to implement the rest of the parallel methods.",74,N],[11,"par_split","","Returns a parallel iterator over subslices separated by elements that match the separator.",74,[[["self"],["p"]],["split"]]],[11,"par_windows","","Returns a parallel iterator over all contiguous windows of length `window_size`. The windows overlap.",74,[[["self"],["usize"]],["windows"]]],[11,"par_chunks","","Returns a parallel iterator over at most `chunk_size` elements of `self` at a time. The chunks do not overlap.",74,[[["self"],["usize"]],["chunks"]]],[8,"ParallelSliceMut","","Parallel extensions for mutable slices.",N,N],[10,"as_parallel_slice_mut","","Returns a plain mutable slice, which is used to implement the rest of the parallel methods.",75,N],[11,"par_split_mut","","Returns a parallel iterator over mutable subslices separated by elements that match the separator.",75,[[["self"],["p"]],["splitmut"]]],[11,"par_chunks_mut","","Returns a parallel iterator over at most `chunk_size` elements of `self` at a time. The chunks are mutable and do not overlap.",75,[[["self"],["usize"]],["chunksmut"]]],[11,"par_sort","","Sorts the slice in parallel.",75,[[["self"]]]],[11,"par_sort_by","","Sorts the slice in parallel with a comparator function.",75,[[["self"],["f"]]]],[11,"par_sort_by_key","","Sorts the slice in parallel with a key extraction function.",75,[[["self"],["f"]]]],[11,"par_sort_unstable","","Sorts the slice in parallel, but may not preserve the order of equal elements.",75,[[["self"]]]],[11,"par_sort_unstable_by","","Sorts the slice in parallel with a comparator function, but may not preserve the order of equal elements.",75,[[["self"],["f"]]]],[11,"par_sort_unstable_by_key","","Sorts the slice in parallel with a key extraction function, but may not preserve the order of equal elements.",75,[[["self"],["f"]]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"clone","","",76,[[["self"]],["self"]]],[11,"drive_unindexed","","",76,N],[11,"opt_len","","",76,[[["self"]],["option",["usize"]]]],[11,"drive","","",76,N],[11,"len","","",76,[[["self"]],["usize"]]],[11,"with_producer","","",76,N],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"clone","","",77,[[["self"]],["self"]]],[11,"drive_unindexed","","",77,N],[11,"opt_len","","",77,[[["self"]],["option",["usize"]]]],[11,"drive","","",77,N],[11,"len","","",77,[[["self"]],["usize"]]],[11,"with_producer","","",77,N],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"clone","","",78,[[["self"]],["self"]]],[11,"drive_unindexed","","",78,N],[11,"opt_len","","",78,[[["self"]],["option",["usize"]]]],[11,"drive","","",78,N],[11,"len","","",78,[[["self"]],["usize"]]],[11,"with_producer","","",78,N],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",79,N],[11,"opt_len","","",79,[[["self"]],["option",["usize"]]]],[11,"drive","","",79,N],[11,"len","","",79,[[["self"]],["usize"]]],[11,"with_producer","","",79,N],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",80,N],[11,"opt_len","","",80,[[["self"]],["option",["usize"]]]],[11,"drive","","",80,N],[11,"len","","",80,[[["self"]],["usize"]]],[11,"with_producer","","",80,N],[11,"clone","","",81,[[["self"]],["self"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",81,N],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"drive_unindexed","","",82,N],[0,"str","rayon","Parallel iterator types for [strings][std::str]",N,N],[3,"Chars","rayon::str","Parallel iterator over the characters of a string",N,N],[3,"CharIndices","","Parallel iterator over the characters of a string, with their positions",N,N],[3,"Bytes","","Parallel iterator over the bytes of a string",N,N],[3,"EncodeUtf16","","Parallel iterator over a string encoded as UTF-16",N,N],[3,"Split","","Parallel iterator over substrings separated by a pattern",N,N],[3,"SplitTerminator","","Parallel iterator over substrings separated by a terminator pattern",N,N],[3,"Lines","","Parallel iterator over lines in a string",N,N],[3,"SplitWhitespace","","Parallel iterator over substrings separated by whitespace",N,N],[3,"Matches","","Parallel iterator over substrings that match a pattern",N,N],[3,"MatchIndices","","Parallel iterator over substrings that match a pattern, with their positions",N,N],[8,"ParallelString","","Parallel extensions for strings.",N,N],[10,"as_parallel_string","","Returns a plain string slice, which is used to implement the rest of the parallel methods.",83,[[["self"]],["str"]]],[11,"par_chars","","Returns a parallel iterator over the characters of a string.",83,[[["self"]],["chars"]]],[11,"par_char_indices","","Returns a parallel iterator over the characters of a string, with their positions.",83,[[["self"]],["charindices"]]],[11,"par_bytes","","Returns a parallel iterator over the bytes of a string.",83,[[["self"]],["bytes"]]],[11,"par_encode_utf16","","Returns a parallel iterator over a string encoded as UTF-16.",83,[[["self"]],["encodeutf16"]]],[11,"par_split","","Returns a parallel iterator over substrings separated by a given character or predicate, similar to `str::split`.",83,[[["self"],["p"]],["split"]]],[11,"par_split_terminator","","Returns a parallel iterator over substrings terminated by a given character or predicate, similar to `str::split_terminator`. It's equivalent to `par_split`, except it doesn't produce an empty substring after a trailing terminator.",83,[[["self"],["p"]],["splitterminator"]]],[11,"par_lines","","Returns a parallel iterator over the lines of a string, ending with an optional carriage return and with a newline (`\\r\\n` or just `\\n`). The final line ending is optional, and line endings are not included in the output strings.",83,[[["self"]],["lines"]]],[11,"par_split_whitespace","","Returns a parallel iterator over the sub-slices of a string that are separated by any amount of whitespace.",83,[[["self"]],["splitwhitespace"]]],[11,"par_matches","","Returns a parallel iterator over substrings that match a given character or predicate, similar to `str::matches`.",83,[[["self"],["p"]],["matches"]]],[11,"par_match_indices","","Returns a parallel iterator over substrings that match a given character or predicate, with their positions, similar to `str::match_indices`.",83,[[["self"],["p"]],["matchindices"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"clone","","",84,[[["self"]],["chars"]]],[11,"drive_unindexed","","",84,N],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"clone","","",85,[[["self"]],["charindices"]]],[11,"drive_unindexed","","",85,N],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"clone","","",86,[[["self"]],["bytes"]]],[11,"drive_unindexed","","",86,N],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"clone","","",87,[[["self"]],["encodeutf16"]]],[11,"drive_unindexed","","",87,N],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"clone","","",88,[[["self"]],["split"]]],[11,"drive_unindexed","","",88,N],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"clone","","",89,[[["self"]],["splitterminator"]]],[11,"drive_unindexed","","",89,N],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"clone","","",90,[[["self"]],["lines"]]],[11,"drive_unindexed","","",90,N],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"clone","","",91,[[["self"]],["splitwhitespace"]]],[11,"drive_unindexed","","",91,N],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"clone","","",92,[[["self"]],["matches"]]],[11,"drive_unindexed","","",92,N],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"clone","","",93,[[["self"]],["matchindices"]]],[11,"drive_unindexed","","",93,N],[0,"vec","rayon","Parallel iterator types for [vectors][std::vec] (`Vec<T>`)",N,N],[3,"IntoIter","rayon::vec","Parallel iterator that moves out of a vector.",N,N],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"clone","","",94,[[["self"]],["intoiter"]]],[11,"drive_unindexed","","",94,N],[11,"opt_len","","",94,[[["self"]],["option",["usize"]]]],[11,"drive","","",94,N],[11,"len","","",94,[[["self"]],["usize"]]],[11,"with_producer","","",94,N],[11,"drive_unindexed","rayon::iter","",18,N],[11,"opt_len","","",18,[[["self"]],["option",["usize"]]]],[11,"drive","","",18,N],[11,"len","","",18,[[["self"]],["usize"]]],[11,"with_producer","","",18,N],[11,"par_extend","","",18,[[["self"],["i"]]]],[11,"new","rayon","Deprecated in favor of `ThreadPoolBuilder::build`.",95,[[["configuration"]],["result",["threadpool","box"]]]],[11,"install","","Executes `op` within the threadpool. Any attempts to use `join`, `scope`, or parallel iterators will then operate within that threadpool.",95,[[["self"],["op"]],["r"]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread pool.",95,[[["self"]],["usize"]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool, returns the index of that thread; if not called from a Rayon thread, or called from a Rayon thread that belongs to a different thread-pool, returns `None`.",95,[[["self"]],["option",["usize"]]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has \"local tasks\" pending. This can be useful as part of a heuristic for deciding whether to spawn a new task or execute code on the current thread, particularly in breadth-first schedulers. However, keep in mind that this is an inherently racy check, as other worker threads may be actively \"stealing\" tasks from our local deque.",95,[[["self"]],["option",["bool"]]]],[11,"join","","Execute `oper_a` and `oper_b` in the thread-pool and return the results. Equivalent to `self.install(|| join(oper_a, oper_b))`.",95,N],[11,"scope","","Creates a scope that executes within this thread-pool. Equivalent to `self.install(|| scope(...))`.",95,[[["self"],["op"]],["r"]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This task will run in the implicit, global scope, which means that it may outlast the current stack frame -- therefore, it cannot capture any references onto the stack (you will likely need a `move` closure).",95,N],[11,"fmt","","",96,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",97,[[["self"]],["str"]]],[11,"drop","","",95,N],[11,"default","","",98,[[],["threadpoolbuilder"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result",["error"]]]],[11,"from","rayon::iter","",18,[[["result"]],["either"]]],[11,"extend","","",18,N],[11,"as_ref","","",18,[[["self"]],["target"]]],[11,"deref","","",18,N],[11,"hash","","",18,N],[11,"as_mut","","",18,[[["self"]],["target"]]],[11,"deref_mut","","",18,N],[11,"cmp","","",18,[[["self"],["either"]],["ordering"]]],[11,"partial_cmp","","",18,[[["self"],["either"]],["option",["ordering"]]]],[11,"lt","","",18,[[["self"],["either"]],["bool"]]],[11,"le","","",18,[[["self"],["either"]],["bool"]]],[11,"gt","","",18,[[["self"],["either"]],["bool"]]],[11,"ge","","",18,[[["self"],["either"]],["bool"]]],[11,"clone","","",18,[[["self"]],["either"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result",["error"]]]],[11,"next_back","","",18,[[["self"]],["option"]]],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,N],[11,"fold","","",18,[[["self"],["acc"],["g"]],["acc"]]],[11,"count","","",18,[[["self"]],["usize"]]],[11,"last","","",18,[[["self"]],["option"]]],[11,"nth","","",18,[[["self"],["usize"]],["option"]]],[11,"collect","","",18,[[["self"]],["b"]]],[11,"all","","",18,[[["self"],["f"]],["bool"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",18,[[["self"],["either"]],["bool"]]],[11,"ne","","",18,[[["self"],["either"]],["bool"]]],[11,"into","","",18,[[["self"]],["result"]]],[11,"new","rayon","Creates and returns a valid rayon thread pool builder, but does not initialize it.",98,[[],["threadpoolbuilder"]]],[11,"build","","Create a new `ThreadPool` initialized using this configuration.",98,[[["self"]],["result",["threadpool","threadpoolbuilderror"]]]],[11,"build_global","","Initializes the global thread pool. This initialization is optional.  If you do not call this function, the thread pool will be automatically initialized with the default configuration. Calling `build_global` is not recommended, except in two scenarios:",98,[[["self"]],["result",["threadpoolbuilderror"]]]],[11,"thread_name","","Set a closure which takes a thread index and returns the thread's name.",98,[[["self"],["f"]],["threadpoolbuilder"]]],[11,"num_threads","","Set the number of threads to be used in the rayon threadpool.",98,[[["self"],["usize"]],["threadpoolbuilder"]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to propagate it to someplace sensible, to try and reflect the semantics of sequential execution. But in some cases, particularly with the `spawn()` APIs, there is no obvious place where we should propagate the panic to. In that case, this panic handler is invoked.",98,[[["self"],["h"]],["threadpoolbuilder"]]],[11,"stack_size","","Set the stack size of the worker threads",98,[[["self"],["usize"]],["threadpoolbuilder"]]],[11,"breadth_first","","Suggest to worker threads that they execute spawned jobs in a \"breadth-first\" fashion. Typically, when a worker thread is idle or blocked, it will attempt to execute the job from the top of its local deque of work (i.e., the job most recently spawned). If this flag is set to true, however, workers will prefer to execute in a breadth-first fashion -- that is, they will search for jobs at the bottom of their local deque. (At present, workers always steal from the bottom of other worker's deques, regardless of the setting of this flag.)",98,[[["self"]],["threadpoolbuilder"]]],[11,"start_handler","","Set a callback to be invoked on thread start.",98,[[["self"],["h"]],["threadpoolbuilder"]]],[11,"exit_handler","","Set a callback to be invoked on thread exit.",98,[[["self"],["h"]],["threadpoolbuilder"]]],[11,"migrated","","Returns `true` if the closure was called from a different thread than it was provided from.",99,[[["self"]],["bool"]]],[11,"spawn","","Spawns a job into the fork-join scope `self`. This job will execute sometime before the fork-join scope completes.  The job is specified as a closure, and this closure receives its own reference to the scope `self` as argument. This can be used to inject new jobs into `self`.",96,N],[11,"is_left","rayon::iter","Return true if the value is the `Left` variant.",18,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",18,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",18,[[["self"]],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",18,[[["self"]],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",18,[[["self"]],["either"]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",18,[[["self"]],["either"]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",18,[[["self"]],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant if it is present rewrapping the result in `Left`.",18,[[["self"],["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant if it is present rewrapping the result in `Right`.",18,[[["self"],["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying their result. If the value is `Left(L)` then the first function `f` is applied; if it is `Right(R)` then the second function `g` is applied.",18,[[["self"],["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of the functions ends up being called.",18,[[["self"],["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant if it is present.",18,[[["self"],["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant if it is present.",18,[[["self"],["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",18,[[["self"]],["either"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",18,N],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",18,N],[11,"into_inner","","Extract the value of an either over two equivalent types.",18,[[["self"]],["t"]]]],"paths":[[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[4,"Either"],[3,"IterBridge"],[3,"Chain"],[3,"Chunks"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"Flatten"],[8,"ProducerCallback"],[8,"Producer"],[8,"Consumer"],[8,"Folder"],[8,"Reducer"],[8,"UnindexedConsumer"],[8,"UnindexedProducer"],[3,"Fold"],[3,"FoldWith"],[3,"TryFold"],[3,"TryFoldWith"],[3,"Skip"],[3,"Split"],[3,"Take"],[3,"Map"],[3,"MapWith"],[3,"Zip"],[3,"ZipEq"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Intersperse"],[3,"Update"],[3,"Rev"],[3,"MinLen"],[3,"MaxLen"],[3,"Cloned"],[3,"Inspect"],[3,"WhileSome"],[3,"Repeat"],[3,"RepeatN"],[3,"Empty"],[3,"Once"],[8,"ParallelBridge"],[8,"IntoParallelIterator"],[8,"IntoParallelRefIterator"],[8,"IntoParallelRefMutIterator"],[8,"ParallelIterator"],[8,"IndexedParallelIterator"],[8,"FromParallelIterator"],[8,"ParallelExtend"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[8,"ParallelSlice"],[8,"ParallelSliceMut"],[3,"Iter"],[3,"Chunks"],[3,"Windows"],[3,"IterMut"],[3,"ChunksMut"],[3,"Split"],[3,"SplitMut"],[8,"ParallelString"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"EncodeUtf16"],[3,"Split"],[3,"SplitTerminator"],[3,"Lines"],[3,"SplitWhitespace"],[3,"Matches"],[3,"MatchIndices"],[3,"IntoIter"],[3,"ThreadPool"],[3,"Scope"],[3,"ThreadPoolBuildError"],[3,"ThreadPoolBuilder"],[3,"FnContext"]]};
searchIndex["rayon_core"]={"doc":"Under construction","items":[[3,"ThreadPool","rayon_core","Represents a user created [thread-pool].",N,N],[3,"Scope","","Represents a fork-join scope which can be used to spawn any number of tasks. See [`scope()`] for more information.",N,N],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",N,N],[3,"ThreadPoolBuilder","","Used to create a new [`ThreadPool`] or to configure the global rayon thread pool. ## Creating a ThreadPool The following creates a thread pool with 22 threads.",N,N],[3,"Configuration","","Contains the rayon thread pool configuration. Use [`ThreadPoolBuilder`] instead.",N,N],[3,"FnContext","","Provides the calling context to a closure called by `join_context`.",N,N],[5,"current_thread_index","","If called from a Rayon worker thread, returns the index of that thread within its current pool; if not called from a Rayon thread, returns `None`.",N,[[],["option",["usize"]]]],[5,"current_thread_has_pending_tasks","","If called from a Rayon worker thread, indicates whether that thread's local deque still has pending tasks. Otherwise, returns `None`. For more information, see [the `ThreadPool::current_thread_has_pending_tasks()` method][m].",N,[[],["option",["bool"]]]],[5,"join","","Takes two closures and potentially runs them in parallel. It returns a pair of the results from those closures.",N,N],[5,"join_context","","Identical to `join`, except that the closures have a parameter that provides context for the way the closure has been called, especially indicating whether they're executing on a different thread than where `join_context` was called.  This will occur if the second job is stolen by a different thread, or if `join_context` was called from outside the thread pool to begin with.",N,N],[5,"scope","","Create a \"fork-join\" scope `s` and invokes the closure with a reference to `s`. This closure can then spawn asynchronous tasks into `s`. Those tasks may run asynchronously with respect to the closure; they may themselves spawn additional tasks into `s`. When the closure returns, it will block until all tasks that have been spawned into `s` complete.",N,[[["op"]],["r"]]],[5,"spawn","","Fires off a task into the Rayon threadpool in the \"static\" or \"global\" scope.  Just like a standard thread, this task is not tied to the current stack frame, and hence it cannot hold any references other than those with `'static` lifetime. If you want to spawn a task that references stack data, use [the `scope()` function][scope] to create a scope.",N,[[["f"]]]],[5,"current_num_threads","","Returns the number of threads in the current registry. If this code is executing within a Rayon thread-pool, then this will be the number of threads for the thread-pool of the current thread. Otherwise, it will be the number of threads for the global thread-pool.",N,[[],["usize"]]],[5,"initialize","","Deprecated in favor of `ThreadPoolBuilder::build_global`.",N,[[["configuration"]],["result",["box"]]]],[11,"spawn","","Spawns a job into the fork-join scope `self`. This job will execute sometime before the fork-join scope completes.  The job is specified as a closure, and this closure receives its own reference to the scope `self` as argument. This can be used to inject new jobs into `self`.",0,[[["self"],["body"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"new","","Deprecated in favor of `ThreadPoolBuilder::build`.",1,[[["configuration"]],["result",["threadpool","box"]]]],[11,"install","","Executes `op` within the threadpool. Any attempts to use `join`, `scope`, or parallel iterators will then operate within that threadpool.",1,[[["self"],["op"]],["r"]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread pool.",1,[[["self"]],["usize"]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool, returns the index of that thread; if not called from a Rayon thread, or called from a Rayon thread that belongs to a different thread-pool, returns `None`.",1,[[["self"]],["option",["usize"]]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has \"local tasks\" pending. This can be useful as part of a heuristic for deciding whether to spawn a new task or execute code on the current thread, particularly in breadth-first schedulers. However, keep in mind that this is an inherently racy check, as other worker threads may be actively \"stealing\" tasks from our local deque.",1,[[["self"]],["option",["bool"]]]],[11,"join","","Execute `oper_a` and `oper_b` in the thread-pool and return the results. Equivalent to `self.install(|| join(oper_a, oper_b))`.",1,N],[11,"scope","","Creates a scope that executes within this thread-pool. Equivalent to `self.install(|| scope(...))`.",1,[[["self"],["op"]],["r"]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This task will run in the implicit, global scope, which means that it may outlast the current stack frame -- therefore, it cannot capture any references onto the stack (you will likely need a `move` closure).",1,[[["self"],["op"]]]],[11,"drop","","",1,[[["self"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"default","","",3,[[],["threadpoolbuilder"]]],[11,"default","","",4,[[],["configuration"]]],[11,"new","","Creates and returns a valid rayon thread pool builder, but does not initialize it.",3,[[],["threadpoolbuilder"]]],[11,"build","","Create a new `ThreadPool` initialized using this configuration.",3,[[["self"]],["result",["threadpool","threadpoolbuilderror"]]]],[11,"build_global","","Initializes the global thread pool. This initialization is optional.  If you do not call this function, the thread pool will be automatically initialized with the default configuration. Calling `build_global` is not recommended, except in two scenarios:",3,[[["self"]],["result",["threadpoolbuilderror"]]]],[11,"thread_name","","Set a closure which takes a thread index and returns the thread's name.",3,[[["self"],["f"]],["self"]]],[11,"num_threads","","Set the number of threads to be used in the rayon threadpool.",3,[[["self"],["usize"]],["threadpoolbuilder"]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to propagate it to someplace sensible, to try and reflect the semantics of sequential execution. But in some cases, particularly with the `spawn()` APIs, there is no obvious place where we should propagate the panic to. In that case, this panic handler is invoked.",3,[[["self"],["h"]],["threadpoolbuilder"]]],[11,"stack_size","","Set the stack size of the worker threads",3,[[["self"],["usize"]],["self"]]],[11,"breadth_first","","Suggest to worker threads that they execute spawned jobs in a \"breadth-first\" fashion. Typically, when a worker thread is idle or blocked, it will attempt to execute the job from the top of its local deque of work (i.e., the job most recently spawned). If this flag is set to true, however, workers will prefer to execute in a breadth-first fashion -- that is, they will search for jobs at the bottom of their local deque. (At present, workers always steal from the bottom of other worker's deques, regardless of the setting of this flag.)",3,[[["self"]],["self"]]],[11,"start_handler","","Set a callback to be invoked on thread start.",3,[[["self"],["h"]],["threadpoolbuilder"]]],[11,"exit_handler","","Set a callback to be invoked on thread exit.",3,[[["self"],["h"]],["threadpoolbuilder"]]],[11,"new","","Creates and return a valid rayon thread pool configuration, but does not initialize it.",4,[[],["configuration"]]],[11,"build","","Deprecated in favor of `ThreadPoolBuilder::build`.",4,[[["self"]],["result",["threadpool","box"]]]],[11,"thread_name","","Deprecated in favor of `ThreadPoolBuilder::thread_name`.",4,[[["self"],["f"]],["self"]]],[11,"num_threads","","Deprecated in favor of `ThreadPoolBuilder::num_threads`.",4,[[["self"],["usize"]],["configuration"]]],[11,"panic_handler","","Deprecated in favor of `ThreadPoolBuilder::panic_handler`.",4,[[["self"],["h"]],["configuration"]]],[11,"stack_size","","Deprecated in favor of `ThreadPoolBuilder::stack_size`.",4,[[["self"],["usize"]],["self"]]],[11,"breadth_first","","Deprecated in favor of `ThreadPoolBuilder::breadth_first`.",4,[[["self"]],["self"]]],[11,"start_handler","","Deprecated in favor of `ThreadPoolBuilder::start_handler`.",4,[[["self"],["h"]],["configuration"]]],[11,"exit_handler","","Deprecated in favor of `ThreadPoolBuilder::exit_handler`.",4,[[["self"],["h"]],["configuration"]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"migrated","","Returns `true` if the closure was called from a different thread than it was provided from.",5,[[["self"]],["bool"]]]],"paths":[[3,"Scope"],[3,"ThreadPool"],[3,"ThreadPoolBuildError"],[3,"ThreadPoolBuilder"],[3,"Configuration"],[3,"FnContext"]]};
searchIndex["read_color"]={"doc":"A simple library for reading hex colors.","items":[[5,"char_to_hex","read_color","Converts a character into a u8 value.",N,[[["char"]],["option",["u8"]]]],[5,"hex","","Reads a hex value from an iterator of characters.",N,[[["chars"]],["option",["u8"]]]],[5,"hex_pair","","Reads a pair of hex values, joining them in value range 0-255.",N,[[["chars"]],["option",["u8"]]]],[5,"rgb","","Reads RGB colors from iterator of characters.",N,[[["chars"]],["option"]]],[5,"rgba","","Reads RGBA colors from iterator of characters.",N,[[["chars"]],["option"]]],[5,"rgb_maybe_a","","Reads RGB with optional alpha from iterator of characters.",N,[[["chars"]],["option"]]]],"paths":[]};
searchIndex["rusttype"]={"doc":"RustType is a pure Rust alternative to libraries like FreeType.","items":[[3,"Rect","rusttype","A rectangle, with top-left corner at `min`, and bottom-right corner at `max`.",N,N],[12,"min","","",0,N],[12,"max","","",0,N],[3,"Point","","A point in 2-dimensional space, with each dimension of type `N`.",N,N],[12,"x","","",1,N],[12,"y","","",1,N],[3,"Vector","","A vector in 2-dimensional space, with each dimension of type `N`.",N,N],[12,"x","","",2,N],[12,"y","","",2,N],[3,"Line","","A straight line between two points, `p[0]` and `p[1]`",N,N],[12,"p","","",3,N],[3,"Curve","","A quadratic Bezier curve, starting at `p[0]`, ending at `p[2]`, with control point `p[1]`.",N,N],[12,"p","","",4,N],[3,"FontCollection","","A collection of fonts read straight from a font file's data. The data in the collection is not validated. This structure may or may not own the font data.",N,N],[3,"Font","","A single font. This may or may not own the font data.",N,N],[3,"Codepoint","","Represents a Unicode code point.",N,N],[12,"0","","",5,N],[3,"GlyphId","","Represents a glyph identifier for a particular font. This identifier will not necessarily correspond to the correct glyph in a font other than the one that it was obtained from.",N,N],[12,"0","","",6,N],[3,"Glyph","","A single glyph of a font. this may either be a thin wrapper referring to the font and the glyph id, or it may be a standalone glyph that owns the data needed by it.",N,N],[3,"SharedGlyphData","","",N,N],[12,"id","","",7,N],[12,"extents","","",7,N],[12,"scale_for_1_pixel","","",7,N],[12,"unit_h_metrics","","",7,N],[12,"shape","","",7,N],[3,"HMetrics","","The \"horizontal metrics\" of a glyph. This is useful for calculating the horizontal offset of a glyph from the previous one in a string when laying a string out horizontally.",N,N],[12,"advance_width","","The horizontal offset that the origin of the next glyph should be from the origin of this glyph.",8,N],[12,"left_side_bearing","","The horizontal offset between the origin of this glyph and the leftmost edge/point of the glyph.",8,N],[3,"VMetrics","","The \"vertical metrics\" of a font at a particular scale. This is useful for calculating the amount of vertical space to give a line of text, and for computing the vertical offset between successive lines.",N,N],[12,"ascent","","The highest point that any glyph in the font extends to above the baseline. Typically positive.",9,N],[12,"descent","","The lowest point that any glyph in the font extends to below the baseline. Typically negative.",9,N],[12,"line_gap","","The gap to leave between the descent of one line and the ascent of the next. This is of course only a guideline given by the font's designers.",9,N],[3,"ScaledGlyph","","A glyph augmented with scaling information. You can query such a glyph for information that depends on the scale of the glyph.",N,N],[3,"PositionedGlyph","","A glyph augmented with positioning and scaling information. You can query such a glyph for information that depends on the scale and position of the glyph.",N,N],[3,"Scale","","Defines the size of a rendered face of a font, in pixels, horizontally and vertically. A vertical scale of `y` pixels means that the distance betwen the ascent and descent lines (see `VMetrics`) of the face will be `y` pixels. If `x` and `y` are equal the scaling is uniform. Non-uniform scaling by a factor f in the horizontal direction is achieved by setting `x` equal to f times `y`.",N,N],[12,"x","","Horizontal scale, in pixels.",10,N],[12,"y","","Vertical scale, in pixels.",10,N],[3,"IntoFontsIter","","",N,N],[3,"GlyphIter","","",N,N],[3,"LayoutIter","","",N,N],[3,"Contour","","A closed loop consisting of a sequence of `Segment`s.",N,N],[12,"segments","","",11,N],[4,"SharedBytes","","`SharedBytes` handles the lifetime of font data used in RustType. The data is either a shared reference to externally owned data, or managed by reference counting. `SharedBytes` can be conveniently used with `From` and `Into`, and dereferences to the contained bytes.",N,N],[13,"ByRef","","",12,N],[13,"ByArc","","",12,N],[4,"CodepointOrGlyphId","","Represents either a Unicode code point, or a glyph identifier for a font.",N,N],[13,"Codepoint","","",13,N],[13,"GlyphId","","",13,N],[4,"Segment","","Part of a `Contour`, either a `Line` or a `Curve`.",N,N],[13,"Line","","",14,N],[13,"Curve","","",14,N],[5,"point","","A convenience function for generating `Point`s.",N,[[["n"],["n"]],["point"]]],[5,"vector","","A convenience function for generating `Vector`s.",N,[[["n"],["n"]],["vector"]]],[11,"clone","","",1,[[["self"]],["point"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"partial_cmp","","",1,[[["self"],["point"]],["option",["ordering"]]]],[11,"lt","","",1,[[["self"],["point"]],["bool"]]],[11,"le","","",1,[[["self"],["point"]],["bool"]]],[11,"gt","","",1,[[["self"],["point"]],["bool"]]],[11,"ge","","",1,[[["self"],["point"]],["bool"]]],[11,"cmp","","",1,[[["self"],["point"]],["ordering"]]],[11,"eq","","",1,[[["self"],["point"]],["bool"]]],[11,"ne","","",1,[[["self"],["point"]],["bool"]]],[11,"hash","","",1,N],[11,"clone","","",2,[[["self"]],["vector"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"partial_cmp","","",2,[[["self"],["vector"]],["option",["ordering"]]]],[11,"lt","","",2,[[["self"],["vector"]],["bool"]]],[11,"le","","",2,[[["self"],["vector"]],["bool"]]],[11,"gt","","",2,[[["self"],["vector"]],["bool"]]],[11,"ge","","",2,[[["self"],["vector"]],["bool"]]],[11,"cmp","","",2,[[["self"],["vector"]],["ordering"]]],[11,"eq","","",2,[[["self"],["vector"]],["bool"]]],[11,"ne","","",2,[[["self"],["vector"]],["bool"]]],[11,"hash","","",2,N],[11,"sub","","",1,[[["self"],["point"]],["vector"]]],[11,"add","","",2,[[["self"],["vector"]],["vector"]]],[11,"sub","","",2,[[["self"],["vector"]],["vector"]]],[11,"mul","","",2,[[["self"],["f32"]],["vector",["f32"]]]],[11,"mul","","",2,[[["self"],["f64"]],["vector",["f64"]]]],[11,"div","","",2,[[["self"],["f32"]],["vector",["f32"]]]],[11,"div","","",2,[[["self"],["f64"]],["vector",["f64"]]]],[11,"add","","",1,[[["self"],["vector"]],["point"]]],[11,"sub","","",1,[[["self"],["vector"]],["point"]]],[11,"add","","",2,[[["self"],["point"]],["point"]]],[11,"clone","","",3,[[["self"]],["line"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"eq","","",3,[[["self"],["line"]],["bool"]]],[11,"ne","","",3,[[["self"],["line"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["line"]],["option",["ordering"]]]],[11,"lt","","",3,[[["self"],["line"]],["bool"]]],[11,"le","","",3,[[["self"],["line"]],["bool"]]],[11,"gt","","",3,[[["self"],["line"]],["bool"]]],[11,"ge","","",3,[[["self"],["line"]],["bool"]]],[11,"clone","","",4,[[["self"]],["curve"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"eq","","",4,[[["self"],["curve"]],["bool"]]],[11,"ne","","",4,[[["self"],["curve"]],["bool"]]],[11,"partial_cmp","","",4,[[["self"],["curve"]],["option",["ordering"]]]],[11,"lt","","",4,[[["self"],["curve"]],["bool"]]],[11,"le","","",4,[[["self"],["curve"]],["bool"]]],[11,"gt","","",4,[[["self"],["curve"]],["bool"]]],[11,"ge","","",4,[[["self"],["curve"]],["bool"]]],[11,"clone","","",0,[[["self"]],["rect"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["rect"]],["bool"]]],[11,"ne","","",0,[[["self"],["rect"]],["bool"]]],[11,"hash","","",0,N],[11,"partial_cmp","","",0,[[["self"],["rect"]],["option",["ordering"]]]],[11,"lt","","",0,[[["self"],["rect"]],["bool"]]],[11,"le","","",0,[[["self"],["rect"]],["bool"]]],[11,"gt","","",0,[[["self"],["rect"]],["bool"]]],[11,"ge","","",0,[[["self"],["rect"]],["bool"]]],[11,"cmp","","",0,[[["self"],["rect"]],["ordering"]]],[11,"width","","",0,[[["self"]],["n"]]],[11,"height","","",0,[[["self"]],["n"]]],[11,"clone","","",15,[[["self"]],["fontcollection"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"clone","","",16,[[["self"]],["font"]]],[11,"clone","","",12,[[["self"]],["sharedbytes"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"deref","","",12,N],[11,"from","","",12,N],[11,"from","","",12,[[["arc"]],["sharedbytes"]]],[11,"from","","",12,[[["box"]],["sharedbytes"]]],[11,"from","","",12,[[["vec",["u8"]]],["sharedbytes"]]],[11,"clone","","",5,[[["self"]],["codepoint"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"eq","","",5,[[["self"],["codepoint"]],["bool"]]],[11,"ne","","",5,[[["self"],["codepoint"]],["bool"]]],[11,"hash","","",5,N],[11,"partial_cmp","","",5,[[["self"],["codepoint"]],["option",["ordering"]]]],[11,"lt","","",5,[[["self"],["codepoint"]],["bool"]]],[11,"le","","",5,[[["self"],["codepoint"]],["bool"]]],[11,"gt","","",5,[[["self"],["codepoint"]],["bool"]]],[11,"ge","","",5,[[["self"],["codepoint"]],["bool"]]],[11,"cmp","","",5,[[["self"],["codepoint"]],["ordering"]]],[11,"clone","","",13,[[["self"]],["codepointorglyphid"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"eq","","",13,[[["self"],["codepointorglyphid"]],["bool"]]],[11,"ne","","",13,[[["self"],["codepointorglyphid"]],["bool"]]],[11,"hash","","",13,N],[11,"partial_cmp","","",13,[[["self"],["codepointorglyphid"]],["option",["ordering"]]]],[11,"lt","","",13,[[["self"],["codepointorglyphid"]],["bool"]]],[11,"le","","",13,[[["self"],["codepointorglyphid"]],["bool"]]],[11,"gt","","",13,[[["self"],["codepointorglyphid"]],["bool"]]],[11,"ge","","",13,[[["self"],["codepointorglyphid"]],["bool"]]],[11,"cmp","","",13,[[["self"],["codepointorglyphid"]],["ordering"]]],[11,"clone","","",6,[[["self"]],["glyphid"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"eq","","",6,[[["self"],["glyphid"]],["bool"]]],[11,"ne","","",6,[[["self"],["glyphid"]],["bool"]]],[11,"hash","","",6,N],[11,"partial_cmp","","",6,[[["self"],["glyphid"]],["option",["ordering"]]]],[11,"lt","","",6,[[["self"],["glyphid"]],["bool"]]],[11,"le","","",6,[[["self"],["glyphid"]],["bool"]]],[11,"gt","","",6,[[["self"],["glyphid"]],["bool"]]],[11,"ge","","",6,[[["self"],["glyphid"]],["bool"]]],[11,"cmp","","",6,[[["self"],["glyphid"]],["ordering"]]],[11,"clone","","",17,[[["self"]],["glyph"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"clone","","",8,[[["self"]],["hmetrics"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"eq","","",8,[[["self"],["hmetrics"]],["bool"]]],[11,"ne","","",8,[[["self"],["hmetrics"]],["bool"]]],[11,"partial_cmp","","",8,[[["self"],["hmetrics"]],["option",["ordering"]]]],[11,"lt","","",8,[[["self"],["hmetrics"]],["bool"]]],[11,"le","","",8,[[["self"],["hmetrics"]],["bool"]]],[11,"gt","","",8,[[["self"],["hmetrics"]],["bool"]]],[11,"ge","","",8,[[["self"],["hmetrics"]],["bool"]]],[11,"clone","","",9,[[["self"]],["vmetrics"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"eq","","",9,[[["self"],["vmetrics"]],["bool"]]],[11,"ne","","",9,[[["self"],["vmetrics"]],["bool"]]],[11,"partial_cmp","","",9,[[["self"],["vmetrics"]],["option",["ordering"]]]],[11,"lt","","",9,[[["self"],["vmetrics"]],["bool"]]],[11,"le","","",9,[[["self"],["vmetrics"]],["bool"]]],[11,"gt","","",9,[[["self"],["vmetrics"]],["bool"]]],[11,"ge","","",9,[[["self"],["vmetrics"]],["bool"]]],[11,"from","","",9,[[["vmetrics"]],["self"]]],[11,"mul","","",9,[[["self"],["f32"]],["self"]]],[11,"clone","","",18,[[["self"]],["scaledglyph"]]],[11,"clone","","",19,[[["self"]],["positionedglyph"]]],[11,"clone","","",10,[[["self"]],["scale"]]],[11,"eq","","",10,[[["self"],["scale"]],["bool"]]],[11,"ne","","",10,[[["self"],["scale"]],["bool"]]],[11,"partial_cmp","","",10,[[["self"],["scale"]],["option",["ordering"]]]],[11,"lt","","",10,[[["self"],["scale"]],["bool"]]],[11,"le","","",10,[[["self"],["scale"]],["bool"]]],[11,"gt","","",10,[[["self"],["scale"]],["bool"]]],[11,"ge","","",10,[[["self"],["scale"]],["bool"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"uniform","","Uniform scaling, equivalent to `Scale { x: s, y: s }`.",10,[[["f32"]],["scale"]]],[11,"from","","",5,[[["char"]],["codepoint"]]],[11,"from","","",13,[[["codepoint"]],["codepointorglyphid"]]],[11,"from","","",13,[[["glyphid"]],["codepointorglyphid"]]],[11,"from","","",13,[[["char"]],["codepointorglyphid"]]],[11,"from_bytes","","Constructs a font collection from an array of bytes, typically loaded from a font file. This array may be owned (e.g. `Vec<u8>`), or borrowed (`&[u8]`). As long as `From<T>` is implemented for `Bytes` for some type `T`, `T` can be used as input.",15,[[["b"]],["fontcollection"]]],[11,"into_font","","In the common case that a font collection consists of only one font, this function consumes this font collection and turns it into a font. If this is not the case, or the font is not valid (read: not supported by this library), `None` is returned.",15,[[["self"]],["option",["font"]]]],[11,"font_at","","Gets the font at index `i` in the font collection, if it exists and is valid. The produced font borrows the font data that is either borrowed or owned by this font collection.",15,[[["self"],["usize"]],["option",["font"]]]],[11,"into_fonts","","Converts `self` into an `Iterator` yielding each `Font` that exists within the collection.",15,[[["self"]],["intofontsiter"]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"v_metrics","","The \"vertical metrics\" for this font at a given scale. These metrics are shared by all of the glyphs in the font. See `VMetrics` for more detail.",16,[[["self"],["scale"]],["vmetrics"]]],[11,"v_metrics_unscaled","","Get the unscaled VMetrics for this font, shared by all glyphs. See `VMetrics` for more detail.",16,[[["self"]],["vmetrics"]]],[11,"units_per_em","","Returns the units per EM square of this font",16,[[["self"]],["u16"]]],[11,"glyph_count","","The number of glyphs present in this font. Glyph identifiers for this font will always be in the range `0..self.glyph_count()`",16,[[["self"]],["usize"]]],[11,"glyph","","Returns the corresponding glyph for a Unicode code point or a glyph id for this font. If id corresponds to a glyph identifier, the identifier must be valid (smaller than `self.glyph_count()`), otherwise `None` is returned.",16,[[["self"],["c"]],["option",["glyph"]]]],[11,"glyphs_for","","A convenience function.",16,[[["self"],["i"]],["glyphiter"]]],[11,"font_name_strings","","Returns an iterator over the names for this font.",16,[[["self"]],["fontnameiter",["sharedbytes"]]]],[11,"layout","","A convenience function for laying out glyphs for a string horizontally. It does not take control characters like line breaks into account, as treatment of these is likely to depend on the application.",16,[[["self"],["str"],["scale"],["point",["f32"]]],["layoutiter"]]],[11,"pair_kerning","","Returns additional kerning to apply as well as that given by HMetrics for a particular pair of glyphs.",16,[[["self"],["scale"],["a"],["b"]],["f32"]]],[11,"clone","","",21,[[["self"]],["glyphiter"]]],[11,"next","","",21,[[["self"]],["option",["glyph"]]]],[11,"clone","","",22,[[["self"]],["layoutiter"]]],[11,"next","","",22,[[["self"]],["option",["positionedglyph"]]]],[11,"font","","The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources, it no longer has a reference to the font which it was created from (using `standalone()`). In which case, `None` is returned.",17,[[["self"]],["option",["font"]]]],[11,"id","","The glyph identifier for this glyph.",17,[[["self"]],["glyphid"]]],[11,"scaled","","Augments this glyph with scaling information, making methods that depend on the scale of the glyph available.",17,[[["self"],["scale"]],["scaledglyph"]]],[11,"standalone","","Turns a `Glyph<'a>` into a `Glyph<'static>`. This produces a glyph that owns its resources, extracted from the font. This glyph can outlive the font that it comes from.",17,[[["self"]],["glyph"]]],[11,"get_data","","Get the data from this glyph (such as width, extents, vertices, etc.). Only possible if the glyph is a shared glyph.",17,[[["self"]],["option",["arc"]]]],[11,"clone","","",14,[[["self"]],["segment"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"clone","","",11,[[["self"]],["contour"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"id","","The glyph identifier for this glyph.",18,[[["self"]],["glyphid"]]],[11,"font","","The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources, it no longer has a reference to the font which it was created from (using `standalone()`). In which case, `None` is returned.",18,[[["self"]],["option",["font"]]]],[11,"into_unscaled","","A reference to this glyph without the scaling",18,[[["self"]],["glyph"]]],[11,"unscaled","","Removes the scaling from this glyph",18,[[["self"]],["glyph"]]],[11,"positioned","","Augments this glyph with positioning information, making methods that depend on the position of the glyph available.",18,[[["self"],["point",["f32"]]],["positionedglyph"]]],[11,"scale","","",18,[[["self"]],["scale"]]],[11,"h_metrics","","Retrieves the \"horizontal metrics\" of this glyph. See `HMetrics` for more detail.",18,[[["self"]],["hmetrics"]]],[11,"shape","","Produces a list of the contours that make up the shape of this glyph. Each contour consists of a sequence of segments. Each segment is either a straight `Line` or a `Curve`.",18,[[["self"]],["option",["vec"]]]],[11,"exact_bounding_box","","The bounding box of the shape of this glyph, not to be confused with `pixel_bounding_box`, the conservative pixel-boundary bounding box. The coordinates are relative to the glyph's origin.",18,[[["self"]],["option",["rect"]]]],[11,"standalone","","Constructs a glyph that owns its data from this glyph. This is similar to `Glyph::standalone`. See that function for more details.",18,[[["self"]],["scaledglyph"]]],[11,"id","","The glyph identifier for this glyph.",19,[[["self"]],["glyphid"]]],[11,"font","","The font to which this glyph belongs. If the glyph is a standalone glyph that owns its resources, it no longer has a reference to the font which it was created from (using `standalone()`). In which case, `None` is returned.",19,[[["self"]],["option",["font"]]]],[11,"unpositioned","","A reference to this glyph without positioning",19,[[["self"]],["scaledglyph"]]],[11,"into_unpositioned","","Removes the positioning from this glyph",19,[[["self"]],["scaledglyph"]]],[11,"pixel_bounding_box","","The conservative pixel-boundary bounding box for this glyph. This is the smallest rectangle aligned to pixel boundaries that encloses the shape of this glyph at this position.",19,[[["self"]],["option",["rect"]]]],[11,"shape","","Similar to `ScaledGlyph::shape()`, but with the position of the glyph taken into account.",19,[[["self"]],["option",["vec"]]]],[11,"scale","","",19,[[["self"]],["scale"]]],[11,"position","","",19,[[["self"]],["point",["f32"]]]],[11,"draw","","Rasterises this glyph. For each pixel in the rect given by `pixel_bounding_box()`, `o` is called:",19,[[["self"],["o"]]]],[11,"standalone","","Constructs a glyph that owns its data from this glyph. This is similar to `Glyph::standalone`. See that function for more details.",19,[[["self"]],["positionedglyph"]]]],"paths":[[3,"Rect"],[3,"Point"],[3,"Vector"],[3,"Line"],[3,"Curve"],[3,"Codepoint"],[3,"GlyphId"],[3,"SharedGlyphData"],[3,"HMetrics"],[3,"VMetrics"],[3,"Scale"],[3,"Contour"],[4,"SharedBytes"],[4,"CodepointOrGlyphId"],[4,"Segment"],[3,"FontCollection"],[3,"Font"],[3,"Glyph"],[3,"ScaledGlyph"],[3,"PositionedGlyph"],[3,"IntoFontsIter"],[3,"GlyphIter"],[3,"LayoutIter"]]};
searchIndex["scoped_threadpool"]={"doc":"This crate provides a stable, safe and scoped threadpool.","items":[[3,"Pool","scoped_threadpool","A threadpool that acts as a handle to a number of threads spawned at construction.",N,N],[3,"Scope","","Handle to the scope during which the threadpool is borrowed.",N,N],[11,"drop","","",0,[[["self"]]]],[11,"new","","Construct a threadpool with the given number of threads. Minimum value is `1`.",0,[[["u32"]],["pool"]]],[11,"scoped","","Borrows the pool and allows executing jobs on other threads during that scope via the argument of the closure.",0,[[["self"],["f"]],["r"]]],[11,"thread_count","","Returns the number of threads inside this pool.",0,[[["self"]],["u32"]]],[11,"execute","","Execute a job on the threadpool.",1,[[["self"],["f"]]]],[11,"join_all","","Blocks until all currently queued jobs have run to completion.",1,[[["self"]]]],[11,"drop","","",1,[[["self"]]]]],"paths":[[3,"Pool"],[3,"Scope"]]};
searchIndex["scopeguard"]={"doc":"A scope guard will run a given closure when it goes out of scope, even if the code between panics. (as long as panic doesn't abort)","items":[[3,"ScopeGuard","scopeguard","`ScopeGuard` is a scope guard that may own a protected value.",N,N],[4,"Always","","Always run on scope exit.",N,N],[5,"guard","","Create a new `ScopeGuard` owning `v` and with deferred closure `dropfn`.",N,[[["t"],["f"]],["scopeguard",["always"]]]],[8,"Strategy","","",N,N],[10,"should_run","","Return `true` if the guard’s associated code should run (in the context where this method is called).",0,[[],["bool"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"should_run","","",1,[[],["bool"]]],[11,"with_strategy","","Create a `ScopeGuard` that owns `v` (accessible through deref) and calls `dropfn` when its destructor runs.",2,[[["t"],["f"]],["scopeguard"]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"deref_mut","","",2,[[["self"]],["t"]]],[11,"drop","","",2,[[["self"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[14,"defer","","Macro to create a `ScopeGuard` (always run).",N,N],[14,"defer_on_unwind","","Macro to create a `ScopeGuard` (run on unwinding from panic).",N,N]],"paths":[[8,"Strategy"],[4,"Always"],[3,"ScopeGuard"]]};
searchIndex["serde"]={"doc":"Serde","items":[[0,"de","serde","Generic data structure deserialization framework.",N,N],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",N,N],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any one of the `Visitor` trait methods.",N,N],[13,"Bool","","The input contained a boolean value that was not expected.",0,N],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32` or `u64` that was not expected.",0,N],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or `i64` that was not expected.",0,N],[13,"Float","","The input contained a floating point `f32` or `f64` that was not expected.",0,N],[13,"Char","","The input contained a `char` that was not expected.",0,N],[13,"Str","","The input contained a `&str` or `String` that was not expected.",0,N],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not expected.",0,N],[13,"Unit","","The input contained a unit `()` that was not expected.",0,N],[13,"Option","","The input contained an `Option<T>` that was not expected.",0,N],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",0,N],[13,"Seq","","The input contained a sequence that was not expected.",0,N],[13,"Map","","The input contained a map that was not expected.",0,N],[13,"Enum","","The input contained an enum that was not expected.",0,N],[13,"UnitVariant","","The input contained a unit variant that was not expected.",0,N],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",0,N],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",0,N],[13,"StructVariant","","The input contained a struct variant that was not expected.",0,N],[13,"Other","","A message stating what uncategorized thing the input contained that was not expected.",0,N],[0,"value","","Building blocks for deserializing basic values using the `IntoDeserializer` trait.",N,N],[3,"Error","serde::de::value","A minimal representation of all possible errors that can occur using the `IntoDeserializer` trait.",N,N],[3,"UnitDeserializer","","A deserializer holding a `()`.",N,N],[3,"BoolDeserializer","","A deserializer holding a `bool`.",N,N],[3,"I8Deserializer","","A deserializer holding an `i8`.",N,N],[3,"I16Deserializer","","A deserializer holding an `i16`.",N,N],[3,"I32Deserializer","","A deserializer holding an `i32`.",N,N],[3,"I64Deserializer","","A deserializer holding an `i64`.",N,N],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",N,N],[3,"U8Deserializer","","A deserializer holding a `u8`.",N,N],[3,"U16Deserializer","","A deserializer holding a `u16`.",N,N],[3,"U64Deserializer","","A deserializer holding a `u64`.",N,N],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",N,N],[3,"F32Deserializer","","A deserializer holding an `f32`.",N,N],[3,"F64Deserializer","","A deserializer holding an `f64`.",N,N],[3,"CharDeserializer","","A deserializer holding a `char`.",N,N],[3,"I128Deserializer","","A deserializer holding an `i128`.",N,N],[3,"U128Deserializer","","A deserializer holding a `u128`.",N,N],[3,"U32Deserializer","","A deserializer holding a `u32`.",N,N],[3,"StrDeserializer","","A deserializer holding a `&str`.",N,N],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to another deserializer.",N,N],[3,"StringDeserializer","","A deserializer holding a `String`.",N,N],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",N,N],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to another deserializer.",N,N],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",N,N],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",N,N],[3,"MapDeserializer","","A deserializer that iterates over a map.",N,N],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",N,N],[11,"clone","","",1,[[["self"]],["error"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",1,[[["self"],["error"]],["bool"]]],[11,"ne","","",1,[[["self"],["error"]],["bool"]]],[11,"custom","","",1,[[["t"]],["self"]]],[11,"custom","","",1,[[["t"]],["self"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"deserialize_bool","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",2,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",2,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",2,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",2,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",2,N],[11,"deserialize_enum","","",2,N],[11,"deserialize_identifier","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",2,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",2,[[["self"],["v"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"deserialize_bool","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",3,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",3,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",3,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",3,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",3,N],[11,"deserialize_enum","","",3,N],[11,"deserialize_identifier","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",3,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",3,[[["self"],["v"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"clone","","",4,[[["self"]],["self"]]],[11,"deserialize_bool","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",4,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",4,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",4,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",4,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",4,N],[11,"deserialize_enum","","",4,N],[11,"deserialize_identifier","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",4,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",4,[[["self"],["v"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"deserialize_bool","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",5,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",5,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",5,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",5,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",5,N],[11,"deserialize_enum","","",5,N],[11,"deserialize_identifier","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",5,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",5,[[["self"],["v"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"clone","","",6,[[["self"]],["self"]]],[11,"deserialize_bool","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",6,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",6,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",6,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",6,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",6,N],[11,"deserialize_enum","","",6,N],[11,"deserialize_identifier","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",6,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",6,[[["self"],["v"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"clone","","",7,[[["self"]],["self"]]],[11,"deserialize_bool","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",7,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",7,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",7,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",7,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",7,N],[11,"deserialize_enum","","",7,N],[11,"deserialize_identifier","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",7,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",7,[[["self"],["v"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"clone","","",8,[[["self"]],["self"]]],[11,"deserialize_bool","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",8,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",8,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",8,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",8,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",8,N],[11,"deserialize_enum","","",8,N],[11,"deserialize_identifier","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",8,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",8,[[["self"],["v"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"clone","","",9,[[["self"]],["self"]]],[11,"deserialize_bool","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",9,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",9,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",9,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",9,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",9,N],[11,"deserialize_enum","","",9,N],[11,"deserialize_identifier","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",9,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",9,[[["self"],["v"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"clone","","",10,[[["self"]],["self"]]],[11,"deserialize_bool","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",10,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",10,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",10,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",10,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",10,N],[11,"deserialize_enum","","",10,N],[11,"deserialize_identifier","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",10,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",10,[[["self"],["v"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"clone","","",11,[[["self"]],["self"]]],[11,"deserialize_bool","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",11,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",11,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",11,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",11,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",11,N],[11,"deserialize_enum","","",11,N],[11,"deserialize_identifier","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",11,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",11,[[["self"],["v"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"clone","","",12,[[["self"]],["self"]]],[11,"deserialize_bool","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",12,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",12,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",12,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",12,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",12,N],[11,"deserialize_enum","","",12,N],[11,"deserialize_identifier","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",12,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",12,[[["self"],["v"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"clone","","",13,[[["self"]],["self"]]],[11,"deserialize_bool","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",13,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",13,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",13,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",13,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",13,N],[11,"deserialize_enum","","",13,N],[11,"deserialize_identifier","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",13,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",13,[[["self"],["v"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"clone","","",14,[[["self"]],["self"]]],[11,"deserialize_bool","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",14,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",14,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",14,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",14,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",14,N],[11,"deserialize_enum","","",14,N],[11,"deserialize_identifier","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",14,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",14,[[["self"],["v"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"clone","","",15,[[["self"]],["self"]]],[11,"deserialize_bool","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",15,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",15,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",15,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",15,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",15,N],[11,"deserialize_enum","","",15,N],[11,"deserialize_identifier","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",15,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",15,[[["self"],["v"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"clone","","",16,[[["self"]],["self"]]],[11,"deserialize_bool","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",16,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",16,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",16,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",16,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",16,N],[11,"deserialize_enum","","",16,N],[11,"deserialize_identifier","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",16,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",16,[[["self"],["v"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"clone","","",17,[[["self"]],["self"]]],[11,"deserialize_bool","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",17,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",17,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",17,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",17,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",17,N],[11,"deserialize_enum","","",17,N],[11,"deserialize_identifier","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",17,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",17,[[["self"],["v"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"clone","","",18,[[["self"]],["self"]]],[11,"deserialize_bool","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",18,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",18,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",18,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",18,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",18,N],[11,"deserialize_identifier","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_any","","",18,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",18,N],[11,"variant_seed","","",18,[[["self"],["t"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"clone","","",19,[[["self"]],["self"]]],[11,"deserialize_any","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",19,N],[11,"deserialize_bool","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",19,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",19,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",19,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",19,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",19,N],[11,"deserialize_identifier","","",19,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",19,[[["self"],["v"]],["result"]]],[11,"variant_seed","","",19,[[["self"],["t"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"clone","","",20,[[["self"]],["self"]]],[11,"new","","Create a new borrowed deserializer from the given string.",20,[[["str"]],["borrowedstrdeserializer"]]],[11,"deserialize_any","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",20,N],[11,"deserialize_bool","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",20,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",20,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",20,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",20,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",20,N],[11,"deserialize_identifier","","",20,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",20,[[["self"],["v"]],["result"]]],[11,"variant_seed","","",20,[[["self"],["t"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"clone","","",21,[[["self"]],["self"]]],[11,"deserialize_any","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",21,N],[11,"deserialize_bool","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",21,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",21,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",21,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",21,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",21,N],[11,"deserialize_identifier","","",21,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",21,[[["self"],["v"]],["result"]]],[11,"variant_seed","","",21,[[["self"],["t"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"clone","","",22,[[["self"]],["self"]]],[11,"deserialize_any","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",22,N],[11,"deserialize_bool","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",22,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",22,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",22,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",22,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",22,N],[11,"deserialize_identifier","","",22,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",22,[[["self"],["v"]],["result"]]],[11,"variant_seed","","",22,[[["self"],["t"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"clone","","",23,[[["self"]],["self"]]],[11,"new","","Create a new borrowed deserializer from the given byte slice.",23,N],[11,"deserialize_any","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",23,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",23,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",23,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",23,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",23,N],[11,"deserialize_identifier","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",23,[[["self"],["v"]],["result"]]],[11,"deserialize_enum","","",23,N],[11,"clone","","",24,[[["self"]],["seqdeserializer"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",24,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a `SeqDeserializer` to `Visitor::visit_seq`.",24,[[["self"]],["result"]]],[11,"deserialize_any","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",24,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",24,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",24,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",24,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",24,N],[11,"deserialize_enum","","",24,N],[11,"deserialize_identifier","","",24,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",24,[[["self"],["v"]],["result"]]],[11,"next_element_seed","","",24,[[["self"],["v"]],["result",["option"]]]],[11,"size_hint","","",24,[[["self"]],["option",["usize"]]]],[11,"clone","","",25,[[["self"]],["seqaccessdeserializer"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",25,[[["a"]],["self"]]],[11,"deserialize_any","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",25,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",25,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",25,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",25,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",25,N],[11,"deserialize_enum","","",25,N],[11,"deserialize_identifier","","",25,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",25,[[["self"],["v"]],["result"]]],[11,"new","","Construct a new `MapDeserializer<I, E>`.",26,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a `MapDeserializer` to `Visitor::visit_map`.",26,[[["self"]],["result"]]],[11,"deserialize_any","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_seq","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",26,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_bool","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",26,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",26,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",26,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",26,N],[11,"deserialize_enum","","",26,N],[11,"deserialize_identifier","","",26,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",26,[[["self"],["v"]],["result"]]],[11,"next_key_seed","","",26,[[["self"],["t"]],["result",["option"]]]],[11,"next_value_seed","","",26,[[["self"],["t"]],["result"]]],[11,"next_entry_seed","","",26,[[["self"],["tk"],["tv"]],["result",["option"]]]],[11,"size_hint","","",26,[[["self"]],["option",["usize"]]]],[11,"next_element_seed","","",26,[[["self"],["t"]],["result",["option"]]]],[11,"size_hint","","",26,[[["self"]],["option",["usize"]]]],[11,"clone","","",26,[[["self"]],["self"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"clone","","",27,[[["self"]],["mapaccessdeserializer"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",27,[[["a"]],["self"]]],[11,"deserialize_any","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_bool","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_i8","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_i16","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_i32","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_i64","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_u8","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_u16","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_u32","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_u64","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_f32","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_f64","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_char","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_str","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_string","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_bytes","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_byte_buf","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_option","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_unit","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_unit_struct","","",27,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",27,[[["self"],["str"],["v"]],["result"]]],[11,"deserialize_seq","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_tuple","","",27,[[["self"],["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",27,[[["self"],["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_struct","","",27,N],[11,"deserialize_enum","","",27,N],[11,"deserialize_identifier","","",27,[[["self"],["v"]],["result"]]],[11,"deserialize_ignored_any","","",27,[[["self"],["v"]],["result"]]],[11,"clone","serde::de","",28,[[["self"]],["ignoredany"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"default","","",28,[[],["ignoredany"]]],[11,"expecting","","",28,[[["self"],["formatter"]],["result"]]],[11,"visit_bool","","",28,[[["self"],["bool"]],["result"]]],[11,"visit_i64","","",28,[[["self"],["i64"]],["result"]]],[11,"visit_u64","","",28,[[["self"],["u64"]],["result"]]],[11,"visit_f64","","",28,[[["self"],["f64"]],["result"]]],[11,"visit_str","","",28,[[["self"],["str"]],["result"]]],[11,"visit_none","","",28,[[["self"]],["result"]]],[11,"visit_some","","",28,[[["self"],["d"]],["result"]]],[11,"visit_newtype_struct","","",28,[[["self"],["d"]],["result"]]],[11,"visit_unit","","",28,[[["self"]],["result"]]],[11,"visit_seq","","",28,[[["self"],["a"]],["result"]]],[11,"visit_map","","",28,[[["self"],["a"]],["result"]]],[11,"visit_bytes","","",28,N],[11,"deserialize","","",28,[[["d"]],["result",["ignoredany"]]]],[8,"Error","","The `Error` trait allows `Deserialize` implementations to create descriptive error messages belonging to the `Deserializer` against which they are currently running.",N,N],[10,"custom","","Raised when there is general error when deserializing a type.",29,[[["t"]],["self"]]],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from what it was expecting.",29,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right type but that is wrong for some other reason.",29,[[["unexpected"],["expected"]],["self"]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input data contains too many or too few elements.",29,[[["usize"],["expected"]],["self"]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant with an unrecognized name.",29,N],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field with an unrecognized name.",29,N],[11,"missing_field","","Raised when a `Deserialize` struct type expected to receive a required field with a particular name but that field was not present in the input.",29,[[["str"]],["self"]]],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than one of the same field.",29,[[["str"]],["self"]]],[8,"Expected","","`Expected` represents an explanation of what data a `Visitor` was expecting to receive.",N,N],[10,"fmt","","Format an explanation of what data was being expected. Same signature as the `Display` and `Debug` traits.",30,[[["self"],["formatter"]],["result"]]],[8,"Deserialize","","A data structure that can be deserialized from any data format supported by Serde.",N,N],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",31,[[["d"]],["result"]]],[8,"DeserializeOwned","","A data structure that can be deserialized without borrowing any data from the deserializer.",N,N],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the `Deserialize` trait. If you ever find yourself looking for a way to pass data into a `Deserialize` impl, this trait is the way to do it.",N,N],[16,"Value","","The type produced by using this seed.",32,N],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize` method, except with some initial piece of data (the seed) passed in.",32,[[["self"],["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure supported by Serde.",N,N],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",33,N],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the visitor based on what data type is in the input.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64` value.",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string value and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string value and would benefit from taking ownership of buffered data owned by the `Deserializer`.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array and would benefit from taking ownership of buffered data owned by the `Deserializer`.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit struct with a particular name.",33,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype struct with a particular name.",33,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence of values.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence of values and knows how many values there are without looking at the serialized data.",33,[[["self"],["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple struct with a particular name and number of fields.",33,[[["self"],["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of key-value pairs.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct with a particular name and fields.",33,N],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum value with a particular name and possible variants.",33,N],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of a struct field or the discriminant of an enum variant.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a value whose type doesn't matter because it is ignored.",33,[[["self"],["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should expect to deserialize their human-readable form.",33,[[["self"]],["bool"]]],[8,"Visitor","","This trait represents a visitor that walks through a deserializer.",N,N],[16,"Value","","The value produced by this visitor.",34,N],[10,"expecting","","Format a message stating what data this Visitor expects to receive.",34,[[["self"],["formatter"]],["result"]]],[11,"visit_bool","","The input contains a boolean.",34,[[["self"],["bool"]],["result"]]],[11,"visit_i8","","The input contains an `i8`.",34,[[["self"],["i8"]],["result"]]],[11,"visit_i16","","The input contains an `i16`.",34,[[["self"],["i16"]],["result"]]],[11,"visit_i32","","The input contains an `i32`.",34,[[["self"],["i32"]],["result"]]],[11,"visit_i64","","The input contains an `i64`.",34,[[["self"],["i64"]],["result"]]],[11,"visit_i128","","The input contains a `i128`.",34,[[["self"],["i128"]],["result"]]],[11,"visit_u8","","The input contains a `u8`.",34,[[["self"],["u8"]],["result"]]],[11,"visit_u16","","The input contains a `u16`.",34,[[["self"],["u16"]],["result"]]],[11,"visit_u32","","The input contains a `u32`.",34,[[["self"],["u32"]],["result"]]],[11,"visit_u64","","The input contains a `u64`.",34,[[["self"],["u64"]],["result"]]],[11,"visit_u128","","The input contains a `u128`.",34,[[["self"],["u128"]],["result"]]],[11,"visit_f32","","The input contains an `f32`.",34,[[["self"],["f32"]],["result"]]],[11,"visit_f64","","The input contains an `f64`.",34,[[["self"],["f64"]],["result"]]],[11,"visit_char","","The input contains a `char`.",34,[[["self"],["char"]],["result"]]],[11,"visit_str","","The input contains a string. The lifetime of the string is ephemeral and it may be destroyed after this method returns.",34,[[["self"],["str"]],["result"]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as the `Deserializer`.",34,[[["self"],["str"]],["result"]]],[11,"visit_string","","The input contains a string and ownership of the string is being given to the `Visitor`.",34,[[["self"],["string"]],["result"]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte array is ephemeral and it may be destroyed after this method returns.",34,N],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as long as the `Deserializer`.",34,N],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte array is being given to the `Visitor`.",34,[[["self"],["vec",["u8"]]],["result"]]],[11,"visit_none","","The input contains an optional that is absent.",34,[[["self"]],["result"]]],[11,"visit_some","","The input contains an optional that is present.",34,[[["self"],["d"]],["result"]]],[11,"visit_unit","","The input contains a unit `()`.",34,[[["self"]],["result"]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",34,[[["self"],["d"]],["result"]]],[11,"visit_seq","","The input contains a sequence of elements.",34,[[["self"],["a"]],["result"]]],[11,"visit_map","","The input contains a key-value map.",34,[[["self"],["a"]],["result"]]],[11,"visit_enum","","The input contains an enum.",34,[[["self"],["a"]],["result"]]],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence in the input.",N,N],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",35,N],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the sequence, or `Ok(None)` if there are no more remaining items.",35,[[["self"],["t"]],["result",["option"]]]],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the sequence, or `Ok(None)` if there are no more remaining items.",35,[[["self"]],["result",["option"]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence, if known.",35,[[["self"]],["option",["usize"]]]],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the input.",N,N],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",36,N],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map, or `Ok(None)` if there are no more remaining entries.",36,[[["self"],["k"]],["result",["option"]]]],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",36,[[["self"],["v"]],["result"]]],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next (key-value) pair in the map, or `Ok(None)` if there are no more remaining items.",36,[[["self"],["k"],["v"]],["result",["option"]]]],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map, or `Ok(None)` if there are no more remaining entries.",36,[[["self"]],["result",["option"]]]],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",36,[[["self"]],["result"]]],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next (key-value) pair in the map, or `Ok(None)` if there are no more remaining items.",36,[[["self"]],["result",["option"]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if known.",36,[[["self"]],["option",["usize"]]]],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the input.",N,N],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",37,N],[16,"Variant","","The `Visitor` that will be used to deserialize the content of the enum variant.",37,N],[10,"variant_seed","","`variant` is called to identify which variant to deserialize.",37,[[["self"],["v"]],["result"]]],[11,"variant","","`variant` is called to identify which variant to deserialize.",37,[[["self"]],["result"]]],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the `Deserializer` and passed to the `Deserialize` to deserialize the content of a particular enum variant.",N,N],[16,"Error","","The error type that can be returned if some error occurs during deserialization. Must match the error type of our `EnumAccess`.",38,N],[10,"unit_variant","","Called when deserializing a variant with no values.",38,[[["self"]],["result"]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",38,[[["self"],["t"]],["result"]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",38,[[["self"]],["result"]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",38,[[["self"],["usize"],["v"]],["result"]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",38,N],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from which other values can be deserialized.",N,N],[16,"Deserializer","","The type of the deserializer being converted into.",39,N],[10,"into_deserializer","","Convert this value into a deserializer.",39,N],[11,"clone","","",0,[[["self"]],["unexpected"]]],[11,"eq","","",0,[[["self"],["unexpected"]],["bool"]]],[11,"ne","","",0,[[["self"],["unexpected"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[0,"ser","serde","Generic data structure serialization framework.",N,N],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not support serializing one of the compound types.",N,N],[11,"serialize_element","","",40,[[["self"],["t"]],["result"]]],[11,"end","","",40,[[["self"]],["result"]]],[11,"serialize_element","","",40,[[["self"],["t"]],["result"]]],[11,"end","","",40,[[["self"]],["result"]]],[11,"serialize_field","","",40,[[["self"],["t"]],["result"]]],[11,"end","","",40,[[["self"]],["result"]]],[11,"serialize_field","","",40,[[["self"],["t"]],["result"]]],[11,"end","","",40,[[["self"]],["result"]]],[11,"serialize_key","","",40,[[["self"],["t"]],["result"]]],[11,"serialize_value","","",40,[[["self"],["t"]],["result"]]],[11,"end","","",40,[[["self"]],["result"]]],[11,"serialize_field","","",40,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",40,[[["self"]],["result"]]],[11,"serialize_field","","",40,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",40,[[["self"]],["result"]]],[8,"Error","","Trait used by `Serialize` implementations to generically construct errors belonging to the `Serializer` against which they are currently running.",N,N],[10,"custom","","Used when a [`Serialize`] implementation encounters any error while serializing a type.",41,[[["t"]],["self"]]],[8,"Serialize","","A data structure that can be serialized into any data format supported by Serde.",N,N],[10,"serialize","","Serialize this value into the given Serde serializer.",42,[[["self"],["s"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure supported by Serde.",N,N],[16,"Ok","","The output type produced by this `Serializer` during successful serialization. Most serializers that produce text or binary output should set `Ok = ()` and serialize into an [`io::Write`] or buffer contained within the `Serializer` instance. Serializers that build in-memory data structures may be simplified by using `Ok` to propagate the data structure around.",43,N],[16,"Error","","The error type when some error occurs during serialization.",43,N],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the content of the sequence.",43,N],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the content of the tuple.",43,N],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for serializing the content of the tuple struct.",43,N],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for serializing the content of the tuple variant.",43,N],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the content of the map.",43,N],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing the content of the struct.",43,N],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for serializing the content of the struct variant.",43,N],[10,"serialize_bool","","Serialize a `bool` value.",43,[[["self"],["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",43,[[["self"],["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",43,[[["self"],["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",43,[[["self"],["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",43,[[["self"],["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",43,[[["self"],["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",43,[[["self"],["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",43,[[["self"],["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",43,[[["self"],["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",43,[[["self"],["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",43,[[["self"],["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",43,[[["self"],["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",43,[[["self"],["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",43,[[["self"],["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",43,[[["self"],["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",43,N],[10,"serialize_none","","Serialize a [`None`] value.",43,[[["self"]],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",43,[[["self"],["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",43,[[["self"]],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or `PhantomData<T>`.",43,[[["self"],["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",43,[[["self"],["str"],["u32"],["str"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",43,[[["self"],["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8) }`.",43,[[["self"],["str"],["u32"],["str"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",43,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose length will be known at deserialization time without looking at the serialized data. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",43,[[["self"],["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8, u8)`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",43,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E { T(u8, u8) }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",43,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by zero or more calls to `serialize_key` and `serialize_value`, then a call to `end`.",43,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g: u8, b: u8 }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",43,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E { S { r: u8, g: u8, b: u8 } }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",43,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",43,[[["self"],["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",43,[[["self"],["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of `Display`.",43,[[["self"],["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should serialize in human-readable form.",43,[[["self"]],["bool"]]],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",44,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",44,N],[10,"serialize_element","","Serialize a sequence element.",44,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a sequence.",44,[[["self"]],["result"]]],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",45,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",45,N],[10,"serialize_element","","Serialize a tuple element.",45,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple.",45,[[["self"]],["result"]]],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",46,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",46,N],[10,"serialize_field","","Serialize a tuple struct field.",46,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple struct.",46,[[["self"]],["result"]]],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",47,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",47,N],[10,"serialize_field","","Serialize a tuple variant field.",47,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple variant.",47,[[["self"]],["result"]]],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",48,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",48,N],[10,"serialize_key","","Serialize a map key.",48,[[["self"],["t"]],["result"]]],[10,"serialize_value","","Serialize a map value.",48,[[["self"],["t"]],["result"]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",48,[[["self"],["k"],["v"]],["result"]]],[10,"end","","Finish serializing a map.",48,[[["self"]],["result"]]],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",49,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",49,N],[10,"serialize_field","","Serialize a struct field.",49,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct field has been skipped.",49,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct.",49,[[["self"]],["result"]]],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",N,N],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",50,N],[16,"Error","","Must match the `Error` type of our `Serializer`.",50,N],[10,"serialize_field","","Serialize a struct variant field.",50,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",50,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct variant.",50,[[["self"]],["result"]]],[8,"Deserialize","serde","A data structure that can be deserialized from any data format supported by Serde.",N,N],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",31,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure supported by Serde.",N,N],[16,"Error","","The error type that can be returned if some error occurs during deserialization.",33,N],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the visitor based on what data type is in the input.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64` value.",33,[[["self"],["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",33,[[["self"],["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char` value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string value and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string value and would benefit from taking ownership of buffered data owned by the `Deserializer`.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array and does not benefit from taking ownership of buffered data owned by the `Deserializer`.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array and would benefit from taking ownership of buffered data owned by the `Deserializer`.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit struct with a particular name.",33,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype struct with a particular name.",33,[[["self"],["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence of values.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence of values and knows how many values there are without looking at the serialized data.",33,[[["self"],["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple struct with a particular name and number of fields.",33,[[["self"],["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of key-value pairs.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct with a particular name and fields.",33,N],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum value with a particular name and possible variants.",33,N],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of a struct field or the discriminant of an enum variant.",33,[[["self"],["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a value whose type doesn't matter because it is ignored.",33,[[["self"],["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should expect to deserialize their human-readable form.",33,[[["self"]],["bool"]]],[8,"Serialize","","A data structure that can be serialized into any data format supported by Serde.",N,N],[10,"serialize","","Serialize this value into the given Serde serializer.",42,[[["self"],["s"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure supported by Serde.",N,N],[16,"Ok","","The output type produced by this `Serializer` during successful serialization. Most serializers that produce text or binary output should set `Ok = ()` and serialize into an [`io::Write`] or buffer contained within the `Serializer` instance. Serializers that build in-memory data structures may be simplified by using `Ok` to propagate the data structure around.",43,N],[16,"Error","","The error type when some error occurs during serialization.",43,N],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the content of the sequence.",43,N],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the content of the tuple.",43,N],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for serializing the content of the tuple struct.",43,N],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for serializing the content of the tuple variant.",43,N],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the content of the map.",43,N],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing the content of the struct.",43,N],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for serializing the content of the struct variant.",43,N],[10,"serialize_bool","","Serialize a `bool` value.",43,[[["self"],["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",43,[[["self"],["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",43,[[["self"],["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",43,[[["self"],["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",43,[[["self"],["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",43,[[["self"],["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",43,[[["self"],["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",43,[[["self"],["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",43,[[["self"],["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",43,[[["self"],["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",43,[[["self"],["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",43,[[["self"],["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",43,[[["self"],["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",43,[[["self"],["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",43,[[["self"],["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",43,N],[10,"serialize_none","","Serialize a [`None`] value.",43,[[["self"]],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",43,[[["self"],["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",43,[[["self"]],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or `PhantomData<T>`.",43,[[["self"],["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",43,[[["self"],["str"],["u32"],["str"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",43,[[["self"],["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8) }`.",43,[[["self"],["str"],["u32"],["str"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",43,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose length will be known at deserialization time without looking at the serialized data. This call must be followed by zero or more calls to `serialize_element`, then a call to `end`.",43,[[["self"],["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8, u8)`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",43,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E { T(u8, u8) }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",43,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by zero or more calls to `serialize_key` and `serialize_value`, then a call to `end`.",43,[[["self"],["option",["usize"]]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g: u8, b: u8 }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",43,[[["self"],["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E { S { r: u8, g: u8, b: u8 } }`. This call must be followed by zero or more calls to `serialize_field`, then a call to `end`.",43,[[["self"],["str"],["u32"],["str"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",43,[[["self"],["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",43,[[["self"],["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of `Display`.",43,[[["self"],["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should serialize in human-readable form.",43,[[["self"]],["bool"]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of a new data format for Serde.",N,N],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is built with support for 128-bit integers.",N,N]],"paths":[[4,"Unexpected"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"BorrowedStrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[3,"IgnoredAny"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[3,"Impossible"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"]]};
searchIndex["serde_derive"]={"doc":"This crate provides Serde's two derive macros.","items":[[5,"derive_serialize","serde_derive","",N,[[["tokenstream"]],["tokenstream"]]],[5,"derive_deserialize","","",N,[[["tokenstream"]],["tokenstream"]]]],"paths":[]};
searchIndex["shader_version"]={"doc":"A helper library for detecting and picking compatible shaders.","items":[[3,"Shaders","shader_version","Shader picker.",N,N],[0,"opengl","","Models versions of OpenGL",N,N],[3,"ParseOpenGLError","shader_version::opengl","Represents an error while trying to get `OpenGL` from `&str`.",N,N],[4,"OpenGL","","",N,N],[13,"V2_0","","",0,N],[13,"V2_1","","",0,N],[13,"V3_0","","",0,N],[13,"V3_1","","",0,N],[13,"V3_2","","",0,N],[13,"V3_3","","",0,N],[13,"V4_0","","",0,N],[13,"V4_1","","",0,N],[13,"V4_2","","",0,N],[13,"V4_3","","",0,N],[13,"V4_4","","",0,N],[13,"V4_5","","",0,N],[11,"clone","","",0,[[["self"]],["opengl"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["opengl"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["opengl"]],["option",["ordering"]]]],[11,"cmp","","",0,[[["self"],["opengl"]],["ordering"]]],[11,"get_major_minor","","Gets the minor version of OpenGL.",0,N],[11,"to_glsl","","Gets GLSL version associated with OpenGL.",0,[[["self"]],["glsl"]]],[11,"from_str","","",0,[[["str"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"description","","",1,[[["self"]],["str"]]],[0,"glsl","shader_version","Models versions of OpenGL Shader Language (GLSL)",N,N],[3,"ParseGLSLError","shader_version::glsl","Represents an error while trying to get `GLSL` from `&str`.",N,N],[4,"GLSL","","For OpenGL version 3.3 and above, the GLSL version is the same as the OpenGL version.",N,N],[13,"V1_10","","",2,N],[13,"V1_20","","",2,N],[13,"V1_30","","",2,N],[13,"V1_40","","",2,N],[13,"V1_50","","",2,N],[13,"V3_30","","",2,N],[13,"V4_00","","",2,N],[13,"V4_10","","",2,N],[13,"V4_20","","",2,N],[13,"V4_30","","",2,N],[13,"V4_40","","",2,N],[13,"V4_50","","",2,N],[11,"clone","","",2,[[["self"]],["glsl"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"eq","","",2,[[["self"],["glsl"]],["bool"]]],[11,"partial_cmp","","",2,[[["self"],["glsl"]],["option",["ordering"]]]],[11,"cmp","","",2,[[["self"],["glsl"]],["ordering"]]],[11,"to_opengl","","Gets OpenGL version associated with GLSL.",2,[[["self"]],["opengl"]]],[11,"pick_shader","","",2,[[["self"],["shaders"]],["option"]]],[11,"from_str","","",2,[[["str"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"description","","",3,[[["self"]],["str"]]],[8,"PickShader","shader_version","Implemented by shader version enums.",N,N],[10,"pick_shader","","Pick shader.",4,[[["self"],["shaders"]],["option"]]],[11,"new","","Creates a new shader picker.",5,[[],["self"]]],[11,"set","","Sets source for a shader version.",5,[[["self"],["v"],["s"]],["self"]]],[11,"get","","Get the closest shader to a shader version.",5,[[["self"],["v"]],["option"]]]],"paths":[[4,"OpenGL"],[3,"ParseOpenGLError"],[4,"GLSL"],[3,"ParseGLSLError"],[8,"PickShader"],[3,"Shaders"]]};
searchIndex["shaders_graphics2d"]={"doc":"Shaders for 2D graphics backends.","items":[[0,"colored","shaders_graphics2d","Shaders for colored rendering.",N,N],[17,"VERTEX_GLSL_120","shaders_graphics2d::colored","Vertex shader for GLSL 1.20",N,N],[17,"VERTEX_GLSL_150_CORE","","Vertex shader for GLSL 1.50",N,N],[17,"FRAGMENT_GLSL_120","","Fragment shader for GLSL 1.20",N,N],[17,"FRAGMENT_GLSL_150_CORE","","Fragmentshader for GLSL 1.50",N,N],[17,"VERTEX_GLSL_120_WEBGL","","Vertex shader for GLSL 1.20 WebGL",N,N],[17,"VERTEX_GLSL_150_CORE_WEBGL","","Vertex shader for GLSL 1.50 WebGL",N,N],[17,"FRAGMENT_GLSL_120_WEBGL","","Fragment shader for GLSL 1.20 WebGL",N,N],[17,"FRAGMENT_GLSL_150_CORE_WEBGL","","Fragmentshader for GLSL 1.50 WebGL",N,N],[0,"textured","shaders_graphics2d","Shaders for textured rendering.",N,N],[17,"VERTEX_GLSL_120","shaders_graphics2d::textured","Vertex shader for GLSL 1.20",N,N],[17,"VERTEX_GLSL_150_CORE","","Vertex shader for GLSL 1.50",N,N],[17,"FRAGMENT_GLSL_120","","Fragment shader for GLSL 1.20",N,N],[17,"FRAGMENT_GLSL_150_CORE","","Fragment shader for GLSL 1.50",N,N],[17,"VERTEX_GLSL_120_WEBGL","","Vertex shader for GLSL 1.20",N,N],[17,"VERTEX_GLSL_150_CORE_WEBGL","","Vertex shader for GLSL 1.50",N,N],[17,"FRAGMENT_GLSL_120_WEBGL","","Fragment shader for GLSL 1.20",N,N],[17,"FRAGMENT_GLSL_150_CORE_WEBGL","","Fragment shader for GLSL 1.50",N,N]],"paths":[]};
searchIndex["shared_library"]={"doc":"","items":[[4,"LoadingError","shared_library","Error that can happen while loading the shared library.",N,N],[13,"LibraryNotFound","","",0,N],[12,"descr","shared_library::LoadingError","",0,N],[13,"SymbolNotFound","shared_library","One of the symbols could not be found in the library.",0,N],[12,"symbol","shared_library::LoadingError","The symbol.",0,N],[0,"dynamic_library","shared_library","Dynamic library facilities.",N,N],[3,"DynamicLibrary","shared_library::dynamic_library","",N,N],[4,"SpecialHandles","","Special handles to be used with the `symbol_special` function. These are  provided by a GNU only extension and are not included as part of the POSIX  standard. ",N,N],[13,"Next","","",1,N],[13,"Default","","",1,N],[11,"drop","","",2,[[["self"]]]],[11,"open","","Lazily loads the dynamic library named `filename` into memory and  then returns an opaque \"handle\" for that dynamic library.",2,[[["option",["path"]]],["result",["string"]]]],[11,"prepend_search_path","","Prepends a path to this process's search path for dynamic libraries",2,[[["path"]]]],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an environment variable for this platforms dylib search path.",2,N],[11,"envvar","","Returns the environment variable for this process's dynamic library search path",2,[[],["str"]]],[11,"search_path","","Returns the current search path for dynamic libraries being used by this process",2,[[],["vec",["pathbuf"]]]],[11,"symbol","","Returns the address of where symbol `symbol` was loaded into memory.",2,[[["self"],["str"]],["result",["string"]]]],[11,"symbol_special","","Returns the address of the first occurance of symbol `symbol` using the  default library search order if you use `SpecialHandles::Default`.",2,[[["specialhandles"],["str"]],["result",["string"]]]],[11,"fmt","shared_library","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["loadingerror"]]],[14,"shared_library","","",N,N]],"paths":[[4,"LoadingError"],[4,"SpecialHandles"],[3,"DynamicLibrary"]]};
searchIndex["smallvec"]={"doc":"Small vectors in various sizes. These store a certain number of elements inline, and fall back to the heap for larger allocations.  This can be a useful optimization for improving cache locality and reducing allocator traffic for workloads that fit within the inline buffer.","items":[[3,"Drain","smallvec","An iterator that removes the items from a `SmallVec` and yields them by value.",N,N],[3,"SmallVec","","A `Vec`-like container that can store a small number of elements inline.",N,N],[3,"IntoIter","","An iterator that consumes a `SmallVec` and yields its items by value.",N,N],[8,"VecLike","","Common operations implemented by both `Vec` and `SmallVec`.",N,N],[10,"push","","Append an element to the vector.",0,[[["self"],["t"]]]],[8,"ExtendFromSlice","","Trait to be implemented by a collection that can be extended from a slice",N,N],[10,"extend_from_slice","","Extends a collection from a slice of its element type",1,N],[8,"Array","","Types that can be used as the backing store for a SmallVec",N,N],[16,"Item","","The type of the array's elements.",2,N],[10,"size","","Returns the number of items the array can hold.",2,[[],["usize"]]],[10,"ptr","","Returns a pointer to the first element of the array.",2,N],[10,"ptr_mut","","Returns a mutable pointer to the first element of the array.",2,N],[11,"next","","",3,[[["self"]],["option"]]],[11,"size_hint","","",3,N],[11,"next_back","","",3,[[["self"]],["option"]]],[11,"drop","","",3,[[["self"]]]],[11,"new","","Construct an empty vector",4,[[],["smallvec"]]],[11,"with_capacity","","Construct an empty vector with enough capacity pre-allocated to store at least `n` elements.",4,[[["usize"]],["self"]]],[11,"from_vec","","Construct a new `SmallVec` from a `Vec<A::Item>`.",4,[[["vec"]],["smallvec"]]],[11,"from_buf","","Constructs a new `SmallVec` on the stack from an `A` without copying elements.",4,[[["a"]],["smallvec"]]],[11,"from_buf_and_len","","Constructs a new `SmallVec` on the stack from an `A` without copying elements. Also sets the length, which must be less or equal to the size of `buf`.",4,[[["a"],["usize"]],["smallvec"]]],[11,"from_buf_and_len_unchecked","","Constructs a new `SmallVec` on the stack from an `A` without copying elements. Also sets the length. The user is responsible for ensuring that `len <= A::size()`.",4,[[["a"],["usize"]],["smallvec"]]],[11,"set_len","","Sets the length of a vector.",4,[[["self"],["usize"]]]],[11,"inline_size","","The maximum number of elements this vector can hold inline",4,[[["self"]],["usize"]]],[11,"len","","The number of elements stored in the vector",4,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the vector is empty",4,[[["self"]],["bool"]]],[11,"capacity","","The number of items the vector can hold without reallocating",4,[[["self"]],["usize"]]],[11,"spilled","","Returns `true` if the data has spilled into a separate heap-allocated buffer.",4,[[["self"]],["bool"]]],[11,"drain","","Empty the vector and return an iterator over its former contents.",4,[[["self"]],["drain"]]],[11,"push","","Append an item to the vector.",4,N],[11,"pop","","Remove an item from the end of the vector and return it, or None if empty.",4,[[["self"]],["option"]]],[11,"grow","","Re-allocate to set the capacity to `max(new_cap, inline_size())`.",4,[[["self"],["usize"]]]],[11,"reserve","","Reserve capacity for `additional` more elements to be inserted.",4,[[["self"],["usize"]]]],[11,"reserve_exact","","Reserve the minumum capacity for `additional` more elements to be inserted.",4,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrink the capacity of the vector as much as possible.",4,[[["self"]]]],[11,"truncate","","Shorten the vector, keeping the first `len` elements and dropping the rest.",4,[[["self"],["usize"]]]],[11,"as_slice","","Extracts a slice containing the entire vector.",4,N],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",4,N],[11,"swap_remove","","Remove the element at position `index`, replacing it with the last element.",4,N],[11,"clear","","Remove all elements from the vector.",4,[[["self"]]]],[11,"remove","","Remove and return the element at position `index`, shifting all elements after it to the left.",4,N],[11,"insert","","Insert an element at position `index`, shifting all elements after it to the right.",4,N],[11,"insert_many","","Insert multiple elements at position `index`, shifting all following elements toward the back.",4,[[["self"],["usize"],["i"]]]],[11,"into_vec","","Convert a SmallVec to a Vec, without reallocating if the SmallVec has already spilled onto the heap.",4,[[["self"]],["vec"]]],[11,"into_inner","","Convert the SmallVec into an `A` if possible. Otherwise return `Err(Self)`.",4,[[["self"]],["result"]]],[11,"retain","","Retains only the elements specified by the predicate.",4,[[["self"],["f"]]]],[11,"dedup","","Removes consecutive duplicate elements.",4,[[["self"]]]],[11,"dedup_by","","Removes consecutive duplicate elements using the given equality relation.",4,[[["self"],["f"]]]],[11,"dedup_by_key","","Removes consecutive elements that map to the same key.",4,[[["self"],["f"]]]],[11,"from_slice","","Copy the elements from a slice into a new `SmallVec`.",4,N],[11,"insert_from_slice","","Copy elements from a slice into the vector at position `index`, shifting any following elements toward the back.",4,N],[11,"extend_from_slice","","Copy elements from a slice and append them to the vector.",4,N],[11,"resize","","Resizes the vector so that its length is equal to `len`.",4,N],[11,"from_elem","","Creates a `SmallVec` with `n` copies of `elem`. ``` use smallvec::SmallVec;",4,N],[11,"deref","","",4,N],[11,"deref_mut","","",4,N],[11,"as_ref","","",4,N],[11,"as_mut","","",4,N],[11,"borrow","","",4,N],[11,"borrow_mut","","",4,N],[11,"write","","",4,N],[11,"write_all","","",4,N],[11,"flush","","",4,[[["self"]],["result"]]],[11,"from","","",4,N],[11,"from","","",4,[[["vec"]],["smallvec"]]],[11,"from","","",4,[[["a"]],["smallvec"]]],[11,"index","","",4,N],[11,"index_mut","","",4,N],[11,"index","","",4,N],[11,"index_mut","","",4,N],[11,"index","","",4,N],[11,"index_mut","","",4,N],[11,"index","","",4,N],[11,"index_mut","","",4,N],[11,"index","","",4,N],[11,"index_mut","","",4,N],[11,"extend_from_slice","","",4,N],[11,"push","","",4,N],[11,"from_iter","","",4,[[["i"]],["smallvec"]]],[11,"extend","","",4,[[["self"],["i"]]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"default","","",4,[[],["smallvec"]]],[11,"drop","","",4,[[["self"]]]],[11,"clone","","",4,[[["self"]],["smallvec"]]],[11,"eq","","",4,[[["self"],["smallvec"]],["bool"]]],[11,"ne","","",4,[[["self"],["smallvec"]],["bool"]]],[11,"partial_cmp","","",4,[[["self"],["smallvec"]],["option",["ordering"]]]],[11,"cmp","","",4,[[["self"],["smallvec"]],["ordering"]]],[11,"hash","","",4,[[["self"],["h"]]]],[11,"drop","","",5,[[["self"]]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,N],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"into_iter","","",4,N],[14,"smallvec","","Creates a [`SmallVec`] containing the arguments.",N,N]],"paths":[[8,"VecLike"],[8,"ExtendFromSlice"],[8,"Array"],[3,"Drain"],[3,"SmallVec"],[3,"IntoIter"]]};
searchIndex["smithay_client_toolkit"]={"doc":"","items":[[3,"Environment","smithay_client_toolkit","A convenience for global management",N,N],[12,"manager","","The underlying GlobalManager wrapping your registry",0,N],[12,"compositor","","The compositor global, used to create surfaces",0,N],[12,"subcompositor","","The subcompositor global, used to create subsurfaces",0,N],[12,"shell","","The shell global, used make your surfaces into windows",0,N],[12,"shm","","The SHM global, to create shared memory buffers",0,N],[12,"data_device_manager","","The data device manager, used to handle drag&drop and selection copy/paste",0,N],[12,"outputs","","A manager for handling the advertized outputs",0,N],[12,"decorations_mgr","","The decoration manager, if the server supports server-side decorations",0,N],[4,"Shell","","Possible shell globals",N,N],[13,"Xdg","","Using xdg_shell protocol, the standart",1,N],[13,"Zxdg","","Old version of xdg_shell, for compatiblity",1,N],[13,"Wl","","Using wl_shell, deprecated, compatibility mode",1,N],[0,"reexports","","Re-exports of some crates, for convenience",N,N],[0,"cursor","smithay_client_toolkit::reexports::client","Cursor utilities",N,N],[5,"is_available","smithay_client_toolkit::reexports::client::cursor","Checks if the wayland-cursor lib is available and can be used",N,[[],["bool"]]],[3,"CursorTheme","","Represents a cursor theme loaded from the system.",N,N],[5,"load_theme","","Attempts to load a cursor theme from given name.",N,[[["option",["str"]],["u32"],["proxy"]],["cursortheme"]]],[3,"Cursor","","A cursor from a theme. Can contain several images if animated.",N,N],[3,"CursorImageBuffer","","A buffer containing a cursor image.",N,N],[0,"egl","smithay_client_toolkit::reexports::client","EGL utilities",N,N],[5,"is_available","smithay_client_toolkit::reexports::client::egl","Checks if the wayland-egl lib is available and can be used",N,[[],["bool"]]],[3,"WlEglSurface","","EGL surface",N,N],[0,"commons","smithay_client_toolkit::reexports::client","Re-export of wayland-commons",N,N],[8,"Implementation","smithay_client_toolkit::reexports::client::commons","Trait representing implementations for wayland objects",N,N],[10,"receive","","Receive a message",2,N],[8,"Interface","","The description of a wayland interface",N,N],[16,"Request","","Set of requests associated to this interface",3,N],[16,"Event","","Set of events associated to this interface",3,N],[18,"NAME","","Name of this interface",3,N],[10,"c_interface","","Pointer to the C representation of this interface",3,N],[3,"AnonymousObject","","Anonymous interface",N,N],[8,"MessageGroup","","A group of messages",N,N],[10,"is_destructor","","Whether this message is a destructor",4,[[["self"]],["bool"]]],[10,"from_raw_c","","Construct a message of this group from its C representation",4,N],[10,"as_raw_c_in","","Build a C representation of this message",4,[[["self"],["f"]],["t"]]],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",N,N],[5,"downcast_impl","","Attempt to downcast a boxed `Implementation` trait object.",N,[[["box",["implementation"]]],["result",["box","box"]]]],[0,"sys","smithay_client_toolkit::reexports::client","C-associated types",N,N],[0,"client","smithay_client_toolkit::reexports::client::sys","Bindings to the client library `libwayland-client.so`",N,N],[4,"wl_proxy","smithay_client_toolkit::reexports::client::sys::client","",N,N],[4,"wl_display","","",N,N],[4,"wl_event_queue","","",N,N],[3,"WaylandClient","","",N,N],[12,"wl_display_connect_to_fd","","",5,N],[12,"wl_display_connect","","",5,N],[12,"wl_display_disconnect","","",5,N],[12,"wl_display_get_fd","","",5,N],[12,"wl_display_roundtrip","","",5,N],[12,"wl_display_read_events","","",5,N],[12,"wl_display_prepare_read","","",5,N],[12,"wl_display_cancel_read","","",5,N],[12,"wl_display_dispatch","","",5,N],[12,"wl_display_dispatch_pending","","",5,N],[12,"wl_display_get_error","","",5,N],[12,"wl_display_get_protocol_error","","",5,N],[12,"wl_display_flush","","",5,N],[12,"wl_event_queue_destroy","","",5,N],[12,"wl_display_create_queue","","",5,N],[12,"wl_display_roundtrip_queue","","",5,N],[12,"wl_display_prepare_read_queue","","",5,N],[12,"wl_display_dispatch_queue","","",5,N],[12,"wl_display_dispatch_queue_pending","","",5,N],[12,"wl_proxy_create","","",5,N],[12,"wl_proxy_destroy","","",5,N],[12,"wl_proxy_add_listener","","",5,N],[12,"wl_proxy_get_listener","","",5,N],[12,"wl_proxy_add_dispatcher","","",5,N],[12,"wl_proxy_marshal_array_constructor","","",5,N],[12,"wl_proxy_marshal_array_constructor_versioned","","",5,N],[12,"wl_proxy_marshal_array","","",5,N],[12,"wl_proxy_set_user_data","","",5,N],[12,"wl_proxy_get_user_data","","",5,N],[12,"wl_proxy_get_id","","",5,N],[12,"wl_proxy_get_class","","",5,N],[12,"wl_proxy_set_queue","","",5,N],[12,"wl_proxy_get_version","","",5,N],[12,"wl_proxy_create_wrapper","","",5,N],[12,"wl_proxy_wrapper_destroy","","",5,N],[12,"wl_log_set_handler_client","","",5,N],[12,"wl_list_init","","",5,N],[12,"wl_list_insert","","",5,N],[12,"wl_list_remove","","",5,N],[12,"wl_list_length","","",5,N],[12,"wl_list_empty","","",5,N],[12,"wl_list_insert_list","","",5,N],[12,"wl_array_init","","",5,N],[12,"wl_array_release","","",5,N],[12,"wl_array_add","","",5,N],[12,"wl_array_copy","","",5,N],[12,"wl_proxy_marshal_constructor","","",5,N],[12,"wl_proxy_marshal_constructor_versioned","","",5,N],[12,"wl_proxy_marshal","","",5,N],[3,"WAYLAND_CLIENT_OPTION","","",N,N],[3,"WAYLAND_CLIENT_HANDLE","","",N,N],[5,"is_lib_available","","",N,[[],["bool"]]],[0,"common","smithay_client_toolkit::reexports::client::sys","Various types and functions that are used by both the client and the server libraries.",N,N],[3,"wl_message","smithay_client_toolkit::reexports::client::sys::common","",N,N],[12,"name","","",6,N],[12,"signature","","",6,N],[12,"types","","",6,N],[3,"wl_interface","","",N,N],[12,"name","","",7,N],[12,"version","","",7,N],[12,"request_count","","",7,N],[12,"requests","","",7,N],[12,"event_count","","",7,N],[12,"events","","",7,N],[3,"wl_list","","",N,N],[12,"prev","","",8,N],[12,"next","","",8,N],[3,"wl_array","","",N,N],[12,"size","","",9,N],[12,"alloc","","",9,N],[12,"data","","",9,N],[6,"wl_fixed_t","","",N,N],[5,"wl_fixed_to_double","","",N,[[["i32"]],["f64"]]],[5,"wl_fixed_from_double","","",N,[[["f64"]],["i32"]]],[5,"wl_fixed_to_int","","",N,[[["i32"]],["i32"]]],[5,"wl_fixed_from_int","","",N,[[["i32"]],["i32"]]],[19,"wl_argument","","",N,N],[12,"i","","",10,N],[12,"u","","",10,N],[12,"f","","",10,N],[12,"s","","",10,N],[12,"o","","",10,N],[12,"n","","",10,N],[12,"a","","",10,N],[12,"h","","",10,N],[6,"wl_dispatcher_func_t","","",N,N],[6,"wl_log_func_t","","",N,N],[0,"protocol_interfaces","smithay_client_toolkit::reexports::client::sys","",N,N],[7,"wl_display_requests","smithay_client_toolkit::reexports::client::sys::protocol_interfaces","",N,N],[7,"wl_display_events","","",N,N],[7,"wl_display_interface","","",N,N],[7,"wl_registry_requests","","",N,N],[7,"wl_registry_events","","",N,N],[7,"wl_registry_interface","","",N,N],[7,"wl_callback_events","","",N,N],[7,"wl_callback_interface","","",N,N],[7,"wl_compositor_requests","","",N,N],[7,"wl_compositor_interface","","",N,N],[7,"wl_shm_pool_requests","","",N,N],[7,"wl_shm_pool_interface","","",N,N],[7,"wl_shm_requests","","",N,N],[7,"wl_shm_events","","",N,N],[7,"wl_shm_interface","","",N,N],[7,"wl_buffer_requests","","",N,N],[7,"wl_buffer_events","","",N,N],[7,"wl_buffer_interface","","",N,N],[7,"wl_data_offer_requests","","",N,N],[7,"wl_data_offer_events","","",N,N],[7,"wl_data_offer_interface","","",N,N],[7,"wl_data_source_requests","","",N,N],[7,"wl_data_source_events","","",N,N],[7,"wl_data_source_interface","","",N,N],[7,"wl_data_device_requests","","",N,N],[7,"wl_data_device_events","","",N,N],[7,"wl_data_device_interface","","",N,N],[7,"wl_data_device_manager_requests","","",N,N],[7,"wl_data_device_manager_interface","","",N,N],[7,"wl_shell_requests","","",N,N],[7,"wl_shell_interface","","",N,N],[7,"wl_shell_surface_requests","","",N,N],[7,"wl_shell_surface_events","","",N,N],[7,"wl_shell_surface_interface","","",N,N],[7,"wl_surface_requests","","",N,N],[7,"wl_surface_events","","",N,N],[7,"wl_surface_interface","","",N,N],[7,"wl_seat_requests","","",N,N],[7,"wl_seat_events","","",N,N],[7,"wl_seat_interface","","",N,N],[7,"wl_pointer_requests","","",N,N],[7,"wl_pointer_events","","",N,N],[7,"wl_pointer_interface","","",N,N],[7,"wl_keyboard_requests","","",N,N],[7,"wl_keyboard_events","","",N,N],[7,"wl_keyboard_interface","","",N,N],[7,"wl_touch_requests","","",N,N],[7,"wl_touch_events","","",N,N],[7,"wl_touch_interface","","",N,N],[7,"wl_output_requests","","",N,N],[7,"wl_output_events","","",N,N],[7,"wl_output_interface","","",N,N],[7,"wl_region_requests","","",N,N],[7,"wl_region_interface","","",N,N],[7,"wl_subcompositor_requests","","",N,N],[7,"wl_subcompositor_interface","","",N,N],[7,"wl_subsurface_requests","","",N,N],[7,"wl_subsurface_interface","","",N,N],[0,"protocol","smithay_client_toolkit::reexports::client","Generated interfaces for the core wayland protocol",N,N],[0,"wl_callback","smithay_client_toolkit::reexports::client::protocol","callback object",N,N],[4,"Request","smithay_client_toolkit::reexports::client::protocol::wl_callback","",N,N],[4,"Event","","",N,N],[13,"Done","","done event",11,N],[12,"callback_data","smithay_client_toolkit::reexports::client::protocol::wl_callback::Event","",11,N],[3,"WlCallback","smithay_client_toolkit::reexports::client::protocol::wl_callback","",N,N],[8,"RequestsTrait","","",N,N],[0,"wl_compositor","smithay_client_toolkit::reexports::client::protocol","the compositor singleton",N,N],[4,"Request","smithay_client_toolkit::reexports::client::protocol::wl_compositor","",N,N],[13,"CreateSurface","","create new surface",12,N],[12,"id","smithay_client_toolkit::reexports::client::protocol::wl_compositor::Request","",12,N],[13,"CreateRegion","smithay_client_toolkit::reexports::client::protocol::wl_compositor","create new region",12,N],[12,"id","smithay_client_toolkit::reexports::client::protocol::wl_compositor::Request","",12,N],[4,"Event","smithay_client_toolkit::reexports::client::protocol::wl_compositor","",N,N],[3,"WlCompositor","","",N,N],[8,"RequestsTrait","","",N,N],[10,"create_surface","","create new surface",13,[[["self"]],["result",["newproxy"]]]],[10,"create_region","","create new region",13,[[["self"]],["result",["newproxy"]]]],[0,"wl_data_source","smithay_client_toolkit::reexports::client::protocol","offer to transfer data",N,N],[4,"Error","smithay_client_toolkit::reexports::client::protocol::wl_data_source","",N,N],[13,"InvalidActionMask","","action mask contains invalid values",14,N],[13,"InvalidSource","","source doesn't accept this request",14,N],[4,"Request","","",N,N],[13,"Offer","","add an offered mime type",15,N],[12,"mime_type","smithay_client_toolkit::reexports::client::protocol::wl_data_source::Request","",15,N],[13,"Destroy","smithay_client_toolkit::reexports::client::protocol::wl_data_source","destroy the data source",15,N],[13,"SetActions","","set the available drag-and-drop actions",15,N],[12,"dnd_actions","smithay_client_toolkit::reexports::client::protocol::wl_data_source::Request","",15,N],[4,"Event","smithay_client_toolkit::reexports::client::protocol::wl_data_source","",N,N],[13,"Target","","a target accepts an offered mime type",16,N],[12,"mime_type","smithay_client_toolkit::reexports::client::protocol::wl_data_source::Event","",16,N],[13,"Send","smithay_client_toolkit::reexports::client::protocol::wl_data_source","send the data",16,N],[12,"mime_type","smithay_client_toolkit::reexports::client::protocol::wl_data_source::Event","",16,N],[12,"fd","","",16,N],[13,"Cancelled","smithay_client_toolkit::reexports::client::protocol::wl_data_source","selection was cancelled",16,N],[13,"DndDropPerformed","","the drag-and-drop operation physically finished",16,N],[13,"DndFinished","","the drag-and-drop operation concluded",16,N],[13,"Action","","notify the selected action",16,N],[12,"dnd_action","smithay_client_toolkit::reexports::client::protocol::wl_data_source::Event","",16,N],[3,"WlDataSource","smithay_client_toolkit::reexports::client::protocol::wl_data_source","",N,N],[8,"RequestsTrait","","",N,N],[10,"offer","","add an offered mime type",17,N],[10,"destroy","","destroy the data source",17,N],[10,"set_actions","","set the available drag-and-drop actions",17,N],[0,"wl_keyboard","smithay_client_toolkit::reexports::client::protocol","keyboard input device",N,N],[4,"KeymapFormat","smithay_client_toolkit::reexports::client::protocol::wl_keyboard","keyboard mapping format",N,N],[13,"NoKeymap","","no keymap; client must understand how to interpret the raw keycode",18,N],[13,"XkbV1","","libxkbcommon compatible; to determine the xkb keycode, clients must add 8 to the key event keycode",18,N],[4,"KeyState","","physical key state",N,N],[13,"Released","","key is not pressed",19,N],[13,"Pressed","","key is pressed",19,N],[4,"Request","","",N,N],[13,"Release","","release the keyboard object",20,N],[4,"Event","","",N,N],[13,"Keymap","","keyboard mapping",21,N],[12,"format","smithay_client_toolkit::reexports::client::protocol::wl_keyboard::Event","",21,N],[12,"fd","","",21,N],[12,"size","","",21,N],[13,"Enter","smithay_client_toolkit::reexports::client::protocol::wl_keyboard","enter event",21,N],[12,"serial","smithay_client_toolkit::reexports::client::protocol::wl_keyboard::Event","",21,N],[12,"surface","","",21,N],[12,"keys","","",21,N],[13,"Leave","smithay_client_toolkit::reexports::client::protocol::wl_keyboard","leave event",21,N],[12,"serial","smithay_client_toolkit::reexports::client::protocol::wl_keyboard::Event","",21,N],[12,"surface","","",21,N],[13,"Key","smithay_client_toolkit::reexports::client::protocol::wl_keyboard","key event",21,N],[12,"serial","smithay_client_toolkit::reexports::client::protocol::wl_keyboard::Event","",21,N],[12,"time","","",21,N],[12,"key","","",21,N],[12,"state","","",21,N],[13,"Modifiers","smithay_client_toolkit::reexports::client::protocol::wl_keyboard","modifier and group state",21,N],[12,"serial","smithay_client_toolkit::reexports::client::protocol::wl_keyboard::Event","",21,N],[12,"mods_depressed","","",21,N],[12,"mods_latched","","",21,N],[12,"mods_locked","","",21,N],[12,"group","","",21,N],[13,"RepeatInfo","smithay_client_toolkit::reexports::client::protocol::wl_keyboard","repeat rate and delay",21,N],[12,"rate","smithay_client_toolkit::reexports::client::protocol::wl_keyboard::Event","",21,N],[12,"delay","","",21,N],[3,"WlKeyboard","smithay_client_toolkit::reexports::client::protocol::wl_keyboard","",N,N],[8,"RequestsTrait","","",N,N],[10,"release","","release the keyboard object",22,N],[0,"wl_region","smithay_client_toolkit::reexports::client::protocol","region interface",N,N],[4,"Request","smithay_client_toolkit::reexports::client::protocol::wl_region","",N,N],[13,"Destroy","","destroy region",23,N],[13,"Add","","add rectangle to region",23,N],[12,"x","smithay_client_toolkit::reexports::client::protocol::wl_region::Request","",23,N],[12,"y","","",23,N],[12,"width","","",23,N],[12,"height","","",23,N],[13,"Subtract","smithay_client_toolkit::reexports::client::protocol::wl_region","subtract rectangle from region",23,N],[12,"x","smithay_client_toolkit::reexports::client::protocol::wl_region::Request","",23,N],[12,"y","","",23,N],[12,"width","","",23,N],[12,"height","","",23,N],[4,"Event","smithay_client_toolkit::reexports::client::protocol::wl_region","",N,N],[3,"WlRegion","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy region",24,N],[10,"add","","add rectangle to region",24,N],[10,"subtract","","subtract rectangle from region",24,N],[0,"wl_data_device_manager","smithay_client_toolkit::reexports::client::protocol","data transfer interface",N,N],[3,"DndAction","smithay_client_toolkit::reexports::client::protocol::wl_data_device_manager","drag and drop actions",N,N],[4,"Request","","",N,N],[13,"CreateDataSource","","create a new data source",25,N],[12,"id","smithay_client_toolkit::reexports::client::protocol::wl_data_device_manager::Request","",25,N],[13,"GetDataDevice","smithay_client_toolkit::reexports::client::protocol::wl_data_device_manager","create a new data device",25,N],[12,"id","smithay_client_toolkit::reexports::client::protocol::wl_data_device_manager::Request","",25,N],[12,"seat","","",25,N],[4,"Event","smithay_client_toolkit::reexports::client::protocol::wl_data_device_manager","",N,N],[3,"WlDataDeviceManager","","",N,N],[8,"RequestsTrait","","",N,N],[10,"create_data_source","","create a new data source",26,[[["self"]],["result",["newproxy"]]]],[10,"get_data_device","","create a new data device",26,[[["self"],["proxy"]],["result",["newproxy"]]]],[0,"wl_shell_surface","smithay_client_toolkit::reexports::client::protocol","desktop-style metadata interface",N,N],[3,"Resize","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","edge values for resizing",N,N],[3,"Transient","","details of transient behaviour",N,N],[4,"FullscreenMethod","","different method to set the surface fullscreen",N,N],[13,"Default","","no preference, apply default policy",27,N],[13,"Scale","","scale, preserve the surface's aspect ratio and center on output",27,N],[13,"Driver","","switch output mode to the smallest mode that can fit the surface, add black borders to compensate size mismatch",27,N],[13,"Fill","","no upscaling, center on output and add black borders to compensate size mismatch",27,N],[4,"Request","","",N,N],[13,"Pong","","respond to a ping event",28,N],[12,"serial","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface::Request","",28,N],[13,"Move","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","start an interactive move",28,N],[12,"seat","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface::Request","",28,N],[12,"serial","","",28,N],[13,"Resize","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","start an interactive resize",28,N],[12,"seat","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface::Request","",28,N],[12,"serial","","",28,N],[12,"edges","","",28,N],[13,"SetToplevel","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","make the surface a toplevel surface",28,N],[13,"SetTransient","","make the surface a transient surface",28,N],[12,"parent","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface::Request","",28,N],[12,"x","","",28,N],[12,"y","","",28,N],[12,"flags","","",28,N],[13,"SetFullscreen","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","make the surface a fullscreen surface",28,N],[12,"method","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface::Request","",28,N],[12,"framerate","","",28,N],[12,"output","","",28,N],[13,"SetPopup","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","make the surface a popup surface",28,N],[12,"seat","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface::Request","",28,N],[12,"serial","","",28,N],[12,"parent","","",28,N],[12,"x","","",28,N],[12,"y","","",28,N],[12,"flags","","",28,N],[13,"SetMaximized","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","make the surface a maximized surface",28,N],[12,"output","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface::Request","",28,N],[13,"SetTitle","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","set surface title",28,N],[12,"title","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface::Request","",28,N],[13,"SetClass","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","set surface class",28,N],[12,"class_","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface::Request","",28,N],[4,"Event","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",N,N],[13,"Ping","","ping client",29,N],[12,"serial","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface::Event","",29,N],[13,"Configure","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","suggest resize",29,N],[12,"edges","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface::Event","",29,N],[12,"width","","",29,N],[12,"height","","",29,N],[13,"PopupDone","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","popup interaction is done",29,N],[3,"WlShellSurface","","",N,N],[8,"RequestsTrait","","",N,N],[10,"pong","","respond to a ping event",30,N],[10,"_move","","start an interactive move",30,N],[10,"resize","","start an interactive resize",30,N],[10,"set_toplevel","","make the surface a toplevel surface",30,N],[10,"set_transient","","make the surface a transient surface",30,N],[10,"set_fullscreen","","make the surface a fullscreen surface",30,N],[10,"set_popup","","make the surface a popup surface",30,N],[10,"set_maximized","","make the surface a maximized surface",30,N],[10,"set_title","","set surface title",30,N],[10,"set_class","","set surface class",30,N],[0,"wl_touch","smithay_client_toolkit::reexports::client::protocol","touchscreen input device",N,N],[4,"Request","smithay_client_toolkit::reexports::client::protocol::wl_touch","",N,N],[13,"Release","","release the touch object",31,N],[4,"Event","","",N,N],[13,"Down","","touch down event and beginning of a touch sequence",32,N],[12,"serial","smithay_client_toolkit::reexports::client::protocol::wl_touch::Event","",32,N],[12,"time","","",32,N],[12,"surface","","",32,N],[12,"id","","",32,N],[12,"x","","",32,N],[12,"y","","",32,N],[13,"Up","smithay_client_toolkit::reexports::client::protocol::wl_touch","end of a touch event sequence",32,N],[12,"serial","smithay_client_toolkit::reexports::client::protocol::wl_touch::Event","",32,N],[12,"time","","",32,N],[12,"id","","",32,N],[13,"Motion","smithay_client_toolkit::reexports::client::protocol::wl_touch","update of touch point coordinates",32,N],[12,"time","smithay_client_toolkit::reexports::client::protocol::wl_touch::Event","",32,N],[12,"id","","",32,N],[12,"x","","",32,N],[12,"y","","",32,N],[13,"Frame","smithay_client_toolkit::reexports::client::protocol::wl_touch","end of touch frame event",32,N],[13,"Cancel","","touch session cancelled",32,N],[3,"WlTouch","","",N,N],[8,"RequestsTrait","","",N,N],[10,"release","","release the touch object",33,N],[0,"wl_subsurface","smithay_client_toolkit::reexports::client::protocol","sub-surface interface to a wl_surface",N,N],[4,"Error","smithay_client_toolkit::reexports::client::protocol::wl_subsurface","",N,N],[13,"BadSurface","","wl_surface is not a sibling or the parent",34,N],[4,"Request","","",N,N],[13,"Destroy","","remove sub-surface interface",35,N],[13,"SetPosition","","reposition the sub-surface",35,N],[12,"x","smithay_client_toolkit::reexports::client::protocol::wl_subsurface::Request","",35,N],[12,"y","","",35,N],[13,"PlaceAbove","smithay_client_toolkit::reexports::client::protocol::wl_subsurface","restack the sub-surface",35,N],[12,"sibling","smithay_client_toolkit::reexports::client::protocol::wl_subsurface::Request","",35,N],[13,"PlaceBelow","smithay_client_toolkit::reexports::client::protocol::wl_subsurface","restack the sub-surface",35,N],[12,"sibling","smithay_client_toolkit::reexports::client::protocol::wl_subsurface::Request","",35,N],[13,"SetSync","smithay_client_toolkit::reexports::client::protocol::wl_subsurface","set sub-surface to synchronized mode",35,N],[13,"SetDesync","","set sub-surface to desynchronized mode",35,N],[4,"Event","","",N,N],[3,"WlSubsurface","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","remove sub-surface interface",36,N],[10,"set_position","","reposition the sub-surface",36,N],[10,"place_above","","restack the sub-surface",36,N],[10,"place_below","","restack the sub-surface",36,N],[10,"set_sync","","set sub-surface to synchronized mode",36,N],[10,"set_desync","","set sub-surface to desynchronized mode",36,N],[0,"wl_buffer","smithay_client_toolkit::reexports::client::protocol","content for a wl_surface",N,N],[4,"Request","smithay_client_toolkit::reexports::client::protocol::wl_buffer","",N,N],[13,"Destroy","","destroy a buffer",37,N],[4,"Event","","",N,N],[13,"Release","","compositor releases buffer",38,N],[3,"WlBuffer","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy a buffer",39,N],[0,"wl_output","smithay_client_toolkit::reexports::client::protocol","compositor output region",N,N],[4,"Subpixel","smithay_client_toolkit::reexports::client::protocol::wl_output","subpixel geometry information",N,N],[13,"Unknown","","unknown geometry",40,N],[13,"None","","no geometry",40,N],[13,"HorizontalRgb","","horizontal RGB",40,N],[13,"HorizontalBgr","","horizontal BGR",40,N],[13,"VerticalRgb","","vertical RGB",40,N],[13,"VerticalBgr","","vertical BGR",40,N],[4,"Transform","","transform from framebuffer to output",N,N],[13,"Normal","","no transform",41,N],[13,"_90","","90 degrees counter-clockwise",41,N],[13,"_180","","180 degrees counter-clockwise",41,N],[13,"_270","","270 degrees counter-clockwise",41,N],[13,"Flipped","","180 degree flip around a vertical axis",41,N],[13,"Flipped90","","flip and rotate 90 degrees counter-clockwise",41,N],[13,"Flipped180","","flip and rotate 180 degrees counter-clockwise",41,N],[13,"Flipped270","","flip and rotate 270 degrees counter-clockwise",41,N],[3,"Mode","","mode information",N,N],[4,"Request","","",N,N],[13,"Release","","release the output object",42,N],[4,"Event","","",N,N],[13,"Geometry","","properties of the output",43,N],[12,"x","smithay_client_toolkit::reexports::client::protocol::wl_output::Event","",43,N],[12,"y","","",43,N],[12,"physical_width","","",43,N],[12,"physical_height","","",43,N],[12,"subpixel","","",43,N],[12,"make","","",43,N],[12,"model","","",43,N],[12,"transform","","",43,N],[13,"Mode","smithay_client_toolkit::reexports::client::protocol::wl_output","advertise available modes for the output",43,N],[12,"flags","smithay_client_toolkit::reexports::client::protocol::wl_output::Event","",43,N],[12,"width","","",43,N],[12,"height","","",43,N],[12,"refresh","","",43,N],[13,"Done","smithay_client_toolkit::reexports::client::protocol::wl_output","sent all information about output",43,N],[13,"Scale","","output scaling properties",43,N],[12,"factor","smithay_client_toolkit::reexports::client::protocol::wl_output::Event","",43,N],[3,"WlOutput","smithay_client_toolkit::reexports::client::protocol::wl_output","",N,N],[8,"RequestsTrait","","",N,N],[10,"release","","release the output object",44,N],[0,"wl_shell","smithay_client_toolkit::reexports::client::protocol","create desktop-style surfaces",N,N],[4,"Error","smithay_client_toolkit::reexports::client::protocol::wl_shell","",N,N],[13,"Role","","given wl_surface has another role",45,N],[4,"Request","","",N,N],[13,"GetShellSurface","","create a shell surface from a surface",46,N],[12,"id","smithay_client_toolkit::reexports::client::protocol::wl_shell::Request","",46,N],[12,"surface","","",46,N],[4,"Event","smithay_client_toolkit::reexports::client::protocol::wl_shell","",N,N],[3,"WlShell","","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_shell_surface","","create a shell surface from a surface",47,[[["self"],["proxy"]],["result",["newproxy"]]]],[0,"wl_shm_pool","smithay_client_toolkit::reexports::client::protocol","a shared memory pool",N,N],[4,"Request","smithay_client_toolkit::reexports::client::protocol::wl_shm_pool","",N,N],[13,"CreateBuffer","","create a buffer from the pool",48,N],[12,"id","smithay_client_toolkit::reexports::client::protocol::wl_shm_pool::Request","",48,N],[12,"offset","","",48,N],[12,"width","","",48,N],[12,"height","","",48,N],[12,"stride","","",48,N],[12,"format","","",48,N],[13,"Destroy","smithay_client_toolkit::reexports::client::protocol::wl_shm_pool","destroy the pool",48,N],[13,"Resize","","change the size of the pool mapping",48,N],[12,"size","smithay_client_toolkit::reexports::client::protocol::wl_shm_pool::Request","",48,N],[4,"Event","smithay_client_toolkit::reexports::client::protocol::wl_shm_pool","",N,N],[3,"WlShmPool","","",N,N],[8,"RequestsTrait","","",N,N],[10,"create_buffer","","create a buffer from the pool",49,[[["self"],["i32"],["i32"],["i32"],["i32"],["format"]],["result",["newproxy"]]]],[10,"destroy","","destroy the pool",49,N],[10,"resize","","change the size of the pool mapping",49,N],[0,"wl_display","smithay_client_toolkit::reexports::client::protocol","core global object",N,N],[4,"Error","smithay_client_toolkit::reexports::client::protocol::wl_display","global error values",N,N],[13,"InvalidObject","","server couldn't find object",50,N],[13,"InvalidMethod","","method doesn't exist on the specified interface",50,N],[13,"NoMemory","","server is out of memory",50,N],[4,"Request","","",N,N],[13,"Sync","","asynchronous roundtrip",51,N],[12,"callback","smithay_client_toolkit::reexports::client::protocol::wl_display::Request","",51,N],[13,"GetRegistry","smithay_client_toolkit::reexports::client::protocol::wl_display","get global registry object",51,N],[12,"registry","smithay_client_toolkit::reexports::client::protocol::wl_display::Request","",51,N],[4,"Event","smithay_client_toolkit::reexports::client::protocol::wl_display","",N,N],[13,"Error","","fatal error event",52,N],[12,"object_id","smithay_client_toolkit::reexports::client::protocol::wl_display::Event","",52,N],[12,"code","","",52,N],[12,"message","","",52,N],[13,"DeleteId","smithay_client_toolkit::reexports::client::protocol::wl_display","acknowledge object ID deletion",52,N],[12,"id","smithay_client_toolkit::reexports::client::protocol::wl_display::Event","",52,N],[3,"WlDisplay","smithay_client_toolkit::reexports::client::protocol::wl_display","",N,N],[8,"RequestsTrait","","",N,N],[10,"sync","","asynchronous roundtrip",53,[[["self"]],["result",["newproxy"]]]],[10,"get_registry","","get global registry object",53,[[["self"]],["result",["newproxy"]]]],[0,"wl_subcompositor","smithay_client_toolkit::reexports::client::protocol","sub-surface compositing",N,N],[4,"Error","smithay_client_toolkit::reexports::client::protocol::wl_subcompositor","",N,N],[13,"BadSurface","","the to-be sub-surface is invalid",54,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the subcompositor interface",55,N],[13,"GetSubsurface","","give a surface the role sub-surface",55,N],[12,"id","smithay_client_toolkit::reexports::client::protocol::wl_subcompositor::Request","",55,N],[12,"surface","","",55,N],[12,"parent","","",55,N],[4,"Event","smithay_client_toolkit::reexports::client::protocol::wl_subcompositor","",N,N],[3,"WlSubcompositor","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","unbind from the subcompositor interface",56,N],[10,"get_subsurface","","give a surface the role sub-surface",56,[[["self"],["proxy"],["proxy"]],["result",["newproxy"]]]],[0,"wl_registry","smithay_client_toolkit::reexports::client::protocol","global registry object",N,N],[4,"Request","smithay_client_toolkit::reexports::client::protocol::wl_registry","",N,N],[13,"Bind","","bind an object to the display",57,N],[12,"name","smithay_client_toolkit::reexports::client::protocol::wl_registry::Request","",57,N],[12,"id","","",57,N],[4,"Event","smithay_client_toolkit::reexports::client::protocol::wl_registry","",N,N],[13,"Global","","announce global object",58,N],[12,"name","smithay_client_toolkit::reexports::client::protocol::wl_registry::Event","",58,N],[12,"interface","","",58,N],[12,"version","","",58,N],[13,"GlobalRemove","smithay_client_toolkit::reexports::client::protocol::wl_registry","announce removal of global object",58,N],[12,"name","smithay_client_toolkit::reexports::client::protocol::wl_registry::Event","",58,N],[3,"WlRegistry","smithay_client_toolkit::reexports::client::protocol::wl_registry","",N,N],[8,"RequestsTrait","","",N,N],[10,"bind","","bind an object to the display",59,[[["self"],["u32"],["u32"]],["result",["newproxy"]]]],[0,"wl_shm","smithay_client_toolkit::reexports::client::protocol","shared memory support",N,N],[4,"Error","smithay_client_toolkit::reexports::client::protocol::wl_shm","wl_shm error values",N,N],[13,"InvalidFormat","","buffer format is not known",60,N],[13,"InvalidStride","","invalid size or stride during pool or buffer creation",60,N],[13,"InvalidFd","","mmapping the file descriptor failed",60,N],[4,"Format","","pixel formats",N,N],[13,"Argb8888","","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian",61,N],[13,"Xrgb8888","","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian",61,N],[13,"C8","","8-bit color index format, [7:0] C",61,N],[13,"Rgb332","","8-bit RGB format, [7:0] R:G:B 3:3:2",61,N],[13,"Bgr233","","8-bit BGR format, [7:0] B:G:R 2:3:3",61,N],[13,"Xrgb4444","","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian",61,N],[13,"Xbgr4444","","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian",61,N],[13,"Rgbx4444","","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian",61,N],[13,"Bgrx4444","","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian",61,N],[13,"Argb4444","","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian",61,N],[13,"Abgr4444","","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian",61,N],[13,"Rgba4444","","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian",61,N],[13,"Bgra4444","","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian",61,N],[13,"Xrgb1555","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian",61,N],[13,"Xbgr1555","","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little endian",61,N],[13,"Rgbx5551","","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little endian",61,N],[13,"Bgrx5551","","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little endian",61,N],[13,"Argb1555","","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little endian",61,N],[13,"Abgr1555","","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little endian",61,N],[13,"Rgba5551","","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little endian",61,N],[13,"Bgra5551","","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little endian",61,N],[13,"Rgb565","","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian",61,N],[13,"Bgr565","","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian",61,N],[13,"Rgb888","","24-bit RGB format, [23:0] R:G:B little endian",61,N],[13,"Bgr888","","24-bit BGR format, [23:0] B:G:R little endian",61,N],[13,"Xbgr8888","","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian",61,N],[13,"Rgbx8888","","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian",61,N],[13,"Bgrx8888","","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian",61,N],[13,"Abgr8888","","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian",61,N],[13,"Rgba8888","","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian",61,N],[13,"Bgra8888","","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian",61,N],[13,"Xrgb2101010","","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian",61,N],[13,"Xbgr2101010","","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian",61,N],[13,"Rgbx1010102","","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian",61,N],[13,"Bgrx1010102","","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian",61,N],[13,"Argb2101010","","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian",61,N],[13,"Abgr2101010","","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian",61,N],[13,"Rgba1010102","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian",61,N],[13,"Bgra1010102","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian",61,N],[13,"Yuyv","","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little endian",61,N],[13,"Yvyu","","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little endian",61,N],[13,"Uyvy","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little endian",61,N],[13,"Vyuy","","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little endian",61,N],[13,"Ayuv","","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little endian",61,N],[13,"Nv12","","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane",61,N],[13,"Nv21","","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane",61,N],[13,"Nv16","","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane",61,N],[13,"Nv61","","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane",61,N],[13,"Yuv410","","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) planes",61,N],[13,"Yvu410","","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) planes",61,N],[13,"Yuv411","","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) planes",61,N],[13,"Yvu411","","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) planes",61,N],[13,"Yuv420","","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) planes",61,N],[13,"Yvu420","","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) planes",61,N],[13,"Yuv422","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) planes",61,N],[13,"Yvu422","","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) planes",61,N],[13,"Yuv444","","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) planes",61,N],[13,"Yvu444","","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) planes",61,N],[4,"Request","","",N,N],[13,"CreatePool","","create a shm pool",62,N],[12,"id","smithay_client_toolkit::reexports::client::protocol::wl_shm::Request","",62,N],[12,"fd","","",62,N],[12,"size","","",62,N],[4,"Event","smithay_client_toolkit::reexports::client::protocol::wl_shm","",N,N],[13,"Format","","pixel format description",63,N],[12,"format","smithay_client_toolkit::reexports::client::protocol::wl_shm::Event","",63,N],[3,"WlShm","smithay_client_toolkit::reexports::client::protocol::wl_shm","",N,N],[8,"RequestsTrait","","",N,N],[10,"create_pool","","create a shm pool",64,[[["self"],["i32"],["i32"]],["result",["newproxy"]]]],[0,"wl_surface","smithay_client_toolkit::reexports::client::protocol","an onscreen surface",N,N],[4,"Error","smithay_client_toolkit::reexports::client::protocol::wl_surface","wl_surface error values",N,N],[13,"InvalidScale","","buffer scale value is invalid",65,N],[13,"InvalidTransform","","buffer transform value is invalid",65,N],[4,"Request","","",N,N],[13,"Destroy","","delete surface",66,N],[13,"Attach","","set the surface contents",66,N],[12,"buffer","smithay_client_toolkit::reexports::client::protocol::wl_surface::Request","",66,N],[12,"x","","",66,N],[12,"y","","",66,N],[13,"Damage","smithay_client_toolkit::reexports::client::protocol::wl_surface","mark part of the surface damaged",66,N],[12,"x","smithay_client_toolkit::reexports::client::protocol::wl_surface::Request","",66,N],[12,"y","","",66,N],[12,"width","","",66,N],[12,"height","","",66,N],[13,"Frame","smithay_client_toolkit::reexports::client::protocol::wl_surface","request a frame throttling hint",66,N],[12,"callback","smithay_client_toolkit::reexports::client::protocol::wl_surface::Request","",66,N],[13,"SetOpaqueRegion","smithay_client_toolkit::reexports::client::protocol::wl_surface","set opaque region",66,N],[12,"region","smithay_client_toolkit::reexports::client::protocol::wl_surface::Request","",66,N],[13,"SetInputRegion","smithay_client_toolkit::reexports::client::protocol::wl_surface","set input region",66,N],[12,"region","smithay_client_toolkit::reexports::client::protocol::wl_surface::Request","",66,N],[13,"Commit","smithay_client_toolkit::reexports::client::protocol::wl_surface","commit pending surface state",66,N],[13,"SetBufferTransform","","sets the buffer transformation",66,N],[12,"transform","smithay_client_toolkit::reexports::client::protocol::wl_surface::Request","",66,N],[13,"SetBufferScale","smithay_client_toolkit::reexports::client::protocol::wl_surface","sets the buffer scaling factor",66,N],[12,"scale","smithay_client_toolkit::reexports::client::protocol::wl_surface::Request","",66,N],[13,"DamageBuffer","smithay_client_toolkit::reexports::client::protocol::wl_surface","mark part of the surface damaged using buffer coordinates",66,N],[12,"x","smithay_client_toolkit::reexports::client::protocol::wl_surface::Request","",66,N],[12,"y","","",66,N],[12,"width","","",66,N],[12,"height","","",66,N],[4,"Event","smithay_client_toolkit::reexports::client::protocol::wl_surface","",N,N],[13,"Enter","","surface enters an output",67,N],[12,"output","smithay_client_toolkit::reexports::client::protocol::wl_surface::Event","",67,N],[13,"Leave","smithay_client_toolkit::reexports::client::protocol::wl_surface","surface leaves an output",67,N],[12,"output","smithay_client_toolkit::reexports::client::protocol::wl_surface::Event","",67,N],[3,"WlSurface","smithay_client_toolkit::reexports::client::protocol::wl_surface","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","delete surface",68,N],[10,"attach","","set the surface contents",68,N],[10,"damage","","mark part of the surface damaged",68,N],[10,"frame","","request a frame throttling hint",68,[[["self"]],["result",["newproxy"]]]],[10,"set_opaque_region","","set opaque region",68,N],[10,"set_input_region","","set input region",68,N],[10,"commit","","commit pending surface state",68,N],[10,"set_buffer_transform","","sets the buffer transformation",68,N],[10,"set_buffer_scale","","sets the buffer scaling factor",68,N],[10,"damage_buffer","","mark part of the surface damaged using buffer coordinates",68,N],[0,"wl_seat","smithay_client_toolkit::reexports::client::protocol","group of input devices",N,N],[3,"Capability","smithay_client_toolkit::reexports::client::protocol::wl_seat","seat capability bitmask",N,N],[4,"Request","","",N,N],[13,"GetPointer","","return pointer object",69,N],[12,"id","smithay_client_toolkit::reexports::client::protocol::wl_seat::Request","",69,N],[13,"GetKeyboard","smithay_client_toolkit::reexports::client::protocol::wl_seat","return keyboard object",69,N],[12,"id","smithay_client_toolkit::reexports::client::protocol::wl_seat::Request","",69,N],[13,"GetTouch","smithay_client_toolkit::reexports::client::protocol::wl_seat","return touch object",69,N],[12,"id","smithay_client_toolkit::reexports::client::protocol::wl_seat::Request","",69,N],[13,"Release","smithay_client_toolkit::reexports::client::protocol::wl_seat","release the seat object",69,N],[4,"Event","","",N,N],[13,"Capabilities","","seat capabilities changed",70,N],[12,"capabilities","smithay_client_toolkit::reexports::client::protocol::wl_seat::Event","",70,N],[13,"Name","smithay_client_toolkit::reexports::client::protocol::wl_seat","unique identifier for this seat",70,N],[12,"name","smithay_client_toolkit::reexports::client::protocol::wl_seat::Event","",70,N],[3,"WlSeat","smithay_client_toolkit::reexports::client::protocol::wl_seat","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_pointer","","return pointer object",71,[[["self"]],["result",["newproxy"]]]],[10,"get_keyboard","","return keyboard object",71,[[["self"]],["result",["newproxy"]]]],[10,"get_touch","","return touch object",71,[[["self"]],["result",["newproxy"]]]],[10,"release","","release the seat object",71,N],[0,"wl_data_device","smithay_client_toolkit::reexports::client::protocol","data transfer device",N,N],[4,"Error","smithay_client_toolkit::reexports::client::protocol::wl_data_device","",N,N],[13,"Role","","given wl_surface has another role",72,N],[4,"Request","","",N,N],[13,"StartDrag","","start drag-and-drop operation",73,N],[12,"source","smithay_client_toolkit::reexports::client::protocol::wl_data_device::Request","",73,N],[12,"origin","","",73,N],[12,"icon","","",73,N],[12,"serial","","",73,N],[13,"SetSelection","smithay_client_toolkit::reexports::client::protocol::wl_data_device","copy data to the selection",73,N],[12,"source","smithay_client_toolkit::reexports::client::protocol::wl_data_device::Request","",73,N],[12,"serial","","",73,N],[13,"Release","smithay_client_toolkit::reexports::client::protocol::wl_data_device","destroy data device",73,N],[4,"Event","","",N,N],[13,"DataOffer","","introduce a new wl_data_offer",74,N],[12,"id","smithay_client_toolkit::reexports::client::protocol::wl_data_device::Event","",74,N],[13,"Enter","smithay_client_toolkit::reexports::client::protocol::wl_data_device","initiate drag-and-drop session",74,N],[12,"serial","smithay_client_toolkit::reexports::client::protocol::wl_data_device::Event","",74,N],[12,"surface","","",74,N],[12,"x","","",74,N],[12,"y","","",74,N],[12,"id","","",74,N],[13,"Leave","smithay_client_toolkit::reexports::client::protocol::wl_data_device","end drag-and-drop session",74,N],[13,"Motion","","drag-and-drop session motion",74,N],[12,"time","smithay_client_toolkit::reexports::client::protocol::wl_data_device::Event","",74,N],[12,"x","","",74,N],[12,"y","","",74,N],[13,"Drop","smithay_client_toolkit::reexports::client::protocol::wl_data_device","end drag-and-drop session successfully",74,N],[13,"Selection","","advertise new selection",74,N],[12,"id","smithay_client_toolkit::reexports::client::protocol::wl_data_device::Event","",74,N],[3,"WlDataDevice","smithay_client_toolkit::reexports::client::protocol::wl_data_device","",N,N],[8,"RequestsTrait","","",N,N],[10,"start_drag","","start drag-and-drop operation",75,N],[10,"set_selection","","copy data to the selection",75,N],[10,"release","","destroy data device",75,N],[0,"wl_data_offer","smithay_client_toolkit::reexports::client::protocol","offer to transfer data",N,N],[4,"Error","smithay_client_toolkit::reexports::client::protocol::wl_data_offer","",N,N],[13,"InvalidFinish","","finish request was called untimely",76,N],[13,"InvalidActionMask","","action mask contains invalid values",76,N],[13,"InvalidAction","","action argument has an invalid value",76,N],[13,"InvalidOffer","","offer doesn't accept this request",76,N],[4,"Request","","",N,N],[13,"Accept","","accept one of the offered mime types",77,N],[12,"serial","smithay_client_toolkit::reexports::client::protocol::wl_data_offer::Request","",77,N],[12,"mime_type","","",77,N],[13,"Receive","smithay_client_toolkit::reexports::client::protocol::wl_data_offer","request that the data is transferred",77,N],[12,"mime_type","smithay_client_toolkit::reexports::client::protocol::wl_data_offer::Request","",77,N],[12,"fd","","",77,N],[13,"Destroy","smithay_client_toolkit::reexports::client::protocol::wl_data_offer","destroy data offer",77,N],[13,"Finish","","the offer will no longer be used",77,N],[13,"SetActions","","set the available/preferred drag-and-drop actions",77,N],[12,"dnd_actions","smithay_client_toolkit::reexports::client::protocol::wl_data_offer::Request","",77,N],[12,"preferred_action","","",77,N],[4,"Event","smithay_client_toolkit::reexports::client::protocol::wl_data_offer","",N,N],[13,"Offer","","advertise offered mime type",78,N],[12,"mime_type","smithay_client_toolkit::reexports::client::protocol::wl_data_offer::Event","",78,N],[13,"SourceActions","smithay_client_toolkit::reexports::client::protocol::wl_data_offer","notify the source-side available actions",78,N],[12,"source_actions","smithay_client_toolkit::reexports::client::protocol::wl_data_offer::Event","",78,N],[13,"Action","smithay_client_toolkit::reexports::client::protocol::wl_data_offer","notify the selected action",78,N],[12,"dnd_action","smithay_client_toolkit::reexports::client::protocol::wl_data_offer::Event","",78,N],[3,"WlDataOffer","smithay_client_toolkit::reexports::client::protocol::wl_data_offer","",N,N],[8,"RequestsTrait","","",N,N],[10,"accept","","accept one of the offered mime types",79,N],[10,"receive","","request that the data is transferred",79,N],[10,"destroy","","destroy data offer",79,N],[10,"finish","","the offer will no longer be used",79,N],[10,"set_actions","","set the available/preferred drag-and-drop actions",79,N],[0,"wl_pointer","smithay_client_toolkit::reexports::client::protocol","pointer input device",N,N],[4,"Error","smithay_client_toolkit::reexports::client::protocol::wl_pointer","",N,N],[13,"Role","","given wl_surface has another role",80,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","the button is not pressed",81,N],[13,"Pressed","","the button is pressed",81,N],[4,"Axis","","axis types",N,N],[13,"VerticalScroll","","vertical axis",82,N],[13,"HorizontalScroll","","horizontal axis",82,N],[4,"AxisSource","","axis source types",N,N],[13,"Wheel","","a physical wheel",83,N],[13,"Finger","","finger on a touch surface",83,N],[13,"Continuous","","continuous coordinate space",83,N],[4,"Request","","",N,N],[13,"SetCursor","","set the pointer surface",84,N],[12,"serial","smithay_client_toolkit::reexports::client::protocol::wl_pointer::Request","",84,N],[12,"surface","","",84,N],[12,"hotspot_x","","",84,N],[12,"hotspot_y","","",84,N],[13,"Release","smithay_client_toolkit::reexports::client::protocol::wl_pointer","release the pointer object",84,N],[4,"Event","","",N,N],[13,"Enter","","enter event",85,N],[12,"serial","smithay_client_toolkit::reexports::client::protocol::wl_pointer::Event","",85,N],[12,"surface","","",85,N],[12,"surface_x","","",85,N],[12,"surface_y","","",85,N],[13,"Leave","smithay_client_toolkit::reexports::client::protocol::wl_pointer","leave event",85,N],[12,"serial","smithay_client_toolkit::reexports::client::protocol::wl_pointer::Event","",85,N],[12,"surface","","",85,N],[13,"Motion","smithay_client_toolkit::reexports::client::protocol::wl_pointer","pointer motion event",85,N],[12,"time","smithay_client_toolkit::reexports::client::protocol::wl_pointer::Event","",85,N],[12,"surface_x","","",85,N],[12,"surface_y","","",85,N],[13,"Button","smithay_client_toolkit::reexports::client::protocol::wl_pointer","pointer button event",85,N],[12,"serial","smithay_client_toolkit::reexports::client::protocol::wl_pointer::Event","",85,N],[12,"time","","",85,N],[12,"button","","",85,N],[12,"state","","",85,N],[13,"Axis","smithay_client_toolkit::reexports::client::protocol::wl_pointer","axis event",85,N],[12,"time","smithay_client_toolkit::reexports::client::protocol::wl_pointer::Event","",85,N],[12,"axis","","",85,N],[12,"value","","",85,N],[13,"Frame","smithay_client_toolkit::reexports::client::protocol::wl_pointer","end of a pointer event sequence",85,N],[13,"AxisSource","","axis source event",85,N],[12,"axis_source","smithay_client_toolkit::reexports::client::protocol::wl_pointer::Event","",85,N],[13,"AxisStop","smithay_client_toolkit::reexports::client::protocol::wl_pointer","axis stop event",85,N],[12,"time","smithay_client_toolkit::reexports::client::protocol::wl_pointer::Event","",85,N],[12,"axis","","",85,N],[13,"AxisDiscrete","smithay_client_toolkit::reexports::client::protocol::wl_pointer","axis click event",85,N],[12,"axis","smithay_client_toolkit::reexports::client::protocol::wl_pointer::Event","",85,N],[12,"discrete","","",85,N],[3,"WlPointer","smithay_client_toolkit::reexports::client::protocol::wl_pointer","",N,N],[8,"RequestsTrait","","",N,N],[10,"set_cursor","","set the pointer surface",86,N],[10,"release","","release the pointer object",86,N],[14,"global_filter","smithay_client_toolkit::reexports::client","Convenience macro to create a `GlobalManager` callback",N,N],[3,"QueueToken","","A token representing this event queue",N,N],[3,"Display","","A connection to a wayland server",N,N],[4,"GlobalError","","An error that occured trying to bind a global",N,N],[13,"Missing","","The requested global was missing",87,N],[13,"VersionTooLow","","The global abvertized by the server has a lower version number than the one requested",87,N],[3,"GlobalManager","","An utility to manage global objects",N,N],[4,"ConnectError","","Enum representing the possible reasons why connecting to the wayland server failed",N,N],[13,"NoWaylandLib","","The library was compiled with the `dlopen` feature, and the `libwayland-client.so` library could not be found at runtime",88,N],[13,"NoCompositorListening","","Any needed library was found, but the listening socket of the server could not be found.",88,N],[13,"InvalidName","","The provided socket name is invalid",88,N],[3,"EventQueue","","An event queue for protocol messages",N,N],[3,"Proxy","","An handle to a wayland proxy",N,N],[4,"GlobalEvent","","Event provided to the user callback of GlobalManager",N,N],[13,"New","","A new global was created",89,N],[12,"id","smithay_client_toolkit::reexports::client::GlobalEvent","Id of the new global",89,N],[12,"interface","","Interface of the new global",89,N],[12,"version","","Maximum supported version of the new global",89,N],[13,"Removed","smithay_client_toolkit::reexports::client","A global was removed",89,N],[12,"id","smithay_client_toolkit::reexports::client::GlobalEvent","Id of the removed global",89,N],[12,"interface","","Interface of the removed global",89,N],[3,"ReadEventsGuard","smithay_client_toolkit::reexports::client","A guard over a read intention.",N,N],[3,"NewProxy","","A newly-created proxy that needs implementation",N,N],[0,"unstable","smithay_client_toolkit::reexports::protocols","Unstable protocols from wayland-protocols",N,N],[0,"fullscreen_shell","smithay_client_toolkit::reexports::protocols::unstable","Fullscreen shell protocol",N,N],[0,"v1","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell","",N,N],[0,"c_interfaces","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1","C interfaces for this protocol",N,N],[7,"zwp_fullscreen_shell_v1_requests","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::c_interfaces","",N,N],[7,"zwp_fullscreen_shell_v1_events","","",N,N],[7,"zwp_fullscreen_shell_v1_interface","","",N,N],[7,"zwp_fullscreen_shell_mode_feedback_v1_events","","",N,N],[7,"zwp_fullscreen_shell_mode_feedback_v1_interface","","",N,N],[7,"wl_surface_interface","","",N,N],[7,"wl_output_interface","","",N,N],[0,"client","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1","Client-side API of this protocol",N,N],[0,"zwp_fullscreen_shell_v1","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client","displays a single surface per output",N,N],[4,"Capability","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","capabilities advertised by the compositor",N,N],[13,"ArbitraryModes","","compositor is capable of almost any output mode",90,N],[13,"CursorPlane","","compositor has a separate cursor plane",90,N],[4,"PresentMethod","","different method to set the surface fullscreen",N,N],[13,"Default","","no preference, apply default policy",91,N],[13,"Center","","center the surface on the output",91,N],[13,"Zoom","","scale the surface, preserving aspect ratio, to the largest size that will fit on the output",91,N],[13,"ZoomCrop","","scale the surface, preserving aspect ratio, to fully fill the output cropping if needed",91,N],[13,"Stretch","","scale the surface to the size of the output ignoring aspect ratio",91,N],[4,"Error","","wl_fullscreen_shell error values",N,N],[13,"InvalidMethod","","present_method is not known",92,N],[4,"Request","","",N,N],[13,"Release","","release the wl_fullscreen_shell interface",93,N],[13,"PresentSurface","","present surface for display",93,N],[12,"surface","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Request","",93,N],[12,"method","","",93,N],[12,"output","","",93,N],[13,"PresentSurfaceForMode","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","present surface for display at a particular mode",93,N],[12,"surface","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Request","",93,N],[12,"output","","",93,N],[12,"framerate","","",93,N],[12,"feedback","","",93,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",N,N],[13,"Capability","","advertises a capability of the compositor",94,N],[12,"capability","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Event","",94,N],[3,"ZwpFullscreenShellV1","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"release","","release the wl_fullscreen_shell interface",95,N],[10,"present_surface","","present surface for display",95,N],[10,"present_surface_for_mode","","present surface for display at a particular mode",95,[[["self"],["proxy"],["proxy"],["i32"]],["result",["newproxy"]]]],[0,"zwp_fullscreen_shell_mode_feedback_v1","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client","",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",N,N],[4,"Event","","",N,N],[13,"ModeSuccessful","","mode switch succeeded",96,N],[13,"ModeFailed","","mode switch failed",96,N],[13,"PresentCancelled","","mode switch cancelled",96,N],[3,"ZwpFullscreenShellModeFeedbackV1","","",N,N],[8,"RequestsTrait","","",N,N],[0,"idle_inhibit","smithay_client_toolkit::reexports::protocols::unstable","Screensaver inhibition protocol",N,N],[0,"v1","smithay_client_toolkit::reexports::protocols::unstable::idle_inhibit","",N,N],[0,"c_interfaces","smithay_client_toolkit::reexports::protocols::unstable::idle_inhibit::v1","C interfaces for this protocol",N,N],[7,"zwp_idle_inhibit_manager_v1_requests","smithay_client_toolkit::reexports::protocols::unstable::idle_inhibit::v1::c_interfaces","",N,N],[7,"zwp_idle_inhibit_manager_v1_interface","","",N,N],[7,"zwp_idle_inhibitor_v1_requests","","",N,N],[7,"zwp_idle_inhibitor_v1_interface","","",N,N],[0,"client","smithay_client_toolkit::reexports::protocols::unstable::idle_inhibit::v1","Client-side API of this protocol",N,N],[0,"zwp_idle_inhibit_manager_v1","smithay_client_toolkit::reexports::protocols::unstable::idle_inhibit::v1::client","control behavior when display idles",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",N,N],[13,"Destroy","","destroy the idle inhibitor object",97,N],[13,"CreateInhibitor","","create a new inhibitor object",97,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1::Request","",97,N],[12,"surface","","",97,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",N,N],[3,"ZwpIdleInhibitManagerV1","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the idle inhibitor object",98,N],[10,"create_inhibitor","","create a new inhibitor object",98,[[["self"],["proxy"]],["result",["newproxy"]]]],[0,"zwp_idle_inhibitor_v1","smithay_client_toolkit::reexports::protocols::unstable::idle_inhibit::v1::client","context object for inhibiting idle behavior",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",N,N],[13,"Destroy","","destroy the idle inhibitor object",99,N],[4,"Event","","",N,N],[3,"ZwpIdleInhibitorV1","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the idle inhibitor object",100,N],[0,"input_method","smithay_client_toolkit::reexports::protocols::unstable","Input method protocol",N,N],[0,"v1","smithay_client_toolkit::reexports::protocols::unstable::input_method","",N,N],[0,"c_interfaces","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1","C interfaces for this protocol",N,N],[7,"zwp_input_method_context_v1_requests","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::c_interfaces","",N,N],[7,"zwp_input_method_context_v1_events","","",N,N],[7,"zwp_input_method_context_v1_interface","","",N,N],[7,"zwp_input_method_v1_events","","",N,N],[7,"zwp_input_method_v1_interface","","",N,N],[7,"zwp_input_panel_v1_requests","","",N,N],[7,"zwp_input_panel_v1_interface","","",N,N],[7,"zwp_input_panel_surface_v1_requests","","",N,N],[7,"zwp_input_panel_surface_v1_interface","","",N,N],[7,"wl_keyboard_interface","","",N,N],[0,"client","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1","Client-side API of this protocol",N,N],[0,"zwp_input_method_context_v1","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client","input method context",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",N,N],[13,"Destroy","","This is a destructor, once sent this object cannot be used any longer.",101,N],[13,"CommitString","","commit string",101,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",101,N],[12,"text","","",101,N],[13,"PreeditString","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","pre-edit string",101,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",101,N],[12,"text","","",101,N],[12,"commit","","",101,N],[13,"PreeditStyling","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","pre-edit styling",101,N],[12,"index","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",101,N],[12,"length","","",101,N],[12,"style","","",101,N],[13,"PreeditCursor","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","pre-edit cursor",101,N],[12,"index","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",101,N],[13,"DeleteSurroundingText","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","delete text",101,N],[12,"index","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",101,N],[12,"length","","",101,N],[13,"CursorPosition","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","set cursor to a new position",101,N],[12,"index","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",101,N],[12,"anchor","","",101,N],[13,"ModifiersMap","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",101,N],[12,"map","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",101,N],[13,"Keysym","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","keysym",101,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",101,N],[12,"time","","",101,N],[12,"sym","","",101,N],[12,"state","","",101,N],[12,"modifiers","","",101,N],[13,"GrabKeyboard","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","grab hardware keyboard",101,N],[12,"keyboard","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",101,N],[13,"Key","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","forward key event",101,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",101,N],[12,"time","","",101,N],[12,"key","","",101,N],[12,"state","","",101,N],[13,"Modifiers","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","forward modifiers event",101,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",101,N],[12,"mods_depressed","","",101,N],[12,"mods_latched","","",101,N],[12,"mods_locked","","",101,N],[12,"group","","",101,N],[13,"Language","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",101,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",101,N],[12,"language","","",101,N],[13,"TextDirection","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",101,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",101,N],[12,"direction","","",101,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",N,N],[13,"SurroundingText","","surrounding text event",102,N],[12,"text","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",102,N],[12,"cursor","","",102,N],[12,"anchor","","",102,N],[13,"Reset","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",102,N],[13,"ContentType","","",102,N],[12,"hint","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",102,N],[12,"purpose","","",102,N],[13,"InvokeAction","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",102,N],[12,"button","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",102,N],[12,"index","","",102,N],[13,"CommitState","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",102,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",102,N],[13,"PreferredLanguage","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",102,N],[12,"language","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",102,N],[3,"ZwpInputMethodContextV1","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","This is a destructor, you cannot send requests to this object any longer once this method is called.",103,N],[10,"commit_string","","commit string",103,N],[10,"preedit_string","","pre-edit string",103,N],[10,"preedit_styling","","pre-edit styling",103,N],[10,"preedit_cursor","","pre-edit cursor",103,N],[10,"delete_surrounding_text","","delete text",103,N],[10,"cursor_position","","set cursor to a new position",103,N],[10,"modifiers_map","","",103,N],[10,"keysym","","keysym",103,N],[10,"grab_keyboard","","grab hardware keyboard",103,[[["self"]],["result",["newproxy"]]]],[10,"key","","forward key event",103,N],[10,"modifiers","","forward modifiers event",103,N],[10,"language","","",103,N],[10,"text_direction","","",103,N],[0,"zwp_input_method_v1","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client","input method",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_v1","",N,N],[4,"Event","","",N,N],[13,"Activate","","activate event",104,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_v1::Event","",104,N],[13,"Deactivate","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_v1","deactivate event",104,N],[12,"context","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_v1::Event","",104,N],[3,"ZwpInputMethodV1","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_v1","",N,N],[8,"RequestsTrait","","",N,N],[0,"zwp_input_panel_v1","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client","interface for implementing keyboards",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",N,N],[13,"GetInputPanelSurface","","",105,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_panel_v1::Request","",105,N],[12,"surface","","",105,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",N,N],[3,"ZwpInputPanelV1","","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_input_panel_surface","","",106,[[["self"],["proxy"]],["result",["newproxy"]]]],[0,"zwp_input_panel_surface_v1","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client","",N,N],[4,"Position","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",N,N],[13,"CenterBottom","","",107,N],[4,"Request","","",N,N],[13,"SetToplevel","","set the surface type as a keyboard",108,N],[12,"output","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1::Request","",108,N],[12,"position","","",108,N],[13,"SetOverlayPanel","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","set the surface type as an overlay panel",108,N],[4,"Event","","",N,N],[3,"ZwpInputPanelSurfaceV1","","",N,N],[8,"RequestsTrait","","",N,N],[10,"set_toplevel","","set the surface type as a keyboard",109,N],[10,"set_overlay_panel","","set the surface type as an overlay panel",109,N],[0,"keyboard_shortcuts_inhibit","smithay_client_toolkit::reexports::protocols::unstable","Protocol for inhibiting the compositor keyboard shortcuts",N,N],[0,"v1","smithay_client_toolkit::reexports::protocols::unstable::keyboard_shortcuts_inhibit","",N,N],[0,"c_interfaces","smithay_client_toolkit::reexports::protocols::unstable::keyboard_shortcuts_inhibit::v1","C interfaces for this protocol",N,N],[7,"zwp_keyboard_shortcuts_inhibit_manager_v1_requests","smithay_client_toolkit::reexports::protocols::unstable::keyboard_shortcuts_inhibit::v1::c_interfaces","",N,N],[7,"zwp_keyboard_shortcuts_inhibit_manager_v1_interface","","",N,N],[7,"zwp_keyboard_shortcuts_inhibitor_v1_requests","","",N,N],[7,"zwp_keyboard_shortcuts_inhibitor_v1_events","","",N,N],[7,"zwp_keyboard_shortcuts_inhibitor_v1_interface","","",N,N],[7,"wl_seat_interface","","",N,N],[0,"client","smithay_client_toolkit::reexports::protocols::unstable::keyboard_shortcuts_inhibit::v1","Client-side API of this protocol",N,N],[0,"zwp_keyboard_shortcuts_inhibit_manager_v1","smithay_client_toolkit::reexports::protocols::unstable::keyboard_shortcuts_inhibit::v1::client","context object for keyboard grab_manager",N,N],[4,"Error","smithay_client_toolkit::reexports::protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",N,N],[13,"AlreadyInhibited","","the shortcuts are already inhibited for this surface",110,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",111,N],[13,"InhibitShortcuts","","create a new keyboard shortcuts inhibitor object",111,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1::Request","",111,N],[12,"surface","","",111,N],[12,"seat","","",111,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",N,N],[3,"ZwpKeyboardShortcutsInhibitManagerV1","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the keyboard shortcuts inhibitor object",112,N],[10,"inhibit_shortcuts","","create a new keyboard shortcuts inhibitor object",112,[[["self"],["proxy"],["proxy"]],["result",["newproxy"]]]],[0,"zwp_keyboard_shortcuts_inhibitor_v1","smithay_client_toolkit::reexports::protocols::unstable::keyboard_shortcuts_inhibit::v1::client","context object for keyboard shortcuts inhibitor",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",N,N],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",113,N],[4,"Event","","",N,N],[13,"Active","","shortcuts are inhibited",114,N],[13,"Inactive","","shortcuts are restored",114,N],[3,"ZwpKeyboardShortcutsInhibitorV1","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the keyboard shortcuts inhibitor object",115,N],[0,"linux_dmabuf","smithay_client_toolkit::reexports::protocols::unstable","Linux DMA-BUF protocol",N,N],[0,"v1","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf","",N,N],[0,"c_interfaces","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1","C interfaces for this protocol",N,N],[7,"zwp_linux_dmabuf_v1_requests","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::c_interfaces","",N,N],[7,"zwp_linux_dmabuf_v1_events","","",N,N],[7,"zwp_linux_dmabuf_v1_interface","","",N,N],[7,"zwp_linux_buffer_params_v1_requests","","",N,N],[7,"zwp_linux_buffer_params_v1_events","","",N,N],[7,"zwp_linux_buffer_params_v1_interface","","",N,N],[7,"wl_buffer_interface","","",N,N],[0,"client","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1","Client-side API of this protocol",N,N],[0,"zwp_linux_dmabuf_v1","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client","factory for creating dmabuf-based wl_buffers",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",N,N],[13,"Destroy","","unbind the factory",116,N],[13,"CreateParams","","create a temporary object for buffer parameters",116,N],[12,"params_id","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1::Request","",116,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",N,N],[13,"Format","","supported buffer format",117,N],[12,"format","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1::Event","",117,N],[13,"Modifier","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","supported buffer format modifier",117,N],[12,"format","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1::Event","",117,N],[12,"modifier_hi","","",117,N],[12,"modifier_lo","","",117,N],[3,"ZwpLinuxDmabufV1","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","unbind the factory",118,N],[10,"create_params","","create a temporary object for buffer parameters",118,[[["self"]],["result",["newproxy"]]]],[0,"zwp_linux_buffer_params_v1","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client","parameters for creating a dmabuf-based wl_buffer",N,N],[4,"Error","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",N,N],[13,"AlreadyUsed","","the dmabuf_batch object has already been used to create a wl_buffer",119,N],[13,"PlaneIdx","","plane index out of bounds",119,N],[13,"PlaneSet","","the plane index was already set",119,N],[13,"Incomplete","","missing or too many planes to create a buffer",119,N],[13,"InvalidFormat","","format not supported",119,N],[13,"InvalidDimensions","","invalid width or height",119,N],[13,"OutOfBounds","","offset + stride * height goes out of dmabuf bounds",119,N],[13,"InvalidWlBuffer","","invalid wl_buffer resulted from importing dmabufs via the create_immed request on given buffer_params",119,N],[4,"Flags","","",N,N],[13,"YInvert","","contents are y-inverted",120,N],[13,"Interlaced","","content is interlaced",120,N],[13,"BottomFirst","","bottom field first",120,N],[4,"Request","","",N,N],[13,"Destroy","","delete this object, used or not",121,N],[13,"Add","","add a dmabuf to the temporary set",121,N],[12,"fd","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Request","",121,N],[12,"plane_idx","","",121,N],[12,"offset","","",121,N],[12,"stride","","",121,N],[12,"modifier_hi","","",121,N],[12,"modifier_lo","","",121,N],[13,"Create","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","create a wl_buffer from the given dmabufs",121,N],[12,"width","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Request","",121,N],[12,"height","","",121,N],[12,"format","","",121,N],[12,"flags","","",121,N],[13,"CreateImmed","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","immediately create a wl_buffer from the given dmabufs",121,N],[12,"buffer_id","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Request","",121,N],[12,"width","","",121,N],[12,"height","","",121,N],[12,"format","","",121,N],[12,"flags","","",121,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",N,N],[13,"Created","","buffer creation succeeded",122,N],[12,"buffer","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Event","",122,N],[13,"Failed","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","buffer creation failed",122,N],[3,"ZwpLinuxBufferParamsV1","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","delete this object, used or not",123,N],[10,"add","","add a dmabuf to the temporary set",123,N],[10,"create","","create a wl_buffer from the given dmabufs",123,N],[10,"create_immed","","immediately create a wl_buffer from the given dmabufs",123,[[["self"],["i32"],["i32"],["u32"],["u32"]],["result",["newproxy"]]]],[0,"pointer_constraints","smithay_client_toolkit::reexports::protocols::unstable","protocol for constraining pointer motions",N,N],[0,"v1","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints","",N,N],[0,"c_interfaces","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1","C interfaces for this protocol",N,N],[7,"zwp_pointer_constraints_v1_requests","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::c_interfaces","",N,N],[7,"zwp_pointer_constraints_v1_interface","","",N,N],[7,"zwp_locked_pointer_v1_requests","","",N,N],[7,"zwp_locked_pointer_v1_events","","",N,N],[7,"zwp_locked_pointer_v1_interface","","",N,N],[7,"zwp_confined_pointer_v1_requests","","",N,N],[7,"zwp_confined_pointer_v1_events","","",N,N],[7,"zwp_confined_pointer_v1_interface","","",N,N],[7,"wl_region_interface","","",N,N],[7,"wl_pointer_interface","","",N,N],[0,"client","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1","Client-side API of this protocol",N,N],[0,"zwp_pointer_constraints_v1","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client","constrain the movement of a pointer",N,N],[4,"Error","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","wp_pointer_constraints error values",N,N],[13,"AlreadyConstrained","","pointer constraint already requested on that surface",124,N],[4,"Lifetime","","constraint lifetime",N,N],[13,"Oneshot","","the pointer constraint is defunct once deactivated",125,N],[13,"Persistent","","the pointer constraint may reactivate",125,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pointer constraints manager object",126,N],[13,"LockPointer","","lock pointer to a position",126,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1::Request","",126,N],[12,"surface","","",126,N],[12,"pointer","","",126,N],[12,"region","","",126,N],[12,"lifetime","","",126,N],[13,"ConfinePointer","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","confine pointer to a region",126,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1::Request","",126,N],[12,"surface","","",126,N],[12,"pointer","","",126,N],[12,"region","","",126,N],[12,"lifetime","","",126,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",N,N],[3,"ZwpPointerConstraintsV1","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the pointer constraints manager object",127,N],[10,"lock_pointer","","lock pointer to a position",127,[[["self"],["proxy"],["proxy"],["option",["proxy"]],["u32"]],["result",["newproxy"]]]],[10,"confine_pointer","","confine pointer to a region",127,[[["self"],["proxy"],["proxy"],["option",["proxy"]],["u32"]],["result",["newproxy"]]]],[0,"zwp_locked_pointer_v1","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client","receive relative pointer motion events",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",N,N],[13,"Destroy","","destroy the locked pointer object",128,N],[13,"SetCursorPositionHint","","set the pointer cursor position hint",128,N],[12,"surface_x","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1::Request","",128,N],[12,"surface_y","","",128,N],[13,"SetRegion","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","set a new lock region",128,N],[12,"region","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1::Request","",128,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",N,N],[13,"Locked","","lock activation event",129,N],[13,"Unlocked","","lock deactivation event",129,N],[3,"ZwpLockedPointerV1","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the locked pointer object",130,N],[10,"set_cursor_position_hint","","set the pointer cursor position hint",130,N],[10,"set_region","","set a new lock region",130,N],[0,"zwp_confined_pointer_v1","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client","confined pointer object",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",N,N],[13,"Destroy","","destroy the confined pointer object",131,N],[13,"SetRegion","","set a new confine region",131,N],[12,"region","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1::Request","",131,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",N,N],[13,"Confined","","pointer confined",132,N],[13,"Unconfined","","pointer unconfined",132,N],[3,"ZwpConfinedPointerV1","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the confined pointer object",133,N],[10,"set_region","","set a new confine region",133,N],[0,"pointer_gestures","smithay_client_toolkit::reexports::protocols::unstable","Pointer gestures protocol",N,N],[0,"v1","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures","",N,N],[0,"c_interfaces","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1","C interfaces for this protocol",N,N],[7,"zwp_pointer_gestures_v1_requests","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::c_interfaces","",N,N],[7,"zwp_pointer_gestures_v1_interface","","",N,N],[7,"zwp_pointer_gesture_swipe_v1_requests","","",N,N],[7,"zwp_pointer_gesture_swipe_v1_events","","",N,N],[7,"zwp_pointer_gesture_swipe_v1_interface","","",N,N],[7,"zwp_pointer_gesture_pinch_v1_requests","","",N,N],[7,"zwp_pointer_gesture_pinch_v1_events","","",N,N],[7,"zwp_pointer_gesture_pinch_v1_interface","","",N,N],[0,"client","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1","Client-side API of this protocol",N,N],[0,"zwp_pointer_gestures_v1","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client","touchpad gestures",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",N,N],[13,"GetSwipeGesture","","get swipe gesture",134,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1::Request","",134,N],[12,"pointer","","",134,N],[13,"GetPinchGesture","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","get pinch gesture",134,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1::Request","",134,N],[12,"pointer","","",134,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",N,N],[3,"ZwpPointerGesturesV1","","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_swipe_gesture","","get swipe gesture",135,[[["self"],["proxy"]],["result",["newproxy"]]]],[10,"get_pinch_gesture","","get pinch gesture",135,[[["self"],["proxy"]],["result",["newproxy"]]]],[0,"zwp_pointer_gesture_swipe_v1","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client","a swipe gesture object",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",N,N],[13,"Destroy","","destroy the pointer swipe gesture object",136,N],[4,"Event","","",N,N],[13,"Begin","","multi-finger swipe begin",137,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1::Event","",137,N],[12,"time","","",137,N],[12,"surface","","",137,N],[12,"fingers","","",137,N],[13,"Update","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","multi-finger swipe motion",137,N],[12,"time","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1::Event","",137,N],[12,"dx","","",137,N],[12,"dy","","",137,N],[13,"End","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","multi-finger swipe end",137,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1::Event","",137,N],[12,"time","","",137,N],[12,"cancelled","","",137,N],[3,"ZwpPointerGestureSwipeV1","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the pointer swipe gesture object",138,N],[0,"zwp_pointer_gesture_pinch_v1","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client","a pinch gesture object",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",N,N],[13,"Destroy","","destroy the pinch gesture object",139,N],[4,"Event","","",N,N],[13,"Begin","","multi-finger pinch begin",140,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1::Event","",140,N],[12,"time","","",140,N],[12,"surface","","",140,N],[12,"fingers","","",140,N],[13,"Update","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","multi-finger pinch motion",140,N],[12,"time","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1::Event","",140,N],[12,"dx","","",140,N],[12,"dy","","",140,N],[12,"scale","","",140,N],[12,"rotation","","",140,N],[13,"End","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","multi-finger pinch end",140,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1::Event","",140,N],[12,"time","","",140,N],[12,"cancelled","","",140,N],[3,"ZwpPointerGesturePinchV1","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the pinch gesture object",141,N],[0,"relative_pointer","smithay_client_toolkit::reexports::protocols::unstable","protocol for relative pointer motion events",N,N],[0,"v1","smithay_client_toolkit::reexports::protocols::unstable::relative_pointer","",N,N],[0,"c_interfaces","smithay_client_toolkit::reexports::protocols::unstable::relative_pointer::v1","C interfaces for this protocol",N,N],[7,"zwp_relative_pointer_manager_v1_requests","smithay_client_toolkit::reexports::protocols::unstable::relative_pointer::v1::c_interfaces","",N,N],[7,"zwp_relative_pointer_manager_v1_interface","","",N,N],[7,"zwp_relative_pointer_v1_requests","","",N,N],[7,"zwp_relative_pointer_v1_events","","",N,N],[7,"zwp_relative_pointer_v1_interface","","",N,N],[0,"client","smithay_client_toolkit::reexports::protocols::unstable::relative_pointer::v1","Client-side API of this protocol",N,N],[0,"zwp_relative_pointer_manager_v1","smithay_client_toolkit::reexports::protocols::unstable::relative_pointer::v1::client","get relative pointer objects",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",N,N],[13,"Destroy","","destroy the relative pointer manager object",142,N],[13,"GetRelativePointer","","get a relative pointer object",142,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1::Request","",142,N],[12,"pointer","","",142,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",N,N],[3,"ZwpRelativePointerManagerV1","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the relative pointer manager object",143,N],[10,"get_relative_pointer","","get a relative pointer object",143,[[["self"],["proxy"]],["result",["newproxy"]]]],[0,"zwp_relative_pointer_v1","smithay_client_toolkit::reexports::protocols::unstable::relative_pointer::v1::client","relative pointer object",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",N,N],[13,"Destroy","","release the relative pointer object",144,N],[4,"Event","","",N,N],[13,"RelativeMotion","","relative pointer motion",145,N],[12,"utime_hi","smithay_client_toolkit::reexports::protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1::Event","",145,N],[12,"utime_lo","","",145,N],[12,"dx","","",145,N],[12,"dy","","",145,N],[12,"dx_unaccel","","",145,N],[12,"dy_unaccel","","",145,N],[3,"ZwpRelativePointerV1","smithay_client_toolkit::reexports::protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","release the relative pointer object",146,N],[0,"tablet","smithay_client_toolkit::reexports::protocols::unstable","Wayland protocol for graphics tablets",N,N],[0,"v1","smithay_client_toolkit::reexports::protocols::unstable::tablet","",N,N],[0,"c_interfaces","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1","C interfaces for this protocol",N,N],[7,"zwp_tablet_manager_v1_requests","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::c_interfaces","",N,N],[7,"zwp_tablet_manager_v1_interface","","",N,N],[7,"zwp_tablet_seat_v1_requests","","",N,N],[7,"zwp_tablet_seat_v1_events","","",N,N],[7,"zwp_tablet_seat_v1_interface","","",N,N],[7,"zwp_tablet_tool_v1_requests","","",N,N],[7,"zwp_tablet_tool_v1_events","","",N,N],[7,"zwp_tablet_tool_v1_interface","","",N,N],[7,"zwp_tablet_v1_requests","","",N,N],[7,"zwp_tablet_v1_events","","",N,N],[7,"zwp_tablet_v1_interface","","",N,N],[0,"client","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1","Client-side API of this protocol",N,N],[0,"zwp_tablet_manager_v1","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client","controller object for graphic tablet devices",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",N,N],[13,"GetTabletSeat","","get the tablet seat",147,N],[12,"tablet_seat","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1::Request","",147,N],[12,"seat","","",147,N],[13,"Destroy","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","release the memory for the tablet manager object",147,N],[4,"Event","","",N,N],[3,"ZwpTabletManagerV1","","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_tablet_seat","","get the tablet seat",148,[[["self"],["proxy"]],["result",["newproxy"]]]],[10,"destroy","","release the memory for the tablet manager object",148,N],[0,"zwp_tablet_seat_v1","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client","controller object for graphic tablet devices of a seat",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",N,N],[13,"Destroy","","release the memory for the tablet seat object",149,N],[4,"Event","","",N,N],[13,"TabletAdded","","new device notification",150,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1::Event","",150,N],[13,"ToolAdded","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","a new tool has been used with a tablet",150,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1::Event","",150,N],[3,"ZwpTabletSeatV1","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","release the memory for the tablet seat object",151,N],[0,"zwp_tablet_tool_v1","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client","a physical tablet tool",N,N],[4,"Type","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","a physical tool type",N,N],[13,"Pen","","Pen",152,N],[13,"Eraser","","Eraser",152,N],[13,"Brush","","Brush",152,N],[13,"Pencil","","Pencil",152,N],[13,"Airbrush","","Airbrush",152,N],[13,"Finger","","Finger",152,N],[13,"Mouse","","Mouse",152,N],[13,"Lens","","Lens",152,N],[4,"Capability","","capability flags for a tool",N,N],[13,"Tilt","","Tilt axes",153,N],[13,"Pressure","","Pressure axis",153,N],[13,"Distance","","Distance axis",153,N],[13,"Rotation","","Z-rotation axis",153,N],[13,"Slider","","Slider axis",153,N],[13,"Wheel","","Wheel axis",153,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","button is not pressed",154,N],[13,"Pressed","","button is pressed",154,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",155,N],[4,"Request","","",N,N],[13,"SetCursor","","set the tablet tool's surface",156,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Request","",156,N],[12,"surface","","",156,N],[12,"hotspot_x","","",156,N],[12,"hotspot_y","","",156,N],[13,"Destroy","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","destroy the tool object",156,N],[4,"Event","","",N,N],[13,"Type","","tool type",157,N],[12,"tool_type","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",157,N],[13,"HardwareSerial","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","unique hardware serial number of the tool",157,N],[12,"hardware_serial_hi","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",157,N],[12,"hardware_serial_lo","","",157,N],[13,"HardwareIdWacom","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","hardware id notification in Wacom's format",157,N],[12,"hardware_id_hi","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",157,N],[12,"hardware_id_lo","","",157,N],[13,"Capability","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tool capability notification",157,N],[12,"capability","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",157,N],[13,"Done","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tool description events sequence complete",157,N],[13,"Removed","","tool removed",157,N],[13,"ProximityIn","","proximity in event",157,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",157,N],[12,"tablet","","",157,N],[12,"surface","","",157,N],[13,"ProximityOut","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","proximity out event",157,N],[13,"Down","","tablet tool is making contact",157,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",157,N],[13,"Up","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tablet tool is no longer making contact",157,N],[13,"Motion","","motion event",157,N],[12,"x","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",157,N],[12,"y","","",157,N],[13,"Pressure","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","pressure change event",157,N],[12,"pressure","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",157,N],[13,"Distance","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","distance change event",157,N],[12,"distance","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",157,N],[13,"Tilt","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tilt change event",157,N],[12,"tilt_x","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",157,N],[12,"tilt_y","","",157,N],[13,"Rotation","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","z-rotation change event",157,N],[12,"degrees","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",157,N],[13,"Slider","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","Slider position change event",157,N],[12,"position","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",157,N],[13,"Wheel","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","Wheel delta event",157,N],[12,"degrees","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",157,N],[12,"clicks","","",157,N],[13,"Button","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","button event",157,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",157,N],[12,"button","","",157,N],[12,"state","","",157,N],[13,"Frame","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","frame event",157,N],[12,"time","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",157,N],[3,"ZwpTabletToolV1","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"set_cursor","","set the tablet tool's surface",158,N],[10,"destroy","","destroy the tool object",158,N],[0,"zwp_tablet_v1","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client","graphics tablet device",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_v1","",N,N],[13,"Destroy","","destroy the tablet object",159,N],[4,"Event","","",N,N],[13,"Name","","tablet device name",160,N],[12,"name","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_v1::Event","",160,N],[13,"Id","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_v1","tablet device USB vendor/product id",160,N],[12,"vid","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_v1::Event","",160,N],[12,"pid","","",160,N],[13,"Path","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_v1","path to the device",160,N],[12,"path","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_v1::Event","",160,N],[13,"Done","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_v1","tablet description events sequence complete",160,N],[13,"Removed","","tablet removed event",160,N],[3,"ZwpTabletV1","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the tablet object",161,N],[0,"v2","smithay_client_toolkit::reexports::protocols::unstable::tablet","",N,N],[0,"c_interfaces","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2","C interfaces for this protocol",N,N],[7,"zwp_tablet_manager_v2_requests","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::c_interfaces","",N,N],[7,"zwp_tablet_manager_v2_interface","","",N,N],[7,"zwp_tablet_seat_v2_requests","","",N,N],[7,"zwp_tablet_seat_v2_events","","",N,N],[7,"zwp_tablet_seat_v2_interface","","",N,N],[7,"zwp_tablet_tool_v2_requests","","",N,N],[7,"zwp_tablet_tool_v2_events","","",N,N],[7,"zwp_tablet_tool_v2_interface","","",N,N],[7,"zwp_tablet_v2_requests","","",N,N],[7,"zwp_tablet_v2_events","","",N,N],[7,"zwp_tablet_v2_interface","","",N,N],[7,"zwp_tablet_pad_ring_v2_requests","","",N,N],[7,"zwp_tablet_pad_ring_v2_events","","",N,N],[7,"zwp_tablet_pad_ring_v2_interface","","",N,N],[7,"zwp_tablet_pad_strip_v2_requests","","",N,N],[7,"zwp_tablet_pad_strip_v2_events","","",N,N],[7,"zwp_tablet_pad_strip_v2_interface","","",N,N],[7,"zwp_tablet_pad_group_v2_requests","","",N,N],[7,"zwp_tablet_pad_group_v2_events","","",N,N],[7,"zwp_tablet_pad_group_v2_interface","","",N,N],[7,"zwp_tablet_pad_v2_requests","","",N,N],[7,"zwp_tablet_pad_v2_events","","",N,N],[7,"zwp_tablet_pad_v2_interface","","",N,N],[0,"client","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2","Client-side API of this protocol",N,N],[0,"zwp_tablet_manager_v2","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client","controller object for graphic tablet devices",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",N,N],[13,"GetTabletSeat","","get the tablet seat",162,N],[12,"tablet_seat","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2::Request","",162,N],[12,"seat","","",162,N],[13,"Destroy","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","release the memory for the tablet manager object",162,N],[4,"Event","","",N,N],[3,"ZwpTabletManagerV2","","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_tablet_seat","","get the tablet seat",163,[[["self"],["proxy"]],["result",["newproxy"]]]],[10,"destroy","","release the memory for the tablet manager object",163,N],[0,"zwp_tablet_seat_v2","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client","controller object for graphic tablet devices of a seat",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",N,N],[13,"Destroy","","release the memory for the tablet seat object",164,N],[4,"Event","","",N,N],[13,"TabletAdded","","new device notification",165,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2::Event","",165,N],[13,"ToolAdded","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","a new tool has been used with a tablet",165,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2::Event","",165,N],[13,"PadAdded","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","new pad notification",165,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2::Event","",165,N],[3,"ZwpTabletSeatV2","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","release the memory for the tablet seat object",166,N],[0,"zwp_tablet_tool_v2","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client","a physical tablet tool",N,N],[4,"Type","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","a physical tool type",N,N],[13,"Pen","","Pen",167,N],[13,"Eraser","","Eraser",167,N],[13,"Brush","","Brush",167,N],[13,"Pencil","","Pencil",167,N],[13,"Airbrush","","Airbrush",167,N],[13,"Finger","","Finger",167,N],[13,"Mouse","","Mouse",167,N],[13,"Lens","","Lens",167,N],[4,"Capability","","capability flags for a tool",N,N],[13,"Tilt","","Tilt axes",168,N],[13,"Pressure","","Pressure axis",168,N],[13,"Distance","","Distance axis",168,N],[13,"Rotation","","Z-rotation axis",168,N],[13,"Slider","","Slider axis",168,N],[13,"Wheel","","Wheel axis",168,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","button is not pressed",169,N],[13,"Pressed","","button is pressed",169,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",170,N],[4,"Request","","",N,N],[13,"SetCursor","","set the tablet tool's surface",171,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Request","",171,N],[12,"surface","","",171,N],[12,"hotspot_x","","",171,N],[12,"hotspot_y","","",171,N],[13,"Destroy","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","destroy the tool object",171,N],[4,"Event","","",N,N],[13,"Type","","tool type",172,N],[12,"tool_type","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",172,N],[13,"HardwareSerial","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","unique hardware serial number of the tool",172,N],[12,"hardware_serial_hi","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",172,N],[12,"hardware_serial_lo","","",172,N],[13,"HardwareIdWacom","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","hardware id notification in Wacom's format",172,N],[12,"hardware_id_hi","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",172,N],[12,"hardware_id_lo","","",172,N],[13,"Capability","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tool capability notification",172,N],[12,"capability","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",172,N],[13,"Done","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tool description events sequence complete",172,N],[13,"Removed","","tool removed",172,N],[13,"ProximityIn","","proximity in event",172,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",172,N],[12,"tablet","","",172,N],[12,"surface","","",172,N],[13,"ProximityOut","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","proximity out event",172,N],[13,"Down","","tablet tool is making contact",172,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",172,N],[13,"Up","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tablet tool is no longer making contact",172,N],[13,"Motion","","motion event",172,N],[12,"x","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",172,N],[12,"y","","",172,N],[13,"Pressure","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","pressure change event",172,N],[12,"pressure","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",172,N],[13,"Distance","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","distance change event",172,N],[12,"distance","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",172,N],[13,"Tilt","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tilt change event",172,N],[12,"tilt_x","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",172,N],[12,"tilt_y","","",172,N],[13,"Rotation","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","z-rotation change event",172,N],[12,"degrees","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",172,N],[13,"Slider","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","Slider position change event",172,N],[12,"position","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",172,N],[13,"Wheel","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","Wheel delta event",172,N],[12,"degrees","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",172,N],[12,"clicks","","",172,N],[13,"Button","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","button event",172,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",172,N],[12,"button","","",172,N],[12,"state","","",172,N],[13,"Frame","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","frame event",172,N],[12,"time","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",172,N],[3,"ZwpTabletToolV2","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",N,N],[8,"RequestsTrait","","",N,N],[10,"set_cursor","","set the tablet tool's surface",173,N],[10,"destroy","","destroy the tool object",173,N],[0,"zwp_tablet_v2","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client","graphics tablet device",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_v2","",N,N],[13,"Destroy","","destroy the tablet object",174,N],[4,"Event","","",N,N],[13,"Name","","tablet device name",175,N],[12,"name","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_v2::Event","",175,N],[13,"Id","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_v2","tablet device USB vendor/product id",175,N],[12,"vid","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_v2::Event","",175,N],[12,"pid","","",175,N],[13,"Path","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_v2","path to the device",175,N],[12,"path","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_v2::Event","",175,N],[13,"Done","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_v2","tablet description events sequence complete",175,N],[13,"Removed","","tablet removed event",175,N],[3,"ZwpTabletV2","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the tablet object",176,N],[0,"zwp_tablet_pad_ring_v2","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client","pad ring",N,N],[4,"Source","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","ring axis source",N,N],[13,"Finger","","finger",177,N],[4,"Request","","",N,N],[13,"SetFeedback","","set compositor feedback",178,N],[12,"description","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Request","",178,N],[12,"serial","","",178,N],[13,"Destroy","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","destroy the ring object",178,N],[4,"Event","","",N,N],[13,"Source","","ring event source",179,N],[12,"source","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Event","",179,N],[13,"Angle","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","angle changed",179,N],[12,"degrees","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Event","",179,N],[13,"Stop","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","interaction stopped",179,N],[13,"Frame","","end of a ring event sequence",179,N],[12,"time","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Event","",179,N],[3,"ZwpTabletPadRingV2","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",N,N],[8,"RequestsTrait","","",N,N],[10,"set_feedback","","set compositor feedback",180,N],[10,"destroy","","destroy the ring object",180,N],[0,"zwp_tablet_pad_strip_v2","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client","pad strip",N,N],[4,"Source","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","strip axis source",N,N],[13,"Finger","","finger",181,N],[4,"Request","","",N,N],[13,"SetFeedback","","set compositor feedback",182,N],[12,"description","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Request","",182,N],[12,"serial","","",182,N],[13,"Destroy","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","destroy the strip object",182,N],[4,"Event","","",N,N],[13,"Source","","strip event source",183,N],[12,"source","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Event","",183,N],[13,"Position","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","position changed",183,N],[12,"position","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Event","",183,N],[13,"Stop","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","interaction stopped",183,N],[13,"Frame","","end of a strip event sequence",183,N],[12,"time","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Event","",183,N],[3,"ZwpTabletPadStripV2","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",N,N],[8,"RequestsTrait","","",N,N],[10,"set_feedback","","set compositor feedback",184,N],[10,"destroy","","destroy the strip object",184,N],[0,"zwp_tablet_pad_group_v2","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client","a set of buttons, rings and strips",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",N,N],[13,"Destroy","","destroy the pad object",185,N],[4,"Event","","",N,N],[13,"Buttons","","buttons announced",186,N],[12,"buttons","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",186,N],[13,"Ring","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","ring announced",186,N],[12,"ring","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",186,N],[13,"Strip","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","strip announced",186,N],[12,"strip","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",186,N],[13,"Modes","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","mode-switch ability announced",186,N],[12,"modes","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",186,N],[13,"Done","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","tablet group description events sequence complete",186,N],[13,"ModeSwitch","","mode switch event",186,N],[12,"time","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",186,N],[12,"serial","","",186,N],[12,"mode","","",186,N],[3,"ZwpTabletPadGroupV2","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the pad object",187,N],[0,"zwp_tablet_pad_v2","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client","a set of buttons, rings and strips",N,N],[4,"ButtonState","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","physical button state",N,N],[13,"Released","","the button is not pressed",188,N],[13,"Pressed","","the button is pressed",188,N],[4,"Request","","",N,N],[13,"SetFeedback","","set compositor feedback",189,N],[12,"button","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Request","",189,N],[12,"description","","",189,N],[12,"serial","","",189,N],[13,"Destroy","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","destroy the pad object",189,N],[4,"Event","","",N,N],[13,"Group","","group announced",190,N],[12,"pad_group","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",190,N],[13,"Path","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","path to the device",190,N],[12,"path","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",190,N],[13,"Buttons","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","buttons announced",190,N],[12,"buttons","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",190,N],[13,"Done","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","pad description event sequence complete",190,N],[13,"Button","","physical button state",190,N],[12,"time","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",190,N],[12,"button","","",190,N],[12,"state","","",190,N],[13,"Enter","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","enter event",190,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",190,N],[12,"tablet","","",190,N],[12,"surface","","",190,N],[13,"Leave","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","enter event",190,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",190,N],[12,"surface","","",190,N],[13,"Removed","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","pad removed event",190,N],[3,"ZwpTabletPadV2","","",N,N],[8,"RequestsTrait","","",N,N],[10,"set_feedback","","set compositor feedback",191,N],[10,"destroy","","destroy the pad object",191,N],[0,"text_input","smithay_client_toolkit::reexports::protocols::unstable","Text input protocol",N,N],[0,"v1","smithay_client_toolkit::reexports::protocols::unstable::text_input","",N,N],[0,"c_interfaces","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1","C interfaces for this protocol",N,N],[7,"zwp_text_input_v1_requests","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::c_interfaces","",N,N],[7,"zwp_text_input_v1_events","","",N,N],[7,"zwp_text_input_v1_interface","","",N,N],[7,"zwp_text_input_manager_v1_requests","","",N,N],[7,"zwp_text_input_manager_v1_interface","","",N,N],[0,"client","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1","Client-side API of this protocol",N,N],[0,"zwp_text_input_v1","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client","text input",N,N],[4,"ContentHint","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","content hint",N,N],[13,"None","","no special behaviour",192,N],[13,"Default","","auto completion, correction and capitalization",192,N],[13,"Password","","hidden and sensitive text",192,N],[13,"AutoCompletion","","suggest word completions",192,N],[13,"AutoCorrection","","suggest word corrections",192,N],[13,"AutoCapitalization","","switch to uppercase letters at the start of a sentence",192,N],[13,"Lowercase","","prefer lowercase letters",192,N],[13,"Uppercase","","prefer uppercase letters",192,N],[13,"Titlecase","","prefer casing for titles and headings (can be language dependent)",192,N],[13,"HiddenText","","characters should be hidden",192,N],[13,"SensitiveData","","typed text should not be stored",192,N],[13,"Latin","","just latin characters should be entered",192,N],[13,"Multiline","","the text input is multiline",192,N],[4,"ContentPurpose","","content purpose",N,N],[13,"Normal","","default input, allowing all characters",193,N],[13,"Alpha","","allow only alphabetic characters",193,N],[13,"Digits","","allow only digits",193,N],[13,"Number","","input a number (including decimal separator and sign)",193,N],[13,"Phone","","input a phone number",193,N],[13,"Url","","input an URL",193,N],[13,"Email","","input an email address",193,N],[13,"Name","","input a name of a person",193,N],[13,"Password","","input a password (combine with password or sensitive_data hint)",193,N],[13,"Date","","input a date",193,N],[13,"Time","","input a time",193,N],[13,"Datetime","","input a date and time",193,N],[13,"Terminal","","input for a terminal",193,N],[4,"PreeditStyle","","",N,N],[13,"Default","","default style for composing text",194,N],[13,"None","","style should be the same as in non-composing text",194,N],[13,"Active","","",194,N],[13,"Inactive","","",194,N],[13,"Highlight","","",194,N],[13,"Underline","","",194,N],[13,"Selection","","",194,N],[13,"Incorrect","","",194,N],[4,"TextDirection","","",N,N],[13,"Auto","","automatic text direction based on text and language",195,N],[13,"Ltr","","left-to-right",195,N],[13,"Rtl","","right-to-left",195,N],[4,"Request","","",N,N],[13,"Activate","","request activation",196,N],[12,"seat","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",196,N],[12,"surface","","",196,N],[13,"Deactivate","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","request deactivation",196,N],[12,"seat","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",196,N],[13,"ShowInputPanel","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","show input panels",196,N],[13,"HideInputPanel","","hide input panels",196,N],[13,"Reset","","reset",196,N],[13,"SetSurroundingText","","sets the surrounding text",196,N],[12,"text","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",196,N],[12,"cursor","","",196,N],[12,"anchor","","",196,N],[13,"SetContentType","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","set content purpose and hint",196,N],[12,"hint","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",196,N],[12,"purpose","","",196,N],[13,"SetCursorRectangle","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","",196,N],[12,"x","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",196,N],[12,"y","","",196,N],[12,"width","","",196,N],[12,"height","","",196,N],[13,"SetPreferredLanguage","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","sets preferred language",196,N],[12,"language","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",196,N],[13,"CommitState","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","",196,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",196,N],[13,"InvokeAction","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","",196,N],[12,"button","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",196,N],[12,"index","","",196,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","",N,N],[13,"Enter","","enter event",197,N],[12,"surface","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",197,N],[13,"Leave","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","leave event",197,N],[13,"ModifiersMap","","modifiers map",197,N],[12,"map","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",197,N],[13,"InputPanelState","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","state of the input panel",197,N],[12,"state","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",197,N],[13,"PreeditString","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","pre-edit",197,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",197,N],[12,"text","","",197,N],[12,"commit","","",197,N],[13,"PreeditStyling","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","pre-edit styling",197,N],[12,"index","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",197,N],[12,"length","","",197,N],[12,"style","","",197,N],[13,"PreeditCursor","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","pre-edit cursor",197,N],[12,"index","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",197,N],[13,"CommitString","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","commit",197,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",197,N],[12,"text","","",197,N],[13,"CursorPosition","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","set cursor to new position",197,N],[12,"index","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",197,N],[12,"anchor","","",197,N],[13,"DeleteSurroundingText","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","delete surrounding text",197,N],[12,"index","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",197,N],[12,"length","","",197,N],[13,"Keysym","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","keysym",197,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",197,N],[12,"time","","",197,N],[12,"sym","","",197,N],[12,"state","","",197,N],[12,"modifiers","","",197,N],[13,"Language","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","language",197,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",197,N],[12,"language","","",197,N],[13,"TextDirection","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","text direction",197,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",197,N],[12,"direction","","",197,N],[3,"ZwpTextInputV1","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"activate","","request activation",198,N],[10,"deactivate","","request deactivation",198,N],[10,"show_input_panel","","show input panels",198,N],[10,"hide_input_panel","","hide input panels",198,N],[10,"reset","","reset",198,N],[10,"set_surrounding_text","","sets the surrounding text",198,N],[10,"set_content_type","","set content purpose and hint",198,N],[10,"set_cursor_rectangle","","",198,N],[10,"set_preferred_language","","sets preferred language",198,N],[10,"commit_state","","",198,N],[10,"invoke_action","","",198,N],[0,"zwp_text_input_manager_v1","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client","text input manager",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",N,N],[13,"CreateTextInput","","create text input",199,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1::Request","",199,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",N,N],[3,"ZwpTextInputManagerV1","","",N,N],[8,"RequestsTrait","","",N,N],[10,"create_text_input","","create text input",200,[[["self"]],["result",["newproxy"]]]],[0,"xdg_decoration","smithay_client_toolkit::reexports::protocols::unstable","This interface allows a compositor to announce support for server-side decorations. A window decoration is a set of window controls as deemed appropriate by the party managing them, such as user interface components used to move, resize and change a window's state. A client can use this protocol to request being decorated by a supporting compositor. If compositor and client do not negotiate the use of a server-side decoration using this protocol, clients continue to self-decorate as they see fit.",N,N],[0,"v1","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration","",N,N],[0,"c_interfaces","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1","C interfaces for this protocol",N,N],[7,"zxdg_decoration_manager_v1_requests","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1::c_interfaces","",N,N],[7,"zxdg_decoration_manager_v1_interface","","",N,N],[7,"zxdg_toplevel_decoration_v1_requests","","",N,N],[7,"zxdg_toplevel_decoration_v1_events","","",N,N],[7,"zxdg_toplevel_decoration_v1_interface","","",N,N],[0,"client","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1","Client-side API of this protocol",N,N],[0,"zxdg_decoration_manager_v1","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1::client","window decoration manager",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",N,N],[13,"Destroy","","destroy the decoration manager object",201,N],[13,"GetToplevelDecoration","","create a new toplevel decoration object",201,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1::Request","",201,N],[12,"toplevel","","",201,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",N,N],[3,"ZxdgDecorationManagerV1","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the decoration manager object",202,N],[10,"get_toplevel_decoration","","create a new toplevel decoration object",202,[[["self"],["proxy"]],["result",["newproxy"]]]],[0,"zxdg_toplevel_decoration_v1","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1::client","decoration object for a toplevel surface",N,N],[4,"Error","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",N,N],[13,"UnconfiguredBuffer","","xdg_toplevel has a buffer attached before configure",203,N],[13,"AlreadyConstructed","","xdg_toplevel already has a decoration object",203,N],[13,"Orphaned","","xdg_toplevel destroyed before the decoration object",203,N],[4,"Mode","","window decoration modes",N,N],[13,"ClientSide","","no server-side window decoration",204,N],[13,"ServerSide","","server-side window decoration",204,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the decoration object",205,N],[13,"SetMode","","set the decoration mode",205,N],[12,"mode","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1::Request","",205,N],[13,"UnsetMode","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","unset the decoration mode",205,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",206,N],[12,"mode","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1::Event","",206,N],[3,"ZxdgToplevelDecorationV1","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the decoration object",207,N],[10,"set_mode","","set the decoration mode",207,N],[10,"unset_mode","","unset the decoration mode",207,N],[0,"xdg_foreign","smithay_client_toolkit::reexports::protocols::unstable","Protocol for exporting xdg surface handles",N,N],[0,"v1","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign","",N,N],[0,"c_interfaces","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1","C interfaces for this protocol",N,N],[7,"zxdg_exporter_v1_requests","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::c_interfaces","",N,N],[7,"zxdg_exporter_v1_interface","","",N,N],[7,"zxdg_importer_v1_requests","","",N,N],[7,"zxdg_importer_v1_interface","","",N,N],[7,"zxdg_exported_v1_requests","","",N,N],[7,"zxdg_exported_v1_events","","",N,N],[7,"zxdg_exported_v1_interface","","",N,N],[7,"zxdg_imported_v1_requests","","",N,N],[7,"zxdg_imported_v1_events","","",N,N],[7,"zxdg_imported_v1_interface","","",N,N],[0,"client","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1","Client-side API of this protocol",N,N],[0,"zxdg_exporter_v1","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client","interface for exporting surfaces",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",N,N],[13,"Destroy","","destroy the xdg_exporter object",208,N],[13,"Export","","export a surface",208,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1::Request","",208,N],[12,"surface","","",208,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",N,N],[3,"ZxdgExporterV1","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_exporter object",209,N],[10,"export","","export a surface",209,[[["self"],["proxy"]],["result",["newproxy"]]]],[0,"zxdg_importer_v1","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client","interface for importing surfaces",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",N,N],[13,"Destroy","","destroy the xdg_importer object",210,N],[13,"Import","","import a surface",210,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1::Request","",210,N],[12,"handle","","",210,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",N,N],[3,"ZxdgImporterV1","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_importer object",211,N],[10,"import","","import a surface",211,[[["self"],["string"]],["result",["newproxy"]]]],[0,"zxdg_exported_v1","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client","an exported surface handle",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",N,N],[13,"Destroy","","unexport the exported surface",212,N],[4,"Event","","",N,N],[13,"Handle","","the exported surface handle",213,N],[12,"handle","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1::Event","",213,N],[3,"ZxdgExportedV1","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","unexport the exported surface",214,N],[0,"zxdg_imported_v1","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client","an imported surface handle",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",N,N],[13,"Destroy","","destroy the xdg_imported object",215,N],[13,"SetParentOf","","set as the parent of some surface",215,N],[12,"surface","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1::Request","",215,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",N,N],[13,"Destroyed","","the imported surface handle has been destroyed",216,N],[3,"ZxdgImportedV1","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_imported object",217,N],[10,"set_parent_of","","set as the parent of some surface",217,N],[0,"v2","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign","",N,N],[0,"c_interfaces","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2","C interfaces for this protocol",N,N],[7,"zxdg_exporter_v2_requests","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::c_interfaces","",N,N],[7,"zxdg_exporter_v2_interface","","",N,N],[7,"zxdg_importer_v2_requests","","",N,N],[7,"zxdg_importer_v2_interface","","",N,N],[7,"zxdg_exported_v2_requests","","",N,N],[7,"zxdg_exported_v2_events","","",N,N],[7,"zxdg_exported_v2_interface","","",N,N],[7,"zxdg_imported_v2_requests","","",N,N],[7,"zxdg_imported_v2_events","","",N,N],[7,"zxdg_imported_v2_interface","","",N,N],[0,"client","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2","Client-side API of this protocol",N,N],[0,"zxdg_exporter_v2","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client","interface for exporting surfaces",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",N,N],[13,"Destroy","","destroy the xdg_exporter object",218,N],[13,"ExportToplevel","","export a toplevel surface",218,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2::Request","",218,N],[12,"surface","","",218,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",N,N],[3,"ZxdgExporterV2","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_exporter object",219,N],[10,"export_toplevel","","export a toplevel surface",219,[[["self"],["proxy"]],["result",["newproxy"]]]],[0,"zxdg_importer_v2","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client","interface for importing surfaces",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",N,N],[13,"Destroy","","destroy the xdg_importer object",220,N],[13,"ImportToplevel","","import a toplevel surface",220,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2::Request","",220,N],[12,"handle","","",220,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",N,N],[3,"ZxdgImporterV2","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_importer object",221,N],[10,"import_toplevel","","import a toplevel surface",221,[[["self"],["string"]],["result",["newproxy"]]]],[0,"zxdg_exported_v2","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client","an exported surface handle",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",N,N],[13,"Destroy","","unexport the exported surface",222,N],[4,"Event","","",N,N],[13,"Handle","","the exported surface handle",223,N],[12,"handle","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2::Event","",223,N],[3,"ZxdgExportedV2","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","unexport the exported surface",224,N],[0,"zxdg_imported_v2","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client","an imported surface handle",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",N,N],[13,"Destroy","","destroy the xdg_imported object",225,N],[13,"SetParentOf","","set as the parent of some surface",225,N],[12,"surface","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2::Request","",225,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",N,N],[13,"Destroyed","","the imported surface handle has been destroyed",226,N],[3,"ZxdgImportedV2","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_imported object",227,N],[10,"set_parent_of","","set as the parent of some surface",227,N],[0,"xdg_output","smithay_client_toolkit::reexports::protocols::unstable","Protocol to describe output regions",N,N],[0,"v1","smithay_client_toolkit::reexports::protocols::unstable::xdg_output","",N,N],[0,"c_interfaces","smithay_client_toolkit::reexports::protocols::unstable::xdg_output::v1","C interfaces for this protocol",N,N],[7,"zxdg_output_manager_v1_requests","smithay_client_toolkit::reexports::protocols::unstable::xdg_output::v1::c_interfaces","",N,N],[7,"zxdg_output_manager_v1_interface","","",N,N],[7,"zxdg_output_v1_requests","","",N,N],[7,"zxdg_output_v1_events","","",N,N],[7,"zxdg_output_v1_interface","","",N,N],[0,"client","smithay_client_toolkit::reexports::protocols::unstable::xdg_output::v1","Client-side API of this protocol",N,N],[0,"zxdg_output_manager_v1","smithay_client_toolkit::reexports::protocols::unstable::xdg_output::v1::client","manage xdg_output objects",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",N,N],[13,"Destroy","","destroy the xdg_output_manager object",228,N],[13,"GetXdgOutput","","create an xdg output from a wl_output",228,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1::Request","",228,N],[12,"output","","",228,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",N,N],[3,"ZxdgOutputManagerV1","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_output_manager object",229,N],[10,"get_xdg_output","","create an xdg output from a wl_output",229,[[["self"],["proxy"]],["result",["newproxy"]]]],[0,"zxdg_output_v1","smithay_client_toolkit::reexports::protocols::unstable::xdg_output::v1::client","compositor logical output region",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",N,N],[13,"Destroy","","destroy the xdg_output object",230,N],[4,"Event","","",N,N],[13,"LogicalPosition","","position of the output within the global compositor space",231,N],[12,"x","smithay_client_toolkit::reexports::protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",231,N],[12,"y","","",231,N],[13,"LogicalSize","smithay_client_toolkit::reexports::protocols::unstable::xdg_output::v1::client::zxdg_output_v1","size of the output in the global compositor space",231,N],[12,"width","smithay_client_toolkit::reexports::protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",231,N],[12,"height","","",231,N],[13,"Done","smithay_client_toolkit::reexports::protocols::unstable::xdg_output::v1::client::zxdg_output_v1","all information about the output have been sent",231,N],[13,"Name","","name of this output",231,N],[12,"name","smithay_client_toolkit::reexports::protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",231,N],[13,"Description","smithay_client_toolkit::reexports::protocols::unstable::xdg_output::v1::client::zxdg_output_v1","human-readable description of this output",231,N],[12,"description","smithay_client_toolkit::reexports::protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",231,N],[3,"ZxdgOutputV1","smithay_client_toolkit::reexports::protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_output object",232,N],[0,"xdg_shell","smithay_client_toolkit::reexports::protocols::unstable","XDG Shell protocol",N,N],[0,"v5","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell","",N,N],[0,"c_interfaces","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5","C interfaces for this protocol",N,N],[7,"xdg_shell_requests","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::c_interfaces","",N,N],[7,"xdg_shell_events","","",N,N],[7,"xdg_shell_interface","","",N,N],[7,"xdg_surface_requests","","",N,N],[7,"xdg_surface_events","","",N,N],[7,"xdg_surface_interface","","",N,N],[7,"xdg_popup_requests","","",N,N],[7,"xdg_popup_events","","",N,N],[7,"xdg_popup_interface","","",N,N],[0,"client","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5","Client-side API of this protocol",N,N],[0,"xdg_shell","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client","create desktop-style surfaces",N,N],[4,"Version","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_shell","latest protocol version",N,N],[13,"Current","","Always the latest version",233,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",234,N],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",234,N],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",234,N],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",234,N],[4,"Request","","",N,N],[13,"Destroy","","destroy xdg_shell",235,N],[13,"UseUnstableVersion","","enable use of this unstable version",235,N],[12,"version","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",235,N],[13,"GetXdgSurface","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_shell","create a shell surface from a surface",235,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",235,N],[12,"surface","","",235,N],[13,"GetXdgPopup","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_shell","create a popup for a surface",235,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",235,N],[12,"surface","","",235,N],[12,"parent","","",235,N],[12,"seat","","",235,N],[12,"serial","","",235,N],[12,"x","","",235,N],[12,"y","","",235,N],[13,"Pong","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_shell","respond to a ping event",235,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",235,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_shell","",N,N],[13,"Ping","","check if the client is alive",236,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_shell::Event","",236,N],[3,"XdgShell","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_shell","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy xdg_shell",237,N],[10,"use_unstable_version","","enable use of this unstable version",237,N],[10,"get_xdg_surface","","create a shell surface from a surface",237,[[["self"],["proxy"]],["result",["newproxy"]]]],[10,"get_xdg_popup","","create a popup for a surface",237,[[["self"],["proxy"],["proxy"],["proxy"],["u32"],["i32"],["i32"]],["result",["newproxy"]]]],[10,"pong","","respond to a ping event",237,N],[0,"xdg_surface","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client","A desktop window",N,N],[4,"ResizeEdge","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface","edge values for resizing",N,N],[13,"None","","",238,N],[13,"Top","","",238,N],[13,"Bottom","","",238,N],[13,"Left","","",238,N],[13,"TopLeft","","",238,N],[13,"BottomLeft","","",238,N],[13,"Right","","",238,N],[13,"TopRight","","",238,N],[13,"BottomRight","","",238,N],[4,"State","","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",239,N],[13,"Fullscreen","","the surface is fullscreen",239,N],[13,"Resizing","","the surface is being resized",239,N],[13,"Activated","","the surface is now activated",239,N],[4,"Request","","",N,N],[13,"Destroy","","Destroy the xdg_surface",240,N],[13,"SetParent","","set the parent of this surface",240,N],[12,"parent","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",240,N],[13,"SetTitle","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface","set surface title",240,N],[12,"title","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",240,N],[13,"SetAppId","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface","set application ID",240,N],[12,"app_id","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",240,N],[13,"ShowWindowMenu","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface","show the window menu",240,N],[12,"seat","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",240,N],[12,"serial","","",240,N],[12,"x","","",240,N],[12,"y","","",240,N],[13,"Move","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface","start an interactive move",240,N],[12,"seat","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",240,N],[12,"serial","","",240,N],[13,"Resize","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface","start an interactive resize",240,N],[12,"seat","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",240,N],[12,"serial","","",240,N],[12,"edges","","",240,N],[13,"AckConfigure","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface","ack a configure event",240,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",240,N],[13,"SetWindowGeometry","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface","set the new window geometry",240,N],[12,"x","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",240,N],[12,"y","","",240,N],[12,"width","","",240,N],[12,"height","","",240,N],[13,"SetMaximized","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface","maximize the window",240,N],[13,"UnsetMaximized","","unmaximize the window",240,N],[13,"SetFullscreen","","set the window as fullscreen on a monitor",240,N],[12,"output","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",240,N],[13,"UnsetFullscreen","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface","",240,N],[13,"SetMinimized","","set the window as minimized",240,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",241,N],[12,"width","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface::Event","",241,N],[12,"height","","",241,N],[12,"states","","",241,N],[12,"serial","","",241,N],[13,"Close","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface","surface wants to be closed",241,N],[3,"XdgSurface","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","Destroy the xdg_surface",242,N],[10,"set_parent","","set the parent of this surface",242,N],[10,"set_title","","set surface title",242,N],[10,"set_app_id","","set application ID",242,N],[10,"show_window_menu","","show the window menu",242,N],[10,"_move","","start an interactive move",242,N],[10,"resize","","start an interactive resize",242,N],[10,"ack_configure","","ack a configure event",242,N],[10,"set_window_geometry","","set the new window geometry",242,N],[10,"set_maximized","","maximize the window",242,N],[10,"unset_maximized","","unmaximize the window",242,N],[10,"set_fullscreen","","set the window as fullscreen on a monitor",242,N],[10,"unset_fullscreen","","",242,N],[10,"set_minimized","","set the window as minimized",242,N],[0,"xdg_popup","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client","short-lived, popup surfaces for menus",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_popup","",N,N],[13,"Destroy","","remove xdg_popup interface",243,N],[4,"Event","","",N,N],[13,"PopupDone","","popup interaction is done",244,N],[3,"XdgPopup","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","remove xdg_popup interface",245,N],[0,"v6","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell","",N,N],[0,"c_interfaces","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6","C interfaces for this protocol",N,N],[7,"zxdg_shell_v6_requests","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::c_interfaces","",N,N],[7,"zxdg_shell_v6_events","","",N,N],[7,"zxdg_shell_v6_interface","","",N,N],[7,"zxdg_positioner_v6_requests","","",N,N],[7,"zxdg_positioner_v6_interface","","",N,N],[7,"zxdg_surface_v6_requests","","",N,N],[7,"zxdg_surface_v6_events","","",N,N],[7,"zxdg_surface_v6_interface","","",N,N],[7,"zxdg_toplevel_v6_requests","","",N,N],[7,"zxdg_toplevel_v6_events","","",N,N],[7,"zxdg_toplevel_v6_interface","","",N,N],[7,"zxdg_popup_v6_requests","","",N,N],[7,"zxdg_popup_v6_events","","",N,N],[7,"zxdg_popup_v6_interface","","",N,N],[0,"client","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6","Client-side API of this protocol",N,N],[0,"zxdg_shell_v6","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client","create desktop-style surfaces",N,N],[4,"Error","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",N,N],[13,"Role","","given wl_surface has another role",246,N],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",246,N],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",246,N],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",246,N],[13,"InvalidSurfaceState","","the client provided an invalid surface state",246,N],[13,"InvalidPositioner","","the client provided an invalid positioner",246,N],[4,"Request","","",N,N],[13,"Destroy","","destroy xdg_shell",247,N],[13,"CreatePositioner","","create a positioner object",247,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Request","",247,N],[13,"GetXdgSurface","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","create a shell surface from a surface",247,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Request","",247,N],[12,"surface","","",247,N],[13,"Pong","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","respond to a ping event",247,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Request","",247,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",N,N],[13,"Ping","","check if the client is alive",248,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Event","",248,N],[3,"ZxdgShellV6","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy xdg_shell",249,N],[10,"create_positioner","","create a positioner object",249,[[["self"]],["result",["newproxy"]]]],[10,"get_xdg_surface","","create a shell surface from a surface",249,[[["self"],["proxy"]],["result",["newproxy"]]]],[10,"pong","","respond to a ping event",249,N],[0,"zxdg_positioner_v6","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client","child surface positioner",N,N],[4,"Error","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",N,N],[13,"InvalidInput","","invalid input provided",250,N],[3,"Anchor","","",N,N],[3,"Gravity","","",N,N],[3,"ConstraintAdjustment","","constraint adjustments",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_positioner object",251,N],[13,"SetSize","","set the size of the to-be positioned rectangle",251,N],[12,"width","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",251,N],[12,"height","","",251,N],[13,"SetAnchorRect","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set the anchor rectangle within the parent surface",251,N],[12,"x","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",251,N],[12,"y","","",251,N],[12,"width","","",251,N],[12,"height","","",251,N],[13,"SetAnchor","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set anchor rectangle anchor edges",251,N],[12,"anchor","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",251,N],[13,"SetGravity","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set child surface gravity",251,N],[12,"gravity","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",251,N],[13,"SetConstraintAdjustment","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set the adjustment to be done when constrained",251,N],[12,"constraint_adjustment","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",251,N],[13,"SetOffset","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set surface position offset",251,N],[12,"x","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",251,N],[12,"y","","",251,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",N,N],[3,"ZxdgPositionerV6","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_positioner object",252,N],[10,"set_size","","set the size of the to-be positioned rectangle",252,N],[10,"set_anchor_rect","","set the anchor rectangle within the parent surface",252,N],[10,"set_anchor","","set anchor rectangle anchor edges",252,N],[10,"set_gravity","","set child surface gravity",252,N],[10,"set_constraint_adjustment","","set the adjustment to be done when constrained",252,N],[10,"set_offset","","set surface position offset",252,N],[0,"zxdg_surface_v6","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client","desktop user interface surface base interface",N,N],[4,"Error","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",N,N],[13,"NotConstructed","","",253,N],[13,"AlreadyConstructed","","",253,N],[13,"UnconfiguredBuffer","","",253,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_surface",254,N],[13,"GetToplevel","","assign the xdg_toplevel surface role",254,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",254,N],[13,"GetPopup","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","assign the xdg_popup surface role",254,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",254,N],[12,"parent","","",254,N],[12,"positioner","","",254,N],[13,"SetWindowGeometry","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","set the new window geometry",254,N],[12,"x","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",254,N],[12,"y","","",254,N],[12,"width","","",254,N],[12,"height","","",254,N],[13,"AckConfigure","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","ack a configure event",254,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",254,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",N,N],[13,"Configure","","suggest a surface change",255,N],[12,"serial","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Event","",255,N],[3,"ZxdgSurfaceV6","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_surface",256,N],[10,"get_toplevel","","assign the xdg_toplevel surface role",256,[[["self"]],["result",["newproxy"]]]],[10,"get_popup","","assign the xdg_popup surface role",256,[[["self"],["proxy"],["proxy"]],["result",["newproxy"]]]],[10,"set_window_geometry","","set the new window geometry",256,N],[10,"ack_configure","","ack a configure event",256,N],[0,"zxdg_toplevel_v6","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client","toplevel surface",N,N],[4,"ResizeEdge","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","edge values for resizing",N,N],[13,"None","","",257,N],[13,"Top","","",257,N],[13,"Bottom","","",257,N],[13,"Left","","",257,N],[13,"TopLeft","","",257,N],[13,"BottomLeft","","",257,N],[13,"Right","","",257,N],[13,"TopRight","","",257,N],[13,"BottomRight","","",257,N],[4,"State","","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",258,N],[13,"Fullscreen","","the surface is fullscreen",258,N],[13,"Resizing","","the surface is being resized",258,N],[13,"Activated","","the surface is now activated",258,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_toplevel",259,N],[13,"SetParent","","set the parent of this surface",259,N],[12,"parent","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",259,N],[13,"SetTitle","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set surface title",259,N],[12,"title","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",259,N],[13,"SetAppId","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set application ID",259,N],[12,"app_id","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",259,N],[13,"ShowWindowMenu","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","show the window menu",259,N],[12,"seat","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",259,N],[12,"serial","","",259,N],[12,"x","","",259,N],[12,"y","","",259,N],[13,"Move","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","start an interactive move",259,N],[12,"seat","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",259,N],[12,"serial","","",259,N],[13,"Resize","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","start an interactive resize",259,N],[12,"seat","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",259,N],[12,"serial","","",259,N],[12,"edges","","",259,N],[13,"SetMaxSize","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set the maximum size",259,N],[12,"width","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",259,N],[12,"height","","",259,N],[13,"SetMinSize","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set the minimum size",259,N],[12,"width","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",259,N],[12,"height","","",259,N],[13,"SetMaximized","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","maximize the window",259,N],[13,"UnsetMaximized","","unmaximize the window",259,N],[13,"SetFullscreen","","set the window as fullscreen on a monitor",259,N],[12,"output","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",259,N],[13,"UnsetFullscreen","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",259,N],[13,"SetMinimized","","set the window as minimized",259,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",260,N],[12,"width","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Event","",260,N],[12,"height","","",260,N],[12,"states","","",260,N],[13,"Close","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","surface wants to be closed",260,N],[3,"ZxdgToplevelV6","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_toplevel",261,N],[10,"set_parent","","set the parent of this surface",261,N],[10,"set_title","","set surface title",261,N],[10,"set_app_id","","set application ID",261,N],[10,"show_window_menu","","show the window menu",261,N],[10,"_move","","start an interactive move",261,N],[10,"resize","","start an interactive resize",261,N],[10,"set_max_size","","set the maximum size",261,N],[10,"set_min_size","","set the minimum size",261,N],[10,"set_maximized","","maximize the window",261,N],[10,"unset_maximized","","unmaximize the window",261,N],[10,"set_fullscreen","","set the window as fullscreen on a monitor",261,N],[10,"unset_fullscreen","","",261,N],[10,"set_minimized","","set the window as minimized",261,N],[0,"zxdg_popup_v6","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client","short-lived, popup surfaces for menus",N,N],[4,"Error","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",N,N],[13,"InvalidGrab","","tried to grab after being mapped",262,N],[4,"Request","","",N,N],[13,"Destroy","","remove xdg_popup interface",263,N],[13,"Grab","","make the popup take an explicit grab",263,N],[12,"seat","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6::Request","",263,N],[12,"serial","","",263,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",N,N],[13,"Configure","","configure the popup surface",264,N],[12,"x","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6::Event","",264,N],[12,"y","","",264,N],[12,"width","","",264,N],[12,"height","","",264,N],[13,"PopupDone","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","popup interaction is done",264,N],[3,"ZxdgPopupV6","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","remove xdg_popup interface",265,N],[10,"grab","","make the popup take an explicit grab",265,N],[0,"xwayland_keyboard_grab","smithay_client_toolkit::reexports::protocols::unstable","Protocol for grabbing the keyboard from Xwayland",N,N],[0,"v1","smithay_client_toolkit::reexports::protocols::unstable::xwayland_keyboard_grab","",N,N],[0,"c_interfaces","smithay_client_toolkit::reexports::protocols::unstable::xwayland_keyboard_grab::v1","C interfaces for this protocol",N,N],[7,"zwp_xwayland_keyboard_grab_manager_v1_requests","smithay_client_toolkit::reexports::protocols::unstable::xwayland_keyboard_grab::v1::c_interfaces","",N,N],[7,"zwp_xwayland_keyboard_grab_manager_v1_interface","","",N,N],[7,"zwp_xwayland_keyboard_grab_v1_requests","","",N,N],[7,"zwp_xwayland_keyboard_grab_v1_interface","","",N,N],[0,"client","smithay_client_toolkit::reexports::protocols::unstable::xwayland_keyboard_grab::v1","Client-side API of this protocol",N,N],[0,"zwp_xwayland_keyboard_grab_manager_v1","smithay_client_toolkit::reexports::protocols::unstable::xwayland_keyboard_grab::v1::client","context object for keyboard grab manager",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",N,N],[13,"Destroy","","destroy the keyboard grab manager",266,N],[13,"GrabKeyboard","","grab the keyboard to a surface",266,N],[12,"id","smithay_client_toolkit::reexports::protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1::Request","",266,N],[12,"surface","","",266,N],[12,"seat","","",266,N],[4,"Event","smithay_client_toolkit::reexports::protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",N,N],[3,"ZwpXwaylandKeyboardGrabManagerV1","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the keyboard grab manager",267,N],[10,"grab_keyboard","","grab the keyboard to a surface",267,[[["self"],["proxy"],["proxy"]],["result",["newproxy"]]]],[0,"zwp_xwayland_keyboard_grab_v1","smithay_client_toolkit::reexports::protocols::unstable::xwayland_keyboard_grab::v1::client","interface for grabbing the keyboard",N,N],[4,"Request","smithay_client_toolkit::reexports::protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",N,N],[13,"Destroy","","destroy the grabbed keyboard object",268,N],[4,"Event","","",N,N],[3,"ZwpXwaylandKeyboardGrabV1","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the grabbed keyboard object",269,N],[0,"xdg_shell","smithay_client_toolkit::reexports::protocols","XDG Shell protocol",N,N],[0,"c_interfaces","smithay_client_toolkit::reexports::protocols::xdg_shell","C interfaces for this protocol",N,N],[7,"xdg_wm_base_requests","smithay_client_toolkit::reexports::protocols::xdg_shell::c_interfaces","",N,N],[7,"xdg_wm_base_events","","",N,N],[7,"xdg_wm_base_interface","","",N,N],[7,"xdg_positioner_requests","","",N,N],[7,"xdg_positioner_interface","","",N,N],[7,"xdg_surface_requests","","",N,N],[7,"xdg_surface_events","","",N,N],[7,"xdg_surface_interface","","",N,N],[7,"xdg_toplevel_requests","","",N,N],[7,"xdg_toplevel_events","","",N,N],[7,"xdg_toplevel_interface","","",N,N],[7,"xdg_popup_requests","","",N,N],[7,"xdg_popup_events","","",N,N],[7,"xdg_popup_interface","","",N,N],[0,"client","smithay_client_toolkit::reexports::protocols::xdg_shell","Client-side API of this protocol",N,N],[0,"xdg_wm_base","smithay_client_toolkit::reexports::protocols::xdg_shell::client","create desktop-style surfaces",N,N],[4,"Error","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_wm_base","",N,N],[13,"Role","","given wl_surface has another role",270,N],[13,"DefunctSurfaces","","xdg_wm_base was destroyed before children",270,N],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",270,N],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",270,N],[13,"InvalidSurfaceState","","the client provided an invalid surface state",270,N],[13,"InvalidPositioner","","the client provided an invalid positioner",270,N],[4,"Request","","",N,N],[13,"Destroy","","destroy xdg_wm_base",271,N],[13,"CreatePositioner","","create a positioner object",271,N],[12,"id","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_wm_base::Request","",271,N],[13,"GetXdgSurface","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_wm_base","create a shell surface from a surface",271,N],[12,"id","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_wm_base::Request","",271,N],[12,"surface","","",271,N],[13,"Pong","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_wm_base","respond to a ping event",271,N],[12,"serial","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_wm_base::Request","",271,N],[4,"Event","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_wm_base","",N,N],[13,"Ping","","check if the client is alive",272,N],[12,"serial","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_wm_base::Event","",272,N],[3,"XdgWmBase","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_wm_base","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy xdg_wm_base",273,N],[10,"create_positioner","","create a positioner object",273,[[["self"]],["result",["newproxy"]]]],[10,"get_xdg_surface","","create a shell surface from a surface",273,[[["self"],["proxy"]],["result",["newproxy"]]]],[10,"pong","","respond to a ping event",273,N],[0,"xdg_positioner","smithay_client_toolkit::reexports::protocols::xdg_shell::client","child surface positioner",N,N],[4,"Error","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_positioner","",N,N],[13,"InvalidInput","","invalid input provided",274,N],[4,"Anchor","","",N,N],[13,"None","","",275,N],[13,"Top","","",275,N],[13,"Bottom","","",275,N],[13,"Left","","",275,N],[13,"Right","","",275,N],[13,"TopLeft","","",275,N],[13,"BottomLeft","","",275,N],[13,"TopRight","","",275,N],[13,"BottomRight","","",275,N],[4,"Gravity","","",N,N],[13,"None","","",276,N],[13,"Top","","",276,N],[13,"Bottom","","",276,N],[13,"Left","","",276,N],[13,"Right","","",276,N],[13,"TopLeft","","",276,N],[13,"BottomLeft","","",276,N],[13,"TopRight","","",276,N],[13,"BottomRight","","",276,N],[3,"ConstraintAdjustment","","constraint adjustments",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_positioner object",277,N],[13,"SetSize","","set the size of the to-be positioned rectangle",277,N],[12,"width","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_positioner::Request","",277,N],[12,"height","","",277,N],[13,"SetAnchorRect","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_positioner","set the anchor rectangle within the parent surface",277,N],[12,"x","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_positioner::Request","",277,N],[12,"y","","",277,N],[12,"width","","",277,N],[12,"height","","",277,N],[13,"SetAnchor","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_positioner","set anchor rectangle anchor",277,N],[12,"anchor","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_positioner::Request","",277,N],[13,"SetGravity","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_positioner","set child surface gravity",277,N],[12,"gravity","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_positioner::Request","",277,N],[13,"SetConstraintAdjustment","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_positioner","set the adjustment to be done when constrained",277,N],[12,"constraint_adjustment","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_positioner::Request","",277,N],[13,"SetOffset","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_positioner","set surface position offset",277,N],[12,"x","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_positioner::Request","",277,N],[12,"y","","",277,N],[4,"Event","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_positioner","",N,N],[3,"XdgPositioner","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_positioner object",278,N],[10,"set_size","","set the size of the to-be positioned rectangle",278,N],[10,"set_anchor_rect","","set the anchor rectangle within the parent surface",278,N],[10,"set_anchor","","set anchor rectangle anchor",278,N],[10,"set_gravity","","set child surface gravity",278,N],[10,"set_constraint_adjustment","","set the adjustment to be done when constrained",278,N],[10,"set_offset","","set surface position offset",278,N],[0,"xdg_surface","smithay_client_toolkit::reexports::protocols::xdg_shell::client","desktop user interface surface base interface",N,N],[4,"Error","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_surface","",N,N],[13,"NotConstructed","","",279,N],[13,"AlreadyConstructed","","",279,N],[13,"UnconfiguredBuffer","","",279,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_surface",280,N],[13,"GetToplevel","","assign the xdg_toplevel surface role",280,N],[12,"id","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_surface::Request","",280,N],[13,"GetPopup","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_surface","assign the xdg_popup surface role",280,N],[12,"id","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_surface::Request","",280,N],[12,"parent","","",280,N],[12,"positioner","","",280,N],[13,"SetWindowGeometry","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_surface","set the new window geometry",280,N],[12,"x","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_surface::Request","",280,N],[12,"y","","",280,N],[12,"width","","",280,N],[12,"height","","",280,N],[13,"AckConfigure","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_surface","ack a configure event",280,N],[12,"serial","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_surface::Request","",280,N],[4,"Event","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_surface","",N,N],[13,"Configure","","suggest a surface change",281,N],[12,"serial","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_surface::Event","",281,N],[3,"XdgSurface","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_surface","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_surface",282,N],[10,"get_toplevel","","assign the xdg_toplevel surface role",282,[[["self"]],["result",["newproxy"]]]],[10,"get_popup","","assign the xdg_popup surface role",282,[[["self"],["option",["proxy"]],["proxy"]],["result",["newproxy"]]]],[10,"set_window_geometry","","set the new window geometry",282,N],[10,"ack_configure","","ack a configure event",282,N],[0,"xdg_toplevel","smithay_client_toolkit::reexports::protocols::xdg_shell::client","toplevel surface",N,N],[4,"ResizeEdge","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_toplevel","edge values for resizing",N,N],[13,"None","","",283,N],[13,"Top","","",283,N],[13,"Bottom","","",283,N],[13,"Left","","",283,N],[13,"TopLeft","","",283,N],[13,"BottomLeft","","",283,N],[13,"Right","","",283,N],[13,"TopRight","","",283,N],[13,"BottomRight","","",283,N],[4,"State","","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",284,N],[13,"Fullscreen","","the surface is fullscreen",284,N],[13,"Resizing","","the surface is being resized",284,N],[13,"Activated","","the surface is now activated",284,N],[13,"TiledLeft","","the surface is tiled",284,N],[13,"TiledRight","","the surface is tiled",284,N],[13,"TiledTop","","the surface is tiled",284,N],[13,"TiledBottom","","the surface is tiled",284,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_toplevel",285,N],[13,"SetParent","","set the parent of this surface",285,N],[12,"parent","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_toplevel::Request","",285,N],[13,"SetTitle","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_toplevel","set surface title",285,N],[12,"title","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_toplevel::Request","",285,N],[13,"SetAppId","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_toplevel","set application ID",285,N],[12,"app_id","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_toplevel::Request","",285,N],[13,"ShowWindowMenu","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_toplevel","show the window menu",285,N],[12,"seat","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_toplevel::Request","",285,N],[12,"serial","","",285,N],[12,"x","","",285,N],[12,"y","","",285,N],[13,"Move","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_toplevel","start an interactive move",285,N],[12,"seat","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_toplevel::Request","",285,N],[12,"serial","","",285,N],[13,"Resize","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_toplevel","start an interactive resize",285,N],[12,"seat","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_toplevel::Request","",285,N],[12,"serial","","",285,N],[12,"edges","","",285,N],[13,"SetMaxSize","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_toplevel","set the maximum size",285,N],[12,"width","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_toplevel::Request","",285,N],[12,"height","","",285,N],[13,"SetMinSize","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_toplevel","set the minimum size",285,N],[12,"width","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_toplevel::Request","",285,N],[12,"height","","",285,N],[13,"SetMaximized","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_toplevel","maximize the window",285,N],[13,"UnsetMaximized","","unmaximize the window",285,N],[13,"SetFullscreen","","set the window as fullscreen on an output",285,N],[12,"output","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_toplevel::Request","",285,N],[13,"UnsetFullscreen","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_toplevel","unset the window as fullscreen",285,N],[13,"SetMinimized","","set the window as minimized",285,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",286,N],[12,"width","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_toplevel::Event","",286,N],[12,"height","","",286,N],[12,"states","","",286,N],[13,"Close","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_toplevel","surface wants to be closed",286,N],[3,"XdgToplevel","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_toplevel",287,N],[10,"set_parent","","set the parent of this surface",287,N],[10,"set_title","","set surface title",287,N],[10,"set_app_id","","set application ID",287,N],[10,"show_window_menu","","show the window menu",287,N],[10,"_move","","start an interactive move",287,N],[10,"resize","","start an interactive resize",287,N],[10,"set_max_size","","set the maximum size",287,N],[10,"set_min_size","","set the minimum size",287,N],[10,"set_maximized","","maximize the window",287,N],[10,"unset_maximized","","unmaximize the window",287,N],[10,"set_fullscreen","","set the window as fullscreen on an output",287,N],[10,"unset_fullscreen","","unset the window as fullscreen",287,N],[10,"set_minimized","","set the window as minimized",287,N],[0,"xdg_popup","smithay_client_toolkit::reexports::protocols::xdg_shell::client","short-lived, popup surfaces for menus",N,N],[4,"Error","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_popup","",N,N],[13,"InvalidGrab","","tried to grab after being mapped",288,N],[4,"Request","","",N,N],[13,"Destroy","","remove xdg_popup interface",289,N],[13,"Grab","","make the popup take an explicit grab",289,N],[12,"seat","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_popup::Request","",289,N],[12,"serial","","",289,N],[4,"Event","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_popup","",N,N],[13,"Configure","","configure the popup surface",290,N],[12,"x","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_popup::Event","",290,N],[12,"y","","",290,N],[12,"width","","",290,N],[12,"height","","",290,N],[13,"PopupDone","smithay_client_toolkit::reexports::protocols::xdg_shell::client::xdg_popup","popup interaction is done",290,N],[3,"XdgPopup","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","remove xdg_popup interface",291,N],[10,"grab","","make the popup take an explicit grab",291,N],[0,"viewporter","smithay_client_toolkit::reexports::protocols","Viewporter protocol",N,N],[0,"c_interfaces","smithay_client_toolkit::reexports::protocols::viewporter","C interfaces for this protocol",N,N],[7,"wp_viewporter_requests","smithay_client_toolkit::reexports::protocols::viewporter::c_interfaces","",N,N],[7,"wp_viewporter_interface","","",N,N],[7,"wp_viewport_requests","","",N,N],[7,"wp_viewport_interface","","",N,N],[0,"client","smithay_client_toolkit::reexports::protocols::viewporter","Client-side API of this protocol",N,N],[0,"wp_viewporter","smithay_client_toolkit::reexports::protocols::viewporter::client","surface cropping and scaling",N,N],[4,"Error","smithay_client_toolkit::reexports::protocols::viewporter::client::wp_viewporter","",N,N],[13,"ViewportExists","","the surface already has a viewport object associated",292,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the cropping and scaling interface",293,N],[13,"GetViewport","","extend surface interface for crop and scale",293,N],[12,"id","smithay_client_toolkit::reexports::protocols::viewporter::client::wp_viewporter::Request","",293,N],[12,"surface","","",293,N],[4,"Event","smithay_client_toolkit::reexports::protocols::viewporter::client::wp_viewporter","",N,N],[3,"WpViewporter","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","unbind from the cropping and scaling interface",294,N],[10,"get_viewport","","extend surface interface for crop and scale",294,[[["self"],["proxy"]],["result",["newproxy"]]]],[0,"wp_viewport","smithay_client_toolkit::reexports::protocols::viewporter::client","crop and scale interface to a wl_surface",N,N],[4,"Error","smithay_client_toolkit::reexports::protocols::viewporter::client::wp_viewport","",N,N],[13,"BadValue","","negative or zero values in width or height",295,N],[13,"BadSize","","destination size is not integer",295,N],[13,"OutOfBuffer","","source rectangle extends outside of the content area",295,N],[13,"NoSurface","","the wl_surface was destroyed",295,N],[4,"Request","","",N,N],[13,"Destroy","","remove scaling and cropping from the surface",296,N],[13,"SetSource","","set the source rectangle for cropping",296,N],[12,"x","smithay_client_toolkit::reexports::protocols::viewporter::client::wp_viewport::Request","",296,N],[12,"y","","",296,N],[12,"width","","",296,N],[12,"height","","",296,N],[13,"SetDestination","smithay_client_toolkit::reexports::protocols::viewporter::client::wp_viewport","set the surface size for scaling",296,N],[12,"width","smithay_client_toolkit::reexports::protocols::viewporter::client::wp_viewport::Request","",296,N],[12,"height","","",296,N],[4,"Event","smithay_client_toolkit::reexports::protocols::viewporter::client::wp_viewport","",N,N],[3,"WpViewport","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","remove scaling and cropping from the surface",297,N],[10,"set_source","","set the source rectangle for cropping",297,N],[10,"set_destination","","set the surface size for scaling",297,N],[0,"presentation_time","smithay_client_toolkit::reexports::protocols","Presentation time protocol",N,N],[0,"c_interfaces","smithay_client_toolkit::reexports::protocols::presentation_time","C interfaces for this protocol",N,N],[7,"wp_presentation_requests","smithay_client_toolkit::reexports::protocols::presentation_time::c_interfaces","",N,N],[7,"wp_presentation_events","","",N,N],[7,"wp_presentation_interface","","",N,N],[7,"wp_presentation_feedback_events","","",N,N],[7,"wp_presentation_feedback_interface","","",N,N],[0,"client","smithay_client_toolkit::reexports::protocols::presentation_time","Client-side API of this protocol",N,N],[0,"wp_presentation","smithay_client_toolkit::reexports::protocols::presentation_time::client","timed presentation related wl_surface requests",N,N],[4,"Error","smithay_client_toolkit::reexports::protocols::presentation_time::client::wp_presentation","fatal presentation errors",N,N],[13,"InvalidTimestamp","","invalid value in tv_nsec",298,N],[13,"InvalidFlag","","invalid flag",298,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the presentation interface",299,N],[13,"Feedback","","request presentation feedback information",299,N],[12,"surface","smithay_client_toolkit::reexports::protocols::presentation_time::client::wp_presentation::Request","",299,N],[12,"callback","","",299,N],[4,"Event","smithay_client_toolkit::reexports::protocols::presentation_time::client::wp_presentation","",N,N],[13,"ClockId","","clock ID for timestamps",300,N],[12,"clk_id","smithay_client_toolkit::reexports::protocols::presentation_time::client::wp_presentation::Event","",300,N],[3,"WpPresentation","smithay_client_toolkit::reexports::protocols::presentation_time::client::wp_presentation","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","unbind from the presentation interface",301,N],[10,"feedback","","request presentation feedback information",301,[[["self"],["proxy"]],["result",["newproxy"]]]],[0,"wp_presentation_feedback","smithay_client_toolkit::reexports::protocols::presentation_time::client","presentation time feedback event",N,N],[4,"Kind","smithay_client_toolkit::reexports::protocols::presentation_time::client::wp_presentation_feedback","bitmask of flags in presented event",N,N],[13,"Vsync","","presentation was vsync'd",302,N],[13,"HwClock","","hardware provided the presentation timestamp",302,N],[13,"HwCompletion","","hardware signalled the start of the presentation",302,N],[13,"ZeroCopy","","presentation was done zero-copy",302,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"SyncOutput","","presentation synchronized to this output",303,N],[12,"output","smithay_client_toolkit::reexports::protocols::presentation_time::client::wp_presentation_feedback::Event","",303,N],[13,"Presented","smithay_client_toolkit::reexports::protocols::presentation_time::client::wp_presentation_feedback","the content update was displayed",303,N],[12,"tv_sec_hi","smithay_client_toolkit::reexports::protocols::presentation_time::client::wp_presentation_feedback::Event","",303,N],[12,"tv_sec_lo","","",303,N],[12,"tv_nsec","","",303,N],[12,"refresh","","",303,N],[12,"seq_hi","","",303,N],[12,"seq_lo","","",303,N],[12,"flags","","",303,N],[13,"Discarded","smithay_client_toolkit::reexports::protocols::presentation_time::client::wp_presentation_feedback","the content update was not displayed",303,N],[3,"WpPresentationFeedback","","",N,N],[8,"RequestsTrait","","",N,N],[0,"data_device","smithay_client_toolkit","Helpers to handle data device related actions",N,N],[3,"DndAction","smithay_client_toolkit::data_device","drag and drop actions",N,N],[3,"DataDevice","","Handle to support data exchange on a given seat",N,N],[3,"DataOffer","","A data offer for receiving data though copy/paste or drag and drop",N,N],[3,"ReadPipe","","A file descriptor that can only be written to",N,N],[3,"DataSource","","A data source for sending data though copy/paste or drag and drop",N,N],[3,"WritePipe","","A file descriptor that can only be written to",N,N],[4,"DndEvent","","Possible events generated during a drag'n'drop session",N,N],[13,"Enter","","A new drag'n'drop entered your surfaces",304,N],[12,"offer","smithay_client_toolkit::data_device::DndEvent","The associated data offer",304,N],[12,"serial","","A serial associated with the entry of this dnd",304,N],[12,"surface","","The entered surface",304,N],[12,"x","","horizontal location on the surface",304,N],[12,"y","","vertical location on the surface",304,N],[13,"Motion","smithay_client_toolkit::data_device","The drag'n'drop offer moved on the surface",304,N],[12,"offer","smithay_client_toolkit::data_device::DndEvent","The associated data offer",304,N],[12,"time","","The time of this motion",304,N],[12,"x","","new horizontal location",304,N],[12,"y","","new vertical location",304,N],[13,"Leave","smithay_client_toolkit::data_device","The drag'n'drop offer left your surface",304,N],[13,"Drop","","The drag'n'drop was dropped on your surface",304,N],[12,"offer","smithay_client_toolkit::data_device::DndEvent","The associated data offer",304,N],[4,"DataSourceEvent","smithay_client_toolkit::data_device","Possible events a data source needs to react to",N,N],[13,"Send","","Write the offered data for selected mime type",305,N],[12,"mime_type","smithay_client_toolkit::data_device::DataSourceEvent","Requested mime type",305,N],[12,"pipe","","Pipe to write into",305,N],[13,"Target","smithay_client_toolkit::data_device","Target mime type",305,N],[12,"mime_type","smithay_client_toolkit::data_device::DataSourceEvent","The type accepted by the target",305,N],[13,"Action","smithay_client_toolkit::data_device","Notifies of the current selected action for the drag'n'drop",305,N],[12,"action","smithay_client_toolkit::data_device::DataSourceEvent","The action chosen by the target",305,N],[13,"Cancelled","smithay_client_toolkit::data_device","The action using this data source was cancelled.",305,N],[13,"Dropped","","The user performed the \"drop\" during a drag'n'drop",305,N],[13,"Finished","","The action is finished, this data source will not be used any more",305,N],[11,"init_for_seat","","Create the DataDevice helper for this seat.",306,[[["proxy"],["proxy"],["impl"]],["datadevice"]]],[11,"init_for_seat_nonsend","","Create the DataDevice helper for this seat.",306,[[["proxy"],["proxy"],["impl"],["queuetoken"]],["datadevice"]]],[11,"start_drag","","Start a drag'n'drop offer",306,[[["self"],["proxy"],["option",["datasource"]],["dndaction"],["option",["proxy"]],["u32"]]]],[11,"set_selection","","Provide a data source as the new content for the selection",306,[[["self"],["option",["datasource"]],["u32"]]]],[11,"with_selection","","Access the `DataOffer` currently associated with the selection buffer",306,[[["self"],["f"]],["t"]]],[11,"drop","","",306,[[["self"]]]],[11,"with_mime_types","","Access the list of mime types proposed by this offer",307,[[["self"],["f"]],["t"]]],[11,"get_available_actions","","Get the list of available actions for this offer",307,[[["self"]],["dndaction"]]],[11,"get_current_action","","Get the currently set final action for this offer",307,[[["self"]],["dndaction"]]],[11,"accept","","Accept a mime type for receiving data through this offer",307,[[["self"],["option",["string"]]]]],[11,"receive","","Request to receive the data of a given mime type",307,[[["self"],["string"]],["result",["readpipe"]]]],[11,"set_actions","","Notify the send and compositor of the dnd actions you accept",307,[[["self"],["dndaction"],["dndaction"]]]],[11,"finish","","Notify that you are finished with this offer, and will no longer be using it",307,[[["self"]]]],[11,"drop","","",307,[[["self"]]]],[11,"read","","",308,N],[11,"from_raw_fd","","",308,[[["rawfd"]],["readpipe"]]],[11,"as_raw_fd","","",308,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",308,[[["self"]],["rawfd"]]],[11,"new","","Create a new data source",309,N],[11,"new_nonsend","","Create a data source",309,N],[11,"write","","",310,N],[11,"flush","","",310,[[["self"]],["result"]]],[11,"from_raw_fd","","",310,[[["rawfd"]],["writepipe"]]],[11,"as_raw_fd","","",310,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",310,[[["self"]],["rawfd"]]],[0,"keyboard","smithay_client_toolkit","Utilities for keymap interpretation of keyboard input",N,N],[4,"KeyState","smithay_client_toolkit::keyboard","physical key state",N,N],[13,"Released","","key is not pressed",19,N],[13,"Pressed","","key is pressed",19,N],[3,"ModifiersState","","Represents the current state of the keyboard modifiers",N,N],[12,"ctrl","","The \"control\" key",311,N],[12,"alt","","The \"alt\" key",311,N],[12,"shift","","The \"shift\" key",311,N],[12,"caps_lock","","The \"Caps lock\" key",311,N],[12,"logo","","The \"logo\" key",311,N],[12,"num_lock","","The \"Num lock\" key",311,N],[3,"RMLVO","","The RMLVO description of a keymap",N,N],[12,"rules","","The rules file to use",312,N],[12,"model","","The keyboard model by which to interpret keycodes and LEDs",312,N],[12,"layout","","A comma seperated list of layouts (languages) to include in the keymap",312,N],[12,"variant","","A comma seperated list of variants, one per layout, which may modify or augment the respective layout in various ways",312,N],[12,"options","","A comma seprated list of options, through which the user specifies non-layout related preferences, like which key combinations are used for switching layouts, or which key is the Compose key.",312,N],[3,"KeyRepeatEvent","","An event sent at repeated intervals for certain keys determined by xkb_keymap_key_repeats",N,N],[12,"time","","time at which the keypress occured",313,N],[12,"modifiers","","current state of the modifiers",313,N],[12,"rawkey","","raw value of the key",313,N],[12,"keysym","","interpreted symbol of the key",313,N],[12,"utf8","","utf8 interpretation of the entered text",313,N],[4,"KeyRepeatKind","","Determines the behaviour of key repetition",N,N],[13,"Fixed","","keys will be repeated at a set rate and delay",314,N],[12,"rate","smithay_client_toolkit::keyboard::KeyRepeatKind","rate (in milliseconds) at which the repetition should occur",314,N],[12,"delay","","delay (in milliseconds) between a key press and the start of repetition",314,N],[13,"System","smithay_client_toolkit::keyboard","keys will be repeated at a rate and delay set by the wayland server",314,N],[4,"Error","","An error that occured while trying to initialize a mapped keyboard",N,N],[13,"XKBNotFound","","libxkbcommon is not available",315,N],[13,"BadNames","","Provided RMLVO sepcified a keymap that would not be loaded",315,N],[4,"Event","","Events received from a mapped keyboard",N,N],[13,"Enter","","The keyboard focus has entered a surface",316,N],[12,"serial","smithay_client_toolkit::keyboard::Event","serial number of the event",316,N],[12,"surface","","surface that was entered",316,N],[12,"modifiers","","current state of the modifiers",316,N],[12,"rawkeys","","raw values of the currently pressed keys",316,N],[12,"keysyms","","interpreted symbols of the currently pressed keys",316,N],[13,"Leave","smithay_client_toolkit::keyboard","The keyboard focus has left a surface",316,N],[12,"serial","smithay_client_toolkit::keyboard::Event","serial number of the event",316,N],[12,"surface","","surface that was left",316,N],[13,"Key","smithay_client_toolkit::keyboard","A key event occured",316,N],[12,"serial","smithay_client_toolkit::keyboard::Event","serial number of the event",316,N],[12,"time","","time at which the keypress occured",316,N],[12,"modifiers","","current state of the modifiers",316,N],[12,"rawkey","","raw value of the key",316,N],[12,"keysym","","interpreted symbol of the key",316,N],[12,"state","","new state of the key",316,N],[12,"utf8","","utf8 interpretation of the entered text",316,N],[13,"RepeatInfo","smithay_client_toolkit::keyboard","Repetition information advertizing",316,N],[12,"rate","smithay_client_toolkit::keyboard::Event","rate (in milisecond) at which the repetition should occur",316,N],[12,"delay","","delay (in milisecond) between a key press and the start of repetition",316,N],[5,"map_keyboard_auto","smithay_client_toolkit::keyboard","Implement a keyboard to automatically detect the keymap",N,[[["newproxy",["wlkeyboard"]],["impl"]],["result",["proxy"]]]],[5,"map_keyboard_rmlvo","","Implement a keyboard for a predefined keymap",N,[[["newproxy",["wlkeyboard"]],["rmlvo"],["impl"]],["result",["proxy"]]]],[5,"map_keyboard_auto_with_repeat","","Implement a keyboard to automatically detect the keymap and send KeyRepeatEvents at set intervals",N,[[["newproxy",["wlkeyboard"]],["keyrepeatkind"],["impl"],["repeatimpl"]],["result",["proxy"]]]],[5,"map_keyboard_rmlvo_with_repeat","","Implement a keyboard for a predefined keymap and send KeyRepeatEvents at set intervals",N,[[["newproxy",["wlkeyboard"]],["rmlvo"],["keyrepeatkind"],["impl"],["repeatimpl"]],["result",["proxy"]]]],[0,"keysyms","","",N,N],[17,"XKB_KEY_VoidSymbol","smithay_client_toolkit::keyboard::keysyms","",N,N],[17,"XKB_KEY_BackSpace","","",N,N],[17,"XKB_KEY_Tab","","",N,N],[17,"XKB_KEY_Linefeed","","",N,N],[17,"XKB_KEY_Clear","","",N,N],[17,"XKB_KEY_Return","","",N,N],[17,"XKB_KEY_Pause","","",N,N],[17,"XKB_KEY_Scroll_Lock","","",N,N],[17,"XKB_KEY_Sys_Req","","",N,N],[17,"XKB_KEY_Escape","","",N,N],[17,"XKB_KEY_Delete","","",N,N],[17,"XKB_KEY_Multi_key","","",N,N],[17,"XKB_KEY_Codeinput","","",N,N],[17,"XKB_KEY_SingleCandidate","","",N,N],[17,"XKB_KEY_MultipleCandidate","","",N,N],[17,"XKB_KEY_PreviousCandidate","","",N,N],[17,"XKB_KEY_Kanji","","",N,N],[17,"XKB_KEY_Muhenkan","","",N,N],[17,"XKB_KEY_Henkan_Mode","","",N,N],[17,"XKB_KEY_Henkan","","",N,N],[17,"XKB_KEY_Romaji","","",N,N],[17,"XKB_KEY_Hiragana","","",N,N],[17,"XKB_KEY_Katakana","","",N,N],[17,"XKB_KEY_Hiragana_Katakana","","",N,N],[17,"XKB_KEY_Zenkaku","","",N,N],[17,"XKB_KEY_Hankaku","","",N,N],[17,"XKB_KEY_Zenkaku_Hankaku","","",N,N],[17,"XKB_KEY_Touroku","","",N,N],[17,"XKB_KEY_Massyo","","",N,N],[17,"XKB_KEY_Kana_Lock","","",N,N],[17,"XKB_KEY_Kana_Shift","","",N,N],[17,"XKB_KEY_Eisu_Shift","","",N,N],[17,"XKB_KEY_Eisu_toggle","","",N,N],[17,"XKB_KEY_Kanji_Bangou","","",N,N],[17,"XKB_KEY_Zen_Koho","","",N,N],[17,"XKB_KEY_Mae_Koho","","",N,N],[17,"XKB_KEY_Home","","",N,N],[17,"XKB_KEY_Left","","",N,N],[17,"XKB_KEY_Up","","",N,N],[17,"XKB_KEY_Right","","",N,N],[17,"XKB_KEY_Down","","",N,N],[17,"XKB_KEY_Prior","","",N,N],[17,"XKB_KEY_Page_Up","","",N,N],[17,"XKB_KEY_Next","","",N,N],[17,"XKB_KEY_Page_Down","","",N,N],[17,"XKB_KEY_End","","",N,N],[17,"XKB_KEY_Begin","","",N,N],[17,"XKB_KEY_Select","","",N,N],[17,"XKB_KEY_Print","","",N,N],[17,"XKB_KEY_Execute","","",N,N],[17,"XKB_KEY_Insert","","",N,N],[17,"XKB_KEY_Undo","","",N,N],[17,"XKB_KEY_Redo","","",N,N],[17,"XKB_KEY_Menu","","",N,N],[17,"XKB_KEY_Find","","",N,N],[17,"XKB_KEY_Cancel","","",N,N],[17,"XKB_KEY_Help","","",N,N],[17,"XKB_KEY_Break","","",N,N],[17,"XKB_KEY_Mode_switch","","",N,N],[17,"XKB_KEY_script_switch","","",N,N],[17,"XKB_KEY_Num_Lock","","",N,N],[17,"XKB_KEY_KP_Space","","",N,N],[17,"XKB_KEY_KP_Tab","","",N,N],[17,"XKB_KEY_KP_Enter","","",N,N],[17,"XKB_KEY_KP_F1","","",N,N],[17,"XKB_KEY_KP_F2","","",N,N],[17,"XKB_KEY_KP_F3","","",N,N],[17,"XKB_KEY_KP_F4","","",N,N],[17,"XKB_KEY_KP_Home","","",N,N],[17,"XKB_KEY_KP_Left","","",N,N],[17,"XKB_KEY_KP_Up","","",N,N],[17,"XKB_KEY_KP_Right","","",N,N],[17,"XKB_KEY_KP_Down","","",N,N],[17,"XKB_KEY_KP_Prior","","",N,N],[17,"XKB_KEY_KP_Page_Up","","",N,N],[17,"XKB_KEY_KP_Next","","",N,N],[17,"XKB_KEY_KP_Page_Down","","",N,N],[17,"XKB_KEY_KP_End","","",N,N],[17,"XKB_KEY_KP_Begin","","",N,N],[17,"XKB_KEY_KP_Insert","","",N,N],[17,"XKB_KEY_KP_Delete","","",N,N],[17,"XKB_KEY_KP_Equal","","",N,N],[17,"XKB_KEY_KP_Multiply","","",N,N],[17,"XKB_KEY_KP_Add","","",N,N],[17,"XKB_KEY_KP_Separator","","",N,N],[17,"XKB_KEY_KP_Subtract","","",N,N],[17,"XKB_KEY_KP_Decimal","","",N,N],[17,"XKB_KEY_KP_Divide","","",N,N],[17,"XKB_KEY_KP_0","","",N,N],[17,"XKB_KEY_KP_1","","",N,N],[17,"XKB_KEY_KP_2","","",N,N],[17,"XKB_KEY_KP_3","","",N,N],[17,"XKB_KEY_KP_4","","",N,N],[17,"XKB_KEY_KP_5","","",N,N],[17,"XKB_KEY_KP_6","","",N,N],[17,"XKB_KEY_KP_7","","",N,N],[17,"XKB_KEY_KP_8","","",N,N],[17,"XKB_KEY_KP_9","","",N,N],[17,"XKB_KEY_F1","","",N,N],[17,"XKB_KEY_F2","","",N,N],[17,"XKB_KEY_F3","","",N,N],[17,"XKB_KEY_F4","","",N,N],[17,"XKB_KEY_F5","","",N,N],[17,"XKB_KEY_F6","","",N,N],[17,"XKB_KEY_F7","","",N,N],[17,"XKB_KEY_F8","","",N,N],[17,"XKB_KEY_F9","","",N,N],[17,"XKB_KEY_F10","","",N,N],[17,"XKB_KEY_F11","","",N,N],[17,"XKB_KEY_L1","","",N,N],[17,"XKB_KEY_F12","","",N,N],[17,"XKB_KEY_L2","","",N,N],[17,"XKB_KEY_F13","","",N,N],[17,"XKB_KEY_L3","","",N,N],[17,"XKB_KEY_F14","","",N,N],[17,"XKB_KEY_L4","","",N,N],[17,"XKB_KEY_F15","","",N,N],[17,"XKB_KEY_L5","","",N,N],[17,"XKB_KEY_F16","","",N,N],[17,"XKB_KEY_L6","","",N,N],[17,"XKB_KEY_F17","","",N,N],[17,"XKB_KEY_L7","","",N,N],[17,"XKB_KEY_F18","","",N,N],[17,"XKB_KEY_L8","","",N,N],[17,"XKB_KEY_F19","","",N,N],[17,"XKB_KEY_L9","","",N,N],[17,"XKB_KEY_F20","","",N,N],[17,"XKB_KEY_L10","","",N,N],[17,"XKB_KEY_F21","","",N,N],[17,"XKB_KEY_R1","","",N,N],[17,"XKB_KEY_F22","","",N,N],[17,"XKB_KEY_R2","","",N,N],[17,"XKB_KEY_F23","","",N,N],[17,"XKB_KEY_R3","","",N,N],[17,"XKB_KEY_F24","","",N,N],[17,"XKB_KEY_R4","","",N,N],[17,"XKB_KEY_F25","","",N,N],[17,"XKB_KEY_R5","","",N,N],[17,"XKB_KEY_F26","","",N,N],[17,"XKB_KEY_R6","","",N,N],[17,"XKB_KEY_F27","","",N,N],[17,"XKB_KEY_R7","","",N,N],[17,"XKB_KEY_F28","","",N,N],[17,"XKB_KEY_R8","","",N,N],[17,"XKB_KEY_F29","","",N,N],[17,"XKB_KEY_R9","","",N,N],[17,"XKB_KEY_F30","","",N,N],[17,"XKB_KEY_R10","","",N,N],[17,"XKB_KEY_F31","","",N,N],[17,"XKB_KEY_R11","","",N,N],[17,"XKB_KEY_F32","","",N,N],[17,"XKB_KEY_R12","","",N,N],[17,"XKB_KEY_F33","","",N,N],[17,"XKB_KEY_R13","","",N,N],[17,"XKB_KEY_F34","","",N,N],[17,"XKB_KEY_R14","","",N,N],[17,"XKB_KEY_F35","","",N,N],[17,"XKB_KEY_R15","","",N,N],[17,"XKB_KEY_Shift_L","","",N,N],[17,"XKB_KEY_Shift_R","","",N,N],[17,"XKB_KEY_Control_L","","",N,N],[17,"XKB_KEY_Control_R","","",N,N],[17,"XKB_KEY_Caps_Lock","","",N,N],[17,"XKB_KEY_Shift_Lock","","",N,N],[17,"XKB_KEY_Meta_L","","",N,N],[17,"XKB_KEY_Meta_R","","",N,N],[17,"XKB_KEY_Alt_L","","",N,N],[17,"XKB_KEY_Alt_R","","",N,N],[17,"XKB_KEY_Super_L","","",N,N],[17,"XKB_KEY_Super_R","","",N,N],[17,"XKB_KEY_Hyper_L","","",N,N],[17,"XKB_KEY_Hyper_R","","",N,N],[17,"XKB_KEY_ISO_Lock","","",N,N],[17,"XKB_KEY_ISO_Level2_Latch","","",N,N],[17,"XKB_KEY_ISO_Level3_Shift","","",N,N],[17,"XKB_KEY_ISO_Level3_Latch","","",N,N],[17,"XKB_KEY_ISO_Level3_Lock","","",N,N],[17,"XKB_KEY_ISO_Level5_Shift","","",N,N],[17,"XKB_KEY_ISO_Level5_Latch","","",N,N],[17,"XKB_KEY_ISO_Level5_Lock","","",N,N],[17,"XKB_KEY_ISO_Group_Shift","","",N,N],[17,"XKB_KEY_ISO_Group_Latch","","",N,N],[17,"XKB_KEY_ISO_Group_Lock","","",N,N],[17,"XKB_KEY_ISO_Next_Group","","",N,N],[17,"XKB_KEY_ISO_Next_Group_Lock","","",N,N],[17,"XKB_KEY_ISO_Prev_Group","","",N,N],[17,"XKB_KEY_ISO_Prev_Group_Lock","","",N,N],[17,"XKB_KEY_ISO_First_Group","","",N,N],[17,"XKB_KEY_ISO_First_Group_Lock","","",N,N],[17,"XKB_KEY_ISO_Last_Group","","",N,N],[17,"XKB_KEY_ISO_Last_Group_Lock","","",N,N],[17,"XKB_KEY_ISO_Left_Tab","","",N,N],[17,"XKB_KEY_ISO_Move_Line_Up","","",N,N],[17,"XKB_KEY_ISO_Move_Line_Down","","",N,N],[17,"XKB_KEY_ISO_Partial_Line_Up","","",N,N],[17,"XKB_KEY_ISO_Partial_Line_Down","","",N,N],[17,"XKB_KEY_ISO_Partial_Space_Left","","",N,N],[17,"XKB_KEY_ISO_Partial_Space_Right","","",N,N],[17,"XKB_KEY_ISO_Set_Margin_Left","","",N,N],[17,"XKB_KEY_ISO_Set_Margin_Right","","",N,N],[17,"XKB_KEY_ISO_Release_Margin_Left","","",N,N],[17,"XKB_KEY_ISO_Release_Margin_Right","","",N,N],[17,"XKB_KEY_ISO_Release_Both_Margins","","",N,N],[17,"XKB_KEY_ISO_Fast_Cursor_Left","","",N,N],[17,"XKB_KEY_ISO_Fast_Cursor_Right","","",N,N],[17,"XKB_KEY_ISO_Fast_Cursor_Up","","",N,N],[17,"XKB_KEY_ISO_Fast_Cursor_Down","","",N,N],[17,"XKB_KEY_ISO_Continuous_Underline","","",N,N],[17,"XKB_KEY_ISO_Discontinuous_Underline","","",N,N],[17,"XKB_KEY_ISO_Emphasize","","",N,N],[17,"XKB_KEY_ISO_Center_Object","","",N,N],[17,"XKB_KEY_ISO_Enter","","",N,N],[17,"XKB_KEY_dead_grave","","",N,N],[17,"XKB_KEY_dead_acute","","",N,N],[17,"XKB_KEY_dead_circumflex","","",N,N],[17,"XKB_KEY_dead_tilde","","",N,N],[17,"XKB_KEY_dead_perispomeni","","",N,N],[17,"XKB_KEY_dead_macron","","",N,N],[17,"XKB_KEY_dead_breve","","",N,N],[17,"XKB_KEY_dead_abovedot","","",N,N],[17,"XKB_KEY_dead_diaeresis","","",N,N],[17,"XKB_KEY_dead_abovering","","",N,N],[17,"XKB_KEY_dead_doubleacute","","",N,N],[17,"XKB_KEY_dead_caron","","",N,N],[17,"XKB_KEY_dead_cedilla","","",N,N],[17,"XKB_KEY_dead_ogonek","","",N,N],[17,"XKB_KEY_dead_iota","","",N,N],[17,"XKB_KEY_dead_voiced_sound","","",N,N],[17,"XKB_KEY_dead_semivoiced_sound","","",N,N],[17,"XKB_KEY_dead_belowdot","","",N,N],[17,"XKB_KEY_dead_hook","","",N,N],[17,"XKB_KEY_dead_horn","","",N,N],[17,"XKB_KEY_dead_stroke","","",N,N],[17,"XKB_KEY_dead_abovecomma","","",N,N],[17,"XKB_KEY_dead_psili","","",N,N],[17,"XKB_KEY_dead_abovereversedcomma","","",N,N],[17,"XKB_KEY_dead_dasia","","",N,N],[17,"XKB_KEY_dead_doublegrave","","",N,N],[17,"XKB_KEY_dead_belowring","","",N,N],[17,"XKB_KEY_dead_belowmacron","","",N,N],[17,"XKB_KEY_dead_belowcircumflex","","",N,N],[17,"XKB_KEY_dead_belowtilde","","",N,N],[17,"XKB_KEY_dead_belowbreve","","",N,N],[17,"XKB_KEY_dead_belowdiaeresis","","",N,N],[17,"XKB_KEY_dead_invertedbreve","","",N,N],[17,"XKB_KEY_dead_belowcomma","","",N,N],[17,"XKB_KEY_dead_currency","","",N,N],[17,"XKB_KEY_dead_lowline","","",N,N],[17,"XKB_KEY_dead_aboveverticalline","","",N,N],[17,"XKB_KEY_dead_belowverticalline","","",N,N],[17,"XKB_KEY_dead_longsolidusoverlay","","",N,N],[17,"XKB_KEY_dead_a","","",N,N],[17,"XKB_KEY_dead_A","","",N,N],[17,"XKB_KEY_dead_e","","",N,N],[17,"XKB_KEY_dead_E","","",N,N],[17,"XKB_KEY_dead_i","","",N,N],[17,"XKB_KEY_dead_I","","",N,N],[17,"XKB_KEY_dead_o","","",N,N],[17,"XKB_KEY_dead_O","","",N,N],[17,"XKB_KEY_dead_u","","",N,N],[17,"XKB_KEY_dead_U","","",N,N],[17,"XKB_KEY_dead_small_schwa","","",N,N],[17,"XKB_KEY_dead_capital_schwa","","",N,N],[17,"XKB_KEY_dead_greek","","",N,N],[17,"XKB_KEY_First_Virtual_Screen","","",N,N],[17,"XKB_KEY_Prev_Virtual_Screen","","",N,N],[17,"XKB_KEY_Next_Virtual_Screen","","",N,N],[17,"XKB_KEY_Last_Virtual_Screen","","",N,N],[17,"XKB_KEY_Terminate_Server","","",N,N],[17,"XKB_KEY_AccessX_Enable","","",N,N],[17,"XKB_KEY_AccessX_Feedback_Enable","","",N,N],[17,"XKB_KEY_RepeatKeys_Enable","","",N,N],[17,"XKB_KEY_SlowKeys_Enable","","",N,N],[17,"XKB_KEY_BounceKeys_Enable","","",N,N],[17,"XKB_KEY_StickyKeys_Enable","","",N,N],[17,"XKB_KEY_MouseKeys_Enable","","",N,N],[17,"XKB_KEY_MouseKeys_Accel_Enable","","",N,N],[17,"XKB_KEY_Overlay1_Enable","","",N,N],[17,"XKB_KEY_Overlay2_Enable","","",N,N],[17,"XKB_KEY_AudibleBell_Enable","","",N,N],[17,"XKB_KEY_Pointer_Left","","",N,N],[17,"XKB_KEY_Pointer_Right","","",N,N],[17,"XKB_KEY_Pointer_Up","","",N,N],[17,"XKB_KEY_Pointer_Down","","",N,N],[17,"XKB_KEY_Pointer_UpLeft","","",N,N],[17,"XKB_KEY_Pointer_UpRight","","",N,N],[17,"XKB_KEY_Pointer_DownLeft","","",N,N],[17,"XKB_KEY_Pointer_DownRight","","",N,N],[17,"XKB_KEY_Pointer_Button_Dflt","","",N,N],[17,"XKB_KEY_Pointer_Button1","","",N,N],[17,"XKB_KEY_Pointer_Button2","","",N,N],[17,"XKB_KEY_Pointer_Button3","","",N,N],[17,"XKB_KEY_Pointer_Button4","","",N,N],[17,"XKB_KEY_Pointer_Button5","","",N,N],[17,"XKB_KEY_Pointer_DblClick_Dflt","","",N,N],[17,"XKB_KEY_Pointer_DblClick1","","",N,N],[17,"XKB_KEY_Pointer_DblClick2","","",N,N],[17,"XKB_KEY_Pointer_DblClick3","","",N,N],[17,"XKB_KEY_Pointer_DblClick4","","",N,N],[17,"XKB_KEY_Pointer_DblClick5","","",N,N],[17,"XKB_KEY_Pointer_Drag_Dflt","","",N,N],[17,"XKB_KEY_Pointer_Drag1","","",N,N],[17,"XKB_KEY_Pointer_Drag2","","",N,N],[17,"XKB_KEY_Pointer_Drag3","","",N,N],[17,"XKB_KEY_Pointer_Drag4","","",N,N],[17,"XKB_KEY_Pointer_Drag5","","",N,N],[17,"XKB_KEY_Pointer_EnableKeys","","",N,N],[17,"XKB_KEY_Pointer_Accelerate","","",N,N],[17,"XKB_KEY_Pointer_DfltBtnNext","","",N,N],[17,"XKB_KEY_Pointer_DfltBtnPrev","","",N,N],[17,"XKB_KEY_ch","","",N,N],[17,"XKB_KEY_Ch","","",N,N],[17,"XKB_KEY_CH","","",N,N],[17,"XKB_KEY_c_h","","",N,N],[17,"XKB_KEY_C_h","","",N,N],[17,"XKB_KEY_C_H","","",N,N],[17,"XKB_KEY_3270_Duplicate","","",N,N],[17,"XKB_KEY_3270_FieldMark","","",N,N],[17,"XKB_KEY_3270_Right2","","",N,N],[17,"XKB_KEY_3270_Left2","","",N,N],[17,"XKB_KEY_3270_BackTab","","",N,N],[17,"XKB_KEY_3270_EraseEOF","","",N,N],[17,"XKB_KEY_3270_EraseInput","","",N,N],[17,"XKB_KEY_3270_Reset","","",N,N],[17,"XKB_KEY_3270_Quit","","",N,N],[17,"XKB_KEY_3270_PA1","","",N,N],[17,"XKB_KEY_3270_PA2","","",N,N],[17,"XKB_KEY_3270_PA3","","",N,N],[17,"XKB_KEY_3270_Test","","",N,N],[17,"XKB_KEY_3270_Attn","","",N,N],[17,"XKB_KEY_3270_CursorBlink","","",N,N],[17,"XKB_KEY_3270_AltCursor","","",N,N],[17,"XKB_KEY_3270_KeyClick","","",N,N],[17,"XKB_KEY_3270_Jump","","",N,N],[17,"XKB_KEY_3270_Ident","","",N,N],[17,"XKB_KEY_3270_Rule","","",N,N],[17,"XKB_KEY_3270_Copy","","",N,N],[17,"XKB_KEY_3270_Play","","",N,N],[17,"XKB_KEY_3270_Setup","","",N,N],[17,"XKB_KEY_3270_Record","","",N,N],[17,"XKB_KEY_3270_ChangeScreen","","",N,N],[17,"XKB_KEY_3270_DeleteWord","","",N,N],[17,"XKB_KEY_3270_ExSelect","","",N,N],[17,"XKB_KEY_3270_CursorSelect","","",N,N],[17,"XKB_KEY_3270_PrintScreen","","",N,N],[17,"XKB_KEY_3270_Enter","","",N,N],[17,"XKB_KEY_space","","",N,N],[17,"XKB_KEY_exclam","","",N,N],[17,"XKB_KEY_quotedbl","","",N,N],[17,"XKB_KEY_numbersign","","",N,N],[17,"XKB_KEY_dollar","","",N,N],[17,"XKB_KEY_percent","","",N,N],[17,"XKB_KEY_ampersand","","",N,N],[17,"XKB_KEY_apostrophe","","",N,N],[17,"XKB_KEY_quoteright","","",N,N],[17,"XKB_KEY_parenleft","","",N,N],[17,"XKB_KEY_parenright","","",N,N],[17,"XKB_KEY_asterisk","","",N,N],[17,"XKB_KEY_plus","","",N,N],[17,"XKB_KEY_comma","","",N,N],[17,"XKB_KEY_minus","","",N,N],[17,"XKB_KEY_period","","",N,N],[17,"XKB_KEY_slash","","",N,N],[17,"XKB_KEY_0","","",N,N],[17,"XKB_KEY_1","","",N,N],[17,"XKB_KEY_2","","",N,N],[17,"XKB_KEY_3","","",N,N],[17,"XKB_KEY_4","","",N,N],[17,"XKB_KEY_5","","",N,N],[17,"XKB_KEY_6","","",N,N],[17,"XKB_KEY_7","","",N,N],[17,"XKB_KEY_8","","",N,N],[17,"XKB_KEY_9","","",N,N],[17,"XKB_KEY_colon","","",N,N],[17,"XKB_KEY_semicolon","","",N,N],[17,"XKB_KEY_less","","",N,N],[17,"XKB_KEY_equal","","",N,N],[17,"XKB_KEY_greater","","",N,N],[17,"XKB_KEY_question","","",N,N],[17,"XKB_KEY_at","","",N,N],[17,"XKB_KEY_A","","",N,N],[17,"XKB_KEY_B","","",N,N],[17,"XKB_KEY_C","","",N,N],[17,"XKB_KEY_D","","",N,N],[17,"XKB_KEY_E","","",N,N],[17,"XKB_KEY_F","","",N,N],[17,"XKB_KEY_G","","",N,N],[17,"XKB_KEY_H","","",N,N],[17,"XKB_KEY_I","","",N,N],[17,"XKB_KEY_J","","",N,N],[17,"XKB_KEY_K","","",N,N],[17,"XKB_KEY_L","","",N,N],[17,"XKB_KEY_M","","",N,N],[17,"XKB_KEY_N","","",N,N],[17,"XKB_KEY_O","","",N,N],[17,"XKB_KEY_P","","",N,N],[17,"XKB_KEY_Q","","",N,N],[17,"XKB_KEY_R","","",N,N],[17,"XKB_KEY_S","","",N,N],[17,"XKB_KEY_T","","",N,N],[17,"XKB_KEY_U","","",N,N],[17,"XKB_KEY_V","","",N,N],[17,"XKB_KEY_W","","",N,N],[17,"XKB_KEY_X","","",N,N],[17,"XKB_KEY_Y","","",N,N],[17,"XKB_KEY_Z","","",N,N],[17,"XKB_KEY_bracketleft","","",N,N],[17,"XKB_KEY_backslash","","",N,N],[17,"XKB_KEY_bracketright","","",N,N],[17,"XKB_KEY_asciicircum","","",N,N],[17,"XKB_KEY_underscore","","",N,N],[17,"XKB_KEY_grave","","",N,N],[17,"XKB_KEY_quoteleft","","",N,N],[17,"XKB_KEY_a","","",N,N],[17,"XKB_KEY_b","","",N,N],[17,"XKB_KEY_c","","",N,N],[17,"XKB_KEY_d","","",N,N],[17,"XKB_KEY_e","","",N,N],[17,"XKB_KEY_f","","",N,N],[17,"XKB_KEY_g","","",N,N],[17,"XKB_KEY_h","","",N,N],[17,"XKB_KEY_i","","",N,N],[17,"XKB_KEY_j","","",N,N],[17,"XKB_KEY_k","","",N,N],[17,"XKB_KEY_l","","",N,N],[17,"XKB_KEY_m","","",N,N],[17,"XKB_KEY_n","","",N,N],[17,"XKB_KEY_o","","",N,N],[17,"XKB_KEY_p","","",N,N],[17,"XKB_KEY_q","","",N,N],[17,"XKB_KEY_r","","",N,N],[17,"XKB_KEY_s","","",N,N],[17,"XKB_KEY_t","","",N,N],[17,"XKB_KEY_u","","",N,N],[17,"XKB_KEY_v","","",N,N],[17,"XKB_KEY_w","","",N,N],[17,"XKB_KEY_x","","",N,N],[17,"XKB_KEY_y","","",N,N],[17,"XKB_KEY_z","","",N,N],[17,"XKB_KEY_braceleft","","",N,N],[17,"XKB_KEY_bar","","",N,N],[17,"XKB_KEY_braceright","","",N,N],[17,"XKB_KEY_asciitilde","","",N,N],[17,"XKB_KEY_nobreakspace","","",N,N],[17,"XKB_KEY_exclamdown","","",N,N],[17,"XKB_KEY_cent","","",N,N],[17,"XKB_KEY_sterling","","",N,N],[17,"XKB_KEY_currency","","",N,N],[17,"XKB_KEY_yen","","",N,N],[17,"XKB_KEY_brokenbar","","",N,N],[17,"XKB_KEY_section","","",N,N],[17,"XKB_KEY_diaeresis","","",N,N],[17,"XKB_KEY_copyright","","",N,N],[17,"XKB_KEY_ordfeminine","","",N,N],[17,"XKB_KEY_guillemotleft","","",N,N],[17,"XKB_KEY_notsign","","",N,N],[17,"XKB_KEY_hyphen","","",N,N],[17,"XKB_KEY_registered","","",N,N],[17,"XKB_KEY_macron","","",N,N],[17,"XKB_KEY_degree","","",N,N],[17,"XKB_KEY_plusminus","","",N,N],[17,"XKB_KEY_twosuperior","","",N,N],[17,"XKB_KEY_threesuperior","","",N,N],[17,"XKB_KEY_acute","","",N,N],[17,"XKB_KEY_mu","","",N,N],[17,"XKB_KEY_paragraph","","",N,N],[17,"XKB_KEY_periodcentered","","",N,N],[17,"XKB_KEY_cedilla","","",N,N],[17,"XKB_KEY_onesuperior","","",N,N],[17,"XKB_KEY_masculine","","",N,N],[17,"XKB_KEY_guillemotright","","",N,N],[17,"XKB_KEY_onequarter","","",N,N],[17,"XKB_KEY_onehalf","","",N,N],[17,"XKB_KEY_threequarters","","",N,N],[17,"XKB_KEY_questiondown","","",N,N],[17,"XKB_KEY_Agrave","","",N,N],[17,"XKB_KEY_Aacute","","",N,N],[17,"XKB_KEY_Acircumflex","","",N,N],[17,"XKB_KEY_Atilde","","",N,N],[17,"XKB_KEY_Adiaeresis","","",N,N],[17,"XKB_KEY_Aring","","",N,N],[17,"XKB_KEY_AE","","",N,N],[17,"XKB_KEY_Ccedilla","","",N,N],[17,"XKB_KEY_Egrave","","",N,N],[17,"XKB_KEY_Eacute","","",N,N],[17,"XKB_KEY_Ecircumflex","","",N,N],[17,"XKB_KEY_Ediaeresis","","",N,N],[17,"XKB_KEY_Igrave","","",N,N],[17,"XKB_KEY_Iacute","","",N,N],[17,"XKB_KEY_Icircumflex","","",N,N],[17,"XKB_KEY_Idiaeresis","","",N,N],[17,"XKB_KEY_ETH","","",N,N],[17,"XKB_KEY_Eth","","",N,N],[17,"XKB_KEY_Ntilde","","",N,N],[17,"XKB_KEY_Ograve","","",N,N],[17,"XKB_KEY_Oacute","","",N,N],[17,"XKB_KEY_Ocircumflex","","",N,N],[17,"XKB_KEY_Otilde","","",N,N],[17,"XKB_KEY_Odiaeresis","","",N,N],[17,"XKB_KEY_multiply","","",N,N],[17,"XKB_KEY_Oslash","","",N,N],[17,"XKB_KEY_Ooblique","","",N,N],[17,"XKB_KEY_Ugrave","","",N,N],[17,"XKB_KEY_Uacute","","",N,N],[17,"XKB_KEY_Ucircumflex","","",N,N],[17,"XKB_KEY_Udiaeresis","","",N,N],[17,"XKB_KEY_Yacute","","",N,N],[17,"XKB_KEY_THORN","","",N,N],[17,"XKB_KEY_Thorn","","",N,N],[17,"XKB_KEY_ssharp","","",N,N],[17,"XKB_KEY_agrave","","",N,N],[17,"XKB_KEY_aacute","","",N,N],[17,"XKB_KEY_acircumflex","","",N,N],[17,"XKB_KEY_atilde","","",N,N],[17,"XKB_KEY_adiaeresis","","",N,N],[17,"XKB_KEY_aring","","",N,N],[17,"XKB_KEY_ae","","",N,N],[17,"XKB_KEY_ccedilla","","",N,N],[17,"XKB_KEY_egrave","","",N,N],[17,"XKB_KEY_eacute","","",N,N],[17,"XKB_KEY_ecircumflex","","",N,N],[17,"XKB_KEY_ediaeresis","","",N,N],[17,"XKB_KEY_igrave","","",N,N],[17,"XKB_KEY_iacute","","",N,N],[17,"XKB_KEY_icircumflex","","",N,N],[17,"XKB_KEY_idiaeresis","","",N,N],[17,"XKB_KEY_eth","","",N,N],[17,"XKB_KEY_ntilde","","",N,N],[17,"XKB_KEY_ograve","","",N,N],[17,"XKB_KEY_oacute","","",N,N],[17,"XKB_KEY_ocircumflex","","",N,N],[17,"XKB_KEY_otilde","","",N,N],[17,"XKB_KEY_odiaeresis","","",N,N],[17,"XKB_KEY_division","","",N,N],[17,"XKB_KEY_oslash","","",N,N],[17,"XKB_KEY_ooblique","","",N,N],[17,"XKB_KEY_ugrave","","",N,N],[17,"XKB_KEY_uacute","","",N,N],[17,"XKB_KEY_ucircumflex","","",N,N],[17,"XKB_KEY_udiaeresis","","",N,N],[17,"XKB_KEY_yacute","","",N,N],[17,"XKB_KEY_thorn","","",N,N],[17,"XKB_KEY_ydiaeresis","","",N,N],[17,"XKB_KEY_Aogonek","","",N,N],[17,"XKB_KEY_breve","","",N,N],[17,"XKB_KEY_Lstroke","","",N,N],[17,"XKB_KEY_Lcaron","","",N,N],[17,"XKB_KEY_Sacute","","",N,N],[17,"XKB_KEY_Scaron","","",N,N],[17,"XKB_KEY_Scedilla","","",N,N],[17,"XKB_KEY_Tcaron","","",N,N],[17,"XKB_KEY_Zacute","","",N,N],[17,"XKB_KEY_Zcaron","","",N,N],[17,"XKB_KEY_Zabovedot","","",N,N],[17,"XKB_KEY_aogonek","","",N,N],[17,"XKB_KEY_ogonek","","",N,N],[17,"XKB_KEY_lstroke","","",N,N],[17,"XKB_KEY_lcaron","","",N,N],[17,"XKB_KEY_sacute","","",N,N],[17,"XKB_KEY_caron","","",N,N],[17,"XKB_KEY_scaron","","",N,N],[17,"XKB_KEY_scedilla","","",N,N],[17,"XKB_KEY_tcaron","","",N,N],[17,"XKB_KEY_zacute","","",N,N],[17,"XKB_KEY_doubleacute","","",N,N],[17,"XKB_KEY_zcaron","","",N,N],[17,"XKB_KEY_zabovedot","","",N,N],[17,"XKB_KEY_Racute","","",N,N],[17,"XKB_KEY_Abreve","","",N,N],[17,"XKB_KEY_Lacute","","",N,N],[17,"XKB_KEY_Cacute","","",N,N],[17,"XKB_KEY_Ccaron","","",N,N],[17,"XKB_KEY_Eogonek","","",N,N],[17,"XKB_KEY_Ecaron","","",N,N],[17,"XKB_KEY_Dcaron","","",N,N],[17,"XKB_KEY_Dstroke","","",N,N],[17,"XKB_KEY_Nacute","","",N,N],[17,"XKB_KEY_Ncaron","","",N,N],[17,"XKB_KEY_Odoubleacute","","",N,N],[17,"XKB_KEY_Rcaron","","",N,N],[17,"XKB_KEY_Uring","","",N,N],[17,"XKB_KEY_Udoubleacute","","",N,N],[17,"XKB_KEY_Tcedilla","","",N,N],[17,"XKB_KEY_racute","","",N,N],[17,"XKB_KEY_abreve","","",N,N],[17,"XKB_KEY_lacute","","",N,N],[17,"XKB_KEY_cacute","","",N,N],[17,"XKB_KEY_ccaron","","",N,N],[17,"XKB_KEY_eogonek","","",N,N],[17,"XKB_KEY_ecaron","","",N,N],[17,"XKB_KEY_dcaron","","",N,N],[17,"XKB_KEY_dstroke","","",N,N],[17,"XKB_KEY_nacute","","",N,N],[17,"XKB_KEY_ncaron","","",N,N],[17,"XKB_KEY_odoubleacute","","",N,N],[17,"XKB_KEY_rcaron","","",N,N],[17,"XKB_KEY_uring","","",N,N],[17,"XKB_KEY_udoubleacute","","",N,N],[17,"XKB_KEY_tcedilla","","",N,N],[17,"XKB_KEY_abovedot","","",N,N],[17,"XKB_KEY_Hstroke","","",N,N],[17,"XKB_KEY_Hcircumflex","","",N,N],[17,"XKB_KEY_Iabovedot","","",N,N],[17,"XKB_KEY_Gbreve","","",N,N],[17,"XKB_KEY_Jcircumflex","","",N,N],[17,"XKB_KEY_hstroke","","",N,N],[17,"XKB_KEY_hcircumflex","","",N,N],[17,"XKB_KEY_idotless","","",N,N],[17,"XKB_KEY_gbreve","","",N,N],[17,"XKB_KEY_jcircumflex","","",N,N],[17,"XKB_KEY_Cabovedot","","",N,N],[17,"XKB_KEY_Ccircumflex","","",N,N],[17,"XKB_KEY_Gabovedot","","",N,N],[17,"XKB_KEY_Gcircumflex","","",N,N],[17,"XKB_KEY_Ubreve","","",N,N],[17,"XKB_KEY_Scircumflex","","",N,N],[17,"XKB_KEY_cabovedot","","",N,N],[17,"XKB_KEY_ccircumflex","","",N,N],[17,"XKB_KEY_gabovedot","","",N,N],[17,"XKB_KEY_gcircumflex","","",N,N],[17,"XKB_KEY_ubreve","","",N,N],[17,"XKB_KEY_scircumflex","","",N,N],[17,"XKB_KEY_kra","","",N,N],[17,"XKB_KEY_kappa","","",N,N],[17,"XKB_KEY_Rcedilla","","",N,N],[17,"XKB_KEY_Itilde","","",N,N],[17,"XKB_KEY_Lcedilla","","",N,N],[17,"XKB_KEY_Emacron","","",N,N],[17,"XKB_KEY_Gcedilla","","",N,N],[17,"XKB_KEY_Tslash","","",N,N],[17,"XKB_KEY_rcedilla","","",N,N],[17,"XKB_KEY_itilde","","",N,N],[17,"XKB_KEY_lcedilla","","",N,N],[17,"XKB_KEY_emacron","","",N,N],[17,"XKB_KEY_gcedilla","","",N,N],[17,"XKB_KEY_tslash","","",N,N],[17,"XKB_KEY_ENG","","",N,N],[17,"XKB_KEY_eng","","",N,N],[17,"XKB_KEY_Amacron","","",N,N],[17,"XKB_KEY_Iogonek","","",N,N],[17,"XKB_KEY_Eabovedot","","",N,N],[17,"XKB_KEY_Imacron","","",N,N],[17,"XKB_KEY_Ncedilla","","",N,N],[17,"XKB_KEY_Omacron","","",N,N],[17,"XKB_KEY_Kcedilla","","",N,N],[17,"XKB_KEY_Uogonek","","",N,N],[17,"XKB_KEY_Utilde","","",N,N],[17,"XKB_KEY_Umacron","","",N,N],[17,"XKB_KEY_amacron","","",N,N],[17,"XKB_KEY_iogonek","","",N,N],[17,"XKB_KEY_eabovedot","","",N,N],[17,"XKB_KEY_imacron","","",N,N],[17,"XKB_KEY_ncedilla","","",N,N],[17,"XKB_KEY_omacron","","",N,N],[17,"XKB_KEY_kcedilla","","",N,N],[17,"XKB_KEY_uogonek","","",N,N],[17,"XKB_KEY_utilde","","",N,N],[17,"XKB_KEY_umacron","","",N,N],[17,"XKB_KEY_Wcircumflex","","",N,N],[17,"XKB_KEY_wcircumflex","","",N,N],[17,"XKB_KEY_Ycircumflex","","",N,N],[17,"XKB_KEY_ycircumflex","","",N,N],[17,"XKB_KEY_Babovedot","","",N,N],[17,"XKB_KEY_babovedot","","",N,N],[17,"XKB_KEY_Dabovedot","","",N,N],[17,"XKB_KEY_dabovedot","","",N,N],[17,"XKB_KEY_Fabovedot","","",N,N],[17,"XKB_KEY_fabovedot","","",N,N],[17,"XKB_KEY_Mabovedot","","",N,N],[17,"XKB_KEY_mabovedot","","",N,N],[17,"XKB_KEY_Pabovedot","","",N,N],[17,"XKB_KEY_pabovedot","","",N,N],[17,"XKB_KEY_Sabovedot","","",N,N],[17,"XKB_KEY_sabovedot","","",N,N],[17,"XKB_KEY_Tabovedot","","",N,N],[17,"XKB_KEY_tabovedot","","",N,N],[17,"XKB_KEY_Wgrave","","",N,N],[17,"XKB_KEY_wgrave","","",N,N],[17,"XKB_KEY_Wacute","","",N,N],[17,"XKB_KEY_wacute","","",N,N],[17,"XKB_KEY_Wdiaeresis","","",N,N],[17,"XKB_KEY_wdiaeresis","","",N,N],[17,"XKB_KEY_Ygrave","","",N,N],[17,"XKB_KEY_ygrave","","",N,N],[17,"XKB_KEY_OE","","",N,N],[17,"XKB_KEY_oe","","",N,N],[17,"XKB_KEY_Ydiaeresis","","",N,N],[17,"XKB_KEY_overline","","",N,N],[17,"XKB_KEY_kana_fullstop","","",N,N],[17,"XKB_KEY_kana_openingbracket","","",N,N],[17,"XKB_KEY_kana_closingbracket","","",N,N],[17,"XKB_KEY_kana_comma","","",N,N],[17,"XKB_KEY_kana_conjunctive","","",N,N],[17,"XKB_KEY_kana_middledot","","",N,N],[17,"XKB_KEY_kana_WO","","",N,N],[17,"XKB_KEY_kana_a","","",N,N],[17,"XKB_KEY_kana_i","","",N,N],[17,"XKB_KEY_kana_u","","",N,N],[17,"XKB_KEY_kana_e","","",N,N],[17,"XKB_KEY_kana_o","","",N,N],[17,"XKB_KEY_kana_ya","","",N,N],[17,"XKB_KEY_kana_yu","","",N,N],[17,"XKB_KEY_kana_yo","","",N,N],[17,"XKB_KEY_kana_tsu","","",N,N],[17,"XKB_KEY_kana_tu","","",N,N],[17,"XKB_KEY_prolongedsound","","",N,N],[17,"XKB_KEY_kana_A","","",N,N],[17,"XKB_KEY_kana_I","","",N,N],[17,"XKB_KEY_kana_U","","",N,N],[17,"XKB_KEY_kana_E","","",N,N],[17,"XKB_KEY_kana_O","","",N,N],[17,"XKB_KEY_kana_KA","","",N,N],[17,"XKB_KEY_kana_KI","","",N,N],[17,"XKB_KEY_kana_KU","","",N,N],[17,"XKB_KEY_kana_KE","","",N,N],[17,"XKB_KEY_kana_KO","","",N,N],[17,"XKB_KEY_kana_SA","","",N,N],[17,"XKB_KEY_kana_SHI","","",N,N],[17,"XKB_KEY_kana_SU","","",N,N],[17,"XKB_KEY_kana_SE","","",N,N],[17,"XKB_KEY_kana_SO","","",N,N],[17,"XKB_KEY_kana_TA","","",N,N],[17,"XKB_KEY_kana_CHI","","",N,N],[17,"XKB_KEY_kana_TI","","",N,N],[17,"XKB_KEY_kana_TSU","","",N,N],[17,"XKB_KEY_kana_TU","","",N,N],[17,"XKB_KEY_kana_TE","","",N,N],[17,"XKB_KEY_kana_TO","","",N,N],[17,"XKB_KEY_kana_NA","","",N,N],[17,"XKB_KEY_kana_NI","","",N,N],[17,"XKB_KEY_kana_NU","","",N,N],[17,"XKB_KEY_kana_NE","","",N,N],[17,"XKB_KEY_kana_NO","","",N,N],[17,"XKB_KEY_kana_HA","","",N,N],[17,"XKB_KEY_kana_HI","","",N,N],[17,"XKB_KEY_kana_FU","","",N,N],[17,"XKB_KEY_kana_HU","","",N,N],[17,"XKB_KEY_kana_HE","","",N,N],[17,"XKB_KEY_kana_HO","","",N,N],[17,"XKB_KEY_kana_MA","","",N,N],[17,"XKB_KEY_kana_MI","","",N,N],[17,"XKB_KEY_kana_MU","","",N,N],[17,"XKB_KEY_kana_ME","","",N,N],[17,"XKB_KEY_kana_MO","","",N,N],[17,"XKB_KEY_kana_YA","","",N,N],[17,"XKB_KEY_kana_YU","","",N,N],[17,"XKB_KEY_kana_YO","","",N,N],[17,"XKB_KEY_kana_RA","","",N,N],[17,"XKB_KEY_kana_RI","","",N,N],[17,"XKB_KEY_kana_RU","","",N,N],[17,"XKB_KEY_kana_RE","","",N,N],[17,"XKB_KEY_kana_RO","","",N,N],[17,"XKB_KEY_kana_WA","","",N,N],[17,"XKB_KEY_kana_N","","",N,N],[17,"XKB_KEY_voicedsound","","",N,N],[17,"XKB_KEY_semivoicedsound","","",N,N],[17,"XKB_KEY_kana_switch","","",N,N],[17,"XKB_KEY_Farsi_0","","",N,N],[17,"XKB_KEY_Farsi_1","","",N,N],[17,"XKB_KEY_Farsi_2","","",N,N],[17,"XKB_KEY_Farsi_3","","",N,N],[17,"XKB_KEY_Farsi_4","","",N,N],[17,"XKB_KEY_Farsi_5","","",N,N],[17,"XKB_KEY_Farsi_6","","",N,N],[17,"XKB_KEY_Farsi_7","","",N,N],[17,"XKB_KEY_Farsi_8","","",N,N],[17,"XKB_KEY_Farsi_9","","",N,N],[17,"XKB_KEY_Arabic_percent","","",N,N],[17,"XKB_KEY_Arabic_superscript_alef","","",N,N],[17,"XKB_KEY_Arabic_tteh","","",N,N],[17,"XKB_KEY_Arabic_peh","","",N,N],[17,"XKB_KEY_Arabic_tcheh","","",N,N],[17,"XKB_KEY_Arabic_ddal","","",N,N],[17,"XKB_KEY_Arabic_rreh","","",N,N],[17,"XKB_KEY_Arabic_comma","","",N,N],[17,"XKB_KEY_Arabic_fullstop","","",N,N],[17,"XKB_KEY_Arabic_0","","",N,N],[17,"XKB_KEY_Arabic_1","","",N,N],[17,"XKB_KEY_Arabic_2","","",N,N],[17,"XKB_KEY_Arabic_3","","",N,N],[17,"XKB_KEY_Arabic_4","","",N,N],[17,"XKB_KEY_Arabic_5","","",N,N],[17,"XKB_KEY_Arabic_6","","",N,N],[17,"XKB_KEY_Arabic_7","","",N,N],[17,"XKB_KEY_Arabic_8","","",N,N],[17,"XKB_KEY_Arabic_9","","",N,N],[17,"XKB_KEY_Arabic_semicolon","","",N,N],[17,"XKB_KEY_Arabic_question_mark","","",N,N],[17,"XKB_KEY_Arabic_hamza","","",N,N],[17,"XKB_KEY_Arabic_maddaonalef","","",N,N],[17,"XKB_KEY_Arabic_hamzaonalef","","",N,N],[17,"XKB_KEY_Arabic_hamzaonwaw","","",N,N],[17,"XKB_KEY_Arabic_hamzaunderalef","","",N,N],[17,"XKB_KEY_Arabic_hamzaonyeh","","",N,N],[17,"XKB_KEY_Arabic_alef","","",N,N],[17,"XKB_KEY_Arabic_beh","","",N,N],[17,"XKB_KEY_Arabic_tehmarbuta","","",N,N],[17,"XKB_KEY_Arabic_teh","","",N,N],[17,"XKB_KEY_Arabic_theh","","",N,N],[17,"XKB_KEY_Arabic_jeem","","",N,N],[17,"XKB_KEY_Arabic_hah","","",N,N],[17,"XKB_KEY_Arabic_khah","","",N,N],[17,"XKB_KEY_Arabic_dal","","",N,N],[17,"XKB_KEY_Arabic_thal","","",N,N],[17,"XKB_KEY_Arabic_ra","","",N,N],[17,"XKB_KEY_Arabic_zain","","",N,N],[17,"XKB_KEY_Arabic_seen","","",N,N],[17,"XKB_KEY_Arabic_sheen","","",N,N],[17,"XKB_KEY_Arabic_sad","","",N,N],[17,"XKB_KEY_Arabic_dad","","",N,N],[17,"XKB_KEY_Arabic_tah","","",N,N],[17,"XKB_KEY_Arabic_zah","","",N,N],[17,"XKB_KEY_Arabic_ain","","",N,N],[17,"XKB_KEY_Arabic_ghain","","",N,N],[17,"XKB_KEY_Arabic_tatweel","","",N,N],[17,"XKB_KEY_Arabic_feh","","",N,N],[17,"XKB_KEY_Arabic_qaf","","",N,N],[17,"XKB_KEY_Arabic_kaf","","",N,N],[17,"XKB_KEY_Arabic_lam","","",N,N],[17,"XKB_KEY_Arabic_meem","","",N,N],[17,"XKB_KEY_Arabic_noon","","",N,N],[17,"XKB_KEY_Arabic_ha","","",N,N],[17,"XKB_KEY_Arabic_heh","","",N,N],[17,"XKB_KEY_Arabic_waw","","",N,N],[17,"XKB_KEY_Arabic_alefmaksura","","",N,N],[17,"XKB_KEY_Arabic_yeh","","",N,N],[17,"XKB_KEY_Arabic_fathatan","","",N,N],[17,"XKB_KEY_Arabic_dammatan","","",N,N],[17,"XKB_KEY_Arabic_kasratan","","",N,N],[17,"XKB_KEY_Arabic_fatha","","",N,N],[17,"XKB_KEY_Arabic_damma","","",N,N],[17,"XKB_KEY_Arabic_kasra","","",N,N],[17,"XKB_KEY_Arabic_shadda","","",N,N],[17,"XKB_KEY_Arabic_sukun","","",N,N],[17,"XKB_KEY_Arabic_madda_above","","",N,N],[17,"XKB_KEY_Arabic_hamza_above","","",N,N],[17,"XKB_KEY_Arabic_hamza_below","","",N,N],[17,"XKB_KEY_Arabic_jeh","","",N,N],[17,"XKB_KEY_Arabic_veh","","",N,N],[17,"XKB_KEY_Arabic_keheh","","",N,N],[17,"XKB_KEY_Arabic_gaf","","",N,N],[17,"XKB_KEY_Arabic_noon_ghunna","","",N,N],[17,"XKB_KEY_Arabic_heh_doachashmee","","",N,N],[17,"XKB_KEY_Farsi_yeh","","",N,N],[17,"XKB_KEY_Arabic_farsi_yeh","","",N,N],[17,"XKB_KEY_Arabic_yeh_baree","","",N,N],[17,"XKB_KEY_Arabic_heh_goal","","",N,N],[17,"XKB_KEY_Arabic_switch","","",N,N],[17,"XKB_KEY_Cyrillic_GHE_bar","","",N,N],[17,"XKB_KEY_Cyrillic_ghe_bar","","",N,N],[17,"XKB_KEY_Cyrillic_ZHE_descender","","",N,N],[17,"XKB_KEY_Cyrillic_zhe_descender","","",N,N],[17,"XKB_KEY_Cyrillic_KA_descender","","",N,N],[17,"XKB_KEY_Cyrillic_ka_descender","","",N,N],[17,"XKB_KEY_Cyrillic_KA_vertstroke","","",N,N],[17,"XKB_KEY_Cyrillic_ka_vertstroke","","",N,N],[17,"XKB_KEY_Cyrillic_EN_descender","","",N,N],[17,"XKB_KEY_Cyrillic_en_descender","","",N,N],[17,"XKB_KEY_Cyrillic_U_straight","","",N,N],[17,"XKB_KEY_Cyrillic_u_straight","","",N,N],[17,"XKB_KEY_Cyrillic_U_straight_bar","","",N,N],[17,"XKB_KEY_Cyrillic_u_straight_bar","","",N,N],[17,"XKB_KEY_Cyrillic_HA_descender","","",N,N],[17,"XKB_KEY_Cyrillic_ha_descender","","",N,N],[17,"XKB_KEY_Cyrillic_CHE_descender","","",N,N],[17,"XKB_KEY_Cyrillic_che_descender","","",N,N],[17,"XKB_KEY_Cyrillic_CHE_vertstroke","","",N,N],[17,"XKB_KEY_Cyrillic_che_vertstroke","","",N,N],[17,"XKB_KEY_Cyrillic_SHHA","","",N,N],[17,"XKB_KEY_Cyrillic_shha","","",N,N],[17,"XKB_KEY_Cyrillic_SCHWA","","",N,N],[17,"XKB_KEY_Cyrillic_schwa","","",N,N],[17,"XKB_KEY_Cyrillic_I_macron","","",N,N],[17,"XKB_KEY_Cyrillic_i_macron","","",N,N],[17,"XKB_KEY_Cyrillic_O_bar","","",N,N],[17,"XKB_KEY_Cyrillic_o_bar","","",N,N],[17,"XKB_KEY_Cyrillic_U_macron","","",N,N],[17,"XKB_KEY_Cyrillic_u_macron","","",N,N],[17,"XKB_KEY_Serbian_dje","","",N,N],[17,"XKB_KEY_Macedonia_gje","","",N,N],[17,"XKB_KEY_Cyrillic_io","","",N,N],[17,"XKB_KEY_Ukrainian_ie","","",N,N],[17,"XKB_KEY_Ukranian_je","","",N,N],[17,"XKB_KEY_Macedonia_dse","","",N,N],[17,"XKB_KEY_Ukrainian_i","","",N,N],[17,"XKB_KEY_Ukranian_i","","",N,N],[17,"XKB_KEY_Ukrainian_yi","","",N,N],[17,"XKB_KEY_Ukranian_yi","","",N,N],[17,"XKB_KEY_Cyrillic_je","","",N,N],[17,"XKB_KEY_Serbian_je","","",N,N],[17,"XKB_KEY_Cyrillic_lje","","",N,N],[17,"XKB_KEY_Serbian_lje","","",N,N],[17,"XKB_KEY_Cyrillic_nje","","",N,N],[17,"XKB_KEY_Serbian_nje","","",N,N],[17,"XKB_KEY_Serbian_tshe","","",N,N],[17,"XKB_KEY_Macedonia_kje","","",N,N],[17,"XKB_KEY_Ukrainian_ghe_with_upturn","","",N,N],[17,"XKB_KEY_Byelorussian_shortu","","",N,N],[17,"XKB_KEY_Cyrillic_dzhe","","",N,N],[17,"XKB_KEY_Serbian_dze","","",N,N],[17,"XKB_KEY_numerosign","","",N,N],[17,"XKB_KEY_Serbian_DJE","","",N,N],[17,"XKB_KEY_Macedonia_GJE","","",N,N],[17,"XKB_KEY_Cyrillic_IO","","",N,N],[17,"XKB_KEY_Ukrainian_IE","","",N,N],[17,"XKB_KEY_Ukranian_JE","","",N,N],[17,"XKB_KEY_Macedonia_DSE","","",N,N],[17,"XKB_KEY_Ukrainian_I","","",N,N],[17,"XKB_KEY_Ukranian_I","","",N,N],[17,"XKB_KEY_Ukrainian_YI","","",N,N],[17,"XKB_KEY_Ukranian_YI","","",N,N],[17,"XKB_KEY_Cyrillic_JE","","",N,N],[17,"XKB_KEY_Serbian_JE","","",N,N],[17,"XKB_KEY_Cyrillic_LJE","","",N,N],[17,"XKB_KEY_Serbian_LJE","","",N,N],[17,"XKB_KEY_Cyrillic_NJE","","",N,N],[17,"XKB_KEY_Serbian_NJE","","",N,N],[17,"XKB_KEY_Serbian_TSHE","","",N,N],[17,"XKB_KEY_Macedonia_KJE","","",N,N],[17,"XKB_KEY_Ukrainian_GHE_WITH_UPTURN","","",N,N],[17,"XKB_KEY_Byelorussian_SHORTU","","",N,N],[17,"XKB_KEY_Cyrillic_DZHE","","",N,N],[17,"XKB_KEY_Serbian_DZE","","",N,N],[17,"XKB_KEY_Cyrillic_yu","","",N,N],[17,"XKB_KEY_Cyrillic_a","","",N,N],[17,"XKB_KEY_Cyrillic_be","","",N,N],[17,"XKB_KEY_Cyrillic_tse","","",N,N],[17,"XKB_KEY_Cyrillic_de","","",N,N],[17,"XKB_KEY_Cyrillic_ie","","",N,N],[17,"XKB_KEY_Cyrillic_ef","","",N,N],[17,"XKB_KEY_Cyrillic_ghe","","",N,N],[17,"XKB_KEY_Cyrillic_ha","","",N,N],[17,"XKB_KEY_Cyrillic_i","","",N,N],[17,"XKB_KEY_Cyrillic_shorti","","",N,N],[17,"XKB_KEY_Cyrillic_ka","","",N,N],[17,"XKB_KEY_Cyrillic_el","","",N,N],[17,"XKB_KEY_Cyrillic_em","","",N,N],[17,"XKB_KEY_Cyrillic_en","","",N,N],[17,"XKB_KEY_Cyrillic_o","","",N,N],[17,"XKB_KEY_Cyrillic_pe","","",N,N],[17,"XKB_KEY_Cyrillic_ya","","",N,N],[17,"XKB_KEY_Cyrillic_er","","",N,N],[17,"XKB_KEY_Cyrillic_es","","",N,N],[17,"XKB_KEY_Cyrillic_te","","",N,N],[17,"XKB_KEY_Cyrillic_u","","",N,N],[17,"XKB_KEY_Cyrillic_zhe","","",N,N],[17,"XKB_KEY_Cyrillic_ve","","",N,N],[17,"XKB_KEY_Cyrillic_softsign","","",N,N],[17,"XKB_KEY_Cyrillic_yeru","","",N,N],[17,"XKB_KEY_Cyrillic_ze","","",N,N],[17,"XKB_KEY_Cyrillic_sha","","",N,N],[17,"XKB_KEY_Cyrillic_e","","",N,N],[17,"XKB_KEY_Cyrillic_shcha","","",N,N],[17,"XKB_KEY_Cyrillic_che","","",N,N],[17,"XKB_KEY_Cyrillic_hardsign","","",N,N],[17,"XKB_KEY_Cyrillic_YU","","",N,N],[17,"XKB_KEY_Cyrillic_A","","",N,N],[17,"XKB_KEY_Cyrillic_BE","","",N,N],[17,"XKB_KEY_Cyrillic_TSE","","",N,N],[17,"XKB_KEY_Cyrillic_DE","","",N,N],[17,"XKB_KEY_Cyrillic_IE","","",N,N],[17,"XKB_KEY_Cyrillic_EF","","",N,N],[17,"XKB_KEY_Cyrillic_GHE","","",N,N],[17,"XKB_KEY_Cyrillic_HA","","",N,N],[17,"XKB_KEY_Cyrillic_I","","",N,N],[17,"XKB_KEY_Cyrillic_SHORTI","","",N,N],[17,"XKB_KEY_Cyrillic_KA","","",N,N],[17,"XKB_KEY_Cyrillic_EL","","",N,N],[17,"XKB_KEY_Cyrillic_EM","","",N,N],[17,"XKB_KEY_Cyrillic_EN","","",N,N],[17,"XKB_KEY_Cyrillic_O","","",N,N],[17,"XKB_KEY_Cyrillic_PE","","",N,N],[17,"XKB_KEY_Cyrillic_YA","","",N,N],[17,"XKB_KEY_Cyrillic_ER","","",N,N],[17,"XKB_KEY_Cyrillic_ES","","",N,N],[17,"XKB_KEY_Cyrillic_TE","","",N,N],[17,"XKB_KEY_Cyrillic_U","","",N,N],[17,"XKB_KEY_Cyrillic_ZHE","","",N,N],[17,"XKB_KEY_Cyrillic_VE","","",N,N],[17,"XKB_KEY_Cyrillic_SOFTSIGN","","",N,N],[17,"XKB_KEY_Cyrillic_YERU","","",N,N],[17,"XKB_KEY_Cyrillic_ZE","","",N,N],[17,"XKB_KEY_Cyrillic_SHA","","",N,N],[17,"XKB_KEY_Cyrillic_E","","",N,N],[17,"XKB_KEY_Cyrillic_SHCHA","","",N,N],[17,"XKB_KEY_Cyrillic_CHE","","",N,N],[17,"XKB_KEY_Cyrillic_HARDSIGN","","",N,N],[17,"XKB_KEY_Greek_ALPHAaccent","","",N,N],[17,"XKB_KEY_Greek_EPSILONaccent","","",N,N],[17,"XKB_KEY_Greek_ETAaccent","","",N,N],[17,"XKB_KEY_Greek_IOTAaccent","","",N,N],[17,"XKB_KEY_Greek_IOTAdieresis","","",N,N],[17,"XKB_KEY_Greek_IOTAdiaeresis","","",N,N],[17,"XKB_KEY_Greek_OMICRONaccent","","",N,N],[17,"XKB_KEY_Greek_UPSILONaccent","","",N,N],[17,"XKB_KEY_Greek_UPSILONdieresis","","",N,N],[17,"XKB_KEY_Greek_OMEGAaccent","","",N,N],[17,"XKB_KEY_Greek_accentdieresis","","",N,N],[17,"XKB_KEY_Greek_horizbar","","",N,N],[17,"XKB_KEY_Greek_alphaaccent","","",N,N],[17,"XKB_KEY_Greek_epsilonaccent","","",N,N],[17,"XKB_KEY_Greek_etaaccent","","",N,N],[17,"XKB_KEY_Greek_iotaaccent","","",N,N],[17,"XKB_KEY_Greek_iotadieresis","","",N,N],[17,"XKB_KEY_Greek_iotaaccentdieresis","","",N,N],[17,"XKB_KEY_Greek_omicronaccent","","",N,N],[17,"XKB_KEY_Greek_upsilonaccent","","",N,N],[17,"XKB_KEY_Greek_upsilondieresis","","",N,N],[17,"XKB_KEY_Greek_upsilonaccentdieresis","","",N,N],[17,"XKB_KEY_Greek_omegaaccent","","",N,N],[17,"XKB_KEY_Greek_ALPHA","","",N,N],[17,"XKB_KEY_Greek_BETA","","",N,N],[17,"XKB_KEY_Greek_GAMMA","","",N,N],[17,"XKB_KEY_Greek_DELTA","","",N,N],[17,"XKB_KEY_Greek_EPSILON","","",N,N],[17,"XKB_KEY_Greek_ZETA","","",N,N],[17,"XKB_KEY_Greek_ETA","","",N,N],[17,"XKB_KEY_Greek_THETA","","",N,N],[17,"XKB_KEY_Greek_IOTA","","",N,N],[17,"XKB_KEY_Greek_KAPPA","","",N,N],[17,"XKB_KEY_Greek_LAMDA","","",N,N],[17,"XKB_KEY_Greek_LAMBDA","","",N,N],[17,"XKB_KEY_Greek_MU","","",N,N],[17,"XKB_KEY_Greek_NU","","",N,N],[17,"XKB_KEY_Greek_XI","","",N,N],[17,"XKB_KEY_Greek_OMICRON","","",N,N],[17,"XKB_KEY_Greek_PI","","",N,N],[17,"XKB_KEY_Greek_RHO","","",N,N],[17,"XKB_KEY_Greek_SIGMA","","",N,N],[17,"XKB_KEY_Greek_TAU","","",N,N],[17,"XKB_KEY_Greek_UPSILON","","",N,N],[17,"XKB_KEY_Greek_PHI","","",N,N],[17,"XKB_KEY_Greek_CHI","","",N,N],[17,"XKB_KEY_Greek_PSI","","",N,N],[17,"XKB_KEY_Greek_OMEGA","","",N,N],[17,"XKB_KEY_Greek_alpha","","",N,N],[17,"XKB_KEY_Greek_beta","","",N,N],[17,"XKB_KEY_Greek_gamma","","",N,N],[17,"XKB_KEY_Greek_delta","","",N,N],[17,"XKB_KEY_Greek_epsilon","","",N,N],[17,"XKB_KEY_Greek_zeta","","",N,N],[17,"XKB_KEY_Greek_eta","","",N,N],[17,"XKB_KEY_Greek_theta","","",N,N],[17,"XKB_KEY_Greek_iota","","",N,N],[17,"XKB_KEY_Greek_kappa","","",N,N],[17,"XKB_KEY_Greek_lamda","","",N,N],[17,"XKB_KEY_Greek_lambda","","",N,N],[17,"XKB_KEY_Greek_mu","","",N,N],[17,"XKB_KEY_Greek_nu","","",N,N],[17,"XKB_KEY_Greek_xi","","",N,N],[17,"XKB_KEY_Greek_omicron","","",N,N],[17,"XKB_KEY_Greek_pi","","",N,N],[17,"XKB_KEY_Greek_rho","","",N,N],[17,"XKB_KEY_Greek_sigma","","",N,N],[17,"XKB_KEY_Greek_finalsmallsigma","","",N,N],[17,"XKB_KEY_Greek_tau","","",N,N],[17,"XKB_KEY_Greek_upsilon","","",N,N],[17,"XKB_KEY_Greek_phi","","",N,N],[17,"XKB_KEY_Greek_chi","","",N,N],[17,"XKB_KEY_Greek_psi","","",N,N],[17,"XKB_KEY_Greek_omega","","",N,N],[17,"XKB_KEY_Greek_switch","","",N,N],[17,"XKB_KEY_leftradical","","",N,N],[17,"XKB_KEY_topleftradical","","",N,N],[17,"XKB_KEY_horizconnector","","",N,N],[17,"XKB_KEY_topintegral","","",N,N],[17,"XKB_KEY_botintegral","","",N,N],[17,"XKB_KEY_vertconnector","","",N,N],[17,"XKB_KEY_topleftsqbracket","","",N,N],[17,"XKB_KEY_botleftsqbracket","","",N,N],[17,"XKB_KEY_toprightsqbracket","","",N,N],[17,"XKB_KEY_botrightsqbracket","","",N,N],[17,"XKB_KEY_topleftparens","","",N,N],[17,"XKB_KEY_botleftparens","","",N,N],[17,"XKB_KEY_toprightparens","","",N,N],[17,"XKB_KEY_botrightparens","","",N,N],[17,"XKB_KEY_leftmiddlecurlybrace","","",N,N],[17,"XKB_KEY_rightmiddlecurlybrace","","",N,N],[17,"XKB_KEY_topleftsummation","","",N,N],[17,"XKB_KEY_botleftsummation","","",N,N],[17,"XKB_KEY_topvertsummationconnector","","",N,N],[17,"XKB_KEY_botvertsummationconnector","","",N,N],[17,"XKB_KEY_toprightsummation","","",N,N],[17,"XKB_KEY_botrightsummation","","",N,N],[17,"XKB_KEY_rightmiddlesummation","","",N,N],[17,"XKB_KEY_lessthanequal","","",N,N],[17,"XKB_KEY_notequal","","",N,N],[17,"XKB_KEY_greaterthanequal","","",N,N],[17,"XKB_KEY_integral","","",N,N],[17,"XKB_KEY_therefore","","",N,N],[17,"XKB_KEY_variation","","",N,N],[17,"XKB_KEY_infinity","","",N,N],[17,"XKB_KEY_nabla","","",N,N],[17,"XKB_KEY_approximate","","",N,N],[17,"XKB_KEY_similarequal","","",N,N],[17,"XKB_KEY_ifonlyif","","",N,N],[17,"XKB_KEY_implies","","",N,N],[17,"XKB_KEY_identical","","",N,N],[17,"XKB_KEY_radical","","",N,N],[17,"XKB_KEY_includedin","","",N,N],[17,"XKB_KEY_includes","","",N,N],[17,"XKB_KEY_intersection","","",N,N],[17,"XKB_KEY_union","","",N,N],[17,"XKB_KEY_logicaland","","",N,N],[17,"XKB_KEY_logicalor","","",N,N],[17,"XKB_KEY_partialderivative","","",N,N],[17,"XKB_KEY_function","","",N,N],[17,"XKB_KEY_leftarrow","","",N,N],[17,"XKB_KEY_uparrow","","",N,N],[17,"XKB_KEY_rightarrow","","",N,N],[17,"XKB_KEY_downarrow","","",N,N],[17,"XKB_KEY_blank","","",N,N],[17,"XKB_KEY_soliddiamond","","",N,N],[17,"XKB_KEY_checkerboard","","",N,N],[17,"XKB_KEY_ht","","",N,N],[17,"XKB_KEY_ff","","",N,N],[17,"XKB_KEY_cr","","",N,N],[17,"XKB_KEY_lf","","",N,N],[17,"XKB_KEY_nl","","",N,N],[17,"XKB_KEY_vt","","",N,N],[17,"XKB_KEY_lowrightcorner","","",N,N],[17,"XKB_KEY_uprightcorner","","",N,N],[17,"XKB_KEY_upleftcorner","","",N,N],[17,"XKB_KEY_lowleftcorner","","",N,N],[17,"XKB_KEY_crossinglines","","",N,N],[17,"XKB_KEY_horizlinescan1","","",N,N],[17,"XKB_KEY_horizlinescan3","","",N,N],[17,"XKB_KEY_horizlinescan5","","",N,N],[17,"XKB_KEY_horizlinescan7","","",N,N],[17,"XKB_KEY_horizlinescan9","","",N,N],[17,"XKB_KEY_leftt","","",N,N],[17,"XKB_KEY_rightt","","",N,N],[17,"XKB_KEY_bott","","",N,N],[17,"XKB_KEY_topt","","",N,N],[17,"XKB_KEY_vertbar","","",N,N],[17,"XKB_KEY_emspace","","",N,N],[17,"XKB_KEY_enspace","","",N,N],[17,"XKB_KEY_em3space","","",N,N],[17,"XKB_KEY_em4space","","",N,N],[17,"XKB_KEY_digitspace","","",N,N],[17,"XKB_KEY_punctspace","","",N,N],[17,"XKB_KEY_thinspace","","",N,N],[17,"XKB_KEY_hairspace","","",N,N],[17,"XKB_KEY_emdash","","",N,N],[17,"XKB_KEY_endash","","",N,N],[17,"XKB_KEY_signifblank","","",N,N],[17,"XKB_KEY_ellipsis","","",N,N],[17,"XKB_KEY_doubbaselinedot","","",N,N],[17,"XKB_KEY_onethird","","",N,N],[17,"XKB_KEY_twothirds","","",N,N],[17,"XKB_KEY_onefifth","","",N,N],[17,"XKB_KEY_twofifths","","",N,N],[17,"XKB_KEY_threefifths","","",N,N],[17,"XKB_KEY_fourfifths","","",N,N],[17,"XKB_KEY_onesixth","","",N,N],[17,"XKB_KEY_fivesixths","","",N,N],[17,"XKB_KEY_careof","","",N,N],[17,"XKB_KEY_figdash","","",N,N],[17,"XKB_KEY_leftanglebracket","","",N,N],[17,"XKB_KEY_decimalpoint","","",N,N],[17,"XKB_KEY_rightanglebracket","","",N,N],[17,"XKB_KEY_marker","","",N,N],[17,"XKB_KEY_oneeighth","","",N,N],[17,"XKB_KEY_threeeighths","","",N,N],[17,"XKB_KEY_fiveeighths","","",N,N],[17,"XKB_KEY_seveneighths","","",N,N],[17,"XKB_KEY_trademark","","",N,N],[17,"XKB_KEY_signaturemark","","",N,N],[17,"XKB_KEY_trademarkincircle","","",N,N],[17,"XKB_KEY_leftopentriangle","","",N,N],[17,"XKB_KEY_rightopentriangle","","",N,N],[17,"XKB_KEY_emopencircle","","",N,N],[17,"XKB_KEY_emopenrectangle","","",N,N],[17,"XKB_KEY_leftsinglequotemark","","",N,N],[17,"XKB_KEY_rightsinglequotemark","","",N,N],[17,"XKB_KEY_leftdoublequotemark","","",N,N],[17,"XKB_KEY_rightdoublequotemark","","",N,N],[17,"XKB_KEY_prescription","","",N,N],[17,"XKB_KEY_permille","","",N,N],[17,"XKB_KEY_minutes","","",N,N],[17,"XKB_KEY_seconds","","",N,N],[17,"XKB_KEY_latincross","","",N,N],[17,"XKB_KEY_hexagram","","",N,N],[17,"XKB_KEY_filledrectbullet","","",N,N],[17,"XKB_KEY_filledlefttribullet","","",N,N],[17,"XKB_KEY_filledrighttribullet","","",N,N],[17,"XKB_KEY_emfilledcircle","","",N,N],[17,"XKB_KEY_emfilledrect","","",N,N],[17,"XKB_KEY_enopencircbullet","","",N,N],[17,"XKB_KEY_enopensquarebullet","","",N,N],[17,"XKB_KEY_openrectbullet","","",N,N],[17,"XKB_KEY_opentribulletup","","",N,N],[17,"XKB_KEY_opentribulletdown","","",N,N],[17,"XKB_KEY_openstar","","",N,N],[17,"XKB_KEY_enfilledcircbullet","","",N,N],[17,"XKB_KEY_enfilledsqbullet","","",N,N],[17,"XKB_KEY_filledtribulletup","","",N,N],[17,"XKB_KEY_filledtribulletdown","","",N,N],[17,"XKB_KEY_leftpointer","","",N,N],[17,"XKB_KEY_rightpointer","","",N,N],[17,"XKB_KEY_club","","",N,N],[17,"XKB_KEY_diamond","","",N,N],[17,"XKB_KEY_heart","","",N,N],[17,"XKB_KEY_maltesecross","","",N,N],[17,"XKB_KEY_dagger","","",N,N],[17,"XKB_KEY_doubledagger","","",N,N],[17,"XKB_KEY_checkmark","","",N,N],[17,"XKB_KEY_ballotcross","","",N,N],[17,"XKB_KEY_musicalsharp","","",N,N],[17,"XKB_KEY_musicalflat","","",N,N],[17,"XKB_KEY_malesymbol","","",N,N],[17,"XKB_KEY_femalesymbol","","",N,N],[17,"XKB_KEY_telephone","","",N,N],[17,"XKB_KEY_telephonerecorder","","",N,N],[17,"XKB_KEY_phonographcopyright","","",N,N],[17,"XKB_KEY_caret","","",N,N],[17,"XKB_KEY_singlelowquotemark","","",N,N],[17,"XKB_KEY_doublelowquotemark","","",N,N],[17,"XKB_KEY_cursor","","",N,N],[17,"XKB_KEY_leftcaret","","",N,N],[17,"XKB_KEY_rightcaret","","",N,N],[17,"XKB_KEY_downcaret","","",N,N],[17,"XKB_KEY_upcaret","","",N,N],[17,"XKB_KEY_overbar","","",N,N],[17,"XKB_KEY_downtack","","",N,N],[17,"XKB_KEY_upshoe","","",N,N],[17,"XKB_KEY_downstile","","",N,N],[17,"XKB_KEY_underbar","","",N,N],[17,"XKB_KEY_jot","","",N,N],[17,"XKB_KEY_quad","","",N,N],[17,"XKB_KEY_uptack","","",N,N],[17,"XKB_KEY_circle","","",N,N],[17,"XKB_KEY_upstile","","",N,N],[17,"XKB_KEY_downshoe","","",N,N],[17,"XKB_KEY_rightshoe","","",N,N],[17,"XKB_KEY_leftshoe","","",N,N],[17,"XKB_KEY_lefttack","","",N,N],[17,"XKB_KEY_righttack","","",N,N],[17,"XKB_KEY_hebrew_doublelowline","","",N,N],[17,"XKB_KEY_hebrew_aleph","","",N,N],[17,"XKB_KEY_hebrew_bet","","",N,N],[17,"XKB_KEY_hebrew_beth","","",N,N],[17,"XKB_KEY_hebrew_gimel","","",N,N],[17,"XKB_KEY_hebrew_gimmel","","",N,N],[17,"XKB_KEY_hebrew_dalet","","",N,N],[17,"XKB_KEY_hebrew_daleth","","",N,N],[17,"XKB_KEY_hebrew_he","","",N,N],[17,"XKB_KEY_hebrew_waw","","",N,N],[17,"XKB_KEY_hebrew_zain","","",N,N],[17,"XKB_KEY_hebrew_zayin","","",N,N],[17,"XKB_KEY_hebrew_chet","","",N,N],[17,"XKB_KEY_hebrew_het","","",N,N],[17,"XKB_KEY_hebrew_tet","","",N,N],[17,"XKB_KEY_hebrew_teth","","",N,N],[17,"XKB_KEY_hebrew_yod","","",N,N],[17,"XKB_KEY_hebrew_finalkaph","","",N,N],[17,"XKB_KEY_hebrew_kaph","","",N,N],[17,"XKB_KEY_hebrew_lamed","","",N,N],[17,"XKB_KEY_hebrew_finalmem","","",N,N],[17,"XKB_KEY_hebrew_mem","","",N,N],[17,"XKB_KEY_hebrew_finalnun","","",N,N],[17,"XKB_KEY_hebrew_nun","","",N,N],[17,"XKB_KEY_hebrew_samech","","",N,N],[17,"XKB_KEY_hebrew_samekh","","",N,N],[17,"XKB_KEY_hebrew_ayin","","",N,N],[17,"XKB_KEY_hebrew_finalpe","","",N,N],[17,"XKB_KEY_hebrew_pe","","",N,N],[17,"XKB_KEY_hebrew_finalzade","","",N,N],[17,"XKB_KEY_hebrew_finalzadi","","",N,N],[17,"XKB_KEY_hebrew_zade","","",N,N],[17,"XKB_KEY_hebrew_zadi","","",N,N],[17,"XKB_KEY_hebrew_qoph","","",N,N],[17,"XKB_KEY_hebrew_kuf","","",N,N],[17,"XKB_KEY_hebrew_resh","","",N,N],[17,"XKB_KEY_hebrew_shin","","",N,N],[17,"XKB_KEY_hebrew_taw","","",N,N],[17,"XKB_KEY_hebrew_taf","","",N,N],[17,"XKB_KEY_Hebrew_switch","","",N,N],[17,"XKB_KEY_Thai_kokai","","",N,N],[17,"XKB_KEY_Thai_khokhai","","",N,N],[17,"XKB_KEY_Thai_khokhuat","","",N,N],[17,"XKB_KEY_Thai_khokhwai","","",N,N],[17,"XKB_KEY_Thai_khokhon","","",N,N],[17,"XKB_KEY_Thai_khorakhang","","",N,N],[17,"XKB_KEY_Thai_ngongu","","",N,N],[17,"XKB_KEY_Thai_chochan","","",N,N],[17,"XKB_KEY_Thai_choching","","",N,N],[17,"XKB_KEY_Thai_chochang","","",N,N],[17,"XKB_KEY_Thai_soso","","",N,N],[17,"XKB_KEY_Thai_chochoe","","",N,N],[17,"XKB_KEY_Thai_yoying","","",N,N],[17,"XKB_KEY_Thai_dochada","","",N,N],[17,"XKB_KEY_Thai_topatak","","",N,N],[17,"XKB_KEY_Thai_thothan","","",N,N],[17,"XKB_KEY_Thai_thonangmontho","","",N,N],[17,"XKB_KEY_Thai_thophuthao","","",N,N],[17,"XKB_KEY_Thai_nonen","","",N,N],[17,"XKB_KEY_Thai_dodek","","",N,N],[17,"XKB_KEY_Thai_totao","","",N,N],[17,"XKB_KEY_Thai_thothung","","",N,N],[17,"XKB_KEY_Thai_thothahan","","",N,N],[17,"XKB_KEY_Thai_thothong","","",N,N],[17,"XKB_KEY_Thai_nonu","","",N,N],[17,"XKB_KEY_Thai_bobaimai","","",N,N],[17,"XKB_KEY_Thai_popla","","",N,N],[17,"XKB_KEY_Thai_phophung","","",N,N],[17,"XKB_KEY_Thai_fofa","","",N,N],[17,"XKB_KEY_Thai_phophan","","",N,N],[17,"XKB_KEY_Thai_fofan","","",N,N],[17,"XKB_KEY_Thai_phosamphao","","",N,N],[17,"XKB_KEY_Thai_moma","","",N,N],[17,"XKB_KEY_Thai_yoyak","","",N,N],[17,"XKB_KEY_Thai_rorua","","",N,N],[17,"XKB_KEY_Thai_ru","","",N,N],[17,"XKB_KEY_Thai_loling","","",N,N],[17,"XKB_KEY_Thai_lu","","",N,N],[17,"XKB_KEY_Thai_wowaen","","",N,N],[17,"XKB_KEY_Thai_sosala","","",N,N],[17,"XKB_KEY_Thai_sorusi","","",N,N],[17,"XKB_KEY_Thai_sosua","","",N,N],[17,"XKB_KEY_Thai_hohip","","",N,N],[17,"XKB_KEY_Thai_lochula","","",N,N],[17,"XKB_KEY_Thai_oang","","",N,N],[17,"XKB_KEY_Thai_honokhuk","","",N,N],[17,"XKB_KEY_Thai_paiyannoi","","",N,N],[17,"XKB_KEY_Thai_saraa","","",N,N],[17,"XKB_KEY_Thai_maihanakat","","",N,N],[17,"XKB_KEY_Thai_saraaa","","",N,N],[17,"XKB_KEY_Thai_saraam","","",N,N],[17,"XKB_KEY_Thai_sarai","","",N,N],[17,"XKB_KEY_Thai_saraii","","",N,N],[17,"XKB_KEY_Thai_saraue","","",N,N],[17,"XKB_KEY_Thai_sarauee","","",N,N],[17,"XKB_KEY_Thai_sarau","","",N,N],[17,"XKB_KEY_Thai_sarauu","","",N,N],[17,"XKB_KEY_Thai_phinthu","","",N,N],[17,"XKB_KEY_Thai_maihanakat_maitho","","",N,N],[17,"XKB_KEY_Thai_baht","","",N,N],[17,"XKB_KEY_Thai_sarae","","",N,N],[17,"XKB_KEY_Thai_saraae","","",N,N],[17,"XKB_KEY_Thai_sarao","","",N,N],[17,"XKB_KEY_Thai_saraaimaimuan","","",N,N],[17,"XKB_KEY_Thai_saraaimaimalai","","",N,N],[17,"XKB_KEY_Thai_lakkhangyao","","",N,N],[17,"XKB_KEY_Thai_maiyamok","","",N,N],[17,"XKB_KEY_Thai_maitaikhu","","",N,N],[17,"XKB_KEY_Thai_maiek","","",N,N],[17,"XKB_KEY_Thai_maitho","","",N,N],[17,"XKB_KEY_Thai_maitri","","",N,N],[17,"XKB_KEY_Thai_maichattawa","","",N,N],[17,"XKB_KEY_Thai_thanthakhat","","",N,N],[17,"XKB_KEY_Thai_nikhahit","","",N,N],[17,"XKB_KEY_Thai_leksun","","",N,N],[17,"XKB_KEY_Thai_leknung","","",N,N],[17,"XKB_KEY_Thai_leksong","","",N,N],[17,"XKB_KEY_Thai_leksam","","",N,N],[17,"XKB_KEY_Thai_leksi","","",N,N],[17,"XKB_KEY_Thai_lekha","","",N,N],[17,"XKB_KEY_Thai_lekhok","","",N,N],[17,"XKB_KEY_Thai_lekchet","","",N,N],[17,"XKB_KEY_Thai_lekpaet","","",N,N],[17,"XKB_KEY_Thai_lekkao","","",N,N],[17,"XKB_KEY_Hangul","","",N,N],[17,"XKB_KEY_Hangul_Start","","",N,N],[17,"XKB_KEY_Hangul_End","","",N,N],[17,"XKB_KEY_Hangul_Hanja","","",N,N],[17,"XKB_KEY_Hangul_Jamo","","",N,N],[17,"XKB_KEY_Hangul_Romaja","","",N,N],[17,"XKB_KEY_Hangul_Codeinput","","",N,N],[17,"XKB_KEY_Hangul_Jeonja","","",N,N],[17,"XKB_KEY_Hangul_Banja","","",N,N],[17,"XKB_KEY_Hangul_PreHanja","","",N,N],[17,"XKB_KEY_Hangul_PostHanja","","",N,N],[17,"XKB_KEY_Hangul_SingleCandidate","","",N,N],[17,"XKB_KEY_Hangul_MultipleCandidate","","",N,N],[17,"XKB_KEY_Hangul_PreviousCandidate","","",N,N],[17,"XKB_KEY_Hangul_Special","","",N,N],[17,"XKB_KEY_Hangul_switch","","",N,N],[17,"XKB_KEY_Hangul_Kiyeog","","",N,N],[17,"XKB_KEY_Hangul_SsangKiyeog","","",N,N],[17,"XKB_KEY_Hangul_KiyeogSios","","",N,N],[17,"XKB_KEY_Hangul_Nieun","","",N,N],[17,"XKB_KEY_Hangul_NieunJieuj","","",N,N],[17,"XKB_KEY_Hangul_NieunHieuh","","",N,N],[17,"XKB_KEY_Hangul_Dikeud","","",N,N],[17,"XKB_KEY_Hangul_SsangDikeud","","",N,N],[17,"XKB_KEY_Hangul_Rieul","","",N,N],[17,"XKB_KEY_Hangul_RieulKiyeog","","",N,N],[17,"XKB_KEY_Hangul_RieulMieum","","",N,N],[17,"XKB_KEY_Hangul_RieulPieub","","",N,N],[17,"XKB_KEY_Hangul_RieulSios","","",N,N],[17,"XKB_KEY_Hangul_RieulTieut","","",N,N],[17,"XKB_KEY_Hangul_RieulPhieuf","","",N,N],[17,"XKB_KEY_Hangul_RieulHieuh","","",N,N],[17,"XKB_KEY_Hangul_Mieum","","",N,N],[17,"XKB_KEY_Hangul_Pieub","","",N,N],[17,"XKB_KEY_Hangul_SsangPieub","","",N,N],[17,"XKB_KEY_Hangul_PieubSios","","",N,N],[17,"XKB_KEY_Hangul_Sios","","",N,N],[17,"XKB_KEY_Hangul_SsangSios","","",N,N],[17,"XKB_KEY_Hangul_Ieung","","",N,N],[17,"XKB_KEY_Hangul_Jieuj","","",N,N],[17,"XKB_KEY_Hangul_SsangJieuj","","",N,N],[17,"XKB_KEY_Hangul_Cieuc","","",N,N],[17,"XKB_KEY_Hangul_Khieuq","","",N,N],[17,"XKB_KEY_Hangul_Tieut","","",N,N],[17,"XKB_KEY_Hangul_Phieuf","","",N,N],[17,"XKB_KEY_Hangul_Hieuh","","",N,N],[17,"XKB_KEY_Hangul_A","","",N,N],[17,"XKB_KEY_Hangul_AE","","",N,N],[17,"XKB_KEY_Hangul_YA","","",N,N],[17,"XKB_KEY_Hangul_YAE","","",N,N],[17,"XKB_KEY_Hangul_EO","","",N,N],[17,"XKB_KEY_Hangul_E","","",N,N],[17,"XKB_KEY_Hangul_YEO","","",N,N],[17,"XKB_KEY_Hangul_YE","","",N,N],[17,"XKB_KEY_Hangul_O","","",N,N],[17,"XKB_KEY_Hangul_WA","","",N,N],[17,"XKB_KEY_Hangul_WAE","","",N,N],[17,"XKB_KEY_Hangul_OE","","",N,N],[17,"XKB_KEY_Hangul_YO","","",N,N],[17,"XKB_KEY_Hangul_U","","",N,N],[17,"XKB_KEY_Hangul_WEO","","",N,N],[17,"XKB_KEY_Hangul_WE","","",N,N],[17,"XKB_KEY_Hangul_WI","","",N,N],[17,"XKB_KEY_Hangul_YU","","",N,N],[17,"XKB_KEY_Hangul_EU","","",N,N],[17,"XKB_KEY_Hangul_YI","","",N,N],[17,"XKB_KEY_Hangul_I","","",N,N],[17,"XKB_KEY_Hangul_J_Kiyeog","","",N,N],[17,"XKB_KEY_Hangul_J_SsangKiyeog","","",N,N],[17,"XKB_KEY_Hangul_J_KiyeogSios","","",N,N],[17,"XKB_KEY_Hangul_J_Nieun","","",N,N],[17,"XKB_KEY_Hangul_J_NieunJieuj","","",N,N],[17,"XKB_KEY_Hangul_J_NieunHieuh","","",N,N],[17,"XKB_KEY_Hangul_J_Dikeud","","",N,N],[17,"XKB_KEY_Hangul_J_Rieul","","",N,N],[17,"XKB_KEY_Hangul_J_RieulKiyeog","","",N,N],[17,"XKB_KEY_Hangul_J_RieulMieum","","",N,N],[17,"XKB_KEY_Hangul_J_RieulPieub","","",N,N],[17,"XKB_KEY_Hangul_J_RieulSios","","",N,N],[17,"XKB_KEY_Hangul_J_RieulTieut","","",N,N],[17,"XKB_KEY_Hangul_J_RieulPhieuf","","",N,N],[17,"XKB_KEY_Hangul_J_RieulHieuh","","",N,N],[17,"XKB_KEY_Hangul_J_Mieum","","",N,N],[17,"XKB_KEY_Hangul_J_Pieub","","",N,N],[17,"XKB_KEY_Hangul_J_PieubSios","","",N,N],[17,"XKB_KEY_Hangul_J_Sios","","",N,N],[17,"XKB_KEY_Hangul_J_SsangSios","","",N,N],[17,"XKB_KEY_Hangul_J_Ieung","","",N,N],[17,"XKB_KEY_Hangul_J_Jieuj","","",N,N],[17,"XKB_KEY_Hangul_J_Cieuc","","",N,N],[17,"XKB_KEY_Hangul_J_Khieuq","","",N,N],[17,"XKB_KEY_Hangul_J_Tieut","","",N,N],[17,"XKB_KEY_Hangul_J_Phieuf","","",N,N],[17,"XKB_KEY_Hangul_J_Hieuh","","",N,N],[17,"XKB_KEY_Hangul_RieulYeorinHieuh","","",N,N],[17,"XKB_KEY_Hangul_SunkyeongeumMieum","","",N,N],[17,"XKB_KEY_Hangul_SunkyeongeumPieub","","",N,N],[17,"XKB_KEY_Hangul_PanSios","","",N,N],[17,"XKB_KEY_Hangul_KkogjiDalrinIeung","","",N,N],[17,"XKB_KEY_Hangul_SunkyeongeumPhieuf","","",N,N],[17,"XKB_KEY_Hangul_YeorinHieuh","","",N,N],[17,"XKB_KEY_Hangul_AraeA","","",N,N],[17,"XKB_KEY_Hangul_AraeAE","","",N,N],[17,"XKB_KEY_Hangul_J_PanSios","","",N,N],[17,"XKB_KEY_Hangul_J_KkogjiDalrinIeung","","",N,N],[17,"XKB_KEY_Hangul_J_YeorinHieuh","","",N,N],[17,"XKB_KEY_Korean_Won","","",N,N],[17,"XKB_KEY_Armenian_ligature_ew","","",N,N],[17,"XKB_KEY_Armenian_full_stop","","",N,N],[17,"XKB_KEY_Armenian_verjaket","","",N,N],[17,"XKB_KEY_Armenian_separation_mark","","",N,N],[17,"XKB_KEY_Armenian_but","","",N,N],[17,"XKB_KEY_Armenian_hyphen","","",N,N],[17,"XKB_KEY_Armenian_yentamna","","",N,N],[17,"XKB_KEY_Armenian_exclam","","",N,N],[17,"XKB_KEY_Armenian_amanak","","",N,N],[17,"XKB_KEY_Armenian_accent","","",N,N],[17,"XKB_KEY_Armenian_shesht","","",N,N],[17,"XKB_KEY_Armenian_question","","",N,N],[17,"XKB_KEY_Armenian_paruyk","","",N,N],[17,"XKB_KEY_Armenian_AYB","","",N,N],[17,"XKB_KEY_Armenian_ayb","","",N,N],[17,"XKB_KEY_Armenian_BEN","","",N,N],[17,"XKB_KEY_Armenian_ben","","",N,N],[17,"XKB_KEY_Armenian_GIM","","",N,N],[17,"XKB_KEY_Armenian_gim","","",N,N],[17,"XKB_KEY_Armenian_DA","","",N,N],[17,"XKB_KEY_Armenian_da","","",N,N],[17,"XKB_KEY_Armenian_YECH","","",N,N],[17,"XKB_KEY_Armenian_yech","","",N,N],[17,"XKB_KEY_Armenian_ZA","","",N,N],[17,"XKB_KEY_Armenian_za","","",N,N],[17,"XKB_KEY_Armenian_E","","",N,N],[17,"XKB_KEY_Armenian_e","","",N,N],[17,"XKB_KEY_Armenian_AT","","",N,N],[17,"XKB_KEY_Armenian_at","","",N,N],[17,"XKB_KEY_Armenian_TO","","",N,N],[17,"XKB_KEY_Armenian_to","","",N,N],[17,"XKB_KEY_Armenian_ZHE","","",N,N],[17,"XKB_KEY_Armenian_zhe","","",N,N],[17,"XKB_KEY_Armenian_INI","","",N,N],[17,"XKB_KEY_Armenian_ini","","",N,N],[17,"XKB_KEY_Armenian_LYUN","","",N,N],[17,"XKB_KEY_Armenian_lyun","","",N,N],[17,"XKB_KEY_Armenian_KHE","","",N,N],[17,"XKB_KEY_Armenian_khe","","",N,N],[17,"XKB_KEY_Armenian_TSA","","",N,N],[17,"XKB_KEY_Armenian_tsa","","",N,N],[17,"XKB_KEY_Armenian_KEN","","",N,N],[17,"XKB_KEY_Armenian_ken","","",N,N],[17,"XKB_KEY_Armenian_HO","","",N,N],[17,"XKB_KEY_Armenian_ho","","",N,N],[17,"XKB_KEY_Armenian_DZA","","",N,N],[17,"XKB_KEY_Armenian_dza","","",N,N],[17,"XKB_KEY_Armenian_GHAT","","",N,N],[17,"XKB_KEY_Armenian_ghat","","",N,N],[17,"XKB_KEY_Armenian_TCHE","","",N,N],[17,"XKB_KEY_Armenian_tche","","",N,N],[17,"XKB_KEY_Armenian_MEN","","",N,N],[17,"XKB_KEY_Armenian_men","","",N,N],[17,"XKB_KEY_Armenian_HI","","",N,N],[17,"XKB_KEY_Armenian_hi","","",N,N],[17,"XKB_KEY_Armenian_NU","","",N,N],[17,"XKB_KEY_Armenian_nu","","",N,N],[17,"XKB_KEY_Armenian_SHA","","",N,N],[17,"XKB_KEY_Armenian_sha","","",N,N],[17,"XKB_KEY_Armenian_VO","","",N,N],[17,"XKB_KEY_Armenian_vo","","",N,N],[17,"XKB_KEY_Armenian_CHA","","",N,N],[17,"XKB_KEY_Armenian_cha","","",N,N],[17,"XKB_KEY_Armenian_PE","","",N,N],[17,"XKB_KEY_Armenian_pe","","",N,N],[17,"XKB_KEY_Armenian_JE","","",N,N],[17,"XKB_KEY_Armenian_je","","",N,N],[17,"XKB_KEY_Armenian_RA","","",N,N],[17,"XKB_KEY_Armenian_ra","","",N,N],[17,"XKB_KEY_Armenian_SE","","",N,N],[17,"XKB_KEY_Armenian_se","","",N,N],[17,"XKB_KEY_Armenian_VEV","","",N,N],[17,"XKB_KEY_Armenian_vev","","",N,N],[17,"XKB_KEY_Armenian_TYUN","","",N,N],[17,"XKB_KEY_Armenian_tyun","","",N,N],[17,"XKB_KEY_Armenian_RE","","",N,N],[17,"XKB_KEY_Armenian_re","","",N,N],[17,"XKB_KEY_Armenian_TSO","","",N,N],[17,"XKB_KEY_Armenian_tso","","",N,N],[17,"XKB_KEY_Armenian_VYUN","","",N,N],[17,"XKB_KEY_Armenian_vyun","","",N,N],[17,"XKB_KEY_Armenian_PYUR","","",N,N],[17,"XKB_KEY_Armenian_pyur","","",N,N],[17,"XKB_KEY_Armenian_KE","","",N,N],[17,"XKB_KEY_Armenian_ke","","",N,N],[17,"XKB_KEY_Armenian_O","","",N,N],[17,"XKB_KEY_Armenian_o","","",N,N],[17,"XKB_KEY_Armenian_FE","","",N,N],[17,"XKB_KEY_Armenian_fe","","",N,N],[17,"XKB_KEY_Armenian_apostrophe","","",N,N],[17,"XKB_KEY_Georgian_an","","",N,N],[17,"XKB_KEY_Georgian_ban","","",N,N],[17,"XKB_KEY_Georgian_gan","","",N,N],[17,"XKB_KEY_Georgian_don","","",N,N],[17,"XKB_KEY_Georgian_en","","",N,N],[17,"XKB_KEY_Georgian_vin","","",N,N],[17,"XKB_KEY_Georgian_zen","","",N,N],[17,"XKB_KEY_Georgian_tan","","",N,N],[17,"XKB_KEY_Georgian_in","","",N,N],[17,"XKB_KEY_Georgian_kan","","",N,N],[17,"XKB_KEY_Georgian_las","","",N,N],[17,"XKB_KEY_Georgian_man","","",N,N],[17,"XKB_KEY_Georgian_nar","","",N,N],[17,"XKB_KEY_Georgian_on","","",N,N],[17,"XKB_KEY_Georgian_par","","",N,N],[17,"XKB_KEY_Georgian_zhar","","",N,N],[17,"XKB_KEY_Georgian_rae","","",N,N],[17,"XKB_KEY_Georgian_san","","",N,N],[17,"XKB_KEY_Georgian_tar","","",N,N],[17,"XKB_KEY_Georgian_un","","",N,N],[17,"XKB_KEY_Georgian_phar","","",N,N],[17,"XKB_KEY_Georgian_khar","","",N,N],[17,"XKB_KEY_Georgian_ghan","","",N,N],[17,"XKB_KEY_Georgian_qar","","",N,N],[17,"XKB_KEY_Georgian_shin","","",N,N],[17,"XKB_KEY_Georgian_chin","","",N,N],[17,"XKB_KEY_Georgian_can","","",N,N],[17,"XKB_KEY_Georgian_jil","","",N,N],[17,"XKB_KEY_Georgian_cil","","",N,N],[17,"XKB_KEY_Georgian_char","","",N,N],[17,"XKB_KEY_Georgian_xan","","",N,N],[17,"XKB_KEY_Georgian_jhan","","",N,N],[17,"XKB_KEY_Georgian_hae","","",N,N],[17,"XKB_KEY_Georgian_he","","",N,N],[17,"XKB_KEY_Georgian_hie","","",N,N],[17,"XKB_KEY_Georgian_we","","",N,N],[17,"XKB_KEY_Georgian_har","","",N,N],[17,"XKB_KEY_Georgian_hoe","","",N,N],[17,"XKB_KEY_Georgian_fi","","",N,N],[17,"XKB_KEY_Xabovedot","","",N,N],[17,"XKB_KEY_Ibreve","","",N,N],[17,"XKB_KEY_Zstroke","","",N,N],[17,"XKB_KEY_Gcaron","","",N,N],[17,"XKB_KEY_Ocaron","","",N,N],[17,"XKB_KEY_Obarred","","",N,N],[17,"XKB_KEY_xabovedot","","",N,N],[17,"XKB_KEY_ibreve","","",N,N],[17,"XKB_KEY_zstroke","","",N,N],[17,"XKB_KEY_gcaron","","",N,N],[17,"XKB_KEY_ocaron","","",N,N],[17,"XKB_KEY_obarred","","",N,N],[17,"XKB_KEY_SCHWA","","",N,N],[17,"XKB_KEY_schwa","","",N,N],[17,"XKB_KEY_EZH","","",N,N],[17,"XKB_KEY_ezh","","",N,N],[17,"XKB_KEY_Lbelowdot","","",N,N],[17,"XKB_KEY_lbelowdot","","",N,N],[17,"XKB_KEY_Abelowdot","","",N,N],[17,"XKB_KEY_abelowdot","","",N,N],[17,"XKB_KEY_Ahook","","",N,N],[17,"XKB_KEY_ahook","","",N,N],[17,"XKB_KEY_Acircumflexacute","","",N,N],[17,"XKB_KEY_acircumflexacute","","",N,N],[17,"XKB_KEY_Acircumflexgrave","","",N,N],[17,"XKB_KEY_acircumflexgrave","","",N,N],[17,"XKB_KEY_Acircumflexhook","","",N,N],[17,"XKB_KEY_acircumflexhook","","",N,N],[17,"XKB_KEY_Acircumflextilde","","",N,N],[17,"XKB_KEY_acircumflextilde","","",N,N],[17,"XKB_KEY_Acircumflexbelowdot","","",N,N],[17,"XKB_KEY_acircumflexbelowdot","","",N,N],[17,"XKB_KEY_Abreveacute","","",N,N],[17,"XKB_KEY_abreveacute","","",N,N],[17,"XKB_KEY_Abrevegrave","","",N,N],[17,"XKB_KEY_abrevegrave","","",N,N],[17,"XKB_KEY_Abrevehook","","",N,N],[17,"XKB_KEY_abrevehook","","",N,N],[17,"XKB_KEY_Abrevetilde","","",N,N],[17,"XKB_KEY_abrevetilde","","",N,N],[17,"XKB_KEY_Abrevebelowdot","","",N,N],[17,"XKB_KEY_abrevebelowdot","","",N,N],[17,"XKB_KEY_Ebelowdot","","",N,N],[17,"XKB_KEY_ebelowdot","","",N,N],[17,"XKB_KEY_Ehook","","",N,N],[17,"XKB_KEY_ehook","","",N,N],[17,"XKB_KEY_Etilde","","",N,N],[17,"XKB_KEY_etilde","","",N,N],[17,"XKB_KEY_Ecircumflexacute","","",N,N],[17,"XKB_KEY_ecircumflexacute","","",N,N],[17,"XKB_KEY_Ecircumflexgrave","","",N,N],[17,"XKB_KEY_ecircumflexgrave","","",N,N],[17,"XKB_KEY_Ecircumflexhook","","",N,N],[17,"XKB_KEY_ecircumflexhook","","",N,N],[17,"XKB_KEY_Ecircumflextilde","","",N,N],[17,"XKB_KEY_ecircumflextilde","","",N,N],[17,"XKB_KEY_Ecircumflexbelowdot","","",N,N],[17,"XKB_KEY_ecircumflexbelowdot","","",N,N],[17,"XKB_KEY_Ihook","","",N,N],[17,"XKB_KEY_ihook","","",N,N],[17,"XKB_KEY_Ibelowdot","","",N,N],[17,"XKB_KEY_ibelowdot","","",N,N],[17,"XKB_KEY_Obelowdot","","",N,N],[17,"XKB_KEY_obelowdot","","",N,N],[17,"XKB_KEY_Ohook","","",N,N],[17,"XKB_KEY_ohook","","",N,N],[17,"XKB_KEY_Ocircumflexacute","","",N,N],[17,"XKB_KEY_ocircumflexacute","","",N,N],[17,"XKB_KEY_Ocircumflexgrave","","",N,N],[17,"XKB_KEY_ocircumflexgrave","","",N,N],[17,"XKB_KEY_Ocircumflexhook","","",N,N],[17,"XKB_KEY_ocircumflexhook","","",N,N],[17,"XKB_KEY_Ocircumflextilde","","",N,N],[17,"XKB_KEY_ocircumflextilde","","",N,N],[17,"XKB_KEY_Ocircumflexbelowdot","","",N,N],[17,"XKB_KEY_ocircumflexbelowdot","","",N,N],[17,"XKB_KEY_Ohornacute","","",N,N],[17,"XKB_KEY_ohornacute","","",N,N],[17,"XKB_KEY_Ohorngrave","","",N,N],[17,"XKB_KEY_ohorngrave","","",N,N],[17,"XKB_KEY_Ohornhook","","",N,N],[17,"XKB_KEY_ohornhook","","",N,N],[17,"XKB_KEY_Ohorntilde","","",N,N],[17,"XKB_KEY_ohorntilde","","",N,N],[17,"XKB_KEY_Ohornbelowdot","","",N,N],[17,"XKB_KEY_ohornbelowdot","","",N,N],[17,"XKB_KEY_Ubelowdot","","",N,N],[17,"XKB_KEY_ubelowdot","","",N,N],[17,"XKB_KEY_Uhook","","",N,N],[17,"XKB_KEY_uhook","","",N,N],[17,"XKB_KEY_Uhornacute","","",N,N],[17,"XKB_KEY_uhornacute","","",N,N],[17,"XKB_KEY_Uhorngrave","","",N,N],[17,"XKB_KEY_uhorngrave","","",N,N],[17,"XKB_KEY_Uhornhook","","",N,N],[17,"XKB_KEY_uhornhook","","",N,N],[17,"XKB_KEY_Uhorntilde","","",N,N],[17,"XKB_KEY_uhorntilde","","",N,N],[17,"XKB_KEY_Uhornbelowdot","","",N,N],[17,"XKB_KEY_uhornbelowdot","","",N,N],[17,"XKB_KEY_Ybelowdot","","",N,N],[17,"XKB_KEY_ybelowdot","","",N,N],[17,"XKB_KEY_Yhook","","",N,N],[17,"XKB_KEY_yhook","","",N,N],[17,"XKB_KEY_Ytilde","","",N,N],[17,"XKB_KEY_ytilde","","",N,N],[17,"XKB_KEY_Ohorn","","",N,N],[17,"XKB_KEY_ohorn","","",N,N],[17,"XKB_KEY_Uhorn","","",N,N],[17,"XKB_KEY_uhorn","","",N,N],[17,"XKB_KEY_EcuSign","","",N,N],[17,"XKB_KEY_ColonSign","","",N,N],[17,"XKB_KEY_CruzeiroSign","","",N,N],[17,"XKB_KEY_FFrancSign","","",N,N],[17,"XKB_KEY_LiraSign","","",N,N],[17,"XKB_KEY_MillSign","","",N,N],[17,"XKB_KEY_NairaSign","","",N,N],[17,"XKB_KEY_PesetaSign","","",N,N],[17,"XKB_KEY_RupeeSign","","",N,N],[17,"XKB_KEY_WonSign","","",N,N],[17,"XKB_KEY_NewSheqelSign","","",N,N],[17,"XKB_KEY_DongSign","","",N,N],[17,"XKB_KEY_EuroSign","","",N,N],[17,"XKB_KEY_zerosuperior","","",N,N],[17,"XKB_KEY_foursuperior","","",N,N],[17,"XKB_KEY_fivesuperior","","",N,N],[17,"XKB_KEY_sixsuperior","","",N,N],[17,"XKB_KEY_sevensuperior","","",N,N],[17,"XKB_KEY_eightsuperior","","",N,N],[17,"XKB_KEY_ninesuperior","","",N,N],[17,"XKB_KEY_zerosubscript","","",N,N],[17,"XKB_KEY_onesubscript","","",N,N],[17,"XKB_KEY_twosubscript","","",N,N],[17,"XKB_KEY_threesubscript","","",N,N],[17,"XKB_KEY_foursubscript","","",N,N],[17,"XKB_KEY_fivesubscript","","",N,N],[17,"XKB_KEY_sixsubscript","","",N,N],[17,"XKB_KEY_sevensubscript","","",N,N],[17,"XKB_KEY_eightsubscript","","",N,N],[17,"XKB_KEY_ninesubscript","","",N,N],[17,"XKB_KEY_partdifferential","","",N,N],[17,"XKB_KEY_emptyset","","",N,N],[17,"XKB_KEY_elementof","","",N,N],[17,"XKB_KEY_notelementof","","",N,N],[17,"XKB_KEY_containsas","","",N,N],[17,"XKB_KEY_squareroot","","",N,N],[17,"XKB_KEY_cuberoot","","",N,N],[17,"XKB_KEY_fourthroot","","",N,N],[17,"XKB_KEY_dintegral","","",N,N],[17,"XKB_KEY_tintegral","","",N,N],[17,"XKB_KEY_because","","",N,N],[17,"XKB_KEY_approxeq","","",N,N],[17,"XKB_KEY_notapproxeq","","",N,N],[17,"XKB_KEY_notidentical","","",N,N],[17,"XKB_KEY_stricteq","","",N,N],[17,"XKB_KEY_braille_dot_1","","",N,N],[17,"XKB_KEY_braille_dot_2","","",N,N],[17,"XKB_KEY_braille_dot_3","","",N,N],[17,"XKB_KEY_braille_dot_4","","",N,N],[17,"XKB_KEY_braille_dot_5","","",N,N],[17,"XKB_KEY_braille_dot_6","","",N,N],[17,"XKB_KEY_braille_dot_7","","",N,N],[17,"XKB_KEY_braille_dot_8","","",N,N],[17,"XKB_KEY_braille_dot_9","","",N,N],[17,"XKB_KEY_braille_dot_10","","",N,N],[17,"XKB_KEY_braille_blank","","",N,N],[17,"XKB_KEY_braille_dots_1","","",N,N],[17,"XKB_KEY_braille_dots_2","","",N,N],[17,"XKB_KEY_braille_dots_12","","",N,N],[17,"XKB_KEY_braille_dots_3","","",N,N],[17,"XKB_KEY_braille_dots_13","","",N,N],[17,"XKB_KEY_braille_dots_23","","",N,N],[17,"XKB_KEY_braille_dots_123","","",N,N],[17,"XKB_KEY_braille_dots_4","","",N,N],[17,"XKB_KEY_braille_dots_14","","",N,N],[17,"XKB_KEY_braille_dots_24","","",N,N],[17,"XKB_KEY_braille_dots_124","","",N,N],[17,"XKB_KEY_braille_dots_34","","",N,N],[17,"XKB_KEY_braille_dots_134","","",N,N],[17,"XKB_KEY_braille_dots_234","","",N,N],[17,"XKB_KEY_braille_dots_1234","","",N,N],[17,"XKB_KEY_braille_dots_5","","",N,N],[17,"XKB_KEY_braille_dots_15","","",N,N],[17,"XKB_KEY_braille_dots_25","","",N,N],[17,"XKB_KEY_braille_dots_125","","",N,N],[17,"XKB_KEY_braille_dots_35","","",N,N],[17,"XKB_KEY_braille_dots_135","","",N,N],[17,"XKB_KEY_braille_dots_235","","",N,N],[17,"XKB_KEY_braille_dots_1235","","",N,N],[17,"XKB_KEY_braille_dots_45","","",N,N],[17,"XKB_KEY_braille_dots_145","","",N,N],[17,"XKB_KEY_braille_dots_245","","",N,N],[17,"XKB_KEY_braille_dots_1245","","",N,N],[17,"XKB_KEY_braille_dots_345","","",N,N],[17,"XKB_KEY_braille_dots_1345","","",N,N],[17,"XKB_KEY_braille_dots_2345","","",N,N],[17,"XKB_KEY_braille_dots_12345","","",N,N],[17,"XKB_KEY_braille_dots_6","","",N,N],[17,"XKB_KEY_braille_dots_16","","",N,N],[17,"XKB_KEY_braille_dots_26","","",N,N],[17,"XKB_KEY_braille_dots_126","","",N,N],[17,"XKB_KEY_braille_dots_36","","",N,N],[17,"XKB_KEY_braille_dots_136","","",N,N],[17,"XKB_KEY_braille_dots_236","","",N,N],[17,"XKB_KEY_braille_dots_1236","","",N,N],[17,"XKB_KEY_braille_dots_46","","",N,N],[17,"XKB_KEY_braille_dots_146","","",N,N],[17,"XKB_KEY_braille_dots_246","","",N,N],[17,"XKB_KEY_braille_dots_1246","","",N,N],[17,"XKB_KEY_braille_dots_346","","",N,N],[17,"XKB_KEY_braille_dots_1346","","",N,N],[17,"XKB_KEY_braille_dots_2346","","",N,N],[17,"XKB_KEY_braille_dots_12346","","",N,N],[17,"XKB_KEY_braille_dots_56","","",N,N],[17,"XKB_KEY_braille_dots_156","","",N,N],[17,"XKB_KEY_braille_dots_256","","",N,N],[17,"XKB_KEY_braille_dots_1256","","",N,N],[17,"XKB_KEY_braille_dots_356","","",N,N],[17,"XKB_KEY_braille_dots_1356","","",N,N],[17,"XKB_KEY_braille_dots_2356","","",N,N],[17,"XKB_KEY_braille_dots_12356","","",N,N],[17,"XKB_KEY_braille_dots_456","","",N,N],[17,"XKB_KEY_braille_dots_1456","","",N,N],[17,"XKB_KEY_braille_dots_2456","","",N,N],[17,"XKB_KEY_braille_dots_12456","","",N,N],[17,"XKB_KEY_braille_dots_3456","","",N,N],[17,"XKB_KEY_braille_dots_13456","","",N,N],[17,"XKB_KEY_braille_dots_23456","","",N,N],[17,"XKB_KEY_braille_dots_123456","","",N,N],[17,"XKB_KEY_braille_dots_7","","",N,N],[17,"XKB_KEY_braille_dots_17","","",N,N],[17,"XKB_KEY_braille_dots_27","","",N,N],[17,"XKB_KEY_braille_dots_127","","",N,N],[17,"XKB_KEY_braille_dots_37","","",N,N],[17,"XKB_KEY_braille_dots_137","","",N,N],[17,"XKB_KEY_braille_dots_237","","",N,N],[17,"XKB_KEY_braille_dots_1237","","",N,N],[17,"XKB_KEY_braille_dots_47","","",N,N],[17,"XKB_KEY_braille_dots_147","","",N,N],[17,"XKB_KEY_braille_dots_247","","",N,N],[17,"XKB_KEY_braille_dots_1247","","",N,N],[17,"XKB_KEY_braille_dots_347","","",N,N],[17,"XKB_KEY_braille_dots_1347","","",N,N],[17,"XKB_KEY_braille_dots_2347","","",N,N],[17,"XKB_KEY_braille_dots_12347","","",N,N],[17,"XKB_KEY_braille_dots_57","","",N,N],[17,"XKB_KEY_braille_dots_157","","",N,N],[17,"XKB_KEY_braille_dots_257","","",N,N],[17,"XKB_KEY_braille_dots_1257","","",N,N],[17,"XKB_KEY_braille_dots_357","","",N,N],[17,"XKB_KEY_braille_dots_1357","","",N,N],[17,"XKB_KEY_braille_dots_2357","","",N,N],[17,"XKB_KEY_braille_dots_12357","","",N,N],[17,"XKB_KEY_braille_dots_457","","",N,N],[17,"XKB_KEY_braille_dots_1457","","",N,N],[17,"XKB_KEY_braille_dots_2457","","",N,N],[17,"XKB_KEY_braille_dots_12457","","",N,N],[17,"XKB_KEY_braille_dots_3457","","",N,N],[17,"XKB_KEY_braille_dots_13457","","",N,N],[17,"XKB_KEY_braille_dots_23457","","",N,N],[17,"XKB_KEY_braille_dots_123457","","",N,N],[17,"XKB_KEY_braille_dots_67","","",N,N],[17,"XKB_KEY_braille_dots_167","","",N,N],[17,"XKB_KEY_braille_dots_267","","",N,N],[17,"XKB_KEY_braille_dots_1267","","",N,N],[17,"XKB_KEY_braille_dots_367","","",N,N],[17,"XKB_KEY_braille_dots_1367","","",N,N],[17,"XKB_KEY_braille_dots_2367","","",N,N],[17,"XKB_KEY_braille_dots_12367","","",N,N],[17,"XKB_KEY_braille_dots_467","","",N,N],[17,"XKB_KEY_braille_dots_1467","","",N,N],[17,"XKB_KEY_braille_dots_2467","","",N,N],[17,"XKB_KEY_braille_dots_12467","","",N,N],[17,"XKB_KEY_braille_dots_3467","","",N,N],[17,"XKB_KEY_braille_dots_13467","","",N,N],[17,"XKB_KEY_braille_dots_23467","","",N,N],[17,"XKB_KEY_braille_dots_123467","","",N,N],[17,"XKB_KEY_braille_dots_567","","",N,N],[17,"XKB_KEY_braille_dots_1567","","",N,N],[17,"XKB_KEY_braille_dots_2567","","",N,N],[17,"XKB_KEY_braille_dots_12567","","",N,N],[17,"XKB_KEY_braille_dots_3567","","",N,N],[17,"XKB_KEY_braille_dots_13567","","",N,N],[17,"XKB_KEY_braille_dots_23567","","",N,N],[17,"XKB_KEY_braille_dots_123567","","",N,N],[17,"XKB_KEY_braille_dots_4567","","",N,N],[17,"XKB_KEY_braille_dots_14567","","",N,N],[17,"XKB_KEY_braille_dots_24567","","",N,N],[17,"XKB_KEY_braille_dots_124567","","",N,N],[17,"XKB_KEY_braille_dots_34567","","",N,N],[17,"XKB_KEY_braille_dots_134567","","",N,N],[17,"XKB_KEY_braille_dots_234567","","",N,N],[17,"XKB_KEY_braille_dots_1234567","","",N,N],[17,"XKB_KEY_braille_dots_8","","",N,N],[17,"XKB_KEY_braille_dots_18","","",N,N],[17,"XKB_KEY_braille_dots_28","","",N,N],[17,"XKB_KEY_braille_dots_128","","",N,N],[17,"XKB_KEY_braille_dots_38","","",N,N],[17,"XKB_KEY_braille_dots_138","","",N,N],[17,"XKB_KEY_braille_dots_238","","",N,N],[17,"XKB_KEY_braille_dots_1238","","",N,N],[17,"XKB_KEY_braille_dots_48","","",N,N],[17,"XKB_KEY_braille_dots_148","","",N,N],[17,"XKB_KEY_braille_dots_248","","",N,N],[17,"XKB_KEY_braille_dots_1248","","",N,N],[17,"XKB_KEY_braille_dots_348","","",N,N],[17,"XKB_KEY_braille_dots_1348","","",N,N],[17,"XKB_KEY_braille_dots_2348","","",N,N],[17,"XKB_KEY_braille_dots_12348","","",N,N],[17,"XKB_KEY_braille_dots_58","","",N,N],[17,"XKB_KEY_braille_dots_158","","",N,N],[17,"XKB_KEY_braille_dots_258","","",N,N],[17,"XKB_KEY_braille_dots_1258","","",N,N],[17,"XKB_KEY_braille_dots_358","","",N,N],[17,"XKB_KEY_braille_dots_1358","","",N,N],[17,"XKB_KEY_braille_dots_2358","","",N,N],[17,"XKB_KEY_braille_dots_12358","","",N,N],[17,"XKB_KEY_braille_dots_458","","",N,N],[17,"XKB_KEY_braille_dots_1458","","",N,N],[17,"XKB_KEY_braille_dots_2458","","",N,N],[17,"XKB_KEY_braille_dots_12458","","",N,N],[17,"XKB_KEY_braille_dots_3458","","",N,N],[17,"XKB_KEY_braille_dots_13458","","",N,N],[17,"XKB_KEY_braille_dots_23458","","",N,N],[17,"XKB_KEY_braille_dots_123458","","",N,N],[17,"XKB_KEY_braille_dots_68","","",N,N],[17,"XKB_KEY_braille_dots_168","","",N,N],[17,"XKB_KEY_braille_dots_268","","",N,N],[17,"XKB_KEY_braille_dots_1268","","",N,N],[17,"XKB_KEY_braille_dots_368","","",N,N],[17,"XKB_KEY_braille_dots_1368","","",N,N],[17,"XKB_KEY_braille_dots_2368","","",N,N],[17,"XKB_KEY_braille_dots_12368","","",N,N],[17,"XKB_KEY_braille_dots_468","","",N,N],[17,"XKB_KEY_braille_dots_1468","","",N,N],[17,"XKB_KEY_braille_dots_2468","","",N,N],[17,"XKB_KEY_braille_dots_12468","","",N,N],[17,"XKB_KEY_braille_dots_3468","","",N,N],[17,"XKB_KEY_braille_dots_13468","","",N,N],[17,"XKB_KEY_braille_dots_23468","","",N,N],[17,"XKB_KEY_braille_dots_123468","","",N,N],[17,"XKB_KEY_braille_dots_568","","",N,N],[17,"XKB_KEY_braille_dots_1568","","",N,N],[17,"XKB_KEY_braille_dots_2568","","",N,N],[17,"XKB_KEY_braille_dots_12568","","",N,N],[17,"XKB_KEY_braille_dots_3568","","",N,N],[17,"XKB_KEY_braille_dots_13568","","",N,N],[17,"XKB_KEY_braille_dots_23568","","",N,N],[17,"XKB_KEY_braille_dots_123568","","",N,N],[17,"XKB_KEY_braille_dots_4568","","",N,N],[17,"XKB_KEY_braille_dots_14568","","",N,N],[17,"XKB_KEY_braille_dots_24568","","",N,N],[17,"XKB_KEY_braille_dots_124568","","",N,N],[17,"XKB_KEY_braille_dots_34568","","",N,N],[17,"XKB_KEY_braille_dots_134568","","",N,N],[17,"XKB_KEY_braille_dots_234568","","",N,N],[17,"XKB_KEY_braille_dots_1234568","","",N,N],[17,"XKB_KEY_braille_dots_78","","",N,N],[17,"XKB_KEY_braille_dots_178","","",N,N],[17,"XKB_KEY_braille_dots_278","","",N,N],[17,"XKB_KEY_braille_dots_1278","","",N,N],[17,"XKB_KEY_braille_dots_378","","",N,N],[17,"XKB_KEY_braille_dots_1378","","",N,N],[17,"XKB_KEY_braille_dots_2378","","",N,N],[17,"XKB_KEY_braille_dots_12378","","",N,N],[17,"XKB_KEY_braille_dots_478","","",N,N],[17,"XKB_KEY_braille_dots_1478","","",N,N],[17,"XKB_KEY_braille_dots_2478","","",N,N],[17,"XKB_KEY_braille_dots_12478","","",N,N],[17,"XKB_KEY_braille_dots_3478","","",N,N],[17,"XKB_KEY_braille_dots_13478","","",N,N],[17,"XKB_KEY_braille_dots_23478","","",N,N],[17,"XKB_KEY_braille_dots_123478","","",N,N],[17,"XKB_KEY_braille_dots_578","","",N,N],[17,"XKB_KEY_braille_dots_1578","","",N,N],[17,"XKB_KEY_braille_dots_2578","","",N,N],[17,"XKB_KEY_braille_dots_12578","","",N,N],[17,"XKB_KEY_braille_dots_3578","","",N,N],[17,"XKB_KEY_braille_dots_13578","","",N,N],[17,"XKB_KEY_braille_dots_23578","","",N,N],[17,"XKB_KEY_braille_dots_123578","","",N,N],[17,"XKB_KEY_braille_dots_4578","","",N,N],[17,"XKB_KEY_braille_dots_14578","","",N,N],[17,"XKB_KEY_braille_dots_24578","","",N,N],[17,"XKB_KEY_braille_dots_124578","","",N,N],[17,"XKB_KEY_braille_dots_34578","","",N,N],[17,"XKB_KEY_braille_dots_134578","","",N,N],[17,"XKB_KEY_braille_dots_234578","","",N,N],[17,"XKB_KEY_braille_dots_1234578","","",N,N],[17,"XKB_KEY_braille_dots_678","","",N,N],[17,"XKB_KEY_braille_dots_1678","","",N,N],[17,"XKB_KEY_braille_dots_2678","","",N,N],[17,"XKB_KEY_braille_dots_12678","","",N,N],[17,"XKB_KEY_braille_dots_3678","","",N,N],[17,"XKB_KEY_braille_dots_13678","","",N,N],[17,"XKB_KEY_braille_dots_23678","","",N,N],[17,"XKB_KEY_braille_dots_123678","","",N,N],[17,"XKB_KEY_braille_dots_4678","","",N,N],[17,"XKB_KEY_braille_dots_14678","","",N,N],[17,"XKB_KEY_braille_dots_24678","","",N,N],[17,"XKB_KEY_braille_dots_124678","","",N,N],[17,"XKB_KEY_braille_dots_34678","","",N,N],[17,"XKB_KEY_braille_dots_134678","","",N,N],[17,"XKB_KEY_braille_dots_234678","","",N,N],[17,"XKB_KEY_braille_dots_1234678","","",N,N],[17,"XKB_KEY_braille_dots_5678","","",N,N],[17,"XKB_KEY_braille_dots_15678","","",N,N],[17,"XKB_KEY_braille_dots_25678","","",N,N],[17,"XKB_KEY_braille_dots_125678","","",N,N],[17,"XKB_KEY_braille_dots_35678","","",N,N],[17,"XKB_KEY_braille_dots_135678","","",N,N],[17,"XKB_KEY_braille_dots_235678","","",N,N],[17,"XKB_KEY_braille_dots_1235678","","",N,N],[17,"XKB_KEY_braille_dots_45678","","",N,N],[17,"XKB_KEY_braille_dots_145678","","",N,N],[17,"XKB_KEY_braille_dots_245678","","",N,N],[17,"XKB_KEY_braille_dots_1245678","","",N,N],[17,"XKB_KEY_braille_dots_345678","","",N,N],[17,"XKB_KEY_braille_dots_1345678","","",N,N],[17,"XKB_KEY_braille_dots_2345678","","",N,N],[17,"XKB_KEY_braille_dots_12345678","","",N,N],[17,"XKB_KEY_Sinh_ng","","",N,N],[17,"XKB_KEY_Sinh_h2","","",N,N],[17,"XKB_KEY_Sinh_a","","",N,N],[17,"XKB_KEY_Sinh_aa","","",N,N],[17,"XKB_KEY_Sinh_ae","","",N,N],[17,"XKB_KEY_Sinh_aee","","",N,N],[17,"XKB_KEY_Sinh_i","","",N,N],[17,"XKB_KEY_Sinh_ii","","",N,N],[17,"XKB_KEY_Sinh_u","","",N,N],[17,"XKB_KEY_Sinh_uu","","",N,N],[17,"XKB_KEY_Sinh_ri","","",N,N],[17,"XKB_KEY_Sinh_rii","","",N,N],[17,"XKB_KEY_Sinh_lu","","",N,N],[17,"XKB_KEY_Sinh_luu","","",N,N],[17,"XKB_KEY_Sinh_e","","",N,N],[17,"XKB_KEY_Sinh_ee","","",N,N],[17,"XKB_KEY_Sinh_ai","","",N,N],[17,"XKB_KEY_Sinh_o","","",N,N],[17,"XKB_KEY_Sinh_oo","","",N,N],[17,"XKB_KEY_Sinh_au","","",N,N],[17,"XKB_KEY_Sinh_ka","","",N,N],[17,"XKB_KEY_Sinh_kha","","",N,N],[17,"XKB_KEY_Sinh_ga","","",N,N],[17,"XKB_KEY_Sinh_gha","","",N,N],[17,"XKB_KEY_Sinh_ng2","","",N,N],[17,"XKB_KEY_Sinh_nga","","",N,N],[17,"XKB_KEY_Sinh_ca","","",N,N],[17,"XKB_KEY_Sinh_cha","","",N,N],[17,"XKB_KEY_Sinh_ja","","",N,N],[17,"XKB_KEY_Sinh_jha","","",N,N],[17,"XKB_KEY_Sinh_nya","","",N,N],[17,"XKB_KEY_Sinh_jnya","","",N,N],[17,"XKB_KEY_Sinh_nja","","",N,N],[17,"XKB_KEY_Sinh_tta","","",N,N],[17,"XKB_KEY_Sinh_ttha","","",N,N],[17,"XKB_KEY_Sinh_dda","","",N,N],[17,"XKB_KEY_Sinh_ddha","","",N,N],[17,"XKB_KEY_Sinh_nna","","",N,N],[17,"XKB_KEY_Sinh_ndda","","",N,N],[17,"XKB_KEY_Sinh_tha","","",N,N],[17,"XKB_KEY_Sinh_thha","","",N,N],[17,"XKB_KEY_Sinh_dha","","",N,N],[17,"XKB_KEY_Sinh_dhha","","",N,N],[17,"XKB_KEY_Sinh_na","","",N,N],[17,"XKB_KEY_Sinh_ndha","","",N,N],[17,"XKB_KEY_Sinh_pa","","",N,N],[17,"XKB_KEY_Sinh_pha","","",N,N],[17,"XKB_KEY_Sinh_ba","","",N,N],[17,"XKB_KEY_Sinh_bha","","",N,N],[17,"XKB_KEY_Sinh_ma","","",N,N],[17,"XKB_KEY_Sinh_mba","","",N,N],[17,"XKB_KEY_Sinh_ya","","",N,N],[17,"XKB_KEY_Sinh_ra","","",N,N],[17,"XKB_KEY_Sinh_la","","",N,N],[17,"XKB_KEY_Sinh_va","","",N,N],[17,"XKB_KEY_Sinh_sha","","",N,N],[17,"XKB_KEY_Sinh_ssha","","",N,N],[17,"XKB_KEY_Sinh_sa","","",N,N],[17,"XKB_KEY_Sinh_ha","","",N,N],[17,"XKB_KEY_Sinh_lla","","",N,N],[17,"XKB_KEY_Sinh_fa","","",N,N],[17,"XKB_KEY_Sinh_al","","",N,N],[17,"XKB_KEY_Sinh_aa2","","",N,N],[17,"XKB_KEY_Sinh_ae2","","",N,N],[17,"XKB_KEY_Sinh_aee2","","",N,N],[17,"XKB_KEY_Sinh_i2","","",N,N],[17,"XKB_KEY_Sinh_ii2","","",N,N],[17,"XKB_KEY_Sinh_u2","","",N,N],[17,"XKB_KEY_Sinh_uu2","","",N,N],[17,"XKB_KEY_Sinh_ru2","","",N,N],[17,"XKB_KEY_Sinh_e2","","",N,N],[17,"XKB_KEY_Sinh_ee2","","",N,N],[17,"XKB_KEY_Sinh_ai2","","",N,N],[17,"XKB_KEY_Sinh_o2","","",N,N],[17,"XKB_KEY_Sinh_oo2","","",N,N],[17,"XKB_KEY_Sinh_au2","","",N,N],[17,"XKB_KEY_Sinh_lu2","","",N,N],[17,"XKB_KEY_Sinh_ruu2","","",N,N],[17,"XKB_KEY_Sinh_luu2","","",N,N],[17,"XKB_KEY_Sinh_kunddaliya","","",N,N],[17,"XKB_KEY_XF86ModeLock","","",N,N],[17,"XKB_KEY_XF86MonBrightnessUp","","",N,N],[17,"XKB_KEY_XF86MonBrightnessDown","","",N,N],[17,"XKB_KEY_XF86KbdLightOnOff","","",N,N],[17,"XKB_KEY_XF86KbdBrightnessUp","","",N,N],[17,"XKB_KEY_XF86KbdBrightnessDown","","",N,N],[17,"XKB_KEY_XF86Standby","","",N,N],[17,"XKB_KEY_XF86AudioLowerVolume","","",N,N],[17,"XKB_KEY_XF86AudioMute","","",N,N],[17,"XKB_KEY_XF86AudioRaiseVolume","","",N,N],[17,"XKB_KEY_XF86AudioPlay","","",N,N],[17,"XKB_KEY_XF86AudioStop","","",N,N],[17,"XKB_KEY_XF86AudioPrev","","",N,N],[17,"XKB_KEY_XF86AudioNext","","",N,N],[17,"XKB_KEY_XF86HomePage","","",N,N],[17,"XKB_KEY_XF86Mail","","",N,N],[17,"XKB_KEY_XF86Start","","",N,N],[17,"XKB_KEY_XF86Search","","",N,N],[17,"XKB_KEY_XF86AudioRecord","","",N,N],[17,"XKB_KEY_XF86Calculator","","",N,N],[17,"XKB_KEY_XF86Memo","","",N,N],[17,"XKB_KEY_XF86ToDoList","","",N,N],[17,"XKB_KEY_XF86Calendar","","",N,N],[17,"XKB_KEY_XF86PowerDown","","",N,N],[17,"XKB_KEY_XF86ContrastAdjust","","",N,N],[17,"XKB_KEY_XF86RockerUp","","",N,N],[17,"XKB_KEY_XF86RockerDown","","",N,N],[17,"XKB_KEY_XF86RockerEnter","","",N,N],[17,"XKB_KEY_XF86Back","","",N,N],[17,"XKB_KEY_XF86Forward","","",N,N],[17,"XKB_KEY_XF86Stop","","",N,N],[17,"XKB_KEY_XF86Refresh","","",N,N],[17,"XKB_KEY_XF86PowerOff","","",N,N],[17,"XKB_KEY_XF86WakeUp","","",N,N],[17,"XKB_KEY_XF86Eject","","",N,N],[17,"XKB_KEY_XF86ScreenSaver","","",N,N],[17,"XKB_KEY_XF86WWW","","",N,N],[17,"XKB_KEY_XF86Sleep","","",N,N],[17,"XKB_KEY_XF86Favorites","","",N,N],[17,"XKB_KEY_XF86AudioPause","","",N,N],[17,"XKB_KEY_XF86AudioMedia","","",N,N],[17,"XKB_KEY_XF86MyComputer","","",N,N],[17,"XKB_KEY_XF86VendorHome","","",N,N],[17,"XKB_KEY_XF86LightBulb","","",N,N],[17,"XKB_KEY_XF86Shop","","",N,N],[17,"XKB_KEY_XF86History","","",N,N],[17,"XKB_KEY_XF86OpenURL","","",N,N],[17,"XKB_KEY_XF86AddFavorite","","",N,N],[17,"XKB_KEY_XF86HotLinks","","",N,N],[17,"XKB_KEY_XF86BrightnessAdjust","","",N,N],[17,"XKB_KEY_XF86Finance","","",N,N],[17,"XKB_KEY_XF86Community","","",N,N],[17,"XKB_KEY_XF86AudioRewind","","",N,N],[17,"XKB_KEY_XF86BackForward","","",N,N],[17,"XKB_KEY_XF86Launch0","","",N,N],[17,"XKB_KEY_XF86Launch1","","",N,N],[17,"XKB_KEY_XF86Launch2","","",N,N],[17,"XKB_KEY_XF86Launch3","","",N,N],[17,"XKB_KEY_XF86Launch4","","",N,N],[17,"XKB_KEY_XF86Launch5","","",N,N],[17,"XKB_KEY_XF86Launch6","","",N,N],[17,"XKB_KEY_XF86Launch7","","",N,N],[17,"XKB_KEY_XF86Launch8","","",N,N],[17,"XKB_KEY_XF86Launch9","","",N,N],[17,"XKB_KEY_XF86LaunchA","","",N,N],[17,"XKB_KEY_XF86LaunchB","","",N,N],[17,"XKB_KEY_XF86LaunchC","","",N,N],[17,"XKB_KEY_XF86LaunchD","","",N,N],[17,"XKB_KEY_XF86LaunchE","","",N,N],[17,"XKB_KEY_XF86LaunchF","","",N,N],[17,"XKB_KEY_XF86ApplicationLeft","","",N,N],[17,"XKB_KEY_XF86ApplicationRight","","",N,N],[17,"XKB_KEY_XF86Book","","",N,N],[17,"XKB_KEY_XF86CD","","",N,N],[17,"XKB_KEY_XF86Calculater","","",N,N],[17,"XKB_KEY_XF86Clear","","",N,N],[17,"XKB_KEY_XF86Close","","",N,N],[17,"XKB_KEY_XF86Copy","","",N,N],[17,"XKB_KEY_XF86Cut","","",N,N],[17,"XKB_KEY_XF86Display","","",N,N],[17,"XKB_KEY_XF86DOS","","",N,N],[17,"XKB_KEY_XF86Documents","","",N,N],[17,"XKB_KEY_XF86Excel","","",N,N],[17,"XKB_KEY_XF86Explorer","","",N,N],[17,"XKB_KEY_XF86Game","","",N,N],[17,"XKB_KEY_XF86Go","","",N,N],[17,"XKB_KEY_XF86iTouch","","",N,N],[17,"XKB_KEY_XF86LogOff","","",N,N],[17,"XKB_KEY_XF86Market","","",N,N],[17,"XKB_KEY_XF86Meeting","","",N,N],[17,"XKB_KEY_XF86MenuKB","","",N,N],[17,"XKB_KEY_XF86MenuPB","","",N,N],[17,"XKB_KEY_XF86MySites","","",N,N],[17,"XKB_KEY_XF86New","","",N,N],[17,"XKB_KEY_XF86News","","",N,N],[17,"XKB_KEY_XF86OfficeHome","","",N,N],[17,"XKB_KEY_XF86Open","","",N,N],[17,"XKB_KEY_XF86Option","","",N,N],[17,"XKB_KEY_XF86Paste","","",N,N],[17,"XKB_KEY_XF86Phone","","",N,N],[17,"XKB_KEY_XF86Q","","",N,N],[17,"XKB_KEY_XF86Reply","","",N,N],[17,"XKB_KEY_XF86Reload","","",N,N],[17,"XKB_KEY_XF86RotateWindows","","",N,N],[17,"XKB_KEY_XF86RotationPB","","",N,N],[17,"XKB_KEY_XF86RotationKB","","",N,N],[17,"XKB_KEY_XF86Save","","",N,N],[17,"XKB_KEY_XF86ScrollUp","","",N,N],[17,"XKB_KEY_XF86ScrollDown","","",N,N],[17,"XKB_KEY_XF86ScrollClick","","",N,N],[17,"XKB_KEY_XF86Send","","",N,N],[17,"XKB_KEY_XF86Spell","","",N,N],[17,"XKB_KEY_XF86SplitScreen","","",N,N],[17,"XKB_KEY_XF86Support","","",N,N],[17,"XKB_KEY_XF86TaskPane","","",N,N],[17,"XKB_KEY_XF86Terminal","","",N,N],[17,"XKB_KEY_XF86Tools","","",N,N],[17,"XKB_KEY_XF86Travel","","",N,N],[17,"XKB_KEY_XF86UserPB","","",N,N],[17,"XKB_KEY_XF86User1KB","","",N,N],[17,"XKB_KEY_XF86User2KB","","",N,N],[17,"XKB_KEY_XF86Video","","",N,N],[17,"XKB_KEY_XF86WheelButton","","",N,N],[17,"XKB_KEY_XF86Word","","",N,N],[17,"XKB_KEY_XF86Xfer","","",N,N],[17,"XKB_KEY_XF86ZoomIn","","",N,N],[17,"XKB_KEY_XF86ZoomOut","","",N,N],[17,"XKB_KEY_XF86Away","","",N,N],[17,"XKB_KEY_XF86Messenger","","",N,N],[17,"XKB_KEY_XF86WebCam","","",N,N],[17,"XKB_KEY_XF86MailForward","","",N,N],[17,"XKB_KEY_XF86Pictures","","",N,N],[17,"XKB_KEY_XF86Music","","",N,N],[17,"XKB_KEY_XF86Battery","","",N,N],[17,"XKB_KEY_XF86Bluetooth","","",N,N],[17,"XKB_KEY_XF86WLAN","","",N,N],[17,"XKB_KEY_XF86UWB","","",N,N],[17,"XKB_KEY_XF86AudioForward","","",N,N],[17,"XKB_KEY_XF86AudioRepeat","","",N,N],[17,"XKB_KEY_XF86AudioRandomPlay","","",N,N],[17,"XKB_KEY_XF86Subtitle","","",N,N],[17,"XKB_KEY_XF86AudioCycleTrack","","",N,N],[17,"XKB_KEY_XF86CycleAngle","","",N,N],[17,"XKB_KEY_XF86FrameBack","","",N,N],[17,"XKB_KEY_XF86FrameForward","","",N,N],[17,"XKB_KEY_XF86Time","","",N,N],[17,"XKB_KEY_XF86Select","","",N,N],[17,"XKB_KEY_XF86View","","",N,N],[17,"XKB_KEY_XF86TopMenu","","",N,N],[17,"XKB_KEY_XF86Red","","",N,N],[17,"XKB_KEY_XF86Green","","",N,N],[17,"XKB_KEY_XF86Yellow","","",N,N],[17,"XKB_KEY_XF86Blue","","",N,N],[17,"XKB_KEY_XF86Suspend","","",N,N],[17,"XKB_KEY_XF86Hibernate","","",N,N],[17,"XKB_KEY_XF86TouchpadToggle","","",N,N],[17,"XKB_KEY_XF86TouchpadOn","","",N,N],[17,"XKB_KEY_XF86TouchpadOff","","",N,N],[17,"XKB_KEY_XF86AudioMicMute","","",N,N],[17,"XKB_KEY_XF86Switch_VT_1","","",N,N],[17,"XKB_KEY_XF86Switch_VT_2","","",N,N],[17,"XKB_KEY_XF86Switch_VT_3","","",N,N],[17,"XKB_KEY_XF86Switch_VT_4","","",N,N],[17,"XKB_KEY_XF86Switch_VT_5","","",N,N],[17,"XKB_KEY_XF86Switch_VT_6","","",N,N],[17,"XKB_KEY_XF86Switch_VT_7","","",N,N],[17,"XKB_KEY_XF86Switch_VT_8","","",N,N],[17,"XKB_KEY_XF86Switch_VT_9","","",N,N],[17,"XKB_KEY_XF86Switch_VT_10","","",N,N],[17,"XKB_KEY_XF86Switch_VT_11","","",N,N],[17,"XKB_KEY_XF86Switch_VT_12","","",N,N],[17,"XKB_KEY_XF86Ungrab","","",N,N],[17,"XKB_KEY_XF86ClearGrab","","",N,N],[17,"XKB_KEY_XF86Next_VMode","","",N,N],[17,"XKB_KEY_XF86Prev_VMode","","",N,N],[17,"XKB_KEY_XF86LogWindowTree","","",N,N],[17,"XKB_KEY_XF86LogGrabInfo","","",N,N],[17,"XKB_KEY_SunFA_Grave","","",N,N],[17,"XKB_KEY_SunFA_Circum","","",N,N],[17,"XKB_KEY_SunFA_Tilde","","",N,N],[17,"XKB_KEY_SunFA_Acute","","",N,N],[17,"XKB_KEY_SunFA_Diaeresis","","",N,N],[17,"XKB_KEY_SunFA_Cedilla","","",N,N],[17,"XKB_KEY_SunF36","","",N,N],[17,"XKB_KEY_SunF37","","",N,N],[17,"XKB_KEY_SunSys_Req","","",N,N],[17,"XKB_KEY_SunPrint_Screen","","",N,N],[17,"XKB_KEY_SunCompose","","",N,N],[17,"XKB_KEY_SunAltGraph","","",N,N],[17,"XKB_KEY_SunPageUp","","",N,N],[17,"XKB_KEY_SunPageDown","","",N,N],[17,"XKB_KEY_SunUndo","","",N,N],[17,"XKB_KEY_SunAgain","","",N,N],[17,"XKB_KEY_SunFind","","",N,N],[17,"XKB_KEY_SunStop","","",N,N],[17,"XKB_KEY_SunProps","","",N,N],[17,"XKB_KEY_SunFront","","",N,N],[17,"XKB_KEY_SunCopy","","",N,N],[17,"XKB_KEY_SunOpen","","",N,N],[17,"XKB_KEY_SunPaste","","",N,N],[17,"XKB_KEY_SunCut","","",N,N],[17,"XKB_KEY_SunPowerSwitch","","",N,N],[17,"XKB_KEY_SunAudioLowerVolume","","",N,N],[17,"XKB_KEY_SunAudioMute","","",N,N],[17,"XKB_KEY_SunAudioRaiseVolume","","",N,N],[17,"XKB_KEY_SunVideoDegauss","","",N,N],[17,"XKB_KEY_SunVideoLowerBrightness","","",N,N],[17,"XKB_KEY_SunVideoRaiseBrightness","","",N,N],[17,"XKB_KEY_SunPowerSwitchShift","","",N,N],[17,"XKB_KEY_Dring_accent","","",N,N],[17,"XKB_KEY_Dcircumflex_accent","","",N,N],[17,"XKB_KEY_Dcedilla_accent","","",N,N],[17,"XKB_KEY_Dacute_accent","","",N,N],[17,"XKB_KEY_Dgrave_accent","","",N,N],[17,"XKB_KEY_Dtilde","","",N,N],[17,"XKB_KEY_Ddiaeresis","","",N,N],[17,"XKB_KEY_DRemove","","",N,N],[17,"XKB_KEY_hpClearLine","","",N,N],[17,"XKB_KEY_hpInsertLine","","",N,N],[17,"XKB_KEY_hpDeleteLine","","",N,N],[17,"XKB_KEY_hpInsertChar","","",N,N],[17,"XKB_KEY_hpDeleteChar","","",N,N],[17,"XKB_KEY_hpBackTab","","",N,N],[17,"XKB_KEY_hpKP_BackTab","","",N,N],[17,"XKB_KEY_hpModelock1","","",N,N],[17,"XKB_KEY_hpModelock2","","",N,N],[17,"XKB_KEY_hpReset","","",N,N],[17,"XKB_KEY_hpSystem","","",N,N],[17,"XKB_KEY_hpUser","","",N,N],[17,"XKB_KEY_hpmute_acute","","",N,N],[17,"XKB_KEY_hpmute_grave","","",N,N],[17,"XKB_KEY_hpmute_asciicircum","","",N,N],[17,"XKB_KEY_hpmute_diaeresis","","",N,N],[17,"XKB_KEY_hpmute_asciitilde","","",N,N],[17,"XKB_KEY_hplira","","",N,N],[17,"XKB_KEY_hpguilder","","",N,N],[17,"XKB_KEY_hpYdiaeresis","","",N,N],[17,"XKB_KEY_hpIO","","",N,N],[17,"XKB_KEY_hplongminus","","",N,N],[17,"XKB_KEY_hpblock","","",N,N],[17,"XKB_KEY_osfCopy","","",N,N],[17,"XKB_KEY_osfCut","","",N,N],[17,"XKB_KEY_osfPaste","","",N,N],[17,"XKB_KEY_osfBackTab","","",N,N],[17,"XKB_KEY_osfBackSpace","","",N,N],[17,"XKB_KEY_osfClear","","",N,N],[17,"XKB_KEY_osfEscape","","",N,N],[17,"XKB_KEY_osfAddMode","","",N,N],[17,"XKB_KEY_osfPrimaryPaste","","",N,N],[17,"XKB_KEY_osfQuickPaste","","",N,N],[17,"XKB_KEY_osfPageLeft","","",N,N],[17,"XKB_KEY_osfPageUp","","",N,N],[17,"XKB_KEY_osfPageDown","","",N,N],[17,"XKB_KEY_osfPageRight","","",N,N],[17,"XKB_KEY_osfActivate","","",N,N],[17,"XKB_KEY_osfMenuBar","","",N,N],[17,"XKB_KEY_osfLeft","","",N,N],[17,"XKB_KEY_osfUp","","",N,N],[17,"XKB_KEY_osfRight","","",N,N],[17,"XKB_KEY_osfDown","","",N,N],[17,"XKB_KEY_osfEndLine","","",N,N],[17,"XKB_KEY_osfBeginLine","","",N,N],[17,"XKB_KEY_osfEndData","","",N,N],[17,"XKB_KEY_osfBeginData","","",N,N],[17,"XKB_KEY_osfPrevMenu","","",N,N],[17,"XKB_KEY_osfNextMenu","","",N,N],[17,"XKB_KEY_osfPrevField","","",N,N],[17,"XKB_KEY_osfNextField","","",N,N],[17,"XKB_KEY_osfSelect","","",N,N],[17,"XKB_KEY_osfInsert","","",N,N],[17,"XKB_KEY_osfUndo","","",N,N],[17,"XKB_KEY_osfMenu","","",N,N],[17,"XKB_KEY_osfCancel","","",N,N],[17,"XKB_KEY_osfHelp","","",N,N],[17,"XKB_KEY_osfSelectAll","","",N,N],[17,"XKB_KEY_osfDeselectAll","","",N,N],[17,"XKB_KEY_osfReselect","","",N,N],[17,"XKB_KEY_osfExtend","","",N,N],[17,"XKB_KEY_osfRestore","","",N,N],[17,"XKB_KEY_osfDelete","","",N,N],[17,"XKB_KEY_Reset","","",N,N],[17,"XKB_KEY_System","","",N,N],[17,"XKB_KEY_User","","",N,N],[17,"XKB_KEY_ClearLine","","",N,N],[17,"XKB_KEY_InsertLine","","",N,N],[17,"XKB_KEY_DeleteLine","","",N,N],[17,"XKB_KEY_InsertChar","","",N,N],[17,"XKB_KEY_DeleteChar","","",N,N],[17,"XKB_KEY_BackTab","","",N,N],[17,"XKB_KEY_KP_BackTab","","",N,N],[17,"XKB_KEY_Ext16bit_L","","",N,N],[17,"XKB_KEY_Ext16bit_R","","",N,N],[17,"XKB_KEY_mute_acute","","",N,N],[17,"XKB_KEY_mute_grave","","",N,N],[17,"XKB_KEY_mute_asciicircum","","",N,N],[17,"XKB_KEY_mute_diaeresis","","",N,N],[17,"XKB_KEY_mute_asciitilde","","",N,N],[17,"XKB_KEY_lira","","",N,N],[17,"XKB_KEY_guilder","","",N,N],[17,"XKB_KEY_IO","","",N,N],[17,"XKB_KEY_longminus","","",N,N],[17,"XKB_KEY_block","","",N,N],[11,"clone","smithay_client_toolkit::keyboard","",311,[[["self"]],["modifiersstate"]]],[11,"fmt","","",311,[[["self"],["formatter"]],["result"]]],[11,"default","","",311,[[],["modifiersstate"]]],[11,"eq","","",314,[[["self"],["keyrepeatkind"]],["bool"]]],[11,"ne","","",314,[[["self"],["keyrepeatkind"]],["bool"]]],[11,"fmt","","",315,[[["self"],["formatter"]],["result"]]],[0,"output","smithay_client_toolkit","Types related to `wl_output` handling",N,N],[4,"Subpixel","smithay_client_toolkit::output","subpixel geometry information",N,N],[13,"Unknown","","unknown geometry",40,N],[13,"None","","no geometry",40,N],[13,"HorizontalRgb","","horizontal RGB",40,N],[13,"HorizontalBgr","","horizontal BGR",40,N],[13,"VerticalRgb","","vertical RGB",40,N],[13,"VerticalBgr","","vertical BGR",40,N],[4,"Transform","","transform from framebuffer to output",N,N],[13,"Normal","","no transform",41,N],[13,"_90","","90 degrees counter-clockwise",41,N],[13,"_180","","180 degrees counter-clockwise",41,N],[13,"_270","","270 degrees counter-clockwise",41,N],[13,"Flipped","","180 degree flip around a vertical axis",41,N],[13,"Flipped90","","flip and rotate 90 degrees counter-clockwise",41,N],[13,"Flipped180","","flip and rotate 180 degrees counter-clockwise",41,N],[13,"Flipped270","","flip and rotate 270 degrees counter-clockwise",41,N],[3,"Mode","","A possible mode for an output",N,N],[12,"dimensions","","Number of pixels of this mode in format `(width, height)`",317,N],[12,"refresh_rate","","Refresh rate for this mode, in mHz",317,N],[12,"is_current","","Whether this is the current mode for this output",317,N],[12,"is_preferred","","Whether this is the preferred mode for this output",317,N],[3,"OutputInfo","","Compiled information about an output",N,N],[12,"model","","The model name of this output as advertized by the server",318,N],[12,"make","","The make name of this output as advertized by the server",318,N],[12,"location","","Location of the top-left corner of this output in compositor space",318,N],[12,"physical_size","","Physical dimensions of this output, in unspecified units",318,N],[12,"subpixel","","The subpixel layout for this output",318,N],[12,"transform","","The current transformation applied to this output",318,N],[12,"scale_factor","","The scaling factor of this output",318,N],[12,"modes","","Possible modes for an output",318,N],[3,"OutputMgr","","An utility tracking the available outputs and their capabilities",N,N],[11,"clone","","",317,[[["self"]],["mode"]]],[11,"fmt","","",317,[[["self"],["formatter"]],["result"]]],[11,"clone","","",318,[[["self"]],["outputinfo"]]],[11,"fmt","","",318,[[["self"],["formatter"]],["result"]]],[11,"clone","","",319,[[["self"]],["outputmgr"]]],[11,"find_id","","Access the information of a specific output from its global id",319,[[["self"],["u32"],["f"]],["option"]]],[11,"with_info","","Access the information of a specific output",319,[[["self"],["proxy"],["f"]],["option"]]],[11,"with_all","","Access all output information",319,[[["self"],["f"]],["t"]]],[0,"pointer","smithay_client_toolkit","Utilities to work with pointers and their icons",N,N],[3,"ThemeManager","smithay_client_toolkit::pointer","Wrapper managing a system theme for pointer images",N,N],[3,"ThemedPointer","","Wrapper of a themed pointer",N,N],[4,"AutoThemer","","Wrapper to gracefully handle a missing `libwayland-cursor`",N,N],[13,"Themed","","The theme could be loaded",320,N],[13,"UnThemed","","`libwayland-cursor.so` is not available",320,N],[4,"AutoPointer","","A pointer wrapper to gracefully handle a missing `libwayland-cursor`",N,N],[13,"Themed","","The `ThemedPointer`",321,N],[13,"UnThemed","","The regular pointer if theme capability is not available",321,N],[11,"init","","Load a system pointer theme",322,[[["option",["str"]],["proxy",["wlcompositor"]],["proxy",["wlshm"]]],["result",["thememanager"]]]],[11,"theme_pointer","","Wrap a pointer to theme it",322,[[["self"],["proxy",["wlpointer"]]],["themedpointer"]]],[11,"theme_pointer_with_impl","","Initialize a new pointer as a ThemedPointer with an adapter implementation",322,[[["self"],["newproxy",["wlpointer"]],["impl"]],["themedpointer"]]],[11,"theme_pointer_with_nonsend_impl","","Initialize a new pointer as a ThemedPointer with an adapter implementation",322,[[["self"],["newproxy",["wlpointer"]],["impl"],["queuetoken"]],["themedpointer"]]],[11,"set_cursor","","Change the cursor to the given cursor name",323,[[["self"],["str"],["option",["u32"]]],["result"]]],[11,"clone","","",323,[[["self"]],["themedpointer"]]],[11,"deref","","",323,[[["self"]],["proxy"]]],[11,"init","","Load a system pointer theme",320,[[["option",["str"]],["proxy",["wlcompositor"]],["proxy",["wlshm"]]],["autothemer"]]],[11,"theme_pointer","","Wrap a pointer to theme it",320,[[["self"],["proxy",["wlpointer"]]],["autopointer"]]],[11,"theme_pointer_with_impl","","Initialize a new pointer as a ThemedPointer with an adapter implementation",320,[[["self"],["newproxy",["wlpointer"]],["impl"]],["autopointer"]]],[11,"theme_pointer_with_nonsend_impl","","Initialize a new pointer as a ThemedPointer with an adapter implementation",320,[[["self"],["newproxy",["wlpointer"]],["impl"],["queuetoken"]],["autopointer"]]],[11,"set_cursor","","Change the cursor to the given cursor name",321,[[["self"],["str"],["option",["u32"]]],["result"]]],[11,"deref","","",321,[[["self"]],["proxy"]]],[11,"clone","","",321,[[["self"]],["autopointer"]]],[0,"utils","smithay_client_toolkit","Various small utilities helping you to write clients",N,N],[3,"DoubleMemPool","smithay_client_toolkit::utils","A Double memory pool, for convenient double-buffering",N,N],[3,"MemPool","","A wrapper handling an SHM memory pool backed by a shared memory file",N,N],[11,"new","","Create a double memory pool",324,[[["proxy"],["impl"]],["result",["doublemempool"]]]],[11,"pool","","This method checks both its internal memory pools and returns one if that pool does not contain any buffers that are still in use by the server. If both the memory pools contain buffers that are currently in use by the server None will be returned.",324,[[["self"]],["option",["mempool"]]]],[11,"new","","Create a new memory pool associated with given shm",325,[[["proxy"],["impl"]],["result",["mempool"]]]],[11,"resize","","Resize the memory pool",325,[[["self"],["usize"]],["result"]]],[11,"buffer","","Create a new buffer to this pool",325,[[["self"],["i32"],["i32"],["i32"],["i32"],["format"]],["proxy",["wlbuffer"]]]],[11,"is_used","","Retuns true if the pool contains buffers that are currently in use by the server otherwise it returns false",325,[[["self"]],["bool"]]],[11,"drop","","",325,[[["self"]]]],[11,"write","","",325,N],[11,"flush","","",325,[[["self"]],["result"]]],[11,"seek","","",325,[[["self"],["seekfrom"]],["result",["u64"]]]],[0,"window","smithay_client_toolkit","",N,N],[4,"State","smithay_client_toolkit::window","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",284,N],[13,"Fullscreen","","the surface is fullscreen",284,N],[13,"Resizing","","the surface is being resized",284,N],[13,"Activated","","the surface is now activated",284,N],[13,"TiledLeft","","the surface is tiled",284,N],[13,"TiledRight","","the surface is tiled",284,N],[13,"TiledTop","","the surface is tiled",284,N],[13,"TiledBottom","","the surface is tiled",284,N],[3,"BasicFrame","","A minimalistic set of decorations",N,N],[3,"Window","","A window",N,N],[4,"Event","","Possible events generated by a window that you need to handle",N,N],[13,"Configure","","The state of your window has been changed",326,N],[12,"new_size","smithay_client_toolkit::window::Event","Optionnal new size for your inner surface",326,N],[12,"states","","New combination of states of your window",326,N],[13,"Close","smithay_client_toolkit::window","A close request has been received",326,N],[13,"Refresh","","The decorations need to be refreshed",326,N],[4,"FrameRequest","","Request generated by a Frame",N,N],[13,"Minimize","","The window should be minimized",327,N],[13,"Maximize","","The window should be maximized",327,N],[13,"UnMaximize","","The window should be unmaximized",327,N],[13,"Close","","The window should be closed",327,N],[13,"Move","","An interactive move should be started",327,N],[13,"Resize","","An interactive resize should be started",327,N],[13,"Refresh","","The frame requests to be refreshed",327,N],[11,"init","","",328,[[["proxy"],["proxy"],["proxy"],["proxy"],["box",["implementation"]]],["result",["basicframe","error"]]]],[11,"new_seat","","",328,[[["self"],["proxy"]]]],[11,"set_active","","",328,[[["self"],["bool"]],["bool"]]],[11,"set_hidden","","",328,[[["self"],["bool"]]]],[11,"set_maximized","","",328,[[["self"],["bool"]],["bool"]]],[11,"set_resizable","","",328,[[["self"],["bool"]]]],[11,"resize","","",328,N],[11,"redraw","","",328,[[["self"]]]],[11,"subtract_borders","","",328,N],[11,"add_borders","","",328,N],[11,"location","","",328,N],[11,"drop","","",328,[[["self"]]]],[8,"Frame","","Interface for defining the drawing of decorations",N,N],[16,"Error","","Type of errors that may occur when attempting to create a frame",329,N],[10,"init","","Initialize the Frame",329,[[["proxy"],["proxy"],["proxy"],["proxy"],["box",["implementation"]]],["result"]]],[10,"set_active","","Set whether the decorations should be drawn as active or not",329,[[["self"],["bool"]],["bool"]]],[10,"set_maximized","","Set whether the decorations should be drawn as maximized or not",329,[[["self"],["bool"]],["bool"]]],[10,"set_hidden","","Hide or show the decorations",329,[[["self"],["bool"]]]],[10,"set_resizable","","Set whether interactive resize hints should be displayed and reacted to",329,[[["self"],["bool"]]]],[10,"new_seat","","Notify that a new wl_seat should be handled",329,[[["self"],["proxy"]]]],[10,"resize","","Change the size of the decorations",329,N],[10,"redraw","","Redraw the decorations",329,[[["self"]]]],[10,"subtract_borders","","Subtracts the border dimensions from the given dimensions.",329,N],[10,"add_borders","","Adds the border dimensions to the given dimensions.",329,N],[11,"location","","Returns the coordinates of the top-left corner of the borders relative to the content",329,N],[11,"clone","","",326,[[["self"]],["event"]]],[11,"fmt","","",326,[[["self"],["formatter"]],["result"]]],[11,"init_from_env","","Create a new window wrapping a given wayland surface as its main content and following the compositor's preference regarding server-side decorations.",330,N],[11,"init","","Create a new window wrapping a given wayland surface as its main content",330,N],[11,"init_with_decorations","","Create a new window wrapping a given wayland surface as its main content and following the compositor's preference regarding server-side decorations",330,N],[11,"new_seat","","Notify this window that a new seat is accessible",330,[[["self"],["proxy"]]]],[11,"surface","","Access the surface wrapped in this Window",330,[[["self"]],["proxy"]]],[11,"refresh","","Refreshes the frame",330,[[["self"]]]],[11,"set_title","","Set a short title for the window.",330,[[["self"],["string"]]]],[11,"set_app_id","","Set an app id for the surface.",330,[[["self"],["string"]]]],[11,"set_decorate","","Set whether the window should be decorated or not",330,[[["self"],["bool"]]]],[11,"set_resizable","","Set whether the window should be resizeable by the user",330,[[["self"],["bool"]]]],[11,"resize","","Resize the decorations",330,[[["self"],["u32"],["u32"]]]],[11,"set_maximized","","Request the window to be maximized",330,[[["self"]]]],[11,"unset_maximized","","Request the window to be un-maximized",330,[[["self"]]]],[11,"set_minimized","","Request the window to be minimized",330,[[["self"]]]],[11,"set_fullscreen","","Request the window to be set fullscreen",330,[[["self"],["option",["proxy"]]]]],[11,"unset_fullscreen","","Request the window to quit fullscreen mode",330,[[["self"]]]],[11,"set_min_size","","Sets the minimum possible size for this window",330,[[["self"],["option"]]]],[11,"set_max_size","","Sets the maximum possible size for this window",330,[[["self"],["option"]]]],[11,"drop","","",330,[[["self"]]]],[11,"needs_configure","smithay_client_toolkit","Check whether you need to wait for a configure before drawing to your surfaces",1,[[["self"]],["bool"]]],[11,"from_registry","","Create an environment wrapping a new registry",0,[[["newproxy",["wlregistry"]],["eventqueue"]],["result",["environment"]]]],[11,"from_registry_with_cb","","Create an environment wrapping a new registry",0,[[["newproxy",["wlregistry"]],["eventqueue"],["impl"]],["result",["environment"]]]],[11,"shm_formats","","Retrive the accepted SHM formats of the server",0,[[["self"]],["vec",["format"]]]],[11,"get_cursor","smithay_client_toolkit::reexports::client::cursor","Retrieve a cursor from the theme.",331,[[["self"],["str"]],["option",["cursor"]]]],[11,"bitand","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","Returns the intersection between the two sets of flags.",332,[[["self"],["resize"]],["resize"]]],[11,"bitand","smithay_client_toolkit::reexports::client::protocol::wl_output","Returns the intersection between the two sets of flags.",333,[[["self"],["mode"]],["mode"]]],[11,"bitand","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","Returns the intersection between the two sets of flags.",334,[[["self"],["transient"]],["transient"]]],[11,"bitand","smithay_client_toolkit::data_device","Returns the intersection between the two sets of flags.",335,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitand","smithay_client_toolkit::reexports::client::protocol::wl_seat","Returns the intersection between the two sets of flags.",336,[[["self"],["capability"]],["capability"]]],[11,"release","smithay_client_toolkit::reexports::client","",337,N],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_seat","",336,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_output","",333,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",334,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::data_device","",335,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",332,[[["self"],["formatter"]],["result",["error"]]]],[11,"destroy","smithay_client_toolkit::reexports::client","",337,N],[11,"attach","","",337,N],[11,"damage","","",337,N],[11,"frame","","",337,[[["self"]],["result",["newproxy"]]]],[11,"set_opaque_region","","",337,N],[11,"set_input_region","","",337,N],[11,"commit","","",337,N],[11,"set_buffer_transform","","",337,N],[11,"set_buffer_scale","","",337,N],[11,"damage_buffer","","",337,N],[11,"create_data_source","","",337,[[["self"]],["result",["newproxy"]]]],[11,"get_data_device","","",337,[[["self"],["proxy"]],["result",["newproxy"]]]],[11,"bind","","",337,[[["self"],["u32"],["u32"]],["result",["newproxy"]]]],[11,"get_shell_surface","","",337,[[["self"],["proxy"]],["result",["newproxy"]]]],[11,"destroy","","",337,N],[11,"get_subsurface","","",337,[[["self"],["proxy"],["proxy"]],["result",["newproxy"]]]],[11,"drop","","",338,N],[11,"drop","smithay_client_toolkit::reexports::client::egl","",339,N],[11,"drop","smithay_client_toolkit::reexports::client::cursor","",331,N],[11,"drop","smithay_client_toolkit::reexports::client","",337,N],[11,"start_drag","","",337,N],[11,"set_selection","","",337,N],[11,"release","","",337,N],[11,"bitor","smithay_client_toolkit::reexports::client::protocol::wl_output","Returns the union of the two sets of flags.",333,[[["self"],["mode"]],["mode"]]],[11,"bitor","smithay_client_toolkit::data_device","Returns the union of the two sets of flags.",335,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitor","smithay_client_toolkit::reexports::client::protocol::wl_seat","Returns the union of the two sets of flags.",336,[[["self"],["capability"]],["capability"]]],[11,"bitor","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","Returns the union of the two sets of flags.",332,[[["self"],["resize"]],["resize"]]],[11,"bitor","","Returns the union of the two sets of flags.",334,[[["self"],["transient"]],["transient"]]],[11,"c_interface","smithay_client_toolkit::reexports::client::protocol::wl_region","",340,N],[11,"c_interface","smithay_client_toolkit::reexports::client::protocol::wl_data_device_manager","",341,N],[11,"c_interface","smithay_client_toolkit::reexports::client::protocol::wl_data_source","",342,N],[11,"c_interface","smithay_client_toolkit::reexports::client::protocol::wl_data_offer","",343,N],[11,"c_interface","smithay_client_toolkit::reexports::client::protocol::wl_display","",344,N],[11,"c_interface","smithay_client_toolkit::reexports::client::protocol::wl_surface","",345,N],[11,"c_interface","smithay_client_toolkit::reexports::client::protocol::wl_shm","",346,N],[11,"c_interface","smithay_client_toolkit::reexports::client::protocol::wl_buffer","",347,N],[11,"c_interface","smithay_client_toolkit::reexports::client::protocol::wl_subsurface","",348,N],[11,"c_interface","smithay_client_toolkit::reexports::client::protocol::wl_registry","",349,N],[11,"c_interface","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",350,N],[11,"c_interface","smithay_client_toolkit::reexports::client::protocol::wl_callback","",351,N],[11,"c_interface","smithay_client_toolkit::reexports::client::protocol::wl_shm_pool","",352,N],[11,"c_interface","smithay_client_toolkit::reexports::client::protocol::wl_data_device","",353,N],[11,"c_interface","smithay_client_toolkit::reexports::client::protocol::wl_subcompositor","",354,N],[11,"c_interface","smithay_client_toolkit::reexports::client::protocol::wl_keyboard","",355,N],[11,"c_interface","smithay_client_toolkit::reexports::client::protocol::wl_output","",356,N],[11,"c_interface","smithay_client_toolkit::reexports::client::protocol::wl_touch","",357,N],[11,"c_interface","smithay_client_toolkit::reexports::client::protocol::wl_seat","",358,N],[11,"c_interface","smithay_client_toolkit::reexports::client::protocol::wl_pointer","",359,N],[11,"c_interface","smithay_client_toolkit::reexports::client::protocol::wl_compositor","",360,N],[11,"c_interface","smithay_client_toolkit::reexports::client::protocol::wl_shell","",361,N],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",334,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::data_device","",335,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",332,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_output","",333,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_seat","",336,[[["self"],["formatter"]],["result",["error"]]]],[11,"send","smithay_client_toolkit::reexports::client","Send a request through this object",337,N],[11,"is_alive","","Check if the object associated with this proxy is still alive",337,[[["self"]],["bool"]]],[11,"version","","Retrieve the interface version of this wayland object instance",337,[[["self"]],["u32"]]],[11,"set_user_data","","Associate an arbitrary payload to this object",337,N],[11,"get_user_data","","Retrieve the arbitrary payload associated to this object",337,N],[11,"is_external","","Check whether this proxy is managed by the library or not",337,[[["self"]],["bool"]]],[11,"equals","","Check if the other proxy refers to the same underlying wayland object",337,[[["self"],["proxy"]],["bool"]]],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",337,N],[11,"from_c_ptr","","Create a `Proxy` instance from a C pointer",337,N],[11,"make_wrapper","","Create a wrapper for this object for queue management",337,[[["self"],["queuetoken"]],["result",["proxy"]]]],[11,"child","","Create a new child object",337,[[["self"]],["newproxy"]]],[11,"is_implemented_with","","Check whether this proxy has been implemented with given type",337,[[["self"]],["bool"]]],[11,"deref","smithay_client_toolkit::reexports::client::cursor","",362,[[["self"]],["proxy"]]],[11,"deref","smithay_client_toolkit::reexports::client","",363,[[["self"]],["proxy"]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_seat","",336,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",332,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",334,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::data_device","",335,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_output","",333,[[["self"],["formatter"]],["result",["error"]]]],[11,"accept","smithay_client_toolkit::reexports::client","",337,N],[11,"receive","","",337,N],[11,"destroy","","",337,N],[11,"finish","","",337,N],[11,"set_actions","","",337,N],[11,"destroy","","",337,N],[11,"set_position","","",337,N],[11,"place_above","","",337,N],[11,"place_below","","",337,N],[11,"set_sync","","",337,N],[11,"set_desync","","",337,N],[11,"create_pool","","",337,[[["self"],["i32"],["i32"]],["result",["newproxy"]]]],[11,"extend","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",332,N],[11,"extend","smithay_client_toolkit::reexports::client::protocol::wl_output","",333,N],[11,"extend","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",334,N],[11,"extend","smithay_client_toolkit::data_device","",335,N],[11,"extend","smithay_client_toolkit::reexports::client::protocol::wl_seat","",336,N],[11,"bitxor_assign","","Toggles the set of flags.",336,N],[11,"bitxor_assign","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","Toggles the set of flags.",332,N],[11,"bitxor_assign","","Toggles the set of flags.",334,N],[11,"bitxor_assign","smithay_client_toolkit::reexports::client::protocol::wl_output","Toggles the set of flags.",333,N],[11,"bitxor_assign","smithay_client_toolkit::data_device","Toggles the set of flags.",335,N],[11,"bitor_assign","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","Adds the set of flags.",332,N],[11,"bitor_assign","smithay_client_toolkit::reexports::client::protocol::wl_output","Adds the set of flags.",333,N],[11,"bitor_assign","smithay_client_toolkit::data_device","Adds the set of flags.",335,N],[11,"bitor_assign","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","Adds the set of flags.",334,N],[11,"bitor_assign","smithay_client_toolkit::reexports::client::protocol::wl_seat","Adds the set of flags.",336,N],[11,"destroy","smithay_client_toolkit::reexports::client","",337,N],[11,"add","","",337,N],[11,"subtract","","",337,N],[11,"create_surface","","",337,[[["self"]],["result",["newproxy"]]]],[11,"create_region","","",337,[[["self"]],["result",["newproxy"]]]],[11,"get_pointer","","",337,[[["self"]],["result",["newproxy"]]]],[11,"get_keyboard","","",337,[[["self"]],["result",["newproxy"]]]],[11,"get_touch","","",337,[[["self"]],["result",["newproxy"]]]],[11,"release","","",337,N],[11,"clone","smithay_client_toolkit::output","",41,[[["self"]],["transform"]]],[11,"clone","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",332,[[["self"]],["resize"]]],[11,"clone","smithay_client_toolkit::reexports::client::protocol::wl_output","",333,[[["self"]],["mode"]]],[11,"clone","smithay_client_toolkit::reexports::client::protocol::wl_pointer","",80,[[["self"]],["error"]]],[11,"clone","smithay_client_toolkit::reexports::client::protocol::wl_seat","",336,[[["self"]],["capability"]]],[11,"clone","smithay_client_toolkit::reexports::client::protocol::wl_shm","",61,[[["self"]],["format"]]],[11,"clone","smithay_client_toolkit::reexports::client::protocol::wl_data_offer","",76,[[["self"]],["error"]]],[11,"clone","smithay_client_toolkit::reexports::client::protocol::wl_data_source","",14,[[["self"]],["error"]]],[11,"clone","smithay_client_toolkit::reexports::client::protocol::wl_data_device","",72,[[["self"]],["error"]]],[11,"clone","smithay_client_toolkit::keyboard","",19,[[["self"]],["keystate"]]],[11,"clone","smithay_client_toolkit::reexports::client::protocol::wl_shm","",60,[[["self"]],["error"]]],[11,"clone","smithay_client_toolkit::data_device","",335,[[["self"]],["dndaction"]]],[11,"clone","smithay_client_toolkit::reexports::client::protocol::wl_keyboard","",18,[[["self"]],["keymapformat"]]],[11,"clone","smithay_client_toolkit::reexports::client::protocol::wl_shell","",45,[[["self"]],["error"]]],[11,"clone","smithay_client_toolkit::reexports::client::protocol::wl_pointer","",83,[[["self"]],["axissource"]]],[11,"clone","smithay_client_toolkit::reexports::client::protocol::wl_display","",50,[[["self"]],["error"]]],[11,"clone","smithay_client_toolkit::output","",40,[[["self"]],["subpixel"]]],[11,"clone","smithay_client_toolkit::reexports::client::protocol::wl_pointer","",81,[[["self"]],["buttonstate"]]],[11,"clone","smithay_client_toolkit::reexports::client","",337,[[["self"]],["proxy"]]],[11,"clone","smithay_client_toolkit::reexports::client::protocol::wl_surface","",65,[[["self"]],["error"]]],[11,"clone","smithay_client_toolkit::reexports::client::protocol::wl_subsurface","",34,[[["self"]],["error"]]],[11,"clone","smithay_client_toolkit::reexports::client::protocol::wl_subcompositor","",54,[[["self"]],["error"]]],[11,"clone","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",334,[[["self"]],["transient"]]],[11,"clone","","",27,[[["self"]],["fullscreenmethod"]]],[11,"clone","smithay_client_toolkit::reexports::client::protocol::wl_pointer","",82,[[["self"]],["axis"]]],[11,"clone","smithay_client_toolkit::reexports::client","",364,[[["self"]],["globalmanager"]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_pointer","",81,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::keyboard","",19,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_subsurface","",34,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_shm","",60,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_data_offer","",76,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",27,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::data_device","",335,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_subcompositor","",54,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::output","",40,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_display","",50,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_pointer","",80,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_data_source","",14,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client","",88,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_surface","",65,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_shell","",45,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client","",87,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::output","",41,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_output","",333,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_data_device","",72,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_pointer","",82,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",332,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",334,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_shm","",61,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_keyboard","",18,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_seat","",336,[[["self"],["formatter"]],["result",["error"]]]],[11,"offer","smithay_client_toolkit::reexports::client","",337,N],[11,"destroy","","",337,N],[11,"set_actions","","",337,N],[11,"release","","",337,N],[11,"sub","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","Returns the set difference of the two sets of flags.",332,[[["self"],["resize"]],["resize"]]],[11,"sub","smithay_client_toolkit::data_device","Returns the set difference of the two sets of flags.",335,[[["self"],["dndaction"]],["dndaction"]]],[11,"sub","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","Returns the set difference of the two sets of flags.",334,[[["self"],["transient"]],["transient"]]],[11,"sub","smithay_client_toolkit::reexports::client::protocol::wl_output","Returns the set difference of the two sets of flags.",333,[[["self"],["mode"]],["mode"]]],[11,"sub","smithay_client_toolkit::reexports::client::protocol::wl_seat","Returns the set difference of the two sets of flags.",336,[[["self"],["capability"]],["capability"]]],[11,"cmp","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",334,[[["self"],["transient"]],["ordering"]]],[11,"cmp","smithay_client_toolkit::data_device","",335,[[["self"],["dndaction"]],["ordering"]]],[11,"cmp","smithay_client_toolkit::reexports::client::protocol::wl_seat","",336,[[["self"],["capability"]],["ordering"]]],[11,"cmp","smithay_client_toolkit::reexports::client::protocol::wl_output","",333,[[["self"],["mode"]],["ordering"]]],[11,"cmp","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",332,[[["self"],["resize"]],["ordering"]]],[11,"from_iter","","",334,[[["t"]],["transient"]]],[11,"from_iter","smithay_client_toolkit::reexports::client::protocol::wl_seat","",336,[[["t"]],["capability"]]],[11,"from_iter","smithay_client_toolkit::data_device","",335,[[["t"]],["dndaction"]]],[11,"from_iter","smithay_client_toolkit::reexports::client::protocol::wl_output","",333,[[["t"]],["mode"]]],[11,"from_iter","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",332,[[["t"]],["resize"]]],[11,"create_buffer","smithay_client_toolkit::reexports::client","",337,[[["self"],["i32"],["i32"],["i32"],["i32"],["format"]],["result",["newproxy"]]]],[11,"destroy","","",337,N],[11,"resize","","",337,N],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_compositor","",12,[[["self"]],["bool"]]],[11,"from_raw_c","","",12,N],[11,"as_raw_c_in","","",12,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_subsurface","",35,[[["self"]],["bool"]]],[11,"from_raw_c","","",35,N],[11,"as_raw_c_in","","",35,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_shell","",365,[[["self"]],["bool"]]],[11,"from_raw_c","","",365,N],[11,"as_raw_c_in","","",365,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_keyboard","",21,[[["self"]],["bool"]]],[11,"from_raw_c","","",21,N],[11,"as_raw_c_in","","",21,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_callback","",11,[[["self"]],["bool"]]],[11,"from_raw_c","","",11,N],[11,"as_raw_c_in","","",11,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_subsurface","",366,[[["self"]],["bool"]]],[11,"from_raw_c","","",366,N],[11,"as_raw_c_in","","",366,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_data_device_manager","",25,[[["self"]],["bool"]]],[11,"from_raw_c","","",25,N],[11,"as_raw_c_in","","",25,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",367,[[["self"]],["bool"]]],[11,"from_raw_c","","",367,N],[11,"as_raw_c_in","","",367,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_subcompositor","",55,[[["self"]],["bool"]]],[11,"from_raw_c","","",55,N],[11,"as_raw_c_in","","",55,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_shell","",46,[[["self"]],["bool"]]],[11,"from_raw_c","","",46,N],[11,"as_raw_c_in","","",46,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_touch","",31,[[["self"]],["bool"]]],[11,"from_raw_c","","",31,N],[11,"as_raw_c_in","","",31,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_pointer","",85,[[["self"]],["bool"]]],[11,"from_raw_c","","",85,N],[11,"as_raw_c_in","","",85,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_keyboard","",20,[[["self"]],["bool"]]],[11,"from_raw_c","","",20,N],[11,"as_raw_c_in","","",20,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_seat","",69,[[["self"]],["bool"]]],[11,"from_raw_c","","",69,N],[11,"as_raw_c_in","","",69,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",28,[[["self"]],["bool"]]],[11,"from_raw_c","","",28,N],[11,"as_raw_c_in","","",28,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_shm_pool","",368,[[["self"]],["bool"]]],[11,"from_raw_c","","",368,N],[11,"as_raw_c_in","","",368,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_data_source","",16,[[["self"]],["bool"]]],[11,"from_raw_c","","",16,N],[11,"as_raw_c_in","","",16,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_region","",23,[[["self"]],["bool"]]],[11,"from_raw_c","","",23,N],[11,"as_raw_c_in","","",23,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_surface","",67,[[["self"]],["bool"]]],[11,"from_raw_c","","",67,N],[11,"as_raw_c_in","","",67,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_subcompositor","",369,[[["self"]],["bool"]]],[11,"from_raw_c","","",369,N],[11,"as_raw_c_in","","",369,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_registry","",57,[[["self"]],["bool"]]],[11,"from_raw_c","","",57,N],[11,"as_raw_c_in","","",57,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",29,[[["self"]],["bool"]]],[11,"from_raw_c","","",29,N],[11,"as_raw_c_in","","",29,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_registry","",58,[[["self"]],["bool"]]],[11,"from_raw_c","","",58,N],[11,"as_raw_c_in","","",58,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_compositor","",370,[[["self"]],["bool"]]],[11,"from_raw_c","","",370,N],[11,"as_raw_c_in","","",370,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_touch","",32,[[["self"]],["bool"]]],[11,"from_raw_c","","",32,N],[11,"as_raw_c_in","","",32,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_shm","",63,[[["self"]],["bool"]]],[11,"from_raw_c","","",63,N],[11,"as_raw_c_in","","",63,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_surface","",66,[[["self"]],["bool"]]],[11,"from_raw_c","","",66,N],[11,"as_raw_c_in","","",66,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_shm_pool","",48,[[["self"]],["bool"]]],[11,"from_raw_c","","",48,N],[11,"as_raw_c_in","","",48,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_output","",43,[[["self"]],["bool"]]],[11,"from_raw_c","","",43,N],[11,"as_raw_c_in","","",43,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_buffer","",37,[[["self"]],["bool"]]],[11,"from_raw_c","","",37,N],[11,"as_raw_c_in","","",37,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_display","",51,[[["self"]],["bool"]]],[11,"from_raw_c","","",51,N],[11,"as_raw_c_in","","",51,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_region","",371,[[["self"]],["bool"]]],[11,"from_raw_c","","",371,N],[11,"as_raw_c_in","","",371,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_shm","",62,[[["self"]],["bool"]]],[11,"from_raw_c","","",62,N],[11,"as_raw_c_in","","",62,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_pointer","",84,[[["self"]],["bool"]]],[11,"from_raw_c","","",84,N],[11,"as_raw_c_in","","",84,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_callback","",372,[[["self"]],["bool"]]],[11,"from_raw_c","","",372,N],[11,"as_raw_c_in","","",372,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_buffer","",38,[[["self"]],["bool"]]],[11,"from_raw_c","","",38,N],[11,"as_raw_c_in","","",38,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_data_source","",15,[[["self"]],["bool"]]],[11,"from_raw_c","","",15,N],[11,"as_raw_c_in","","",15,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_data_device","",73,[[["self"]],["bool"]]],[11,"from_raw_c","","",73,N],[11,"as_raw_c_in","","",73,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_data_offer","",77,[[["self"]],["bool"]]],[11,"from_raw_c","","",77,N],[11,"as_raw_c_in","","",77,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",78,[[["self"]],["bool"]]],[11,"from_raw_c","","",78,N],[11,"as_raw_c_in","","",78,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_output","",42,[[["self"]],["bool"]]],[11,"from_raw_c","","",42,N],[11,"as_raw_c_in","","",42,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_data_device","",74,[[["self"]],["bool"]]],[11,"from_raw_c","","",74,N],[11,"as_raw_c_in","","",74,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_display","",52,[[["self"]],["bool"]]],[11,"from_raw_c","","",52,N],[11,"as_raw_c_in","","",52,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::protocol::wl_seat","",70,[[["self"]],["bool"]]],[11,"from_raw_c","","",70,N],[11,"as_raw_c_in","","",70,[[["self"],["f"]],["t"]]],[11,"pong","smithay_client_toolkit::reexports::client","",337,N],[11,"_move","","",337,N],[11,"resize","","",337,N],[11,"set_toplevel","","",337,N],[11,"set_transient","","",337,N],[11,"set_fullscreen","","",337,N],[11,"set_popup","","",337,N],[11,"set_maximized","","",337,N],[11,"set_title","","",337,N],[11,"set_class","","",337,N],[11,"sub_assign","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","Disables all flags enabled in the set.",334,N],[11,"sub_assign","","Disables all flags enabled in the set.",332,N],[11,"sub_assign","smithay_client_toolkit::data_device","Disables all flags enabled in the set.",335,N],[11,"sub_assign","smithay_client_toolkit::reexports::client::protocol::wl_output","Disables all flags enabled in the set.",333,N],[11,"sub_assign","smithay_client_toolkit::reexports::client::protocol::wl_seat","Disables all flags enabled in the set.",336,N],[11,"partial_cmp","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",332,[[["self"],["resize"]],["option",["ordering"]]]],[11,"lt","","",332,[[["self"],["resize"]],["bool"]]],[11,"le","","",332,[[["self"],["resize"]],["bool"]]],[11,"gt","","",332,[[["self"],["resize"]],["bool"]]],[11,"ge","","",332,[[["self"],["resize"]],["bool"]]],[11,"partial_cmp","","",334,[[["self"],["transient"]],["option",["ordering"]]]],[11,"lt","","",334,[[["self"],["transient"]],["bool"]]],[11,"le","","",334,[[["self"],["transient"]],["bool"]]],[11,"gt","","",334,[[["self"],["transient"]],["bool"]]],[11,"ge","","",334,[[["self"],["transient"]],["bool"]]],[11,"partial_cmp","smithay_client_toolkit::data_device","",335,[[["self"],["dndaction"]],["option",["ordering"]]]],[11,"lt","","",335,[[["self"],["dndaction"]],["bool"]]],[11,"le","","",335,[[["self"],["dndaction"]],["bool"]]],[11,"gt","","",335,[[["self"],["dndaction"]],["bool"]]],[11,"ge","","",335,[[["self"],["dndaction"]],["bool"]]],[11,"partial_cmp","smithay_client_toolkit::reexports::client::protocol::wl_seat","",336,[[["self"],["capability"]],["option",["ordering"]]]],[11,"lt","","",336,[[["self"],["capability"]],["bool"]]],[11,"le","","",336,[[["self"],["capability"]],["bool"]]],[11,"gt","","",336,[[["self"],["capability"]],["bool"]]],[11,"ge","","",336,[[["self"],["capability"]],["bool"]]],[11,"partial_cmp","smithay_client_toolkit::reexports::client::protocol::wl_output","",333,[[["self"],["mode"]],["option",["ordering"]]]],[11,"lt","","",333,[[["self"],["mode"]],["bool"]]],[11,"le","","",333,[[["self"],["mode"]],["bool"]]],[11,"gt","","",333,[[["self"],["mode"]],["bool"]]],[11,"ge","","",333,[[["self"],["mode"]],["bool"]]],[11,"bitand_assign","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","Disables all flags disabled in the set.",334,N],[11,"bitand_assign","smithay_client_toolkit::reexports::client::protocol::wl_seat","Disables all flags disabled in the set.",336,N],[11,"bitand_assign","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","Disables all flags disabled in the set.",332,N],[11,"bitand_assign","smithay_client_toolkit::data_device","Disables all flags disabled in the set.",335,N],[11,"bitand_assign","smithay_client_toolkit::reexports::client::protocol::wl_output","Disables all flags disabled in the set.",333,N],[11,"fmt","smithay_client_toolkit::data_device","",335,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",332,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",334,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_output","",333,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::client::protocol::wl_seat","",336,[[["self"],["formatter"]],["result",["error"]]]],[11,"hash","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",334,N],[11,"hash","smithay_client_toolkit::reexports::client::protocol::wl_output","",333,N],[11,"hash","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",332,N],[11,"hash","smithay_client_toolkit::reexports::client::protocol::wl_seat","",336,N],[11,"hash","smithay_client_toolkit::data_device","",335,N],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",335,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitxor","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","Returns the left flags, but with all the right flags toggled.",332,[[["self"],["resize"]],["resize"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",334,[[["self"],["transient"]],["transient"]]],[11,"bitxor","smithay_client_toolkit::reexports::client::protocol::wl_seat","Returns the left flags, but with all the right flags toggled.",336,[[["self"],["capability"]],["capability"]]],[11,"bitxor","smithay_client_toolkit::reexports::client::protocol::wl_output","Returns the left flags, but with all the right flags toggled.",333,[[["self"],["mode"]],["mode"]]],[11,"set_cursor","smithay_client_toolkit::reexports::client","",337,N],[11,"release","","",337,N],[11,"destroy","","",337,N],[11,"not","smithay_client_toolkit::reexports::client::protocol::wl_seat","Returns the complement of this set of flags.",336,[[["self"]],["capability"]]],[11,"not","smithay_client_toolkit::data_device","Returns the complement of this set of flags.",335,[[["self"]],["dndaction"]]],[11,"not","smithay_client_toolkit::reexports::client::protocol::wl_output","Returns the complement of this set of flags.",333,[[["self"]],["mode"]]],[11,"not","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","Returns the complement of this set of flags.",334,[[["self"]],["transient"]]],[11,"not","","Returns the complement of this set of flags.",332,[[["self"]],["resize"]]],[11,"release","smithay_client_toolkit::reexports::client","",337,N],[11,"eq","smithay_client_toolkit::reexports::client::protocol::wl_data_offer","",76,[[["self"],["error"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::client::protocol::wl_shm","",61,[[["self"],["format"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::client::protocol::wl_shell","",45,[[["self"],["error"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::client::protocol::wl_output","",333,[[["self"],["mode"]],["bool"]]],[11,"ne","","",333,[[["self"],["mode"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",334,[[["self"],["transient"]],["bool"]]],[11,"ne","","",334,[[["self"],["transient"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::client::protocol::wl_keyboard","",18,[[["self"],["keymapformat"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::client","",337,[[["self"],["proxy"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::client::protocol::wl_display","",50,[[["self"],["error"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::client::protocol::wl_subsurface","",34,[[["self"],["error"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::client::protocol::wl_data_source","",14,[[["self"],["error"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::client::protocol::wl_data_device","",72,[[["self"],["error"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::client::protocol::wl_shm","",60,[[["self"],["error"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::client::protocol::wl_seat","",336,[[["self"],["capability"]],["bool"]]],[11,"ne","","",336,[[["self"],["capability"]],["bool"]]],[11,"eq","smithay_client_toolkit::keyboard","",19,[[["self"],["keystate"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::client::protocol::wl_pointer","",80,[[["self"],["error"]],["bool"]]],[11,"eq","","",83,[[["self"],["axissource"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::client::protocol::wl_surface","",65,[[["self"],["error"]],["bool"]]],[11,"eq","smithay_client_toolkit::data_device","",335,[[["self"],["dndaction"]],["bool"]]],[11,"ne","","",335,[[["self"],["dndaction"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::client::protocol::wl_subcompositor","",54,[[["self"],["error"]],["bool"]]],[11,"eq","smithay_client_toolkit::output","",41,[[["self"],["transform"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",27,[[["self"],["fullscreenmethod"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::client::protocol::wl_pointer","",82,[[["self"],["axis"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",332,[[["self"],["resize"]],["bool"]]],[11,"ne","","",332,[[["self"],["resize"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::client::protocol::wl_pointer","",81,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","smithay_client_toolkit::output","",40,[[["self"],["subpixel"]],["bool"]]],[11,"sync","smithay_client_toolkit::reexports::client","",337,[[["self"]],["result",["newproxy"]]]],[11,"get_registry","","",337,[[["self"]],["result",["newproxy"]]]],[11,"is_destructor","smithay_client_toolkit::reexports::client::commons","",373,[[["self"]],["bool"]]],[11,"from_raw_c","","",373,N],[11,"as_raw_c_in","","",373,[[["self"],["f"]],["t"]]],[11,"c_interface","","",374,N],[11,"deref","smithay_client_toolkit::reexports::client::sys::client","",375,[[["self"]],["waylandclient"]]],[11,"deref","","",376,[[["self"]],["option"]]],[11,"initialize","","",376,N],[11,"initialize","","",375,N],[11,"destroy","smithay_client_toolkit::reexports::client","",337,N],[11,"grab","","",337,N],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_shell","",234,[[["self"],["error"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",246,[[["self"],["error"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",167,[[["self"],["type"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",90,[[["self"],["capability"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",154,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",170,[[["self"],["error"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",125,[[["self"],["lifetime"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",258,[[["self"],["state"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","",193,[[["self"],["contentpurpose"]],["bool"]]],[11,"eq","","",192,[[["self"],["contenthint"]],["bool"]]],[11,"eq","smithay_client_toolkit::window","",284,[[["self"],["state"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",169,[[["self"],["buttonstate"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",377,[[["self"],["anchor"]],["bool"]]],[11,"ne","","",377,[[["self"],["anchor"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",91,[[["self"],["presentmethod"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",120,[[["self"],["flags"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",253,[[["self"],["error"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",155,[[["self"],["error"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",250,[[["self"],["error"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",257,[[["self"],["resizeedge"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","",194,[[["self"],["preeditstyle"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",204,[[["self"],["mode"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface","",238,[[["self"],["resizeedge"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_shell","",233,[[["self"],["version"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",124,[[["self"],["error"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface","",239,[[["self"],["state"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",203,[[["self"],["error"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","",195,[[["self"],["textdirection"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",168,[[["self"],["capability"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",107,[[["self"],["position"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",378,[[["self"],["gravity"]],["bool"]]],[11,"ne","","",378,[[["self"],["gravity"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",119,[[["self"],["error"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",152,[[["self"],["type"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",110,[[["self"],["error"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",379,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ne","","",379,[[["self"],["constraintadjustment"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",262,[[["self"],["error"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",153,[[["self"],["capability"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",181,[[["self"],["source"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",92,[[["self"],["error"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",177,[[["self"],["source"]],["bool"]]],[11,"eq","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",188,[[["self"],["buttonstate"]],["bool"]]],[11,"destroy","smithay_client_toolkit::reexports::client","",337,N],[11,"export_toplevel","","",337,[[["self"],["proxy"]],["result",["newproxy"]]]],[11,"set_toplevel","","",337,N],[11,"set_overlay_panel","","",337,N],[11,"bitand","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Returns the intersection between the two sets of flags.",377,[[["self"],["anchor"]],["anchor"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",379,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",378,[[["self"],["gravity"]],["gravity"]]],[11,"destroy","smithay_client_toolkit::reexports::client","",337,N],[11,"set_parent_of","","",337,N],[11,"destroy","","",337,N],[11,"create_positioner","","",337,[[["self"]],["result",["newproxy"]]]],[11,"get_xdg_surface","","",337,[[["self"],["proxy"]],["result",["newproxy"]]]],[11,"pong","","",337,N],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",379,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",378,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",377,[[["self"],["formatter"]],["result",["error"]]]],[11,"set_feedback","smithay_client_toolkit::reexports::client","",337,N],[11,"destroy","","",337,N],[11,"destroy","","",337,N],[11,"set_cursor_position_hint","","",337,N],[11,"set_region","","",337,N],[11,"release","","",337,N],[11,"present_surface","","",337,N],[11,"present_surface_for_mode","","",337,[[["self"],["proxy"],["proxy"],["i32"]],["result",["newproxy"]]]],[11,"destroy","","",337,N],[11,"import_toplevel","","",337,[[["self"],["string"]],["result",["newproxy"]]]],[11,"set_cursor","","",337,N],[11,"destroy","","",337,N],[11,"destroy","","",337,N],[11,"create_inhibitor","","",337,[[["self"],["proxy"]],["result",["newproxy"]]]],[11,"destroy","","",337,N],[11,"use_unstable_version","","",337,N],[11,"get_xdg_surface","","",337,[[["self"],["proxy"]],["result",["newproxy"]]]],[11,"get_xdg_popup","","",337,[[["self"],["proxy"],["proxy"],["proxy"],["u32"],["i32"],["i32"]],["result",["newproxy"]]]],[11,"pong","","",337,N],[11,"destroy","","",337,N],[11,"export","","",337,[[["self"],["proxy"]],["result",["newproxy"]]]],[11,"destroy","","",337,N],[11,"destroy","","",337,N],[11,"inhibit_shortcuts","","",337,[[["self"],["proxy"],["proxy"]],["result",["newproxy"]]]],[11,"set_cursor","","",337,N],[11,"destroy","","",337,N],[11,"destroy","","",337,N],[11,"set_parent","","",337,N],[11,"set_title","","",337,N],[11,"set_app_id","","",337,N],[11,"show_window_menu","","",337,N],[11,"_move","","",337,N],[11,"resize","","",337,N],[11,"ack_configure","","",337,N],[11,"set_window_geometry","","",337,N],[11,"set_maximized","","",337,N],[11,"unset_maximized","","",337,N],[11,"set_fullscreen","","",337,N],[11,"unset_fullscreen","","",337,N],[11,"set_minimized","","",337,N],[11,"destroy","","",337,N],[11,"lock_pointer","","",337,[[["self"],["proxy"],["proxy"],["option",["proxy"]],["u32"]],["result",["newproxy"]]]],[11,"confine_pointer","","",337,[[["self"],["proxy"],["proxy"],["option",["proxy"]],["u32"]],["result",["newproxy"]]]],[11,"destroy","","",337,N],[11,"destroy","","",337,N],[11,"bitor","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Returns the union of the two sets of flags.",377,[[["self"],["anchor"]],["anchor"]]],[11,"bitor","","Returns the union of the two sets of flags.",378,[[["self"],["gravity"]],["gravity"]]],[11,"bitor","","Returns the union of the two sets of flags.",379,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"destroy","smithay_client_toolkit::reexports::client","",337,N],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",379,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",378,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",377,[[["self"],["formatter"]],["result",["error"]]]],[11,"destroy","smithay_client_toolkit::reexports::client","",337,N],[11,"destroy","","",337,N],[11,"create_params","","",337,[[["self"]],["result",["newproxy"]]]],[11,"destroy","","",337,N],[11,"import","","",337,[[["self"],["string"]],["result",["newproxy"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",377,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",379,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",378,[[["self"],["formatter"]],["result",["error"]]]],[11,"destroy","smithay_client_toolkit::reexports::client","",337,N],[11,"extend","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",379,N],[11,"extend","","",377,N],[11,"extend","","",378,N],[11,"destroy","smithay_client_toolkit::reexports::client","",337,N],[11,"bitxor_assign","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Toggles the set of flags.",377,N],[11,"bitxor_assign","","Toggles the set of flags.",379,N],[11,"bitxor_assign","","Toggles the set of flags.",378,N],[11,"destroy","smithay_client_toolkit::reexports::client","",337,N],[11,"set_size","","",337,N],[11,"set_anchor_rect","","",337,N],[11,"set_anchor","","",337,N],[11,"set_gravity","","",337,N],[11,"set_constraint_adjustment","","",337,N],[11,"set_offset","","",337,N],[11,"destroy","","",337,N],[11,"bitor_assign","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Adds the set of flags.",377,N],[11,"bitor_assign","","Adds the set of flags.",378,N],[11,"bitor_assign","","Adds the set of flags.",379,N],[11,"destroy","smithay_client_toolkit::reexports::client","",337,N],[11,"add","","",337,N],[11,"create","","",337,N],[11,"create_immed","","",337,[[["self"],["i32"],["i32"],["u32"],["u32"]],["result",["newproxy"]]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",120,[[["self"]],["flags"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",167,[[["self"]],["type"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",92,[[["self"]],["error"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",246,[[["self"]],["error"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",155,[[["self"]],["error"]]],[11,"clone","","",154,[[["self"]],["buttonstate"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_shell","",233,[[["self"]],["version"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",152,[[["self"]],["type"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_shell","",234,[[["self"]],["error"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",258,[[["self"]],["state"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",203,[[["self"]],["error"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",379,[[["self"]],["constraintadjustment"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",181,[[["self"]],["source"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",125,[[["self"]],["lifetime"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",250,[[["self"]],["error"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",153,[[["self"]],["capability"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",188,[[["self"]],["buttonstate"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",170,[[["self"]],["error"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",378,[[["self"]],["gravity"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface","",238,[[["self"]],["resizeedge"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","",193,[[["self"]],["contentpurpose"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",107,[[["self"]],["position"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","",194,[[["self"]],["preeditstyle"]]],[11,"clone","","",192,[[["self"]],["contenthint"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",377,[[["self"]],["anchor"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","",195,[[["self"]],["textdirection"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",169,[[["self"]],["buttonstate"]]],[11,"clone","smithay_client_toolkit::window","",284,[[["self"]],["state"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface","",239,[[["self"]],["state"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",91,[[["self"]],["presentmethod"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",119,[[["self"]],["error"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",253,[[["self"]],["error"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",262,[[["self"]],["error"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",90,[[["self"]],["capability"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",257,[[["self"]],["resizeedge"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",168,[[["self"]],["capability"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",204,[[["self"]],["mode"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",177,[[["self"]],["source"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",124,[[["self"]],["error"]]],[11,"clone","smithay_client_toolkit::reexports::protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",110,[[["self"]],["error"]]],[11,"get_input_panel_surface","smithay_client_toolkit::reexports::client","",337,[[["self"],["proxy"]],["result",["newproxy"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",155,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","",195,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",379,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",203,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::window","",284,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",170,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",168,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",169,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",253,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",177,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",181,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","",192,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",91,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface","",239,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",238,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",110,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",378,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",257,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",107,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",154,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",120,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_shell","",234,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",246,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",92,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",204,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",377,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",167,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",152,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",153,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",124,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",258,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","",193,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",250,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","",194,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",90,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",188,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",119,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",262,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_shell","",233,[[["self"],["formatter"]],["result",["error"]]]],[11,"destroy","smithay_client_toolkit::reexports::client","",337,N],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",216,[[["self"]],["bool"]]],[11,"from_raw_c","","",216,N],[11,"as_raw_c_in","","",216,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",380,[[["self"]],["bool"]]],[11,"from_raw_c","","",380,N],[11,"as_raw_c_in","","",380,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",218,[[["self"]],["bool"]]],[11,"from_raw_c","","",218,N],[11,"as_raw_c_in","","",218,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",145,[[["self"]],["bool"]]],[11,"from_raw_c","","",145,N],[11,"as_raw_c_in","","",145,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",179,[[["self"]],["bool"]]],[11,"from_raw_c","","",179,N],[11,"as_raw_c_in","","",179,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",381,[[["self"]],["bool"]]],[11,"from_raw_c","","",381,N],[11,"as_raw_c_in","","",381,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",144,[[["self"]],["bool"]]],[11,"from_raw_c","","",144,N],[11,"as_raw_c_in","","",144,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",183,[[["self"]],["bool"]]],[11,"from_raw_c","","",183,N],[11,"as_raw_c_in","","",183,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",111,[[["self"]],["bool"]]],[11,"from_raw_c","","",111,N],[11,"as_raw_c_in","","",111,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface","",241,[[["self"]],["bool"]]],[11,"from_raw_c","","",241,N],[11,"as_raw_c_in","","",241,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",165,[[["self"]],["bool"]]],[11,"from_raw_c","","",165,N],[11,"as_raw_c_in","","",165,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",185,[[["self"]],["bool"]]],[11,"from_raw_c","","",185,N],[11,"as_raw_c_in","","",185,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",190,[[["self"]],["bool"]]],[11,"from_raw_c","","",190,N],[11,"as_raw_c_in","","",190,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",248,[[["self"]],["bool"]]],[11,"from_raw_c","","",248,N],[11,"as_raw_c_in","","",248,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",382,[[["self"]],["bool"]]],[11,"from_raw_c","","",382,N],[11,"as_raw_c_in","","",382,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","",196,[[["self"]],["bool"]]],[11,"from_raw_c","","",196,N],[11,"as_raw_c_in","","",196,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",251,[[["self"]],["bool"]]],[11,"from_raw_c","","",251,N],[11,"as_raw_c_in","","",251,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",383,[[["self"]],["bool"]]],[11,"from_raw_c","","",383,N],[11,"as_raw_c_in","","",383,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",199,[[["self"]],["bool"]]],[11,"from_raw_c","","",199,N],[11,"as_raw_c_in","","",199,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",384,[[["self"]],["bool"]]],[11,"from_raw_c","","",384,N],[11,"as_raw_c_in","","",384,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",260,[[["self"]],["bool"]]],[11,"from_raw_c","","",260,N],[11,"as_raw_c_in","","",260,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",121,[[["self"]],["bool"]]],[11,"from_raw_c","","",121,N],[11,"as_raw_c_in","","",121,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",140,[[["self"]],["bool"]]],[11,"from_raw_c","","",140,N],[11,"as_raw_c_in","","",140,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",201,[[["self"]],["bool"]]],[11,"from_raw_c","","",201,N],[11,"as_raw_c_in","","",201,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",97,[[["self"]],["bool"]]],[11,"from_raw_c","","",97,N],[11,"as_raw_c_in","","",97,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",136,[[["self"]],["bool"]]],[11,"from_raw_c","","",136,N],[11,"as_raw_c_in","","",136,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",247,[[["self"]],["bool"]]],[11,"from_raw_c","","",247,N],[11,"as_raw_c_in","","",247,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",385,[[["self"]],["bool"]]],[11,"from_raw_c","","",385,N],[11,"as_raw_c_in","","",385,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",386,[[["self"]],["bool"]]],[11,"from_raw_c","","",386,N],[11,"as_raw_c_in","","",386,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",134,[[["self"]],["bool"]]],[11,"from_raw_c","","",134,N],[11,"as_raw_c_in","","",134,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",189,[[["self"]],["bool"]]],[11,"from_raw_c","","",189,N],[11,"as_raw_c_in","","",189,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",387,[[["self"]],["bool"]]],[11,"from_raw_c","","",387,N],[11,"as_raw_c_in","","",387,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",388,[[["self"]],["bool"]]],[11,"from_raw_c","","",388,N],[11,"as_raw_c_in","","",388,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",96,[[["self"]],["bool"]]],[11,"from_raw_c","","",96,N],[11,"as_raw_c_in","","",96,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",139,[[["self"]],["bool"]]],[11,"from_raw_c","","",139,N],[11,"as_raw_c_in","","",139,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",164,[[["self"]],["bool"]]],[11,"from_raw_c","","",164,N],[11,"as_raw_c_in","","",164,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_v1","",160,[[["self"]],["bool"]]],[11,"from_raw_c","","",160,N],[11,"as_raw_c_in","","",160,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",254,[[["self"]],["bool"]]],[11,"from_raw_c","","",254,N],[11,"as_raw_c_in","","",254,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",210,[[["self"]],["bool"]]],[11,"from_raw_c","","",210,N],[11,"as_raw_c_in","","",210,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",212,[[["self"]],["bool"]]],[11,"from_raw_c","","",212,N],[11,"as_raw_c_in","","",212,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",105,[[["self"]],["bool"]]],[11,"from_raw_c","","",105,N],[11,"as_raw_c_in","","",105,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",102,[[["self"]],["bool"]]],[11,"from_raw_c","","",102,N],[11,"as_raw_c_in","","",102,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",225,[[["self"]],["bool"]]],[11,"from_raw_c","","",225,N],[11,"as_raw_c_in","","",225,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",259,[[["self"]],["bool"]]],[11,"from_raw_c","","",259,N],[11,"as_raw_c_in","","",259,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",171,[[["self"]],["bool"]]],[11,"from_raw_c","","",171,N],[11,"as_raw_c_in","","",171,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",132,[[["self"]],["bool"]]],[11,"from_raw_c","","",132,N],[11,"as_raw_c_in","","",132,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",389,[[["self"]],["bool"]]],[11,"from_raw_c","","",389,N],[11,"as_raw_c_in","","",389,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",230,[[["self"]],["bool"]]],[11,"from_raw_c","","",230,N],[11,"as_raw_c_in","","",230,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",231,[[["self"]],["bool"]]],[11,"from_raw_c","","",231,N],[11,"as_raw_c_in","","",231,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_popup","",244,[[["self"]],["bool"]]],[11,"from_raw_c","","",244,N],[11,"as_raw_c_in","","",244,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",122,[[["self"]],["bool"]]],[11,"from_raw_c","","",122,N],[11,"as_raw_c_in","","",122,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",390,[[["self"]],["bool"]]],[11,"from_raw_c","","",390,N],[11,"as_raw_c_in","","",390,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","",197,[[["self"]],["bool"]]],[11,"from_raw_c","","",197,N],[11,"as_raw_c_in","","",197,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_v1","",159,[[["self"]],["bool"]]],[11,"from_raw_c","","",159,N],[11,"as_raw_c_in","","",159,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",391,[[["self"]],["bool"]]],[11,"from_raw_c","","",391,N],[11,"as_raw_c_in","","",391,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",108,[[["self"]],["bool"]]],[11,"from_raw_c","","",108,N],[11,"as_raw_c_in","","",108,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",392,[[["self"]],["bool"]]],[11,"from_raw_c","","",392,N],[11,"as_raw_c_in","","",392,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",113,[[["self"]],["bool"]]],[11,"from_raw_c","","",113,N],[11,"as_raw_c_in","","",113,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",393,[[["self"]],["bool"]]],[11,"from_raw_c","","",393,N],[11,"as_raw_c_in","","",393,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",394,[[["self"]],["bool"]]],[11,"from_raw_c","","",394,N],[11,"as_raw_c_in","","",394,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",182,[[["self"]],["bool"]]],[11,"from_raw_c","","",182,N],[11,"as_raw_c_in","","",182,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",126,[[["self"]],["bool"]]],[11,"from_raw_c","","",126,N],[11,"as_raw_c_in","","",126,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",131,[[["self"]],["bool"]]],[11,"from_raw_c","","",131,N],[11,"as_raw_c_in","","",131,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",263,[[["self"]],["bool"]]],[11,"from_raw_c","","",263,N],[11,"as_raw_c_in","","",263,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",116,[[["self"]],["bool"]]],[11,"from_raw_c","","",116,N],[11,"as_raw_c_in","","",116,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",186,[[["self"]],["bool"]]],[11,"from_raw_c","","",186,N],[11,"as_raw_c_in","","",186,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",137,[[["self"]],["bool"]]],[11,"from_raw_c","","",137,N],[11,"as_raw_c_in","","",137,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_v2","",175,[[["self"]],["bool"]]],[11,"from_raw_c","","",175,N],[11,"as_raw_c_in","","",175,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",395,[[["self"]],["bool"]]],[11,"from_raw_c","","",395,N],[11,"as_raw_c_in","","",395,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",396,[[["self"]],["bool"]]],[11,"from_raw_c","","",396,N],[11,"as_raw_c_in","","",396,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",129,[[["self"]],["bool"]]],[11,"from_raw_c","","",129,N],[11,"as_raw_c_in","","",129,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",178,[[["self"]],["bool"]]],[11,"from_raw_c","","",178,N],[11,"as_raw_c_in","","",178,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",264,[[["self"]],["bool"]]],[11,"from_raw_c","","",264,N],[11,"as_raw_c_in","","",264,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_shell","",236,[[["self"]],["bool"]]],[11,"from_raw_c","","",236,N],[11,"as_raw_c_in","","",236,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",397,[[["self"]],["bool"]]],[11,"from_raw_c","","",397,N],[11,"as_raw_c_in","","",397,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",398,[[["self"]],["bool"]]],[11,"from_raw_c","","",398,N],[11,"as_raw_c_in","","",398,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",172,[[["self"]],["bool"]]],[11,"from_raw_c","","",172,N],[11,"as_raw_c_in","","",172,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_popup","",243,[[["self"]],["bool"]]],[11,"from_raw_c","","",243,N],[11,"as_raw_c_in","","",243,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",162,[[["self"]],["bool"]]],[11,"from_raw_c","","",162,N],[11,"as_raw_c_in","","",162,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",223,[[["self"]],["bool"]]],[11,"from_raw_c","","",223,N],[11,"as_raw_c_in","","",223,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",142,[[["self"]],["bool"]]],[11,"from_raw_c","","",142,N],[11,"as_raw_c_in","","",142,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",215,[[["self"]],["bool"]]],[11,"from_raw_c","","",215,N],[11,"as_raw_c_in","","",215,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",114,[[["self"]],["bool"]]],[11,"from_raw_c","","",114,N],[11,"as_raw_c_in","","",114,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",128,[[["self"]],["bool"]]],[11,"from_raw_c","","",128,N],[11,"as_raw_c_in","","",128,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",255,[[["self"]],["bool"]]],[11,"from_raw_c","","",255,N],[11,"as_raw_c_in","","",255,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_v2","",174,[[["self"]],["bool"]]],[11,"from_raw_c","","",174,N],[11,"as_raw_c_in","","",174,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",150,[[["self"]],["bool"]]],[11,"from_raw_c","","",150,N],[11,"as_raw_c_in","","",150,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",206,[[["self"]],["bool"]]],[11,"from_raw_c","","",206,N],[11,"as_raw_c_in","","",206,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",399,[[["self"]],["bool"]]],[11,"from_raw_c","","",399,N],[11,"as_raw_c_in","","",399,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",205,[[["self"]],["bool"]]],[11,"from_raw_c","","",205,N],[11,"as_raw_c_in","","",205,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",157,[[["self"]],["bool"]]],[11,"from_raw_c","","",157,N],[11,"as_raw_c_in","","",157,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",220,[[["self"]],["bool"]]],[11,"from_raw_c","","",220,N],[11,"as_raw_c_in","","",220,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",266,[[["self"]],["bool"]]],[11,"from_raw_c","","",266,N],[11,"as_raw_c_in","","",266,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",268,[[["self"]],["bool"]]],[11,"from_raw_c","","",268,N],[11,"as_raw_c_in","","",268,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",94,[[["self"]],["bool"]]],[11,"from_raw_c","","",94,N],[11,"as_raw_c_in","","",94,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",400,[[["self"]],["bool"]]],[11,"from_raw_c","","",400,N],[11,"as_raw_c_in","","",400,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_v1","",104,[[["self"]],["bool"]]],[11,"from_raw_c","","",104,N],[11,"as_raw_c_in","","",104,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",99,[[["self"]],["bool"]]],[11,"from_raw_c","","",99,N],[11,"as_raw_c_in","","",99,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",222,[[["self"]],["bool"]]],[11,"from_raw_c","","",222,N],[11,"as_raw_c_in","","",222,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",208,[[["self"]],["bool"]]],[11,"from_raw_c","","",208,N],[11,"as_raw_c_in","","",208,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",156,[[["self"]],["bool"]]],[11,"from_raw_c","","",156,N],[11,"as_raw_c_in","","",156,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",93,[[["self"]],["bool"]]],[11,"from_raw_c","","",93,N],[11,"as_raw_c_in","","",93,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",149,[[["self"]],["bool"]]],[11,"from_raw_c","","",149,N],[11,"as_raw_c_in","","",149,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",101,[[["self"]],["bool"]]],[11,"from_raw_c","","",101,N],[11,"as_raw_c_in","","",101,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface","",240,[[["self"]],["bool"]]],[11,"from_raw_c","","",240,N],[11,"as_raw_c_in","","",240,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",226,[[["self"]],["bool"]]],[11,"from_raw_c","","",226,N],[11,"as_raw_c_in","","",226,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",147,[[["self"]],["bool"]]],[11,"from_raw_c","","",147,N],[11,"as_raw_c_in","","",147,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",117,[[["self"]],["bool"]]],[11,"from_raw_c","","",117,N],[11,"as_raw_c_in","","",117,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_v1","",401,[[["self"]],["bool"]]],[11,"from_raw_c","","",401,N],[11,"as_raw_c_in","","",401,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_shell","",235,[[["self"]],["bool"]]],[11,"from_raw_c","","",235,N],[11,"as_raw_c_in","","",235,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",228,[[["self"]],["bool"]]],[11,"from_raw_c","","",228,N],[11,"as_raw_c_in","","",228,[[["self"],["f"]],["t"]]],[11,"is_destructor","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",213,[[["self"]],["bool"]]],[11,"from_raw_c","","",213,N],[11,"as_raw_c_in","","",213,[[["self"],["f"]],["t"]]],[11,"destroy","smithay_client_toolkit::reexports::client","",337,N],[11,"get_toplevel_decoration","","",337,[[["self"],["proxy"]],["result",["newproxy"]]]],[11,"sub","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Returns the set difference of the two sets of flags.",379,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"sub","","Returns the set difference of the two sets of flags.",378,[[["self"],["gravity"]],["gravity"]]],[11,"sub","","Returns the set difference of the two sets of flags.",377,[[["self"],["anchor"]],["anchor"]]],[11,"cmp","","",379,[[["self"],["constraintadjustment"]],["ordering"]]],[11,"cmp","","",377,[[["self"],["anchor"]],["ordering"]]],[11,"cmp","","",378,[[["self"],["gravity"]],["ordering"]]],[11,"get_tablet_seat","smithay_client_toolkit::reexports::client","",337,[[["self"],["proxy"]],["result",["newproxy"]]]],[11,"destroy","","",337,N],[11,"from_iter","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",377,[[["t"]],["anchor"]]],[11,"from_iter","","",378,[[["t"]],["gravity"]]],[11,"from_iter","","",379,[[["t"]],["constraintadjustment"]]],[11,"destroy","smithay_client_toolkit::reexports::client","",337,N],[11,"commit_string","","",337,N],[11,"preedit_string","","",337,N],[11,"preedit_styling","","",337,N],[11,"preedit_cursor","","",337,N],[11,"delete_surrounding_text","","",337,N],[11,"cursor_position","","",337,N],[11,"modifiers_map","","",337,N],[11,"keysym","","",337,N],[11,"grab_keyboard","","",337,[[["self"]],["result",["newproxy"]]]],[11,"key","","",337,N],[11,"modifiers","","",337,N],[11,"language","","",337,N],[11,"text_direction","","",337,N],[11,"activate","","",337,N],[11,"deactivate","","",337,N],[11,"show_input_panel","","",337,N],[11,"hide_input_panel","","",337,N],[11,"reset","","",337,N],[11,"set_surrounding_text","","",337,N],[11,"set_content_type","","",337,N],[11,"set_cursor_rectangle","","",337,N],[11,"set_preferred_language","","",337,N],[11,"commit_state","","",337,N],[11,"invoke_action","","",337,N],[11,"destroy","","",337,N],[11,"set_mode","","",337,N],[11,"unset_mode","","",337,N],[11,"get_tablet_seat","","",337,[[["self"],["proxy"]],["result",["newproxy"]]]],[11,"destroy","","",337,N],[11,"set_feedback","","",337,N],[11,"destroy","","",337,N],[11,"create_text_input","","",337,[[["self"]],["result",["newproxy"]]]],[11,"destroy","","",337,N],[11,"sub_assign","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Disables all flags enabled in the set.",379,N],[11,"sub_assign","","Disables all flags enabled in the set.",378,N],[11,"sub_assign","","Disables all flags enabled in the set.",377,N],[11,"partial_cmp","","",379,[[["self"],["constraintadjustment"]],["option",["ordering"]]]],[11,"lt","","",379,[[["self"],["constraintadjustment"]],["bool"]]],[11,"le","","",379,[[["self"],["constraintadjustment"]],["bool"]]],[11,"gt","","",379,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ge","","",379,[[["self"],["constraintadjustment"]],["bool"]]],[11,"partial_cmp","","",378,[[["self"],["gravity"]],["option",["ordering"]]]],[11,"lt","","",378,[[["self"],["gravity"]],["bool"]]],[11,"le","","",378,[[["self"],["gravity"]],["bool"]]],[11,"gt","","",378,[[["self"],["gravity"]],["bool"]]],[11,"ge","","",378,[[["self"],["gravity"]],["bool"]]],[11,"partial_cmp","","",377,[[["self"],["anchor"]],["option",["ordering"]]]],[11,"lt","","",377,[[["self"],["anchor"]],["bool"]]],[11,"le","","",377,[[["self"],["anchor"]],["bool"]]],[11,"gt","","",377,[[["self"],["anchor"]],["bool"]]],[11,"ge","","",377,[[["self"],["anchor"]],["bool"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",378,N],[11,"bitand_assign","","Disables all flags disabled in the set.",379,N],[11,"bitand_assign","","Disables all flags disabled in the set.",377,N],[11,"destroy","smithay_client_toolkit::reexports::client","",337,N],[11,"grab_keyboard","","",337,[[["self"],["proxy"],["proxy"]],["result",["newproxy"]]]],[11,"destroy","","",337,N],[11,"set_parent_of","","",337,N],[11,"destroy","","",337,N],[11,"get_xdg_output","","",337,[[["self"],["proxy"]],["result",["newproxy"]]]],[11,"get_swipe_gesture","","",337,[[["self"],["proxy"]],["result",["newproxy"]]]],[11,"get_pinch_gesture","","",337,[[["self"],["proxy"]],["result",["newproxy"]]]],[11,"destroy","","",337,N],[11,"get_relative_pointer","","",337,[[["self"],["proxy"]],["result",["newproxy"]]]],[11,"fmt","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",377,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",378,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",379,[[["self"],["formatter"]],["result",["error"]]]],[11,"destroy","smithay_client_toolkit::reexports::client","",337,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_v1","",402,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",403,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",404,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",405,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",406,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",407,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",408,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",409,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",410,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",411,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",412,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",413,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",414,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",415,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_popup","",416,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","",417,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",418,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",419,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",420,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",421,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",422,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",423,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",424,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",425,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",426,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",427,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",428,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",429,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",430,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",431,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",432,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_shell","",433,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",434,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",435,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",436,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",437,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",438,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",439,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_v2","",440,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",441,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",442,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",443,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",444,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",445,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",446,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",447,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",448,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",449,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_method_v1","",450,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",451,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",452,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",453,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",454,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",455,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",456,N],[11,"c_interface","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface","",457,N],[11,"destroy","smithay_client_toolkit::reexports::client","",337,N],[11,"get_toplevel","","",337,[[["self"]],["result",["newproxy"]]]],[11,"get_popup","","",337,[[["self"],["proxy"],["proxy"]],["result",["newproxy"]]]],[11,"set_window_geometry","","",337,N],[11,"ack_configure","","",337,N],[11,"hash","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",377,N],[11,"hash","","",378,N],[11,"hash","","",379,N],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",379,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",377,[[["self"],["anchor"]],["anchor"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",378,[[["self"],["gravity"]],["gravity"]]],[11,"set_feedback","smithay_client_toolkit::reexports::client","",337,N],[11,"destroy","","",337,N],[11,"destroy","","",337,N],[11,"set_region","","",337,N],[11,"not","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","Returns the complement of this set of flags.",379,[[["self"]],["constraintadjustment"]]],[11,"not","","Returns the complement of this set of flags.",377,[[["self"]],["anchor"]]],[11,"not","","Returns the complement of this set of flags.",378,[[["self"]],["gravity"]]],[11,"destroy","smithay_client_toolkit::reexports::client","",337,N],[11,"destroy","","",337,N],[11,"destroy","","",337,N],[11,"destroy","","",337,N],[11,"destroy","","",337,N],[11,"set_parent","","",337,N],[11,"set_title","","",337,N],[11,"set_app_id","","",337,N],[11,"show_window_menu","","",337,N],[11,"_move","","",337,N],[11,"resize","","",337,N],[11,"set_max_size","","",337,N],[11,"set_min_size","","",337,N],[11,"set_maximized","","",337,N],[11,"unset_maximized","","",337,N],[11,"set_fullscreen","","",337,N],[11,"unset_fullscreen","","",337,N],[11,"set_minimized","","",337,N],[11,"name","smithay_client_toolkit::reexports::client::cursor","Retrieve the name of this cursor.",458,[[["self"]],["string"]]],[11,"image_count","","Retrieve the number of images contained in this animated cursor",458,[[["self"]],["usize"]]],[11,"frame","","Retrieve the image number of cursor animation.",458,[[["self"],["u32"]],["usize"]]],[11,"frame_and_duration","","Retrieve the image number and its duration.",458,N],[11,"frame_buffer","","Retrieve a `CursorImageBuffer` containing the given image of an animation.",458,[[["self"],["usize"]],["option",["cursorimagebuffer"]]]],[11,"frame_info","","Retrive the metadate associated with given frame of the animation.",458,[[["self"],["usize"]],["option"]]],[11,"new","smithay_client_toolkit::reexports::client::egl","Create an EGL surface from a wayland surface",339,[[["proxy"],["i32"],["i32"]],["wleglsurface"]]],[11,"new_from_raw","","Create an EGL surface from a raw pointer to a wayland surface",339,N],[11,"get_size","","Fetch current size of the EGL surface",339,N],[11,"resize","","Resize the EGL surface",339,N],[11,"ptr","","Raw pointer to the EGL surface",339,N],[11,"is","smithay_client_toolkit::reexports::client::commons","Returns true if the trait object wraps an object of type `__T`.",2,[[["self"]],["bool"]]],[11,"downcast","","Returns a boxed object from a boxed trait object if the underlying object is of type `__T`. Returns the original boxed trait if it isn't.",2,[[["box",["implementation"]]],["result",["box","box"]]]],[11,"downcast_ref","","Returns a reference to the object within the trait object if it is of type `__T`, or `None` if it isn't.",2,[[["self"]],["option"]]],[11,"downcast_mut","","Returns a mutable reference to the object within the trait object if it is of type `__T`, or `None` if it isn't.",2,[[["self"]],["option"]]],[11,"open","smithay_client_toolkit::reexports::client::sys::client","",5,[[["str"]],["result",["waylandclient","dlerror"]]]],[11,"from_raw","smithay_client_toolkit::reexports::client::protocol::wl_data_source","",14,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",14,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::client::protocol::wl_keyboard","",18,[[["u32"]],["option",["keymapformat"]]]],[11,"to_raw","","",18,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::keyboard","",19,[[["u32"]],["option",["keystate"]]]],[11,"to_raw","","",19,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::data_device","",335,[[["u32"]],["option",["dndaction"]]]],[11,"to_raw","","",335,[[["self"]],["u32"]]],[18,"None","","no action",335,N],[18,"Copy","","copy action",335,N],[18,"Move","","move action",335,N],[18,"Ask","","ask action",335,N],[11,"empty","","Returns an empty set of flags.",335,[[],["dndaction"]]],[11,"all","","Returns the set containing all flags.",335,[[],["dndaction"]]],[11,"bits","","Returns the raw value of the flags currently stored.",335,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",335,[[["u32"]],["option",["dndaction"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",335,[[["u32"]],["dndaction"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",335,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",335,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",335,[[["self"],["dndaction"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",335,[[["self"],["dndaction"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",335,N],[11,"remove","","Removes the specified flags in-place.",335,N],[11,"toggle","","Toggles the specified flags in-place.",335,N],[11,"set","","Inserts or removes the specified flags depending on the passed value.",335,N],[11,"from_raw","smithay_client_toolkit::reexports::client::protocol::wl_shell_surface","",332,[[["u32"]],["option",["resize"]]]],[11,"to_raw","","",332,[[["self"]],["u32"]]],[18,"None","","no edge",332,N],[18,"Top","","top edge",332,N],[18,"Bottom","","bottom edge",332,N],[18,"Left","","left edge",332,N],[18,"TopLeft","","top and left edges",332,N],[18,"BottomLeft","","bottom and left edges",332,N],[18,"Right","","right edge",332,N],[18,"TopRight","","top and right edges",332,N],[18,"BottomRight","","bottom and right edges",332,N],[11,"empty","","Returns an empty set of flags.",332,[[],["resize"]]],[11,"all","","Returns the set containing all flags.",332,[[],["resize"]]],[11,"bits","","Returns the raw value of the flags currently stored.",332,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",332,[[["u32"]],["option",["resize"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",332,[[["u32"]],["resize"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",332,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",332,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",332,[[["self"],["resize"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",332,[[["self"],["resize"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",332,N],[11,"remove","","Removes the specified flags in-place.",332,N],[11,"toggle","","Toggles the specified flags in-place.",332,N],[11,"set","","Inserts or removes the specified flags depending on the passed value.",332,N],[11,"from_raw","","",334,[[["u32"]],["option",["transient"]]]],[11,"to_raw","","",334,[[["self"]],["u32"]]],[18,"Inactive","","do not set keyboard focus",334,N],[11,"empty","","Returns an empty set of flags.",334,[[],["transient"]]],[11,"all","","Returns the set containing all flags.",334,[[],["transient"]]],[11,"bits","","Returns the raw value of the flags currently stored.",334,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",334,[[["u32"]],["option",["transient"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",334,[[["u32"]],["transient"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",334,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",334,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",334,[[["self"],["transient"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",334,[[["self"],["transient"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",334,N],[11,"remove","","Removes the specified flags in-place.",334,N],[11,"toggle","","Toggles the specified flags in-place.",334,N],[11,"set","","Inserts or removes the specified flags depending on the passed value.",334,N],[11,"from_raw","","",27,[[["u32"]],["option",["fullscreenmethod"]]]],[11,"to_raw","","",27,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::client::protocol::wl_subsurface","",34,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",34,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::output","",40,[[["u32"]],["option",["subpixel"]]]],[11,"to_raw","","",40,[[["self"]],["u32"]]],[11,"from_raw","","",41,[[["u32"]],["option",["transform"]]]],[11,"to_raw","","",41,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::client::protocol::wl_output","",333,[[["u32"]],["option",["mode"]]]],[11,"to_raw","","",333,[[["self"]],["u32"]]],[18,"Current","","indicates this is the current mode",333,N],[18,"Preferred","","indicates this is the preferred mode",333,N],[11,"empty","","Returns an empty set of flags.",333,[[],["mode"]]],[11,"all","","Returns the set containing all flags.",333,[[],["mode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",333,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",333,[[["u32"]],["option",["mode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",333,[[["u32"]],["mode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",333,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",333,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",333,[[["self"],["mode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",333,[[["self"],["mode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",333,N],[11,"remove","","Removes the specified flags in-place.",333,N],[11,"toggle","","Toggles the specified flags in-place.",333,N],[11,"set","","Inserts or removes the specified flags depending on the passed value.",333,N],[11,"from_raw","smithay_client_toolkit::reexports::client::protocol::wl_shell","",45,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",45,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::client::protocol::wl_display","",50,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",50,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::client::protocol::wl_subcompositor","",54,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",54,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::client::protocol::wl_shm","",60,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",60,[[["self"]],["u32"]]],[11,"from_raw","","",61,[[["u32"]],["option",["format"]]]],[11,"to_raw","","",61,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::client::protocol::wl_surface","",65,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",65,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::client::protocol::wl_seat","",336,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",336,[[["self"]],["u32"]]],[18,"Pointer","","the seat has pointer devices",336,N],[18,"Keyboard","","the seat has one or more keyboards",336,N],[18,"Touch","","the seat has touch devices",336,N],[11,"empty","","Returns an empty set of flags.",336,[[],["capability"]]],[11,"all","","Returns the set containing all flags.",336,[[],["capability"]]],[11,"bits","","Returns the raw value of the flags currently stored.",336,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",336,[[["u32"]],["option",["capability"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",336,[[["u32"]],["capability"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",336,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",336,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",336,[[["self"],["capability"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",336,[[["self"],["capability"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",336,N],[11,"remove","","Removes the specified flags in-place.",336,N],[11,"toggle","","Toggles the specified flags in-place.",336,N],[11,"set","","Inserts or removes the specified flags depending on the passed value.",336,N],[11,"from_raw","smithay_client_toolkit::reexports::client::protocol::wl_data_device","",72,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",72,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::client::protocol::wl_data_offer","",76,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",76,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::client::protocol::wl_pointer","",80,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",80,[[["self"]],["u32"]]],[11,"from_raw","","",81,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",81,[[["self"]],["u32"]]],[11,"from_raw","","",82,[[["u32"]],["option",["axis"]]]],[11,"to_raw","","",82,[[["self"]],["u32"]]],[11,"from_raw","","",83,[[["u32"]],["option",["axissource"]]]],[11,"to_raw","","",83,[[["self"]],["u32"]]],[11,"from_external_display","smithay_client_toolkit::reexports::client","Create a Display and Event Queue from an external display",363,N],[11,"get_display_ptr","","Retrieve the `wl_display` pointer",363,N],[11,"connect_to_env","","Attempt to connect to a wayland server using the contents of the environment variables",363,[[],["result",["connecterror"]]]],[11,"connect_to_name","","Attempt to connect to a wayland server socket with given name",363,[[["s"]],["result",["connecterror"]]]],[11,"flush","","Non-blocking write to the server",363,[[["self"]],["result",["i32","error"]]]],[11,"create_event_queue","","Create a new event queue associated with this wayland connection",363,[[["self"]],["eventqueue"]]],[11,"new","","Create a global manager handling a registry",364,[[["newproxy",["wlregistry"]]],["globalmanager"]]],[11,"new_with_cb","","Create a global manager handling a registry with a callback",364,[[["newproxy",["wlregistry"]],["impl"]],["globalmanager"]]],[11,"instantiate_auto","","Instanciate a global with highest available version",364,[[["self"]],["result",["newproxy","globalerror"]]]],[11,"instantiate_exact","","Instanciate a global with a specific version",364,[[["self"],["u32"]],["result",["newproxy","globalerror"]]]],[11,"list","","Retrieve the list of currently known globals",364,[[["self"]],["vec"]]],[11,"dispatch","","Dispatches events from the internal buffer.",459,[[["self"]],["result",["u32","error"]]]],[11,"dispatch_pending","","Dispatches pending events from the internal buffer.",459,[[["self"]],["result",["u32","error"]]]],[11,"sync_roundtrip","","Synchronous roundtrip",459,[[["self"]],["result",["i32","error"]]]],[11,"get_token","","Create a new token associated with this event queue",459,[[["self"]],["queuetoken"]]],[11,"prepare_read","","Prepare an conccurent read",459,[[["self"]],["option",["readeventsguard"]]]],[11,"read_events","","Read events",338,[[["self"]],["result",["i32","error"]]]],[11,"cancel","","Cancel the read",338,N],[11,"implement","","Implement this proxy using given function and implementation data.",460,[[["self"],["impl"]],["proxy"]]],[11,"implement_nonsend","","Implement this proxy using given function and implementation data.",460,[[["self"],["impl"],["queuetoken"]],["proxy"]]],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",460,N],[11,"from_c_ptr","","Create a `NewProxy` instance from a C pointer.",460,N],[11,"from_raw","smithay_client_toolkit::reexports::protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",90,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",90,[[["self"]],["u32"]]],[11,"from_raw","","",91,[[["u32"]],["option",["presentmethod"]]]],[11,"to_raw","","",91,[[["self"]],["u32"]]],[11,"from_raw","","",92,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",92,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",107,[[["u32"]],["option",["position"]]]],[11,"to_raw","","",107,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",110,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",110,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",119,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",119,[[["self"]],["u32"]]],[11,"from_raw","","",120,[[["u32"]],["option",["flags"]]]],[11,"to_raw","","",120,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",124,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",124,[[["self"]],["u32"]]],[11,"from_raw","","",125,[[["u32"]],["option",["lifetime"]]]],[11,"to_raw","","",125,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",152,[[["u32"]],["option",["type"]]]],[11,"to_raw","","",152,[[["self"]],["u32"]]],[11,"from_raw","","",153,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",153,[[["self"]],["u32"]]],[11,"from_raw","","",154,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",154,[[["self"]],["u32"]]],[11,"from_raw","","",155,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",155,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",167,[[["u32"]],["option",["type"]]]],[11,"to_raw","","",167,[[["self"]],["u32"]]],[11,"from_raw","","",168,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",168,[[["self"]],["u32"]]],[11,"from_raw","","",169,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",169,[[["self"]],["u32"]]],[11,"from_raw","","",170,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",170,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",177,[[["u32"]],["option",["source"]]]],[11,"to_raw","","",177,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",181,[[["u32"]],["option",["source"]]]],[11,"to_raw","","",181,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",188,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",188,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::protocols::unstable::text_input::v1::client::zwp_text_input_v1","",192,[[["u32"]],["option",["contenthint"]]]],[11,"to_raw","","",192,[[["self"]],["u32"]]],[11,"from_raw","","",193,[[["u32"]],["option",["contentpurpose"]]]],[11,"to_raw","","",193,[[["self"]],["u32"]]],[11,"from_raw","","",194,[[["u32"]],["option",["preeditstyle"]]]],[11,"to_raw","","",194,[[["self"]],["u32"]]],[11,"from_raw","","",195,[[["u32"]],["option",["textdirection"]]]],[11,"to_raw","","",195,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",203,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",203,[[["self"]],["u32"]]],[11,"from_raw","","",204,[[["u32"]],["option",["mode"]]]],[11,"to_raw","","",204,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_shell","",233,[[["u32"]],["option",["version"]]]],[11,"to_raw","","",233,[[["self"]],["u32"]]],[11,"from_raw","","",234,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",234,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v5::client::xdg_surface","",238,[[["u32"]],["option",["resizeedge"]]]],[11,"to_raw","","",238,[[["self"]],["u32"]]],[11,"from_raw","","",239,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",239,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",246,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",246,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",250,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",250,[[["self"]],["u32"]]],[11,"from_raw","","",377,[[["u32"]],["option",["anchor"]]]],[11,"to_raw","","",377,[[["self"]],["u32"]]],[18,"None","","the center of the anchor rectangle",377,N],[18,"Top","","the top edge of the anchor rectangle",377,N],[18,"Bottom","","the bottom edge of the anchor rectangle",377,N],[18,"Left","","the left edge of the anchor rectangle",377,N],[18,"Right","","the right edge of the anchor rectangle",377,N],[11,"empty","","Returns an empty set of flags.",377,[[],["anchor"]]],[11,"all","","Returns the set containing all flags.",377,[[],["anchor"]]],[11,"bits","","Returns the raw value of the flags currently stored.",377,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",377,[[["u32"]],["option",["anchor"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",377,[[["u32"]],["anchor"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",377,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",377,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",377,[[["self"],["anchor"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",377,[[["self"],["anchor"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",377,N],[11,"remove","","Removes the specified flags in-place.",377,N],[11,"toggle","","Toggles the specified flags in-place.",377,N],[11,"set","","Inserts or removes the specified flags depending on the passed value.",377,N],[11,"from_raw","","",378,[[["u32"]],["option",["gravity"]]]],[11,"to_raw","","",378,[[["self"]],["u32"]]],[18,"None","","center over the anchor edge",378,N],[18,"Top","","position above the anchor edge",378,N],[18,"Bottom","","position below the anchor edge",378,N],[18,"Left","","position to the left of the anchor edge",378,N],[18,"Right","","position to the right of the anchor edge",378,N],[11,"empty","","Returns an empty set of flags.",378,[[],["gravity"]]],[11,"all","","Returns the set containing all flags.",378,[[],["gravity"]]],[11,"bits","","Returns the raw value of the flags currently stored.",378,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",378,[[["u32"]],["option",["gravity"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",378,[[["u32"]],["gravity"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",378,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",378,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",378,[[["self"],["gravity"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",378,[[["self"],["gravity"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",378,N],[11,"remove","","Removes the specified flags in-place.",378,N],[11,"toggle","","Toggles the specified flags in-place.",378,N],[11,"set","","Inserts or removes the specified flags depending on the passed value.",378,N],[11,"from_raw","","",379,[[["u32"]],["option",["constraintadjustment"]]]],[11,"to_raw","","",379,[[["self"]],["u32"]]],[18,"None","","don't move the child surface when constrained",379,N],[18,"SlideX","","move along the x axis until unconstrained",379,N],[18,"SlideY","","move along the y axis until unconstrained",379,N],[18,"FlipX","","invert the anchor and gravity on the x axis",379,N],[18,"FlipY","","invert the anchor and gravity on the y axis",379,N],[18,"ResizeX","","horizontally resize the surface",379,N],[18,"ResizeY","","vertically resize the surface",379,N],[11,"empty","","Returns an empty set of flags.",379,[[],["constraintadjustment"]]],[11,"all","","Returns the set containing all flags.",379,[[],["constraintadjustment"]]],[11,"bits","","Returns the raw value of the flags currently stored.",379,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",379,[[["u32"]],["option",["constraintadjustment"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",379,[[["u32"]],["constraintadjustment"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",379,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",379,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",379,[[["self"],["constraintadjustment"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",379,[[["self"],["constraintadjustment"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",379,N],[11,"remove","","Removes the specified flags in-place.",379,N],[11,"toggle","","Toggles the specified flags in-place.",379,N],[11,"set","","Inserts or removes the specified flags depending on the passed value.",379,N],[11,"from_raw","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",253,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",253,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",257,[[["u32"]],["option",["resizeedge"]]]],[11,"to_raw","","",257,[[["self"]],["u32"]]],[11,"from_raw","","",258,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",258,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::reexports::protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",262,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",262,[[["self"]],["u32"]]],[11,"from_raw","smithay_client_toolkit::window","",284,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",284,[[["self"]],["u32"]]]],"paths":[[3,"Environment"],[4,"Shell"],[8,"Implementation"],[8,"Interface"],[8,"MessageGroup"],[3,"WaylandClient"],[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[4,"Event"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"KeymapFormat"],[4,"KeyState"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"FullscreenMethod"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Subpixel"],[4,"Transform"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Format"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"GlobalError"],[4,"ConnectError"],[4,"GlobalEvent"],[4,"Capability"],[4,"PresentMethod"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[4,"Request"],[8,"RequestsTrait"],[4,"Position"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Flags"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Lifetime"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Source"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Source"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ButtonState"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ContentHint"],[4,"ContentPurpose"],[4,"PreeditStyle"],[4,"TextDirection"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Mode"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Version"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Anchor"],[4,"Gravity"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Kind"],[4,"Event"],[4,"DndEvent"],[4,"DataSourceEvent"],[3,"DataDevice"],[3,"DataOffer"],[3,"ReadPipe"],[3,"DataSource"],[3,"WritePipe"],[3,"ModifiersState"],[3,"RMLVO"],[3,"KeyRepeatEvent"],[4,"KeyRepeatKind"],[4,"Error"],[4,"Event"],[3,"Mode"],[3,"OutputInfo"],[3,"OutputMgr"],[4,"AutoThemer"],[4,"AutoPointer"],[3,"ThemeManager"],[3,"ThemedPointer"],[3,"DoubleMemPool"],[3,"MemPool"],[4,"Event"],[4,"FrameRequest"],[3,"BasicFrame"],[8,"Frame"],[3,"Window"],[3,"CursorTheme"],[3,"Resize"],[3,"Mode"],[3,"Transient"],[3,"DndAction"],[3,"Capability"],[3,"Proxy"],[3,"ReadEventsGuard"],[3,"WlEglSurface"],[3,"WlRegion"],[3,"WlDataDeviceManager"],[3,"WlDataSource"],[3,"WlDataOffer"],[3,"WlDisplay"],[3,"WlSurface"],[3,"WlShm"],[3,"WlBuffer"],[3,"WlSubsurface"],[3,"WlRegistry"],[3,"WlShellSurface"],[3,"WlCallback"],[3,"WlShmPool"],[3,"WlDataDevice"],[3,"WlSubcompositor"],[3,"WlKeyboard"],[3,"WlOutput"],[3,"WlTouch"],[3,"WlSeat"],[3,"WlPointer"],[3,"WlCompositor"],[3,"WlShell"],[3,"CursorImageBuffer"],[3,"Display"],[3,"GlobalManager"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Request"],[4,"NoMessage"],[3,"AnonymousObject"],[3,"WAYLAND_CLIENT_HANDLE"],[3,"WAYLAND_CLIENT_OPTION"],[3,"Anchor"],[3,"Gravity"],[3,"ConstraintAdjustment"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Event"],[4,"Request"],[3,"ZwpTabletV1"],[3,"ZwpTabletToolV2"],[3,"ZwpTabletPadGroupV2"],[3,"ZwpFullscreenShellModeFeedbackV1"],[3,"ZwpXwaylandKeyboardGrabV1"],[3,"ZwpKeyboardShortcutsInhibitorV1"],[3,"ZwpTabletSeatV2"],[3,"ZwpTabletPadRingV2"],[3,"ZwpXwaylandKeyboardGrabManagerV1"],[3,"ZwpTabletManagerV1"],[3,"ZxdgImportedV2"],[3,"ZxdgImporterV1"],[3,"ZwpInputPanelV1"],[3,"ZxdgExportedV1"],[3,"XdgPopup"],[3,"ZwpTextInputV1"],[3,"ZwpTabletSeatV1"],[3,"ZxdgPositionerV6"],[3,"ZwpTabletPadV2"],[3,"ZwpFullscreenShellV1"],[3,"ZxdgExportedV2"],[3,"ZxdgExporterV2"],[3,"ZxdgOutputV1"],[3,"ZwpLinuxDmabufV1"],[3,"ZwpIdleInhibitManagerV1"],[3,"ZwpPointerConstraintsV1"],[3,"ZxdgExporterV1"],[3,"ZwpRelativePointerManagerV1"],[3,"ZwpLockedPointerV1"],[3,"ZxdgSurfaceV6"],[3,"ZwpPointerGesturePinchV1"],[3,"XdgShell"],[3,"ZwpIdleInhibitorV1"],[3,"ZwpPointerGesturesV1"],[3,"ZxdgToplevelDecorationV1"],[3,"ZwpTabletPadStripV2"],[3,"ZwpTabletToolV1"],[3,"ZxdgDecorationManagerV1"],[3,"ZwpTabletV2"],[3,"ZwpPointerGestureSwipeV1"],[3,"ZwpInputPanelSurfaceV1"],[3,"ZwpInputMethodContextV1"],[3,"ZxdgImporterV2"],[3,"ZwpLinuxBufferParamsV1"],[3,"ZxdgPopupV6"],[3,"ZwpRelativePointerV1"],[3,"ZxdgOutputManagerV1"],[3,"ZwpTextInputManagerV1"],[3,"ZwpInputMethodV1"],[3,"ZxdgToplevelV6"],[3,"ZwpTabletManagerV2"],[3,"ZwpKeyboardShortcutsInhibitManagerV1"],[3,"ZxdgImportedV1"],[3,"ZxdgShellV6"],[3,"ZwpConfinedPointerV1"],[3,"XdgSurface"],[3,"Cursor"],[3,"EventQueue"],[3,"NewProxy"]]};
searchIndex["snake_game"]={"doc":"","items":[],"paths":[]};
searchIndex["stable_deref_trait"]={"doc":"This module defines an unsafe marker trait, StableDeref, for container types that deref to a fixed address which is valid even when the containing type is moved. For example, Box, Vec, Rc, Arc and String implement this trait. Additionally, it defines CloneStableDeref for types like Rc where clones deref to the same address.","items":[[8,"StableDeref","stable_deref_trait","An unsafe marker trait for types that deref to a stable address, even when moved. For example, this is implemented by Box, Vec, Rc, Arc and String, among others. Even when a Box is moved, the underlying storage remains at a fixed location.",N,N],[8,"CloneStableDeref","","An unsafe marker trait for types where clones deref to the same address. This has all the requirements of StableDeref, and additionally requires that after calling clone(), both the old and new value deref to the same address. For example, Rc and Arc implement CloneStableDeref, but Box and Vec do not.",N,N]],"paths":[]};
searchIndex["stb_truetype"]={"doc":"","items":[[3,"FontInfo","stb_truetype","",N,N],[3,"Vertex","","",N,N],[12,"x","","",0,N],[12,"y","","",0,N],[12,"cx","","",0,N],[12,"cy","","",0,N],[3,"Rect","","",N,N],[12,"x0","","",1,N],[12,"y0","","",1,N],[12,"x1","","",1,N],[12,"y1","","",1,N],[3,"HMetrics","","",N,N],[12,"advance_width","","",2,N],[12,"left_side_bearing","","",2,N],[3,"VMetrics","","",N,N],[12,"ascent","","",3,N],[12,"descent","","",3,N],[12,"line_gap","","",3,N],[3,"FontNameIter","","",N,N],[4,"VertexType","","",N,N],[13,"MoveTo","","",4,N],[13,"LineTo","","",4,N],[13,"CurveTo","","",4,N],[4,"PlatformId","","",N,N],[13,"Unicode","","",5,N],[13,"Mac","","",5,N],[13,"Iso","","",5,N],[13,"Microsoft","","",5,N],[4,"UnicodeEid","","",N,N],[13,"Unicode_1_0","","",6,N],[13,"Unicode_1_1","","",6,N],[13,"Iso_10646","","",6,N],[13,"Unicode_2_0_Bmp","","",6,N],[13,"Unicode_2_0_Full","","",6,N],[4,"MicrosoftEid","","",N,N],[13,"Symbol","","",7,N],[13,"UnicodeBMP","","",7,N],[13,"Shiftjis","","",7,N],[13,"UnicodeFull","","",7,N],[4,"MacEid","","",N,N],[13,"Roman","","",8,N],[13,"Arabic","","",8,N],[13,"Japanese","","",8,N],[13,"Hebrew","","",8,N],[13,"ChineseTrad","","",8,N],[13,"Greek","","",8,N],[13,"Korean","","",8,N],[13,"Russian","","",8,N],[4,"MicrosoftLang","","",N,N],[13,"English","","",9,N],[13,"Italian","","",9,N],[13,"Chinese","","",9,N],[13,"Japanese","","",9,N],[13,"Dutch","","",9,N],[13,"Korean","","",9,N],[13,"French","","",9,N],[13,"Russian","","",9,N],[13,"German","","",9,N],[13,"Hebrew","","",9,N],[13,"Swedish","","",9,N],[4,"MacLang","","",N,N],[13,"English","","",10,N],[13,"Japanese","","",10,N],[13,"Arabic","","",10,N],[13,"Korean","","",10,N],[13,"Dutch","","",10,N],[13,"Russian","","",10,N],[13,"French","","",10,N],[13,"Spanish","","",10,N],[13,"German","","",10,N],[13,"Swedish","","",10,N],[13,"Hebrew","","",10,N],[13,"ChineseSimplified","","",10,N],[13,"Italian","","",10,N],[13,"ChineseTrad","","",10,N],[4,"PlatformEncodingLanguageId","","",N,N],[13,"Unicode","","",11,N],[13,"Mac","","",11,N],[13,"Iso","","",11,N],[13,"Microsoft","","",11,N],[5,"is_font","","Return `true` if `data` holds a font stored in a format this crate recognizes, according to its signature in the initial bytes.",N,N],[5,"is_collection","","Return `true` if `data` holds a TrueType Collection, according to its signature in the initial bytes. A TrueType Collection stores several fonts in a single file, allowing them to share data for glyphs they have in common.",N,N],[5,"get_font_offset_for_index","","Each .ttf/.ttc file may have more than one font. Each font has a sequential index number starting from 0. Call this function to get the font offset for a given index; it returns None if the index is out of range. A regular .ttf file will only define one font and it always be at offset 0, so it will return Some(0) for index 0, and None for all other indices. You can just skip this step if you know it's that kind of font.",N,N],[11,"clone","","",12,[[["self"]],["fontinfo"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["vertex"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"vertex_type","","",0,[[["self"]],["vertextype"]]],[11,"clone","","",4,[[["self"]],["vertextype"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"eq","","",4,[[["self"],["vertextype"]],["bool"]]],[11,"clone","","",1,[[["self"]],["rect"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",2,[[["self"]],["hmetrics"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"clone","","",3,[[["self"]],["vmetrics"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"clone","","",5,[[["self"]],["platformid"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"eq","","",5,[[["self"],["platformid"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["platformid"]],["option",["ordering"]]]],[11,"cmp","","",5,[[["self"],["platformid"]],["ordering"]]],[11,"hash","","",5,N],[11,"clone","","",6,[[["self"]],["unicodeeid"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"eq","","",6,[[["self"],["unicodeeid"]],["bool"]]],[11,"partial_cmp","","",6,[[["self"],["unicodeeid"]],["option",["ordering"]]]],[11,"cmp","","",6,[[["self"],["unicodeeid"]],["ordering"]]],[11,"hash","","",6,N],[11,"clone","","",7,[[["self"]],["microsofteid"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"eq","","",7,[[["self"],["microsofteid"]],["bool"]]],[11,"partial_cmp","","",7,[[["self"],["microsofteid"]],["option",["ordering"]]]],[11,"cmp","","",7,[[["self"],["microsofteid"]],["ordering"]]],[11,"hash","","",7,N],[11,"clone","","",8,[[["self"]],["maceid"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"eq","","",8,[[["self"],["maceid"]],["bool"]]],[11,"partial_cmp","","",8,[[["self"],["maceid"]],["option",["ordering"]]]],[11,"cmp","","",8,[[["self"],["maceid"]],["ordering"]]],[11,"hash","","",8,N],[11,"clone","","",9,[[["self"]],["microsoftlang"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"eq","","",9,[[["self"],["microsoftlang"]],["bool"]]],[11,"partial_cmp","","",9,[[["self"],["microsoftlang"]],["option",["ordering"]]]],[11,"cmp","","",9,[[["self"],["microsoftlang"]],["ordering"]]],[11,"hash","","",9,N],[11,"clone","","",10,[[["self"]],["maclang"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"eq","","",10,[[["self"],["maclang"]],["bool"]]],[11,"partial_cmp","","",10,[[["self"],["maclang"]],["option",["ordering"]]]],[11,"cmp","","",10,[[["self"],["maclang"]],["ordering"]]],[11,"hash","","",10,N],[11,"clone","","",11,[[["self"]],["platformencodinglanguageid"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"eq","","",11,[[["self"],["platformencodinglanguageid"]],["bool"]]],[11,"ne","","",11,[[["self"],["platformencodinglanguageid"]],["bool"]]],[11,"partial_cmp","","",11,[[["self"],["platformencodinglanguageid"]],["option",["ordering"]]]],[11,"lt","","",11,[[["self"],["platformencodinglanguageid"]],["bool"]]],[11,"le","","",11,[[["self"],["platformencodinglanguageid"]],["bool"]]],[11,"gt","","",11,[[["self"],["platformencodinglanguageid"]],["bool"]]],[11,"ge","","",11,[[["self"],["platformencodinglanguageid"]],["bool"]]],[11,"cmp","","",11,[[["self"],["platformencodinglanguageid"]],["ordering"]]],[11,"hash","","",11,N],[11,"new","","Given an offset into the file that defines a font, this function builds the necessary cached info for the rest of the system.",12,[[["data"],["usize"]],["option",["fontinfo"]]]],[11,"get_num_glyphs","","",12,[[["self"]],["u32"]]],[11,"find_glyph_index","","If you're going to perform multiple operations on the same character and you want a speed-up, call this function with the character you're going to process, then use glyph-based functions instead of the codepoint-based functions.",12,[[["self"],["u32"]],["u32"]]],[11,"get_codepoint_shape","","Returns the series of vertices encoding the shape of the glyph for this codepoint.",12,[[["self"],["u32"]],["option",["vec"]]]],[11,"get_glyph_box","","Like `get_codepoint_box`, but takes a glyph index. Use this if you have cached the glyph index for a codepoint.",12,[[["self"],["u32"]],["option",["rect"]]]],[11,"get_codepoint_box","","Gets the bounding box of the visible part of the glyph, in unscaled coordinates",12,[[["self"],["u32"]],["option",["rect"]]]],[11,"is_glyph_empty","","returns true if nothing is drawn for this glyph",12,[[["self"],["u32"]],["bool"]]],[11,"get_glyph_shape","","Like `get_codepoint_shape`, but takes a glyph index instead. Use this if you have cached the glyph index for a codepoint.",12,[[["self"],["u32"]],["option",["vec"]]]],[11,"get_glyph_h_metrics","","like `get_codepoint_h_metrics`, but takes a glyph index instead. Use this if you have cached the glyph index for a codepoint.",12,[[["self"],["u32"]],["hmetrics"]]],[11,"get_glyph_kern_advance","","like `get_codepoint_kern_advance`, but takes glyph indices instead. Use this if you have cached the glyph indices for the codepoints.",12,[[["self"],["u32"],["u32"]],["i32"]]],[11,"get_codepoint_kern_advance","","an additional amount to add to the 'advance' value between cp1 and cp2",12,[[["self"],["u32"],["u32"]],["i32"]]],[11,"get_codepoint_h_metrics","","`left_side_bearing` is the offset from the current horizontal position to the left edge of the character `advance_width` is the offset from the current horizontal position to the next horizontal position these are expressed in unscaled coordinates",12,[[["self"],["u32"]],["hmetrics"]]],[11,"get_v_metrics","","`ascent` is the coordinate above the baseline the font extends; descent is the coordinate below the baseline the font extends (i.e. it is typically negative) `line_gap` is the spacing between one row's descent and the next row's ascent... so you should advance the vertical position by `ascent - descent + line_gap` these are expressed in unscaled coordinates, so you must multiply by the scale factor for a given size",12,[[["self"]],["vmetrics"]]],[11,"get_bounding_box","","the bounding box around all possible characters",12,[[["self"]],["rect",["i16"]]]],[11,"scale_for_pixel_height","","computes a scale factor to produce a font whose \"height\" is 'pixels' tall. Height is measured as the distance from the highest ascender to the lowest descender; in other words, it's equivalent to calling GetFontVMetrics and computing:       scale = pixels / (ascent - descent) so if you prefer to measure height by the ascent only, use a similar calculation.",12,[[["self"],["f32"]],["f32"]]],[11,"units_per_em","","Returns the units per EM square of this font.",12,[[["self"]],["u16"]]],[11,"scale_for_mapping_em_to_pixels","","computes a scale factor to produce a font whose EM size is mapped to `pixels` tall. This is probably what traditional APIs compute, but I'm not positive.",12,[[["self"],["f32"]],["f32"]]],[11,"get_glyph_bitmap_box_subpixel","","like `get_codepoint_bitmap_box_subpixel`, but takes a glyph index instead of a codepoint.",12,[[["self"],["u32"],["f32"],["f32"],["f32"],["f32"]],["option",["rect"]]]],[11,"get_glyph_bitmap_box","","like `get_codepoint_bitmap_box`, but takes a glyph index instead of a codepoint.",12,[[["self"],["u32"],["f32"],["f32"]],["option",["rect"]]]],[11,"get_codepoint_bitmap_box_subpixel","","same as get_codepoint_bitmap_box, but you can specify a subpixel shift for the character",12,[[["self"],["u32"],["f32"],["f32"],["f32"],["f32"]],["option",["rect"]]]],[11,"get_codepoint_bitmap_box","","get the bounding box of the bitmap centered around the glyph origin; so the bitmap width is x1-x0, height is y1-y0, and location to place the bitmap top left is (left_side_bearing*scale, y0). (Note that the bitmap uses y-increases-down, but the shape uses y-increases-up, so CodepointBitmapBox and CodepointBox are inverted.)",12,[[["self"],["u32"],["f32"],["f32"]],["option",["rect"]]]],[11,"get_font_name_strings","","",12,[[["self"]],["fontnameiter"]]],[11,"clone","","",13,[[["self"]],["fontnameiter"]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"size_hint","","",13,N],[11,"count","","",13,[[["self"]],["usize"]]],[11,"last","","",13,[[["self"]],["option"]]],[11,"nth","","",13,[[["self"],["usize"]],["option"]]]],"paths":[[3,"Vertex"],[3,"Rect"],[3,"HMetrics"],[3,"VMetrics"],[4,"VertexType"],[4,"PlatformId"],[4,"UnicodeEid"],[4,"MicrosoftEid"],[4,"MacEid"],[4,"MicrosoftLang"],[4,"MacLang"],[4,"PlatformEncodingLanguageId"],[3,"FontInfo"],[3,"FontNameIter"]]};
searchIndex["syn"]={"doc":"Syn is a parsing library for parsing a stream of Rust tokens into a syntax tree of Rust source code.","items":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal variable name.",N,N],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",N,N],[12,"pound_token","","",0,N],[12,"style","","",0,N],[12,"bracket_token","","",0,N],[12,"path","","",0,N],[12,"tts","","",0,N],[3,"MetaList","","A structured list within an attribute, like `derive(Copy, Clone)`.",N,N],[12,"ident","","",1,N],[12,"paren_token","","",1,N],[12,"nested","","",1,N],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature = \"nightly\"`.",N,N],[12,"ident","","",2,N],[12,"eq_token","","",2,N],[12,"lit","","",2,N],[3,"Field","","A field of a struct or enum variant.",N,N],[12,"attrs","","Attributes tagged on the field.",3,N],[12,"vis","","Visibility of the field.",3,N],[12,"ident","","Name of the field, if any.",3,N],[12,"colon_token","","",3,N],[12,"ty","","Type of the field.",3,N],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point { x: f64, y: f64 }`.",N,N],[12,"brace_token","","",4,N],[12,"named","","",4,N],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.",N,N],[12,"paren_token","","",5,N],[12,"unnamed","","",5,N],[3,"Variant","","An enum variant.",N,N],[12,"attrs","","Attributes tagged on the variant.",6,N],[12,"ident","","Name of the variant.",6,N],[12,"fields","","Content stored in the variant.",6,N],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,N],[3,"VisCrate","","A crate-level visibility: `crate`.",N,N],[12,"crate_token","","",7,N],[3,"VisPublic","","A public visibility level: `pub`.",N,N],[12,"pub_token","","",8,N],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or `pub(super)` or `pub(crate)` or `pub(in some::module)`.",N,N],[12,"pub_token","","",9,N],[12,"paren_token","","",9,N],[12,"in_token","","",9,N],[12,"path","","",9,N],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",N,N],[3,"ExprAssign","","An assignment expression: `a = compute()`.",N,N],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",N,N],[3,"ExprAsync","","An async block: `async { ... }`.",N,N],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",N,N],[12,"attrs","","",10,N],[12,"left","","",10,N],[12,"op","","",10,N],[12,"right","","",10,N],[3,"ExprBlock","","A blocked scope: `{ ... }`.",N,N],[3,"ExprBox","","A box expression: `box f`.",N,N],[3,"ExprBreak","","A `break`, with an optional label to break and an optional expression.",N,N],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",N,N],[12,"attrs","","",11,N],[12,"func","","",11,N],[12,"paren_token","","",11,N],[12,"args","","",11,N],[3,"ExprCast","","A cast expression: `foo as f64`.",N,N],[12,"attrs","","",12,N],[12,"expr","","",12,N],[12,"as_token","","",12,N],[12,"ty","","",12,N],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",N,N],[3,"ExprContinue","","A `continue`, with an optional label.",N,N],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple struct field (`obj.0`).",N,N],[12,"attrs","","",13,N],[12,"base","","",13,N],[12,"dot_token","","",13,N],[12,"member","","",13,N],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",N,N],[3,"ExprGroup","","An expression contained within invisible delimiters.",N,N],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr { ... } else { ... }`.",N,N],[3,"ExprInPlace","","A placement expression: `place <- value`.",N,N],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",N,N],[12,"attrs","","",14,N],[12,"expr","","",14,N],[12,"bracket_token","","",14,N],[12,"index","","",14,N],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",N,N],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",N,N],[12,"attrs","","",15,N],[12,"lit","","",15,N],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",N,N],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",N,N],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {} }`.",N,N],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",N,N],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",N,N],[12,"attrs","","",16,N],[12,"paren_token","","",16,N],[12,"expr","","",16,N],[3,"ExprPath","","A path like `std::mem::replace` possibly containing generic parameters and a qualified self-type.",N,N],[12,"attrs","","",17,N],[12,"qself","","",17,N],[12,"path","","",17,N],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",N,N],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",N,N],[3,"ExprRepeat","","An array literal constructed from one repeated element: `[0u8; N]`.",N,N],[3,"ExprReturn","","A `return`, with an optional value to be returned.",N,N],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",N,N],[3,"ExprTry","","A try-expression: `expr?`.",N,N],[3,"ExprTryBlock","","A try block: `try { ... }`.",N,N],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",N,N],[3,"ExprType","","A type ascription expression: `foo: f64`.",N,N],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",N,N],[12,"attrs","","",18,N],[12,"op","","",18,N],[12,"expr","","",18,N],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",N,N],[3,"ExprVerbatim","","Tokens in expression position not interpreted by Syn.",N,N],[12,"tts","","",19,N],[3,"ExprWhile","","A while loop: `while expr { ... }`.",N,N],[3,"ExprYield","","A yield expression: `yield expr`.",N,N],[3,"Index","","The index of an unnamed tuple struct field.",N,N],[12,"index","","",20,N],[12,"span","","",20,N],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",N,N],[12,"for_token","","",21,N],[12,"lt_token","","",21,N],[12,"lifetimes","","",21,N],[12,"gt_token","","",21,N],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",N,N],[12,"attrs","","",22,N],[12,"const_token","","",22,N],[12,"ident","","",22,N],[12,"colon_token","","",22,N],[12,"ty","","",22,N],[12,"eq_token","","",22,N],[12,"default","","",22,N],[3,"Generics","","Lifetimes and type parameters attached to a declaration of a function, enum, trait, etc.",N,N],[12,"lt_token","","",23,N],[12,"params","","",23,N],[12,"gt_token","","",23,N],[12,"where_clause","","",23,N],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",N,N],[12,"attrs","","",24,N],[12,"lifetime","","",24,N],[12,"colon_token","","",24,N],[12,"bounds","","",24,N],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",N,N],[12,"lhs_ty","","",25,N],[12,"eq_token","","",25,N],[12,"rhs_ty","","",25,N],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",N,N],[12,"lifetime","","",26,N],[12,"colon_token","","",26,N],[12,"bounds","","",26,N],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.",N,N],[12,"lifetimes","","Any lifetimes from a `for` binding",27,N],[12,"bounded_ty","","The type being bounded",27,N],[12,"colon_token","","",27,N],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",27,N],[3,"TraitBound","","A trait used as a bound on a type parameter.",N,N],[12,"paren_token","","",28,N],[12,"modifier","","",28,N],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",28,N],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",28,N],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",N,N],[12,"attrs","","",29,N],[12,"ident","","",29,N],[12,"colon_token","","",29,N],[12,"bounds","","",29,N],[12,"eq_token","","",29,N],[12,"default","","",29,N],[3,"WhereClause","","A `where` clause in a definition: `where T: Deserialize<'de>, D: 'static`.",N,N],[12,"where_token","","",30,N],[12,"predicates","","",30,N],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",N,N],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",N,N],[3,"Lifetime","","A Rust lifetime: `'a`.",N,N],[12,"apostrophe","","",31,N],[12,"ident","","",31,N],[3,"LitBool","","A boolean literal: `true` or `false`.",N,N],[12,"value","","",32,N],[12,"span","","",32,N],[3,"LitByte","","A byte literal: `b'f'`.",N,N],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",N,N],[3,"LitChar","","A character literal: `'a'`.",N,N],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",N,N],[3,"LitInt","","An integer literal: `1` or `1u16`.",N,N],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",N,N],[3,"LitVerbatim","","A raw token literal not interpreted by Syn, possibly because it represents an integer larger than 64 bits.",N,N],[12,"token","","",33,N],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",N,N],[12,"path","","",34,N],[12,"bang_token","","",34,N],[12,"delimiter","","",34,N],[12,"tts","","",34,N],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",N,N],[12,"enum_token","","",35,N],[12,"brace_token","","",35,N],[12,"variants","","",35,N],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",N,N],[12,"struct_token","","",36,N],[12,"fields","","",36,N],[12,"semi_token","","",36,N],[3,"DataUnion","","A tagged union input to a `proc_macro_derive` macro.",N,N],[12,"union_token","","",37,N],[12,"fields","","",37,N],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",N,N],[12,"attrs","","Attributes tagged on the whole struct or enum.",38,N],[12,"vis","","Visibility of the struct or enum.",38,N],[12,"ident","","Name of the struct or enum.",38,N],[12,"generics","","Generics required to complete the definition.",38,N],[12,"data","","Data within the struct or enum.",38,N],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",N,N],[12,"extern_token","","",39,N],[12,"name","","",39,N],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize) -> bool`.",N,N],[12,"name","","",40,N],[12,"ty","","",40,N],[3,"TypeArray","","A fixed size array type: `[T; n]`.",N,N],[12,"bracket_token","","",41,N],[12,"elem","","",41,N],[12,"semi_token","","",41,N],[12,"len","","",41,N],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",N,N],[12,"lifetimes","","",42,N],[12,"unsafety","","",42,N],[12,"abi","","",42,N],[12,"fn_token","","",42,N],[12,"paren_token","","",42,N],[12,"inputs","","",42,N],[12,"variadic","","",42,N],[12,"output","","",42,N],[3,"TypeGroup","","A type contained within invisible delimiters.",N,N],[12,"group_token","","",43,N],[12,"elem","","",43,N],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or a lifetime.",N,N],[12,"impl_token","","",44,N],[12,"bounds","","",44,N],[3,"TypeInfer","","Indication that a type should be inferred by the compiler: `_`.",N,N],[12,"underscore_token","","",45,N],[3,"TypeMacro","","A macro in the type position.",N,N],[12,"mac","","",46,N],[3,"TypeNever","","The never type: `!`.",N,N],[12,"bang_token","","",47,N],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",N,N],[12,"paren_token","","",48,N],[12,"elem","","",48,N],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with a self-type as in `<Vec<T> as SomeTrait>::Associated`.",N,N],[12,"qself","","",49,N],[12,"path","","",49,N],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",N,N],[12,"star_token","","",50,N],[12,"const_token","","",50,N],[12,"mutability","","",50,N],[12,"elem","","",50,N],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",N,N],[12,"and_token","","",51,N],[12,"lifetime","","",51,N],[12,"mutability","","",51,N],[12,"elem","","",51,N],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",N,N],[12,"bracket_token","","",52,N],[12,"elem","","",52,N],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a trait or a lifetime.",N,N],[12,"dyn_token","","",53,N],[12,"bounds","","",53,N],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",N,N],[12,"paren_token","","",54,N],[12,"elems","","",54,N],[3,"TypeVerbatim","","Tokens in type position not interpreted by Syn.",N,N],[12,"tts","","",55,N],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>` in `HashMap<K, V>`.",N,N],[12,"colon2_token","","",56,N],[12,"lt_token","","",56,N],[12,"args","","",56,N],[12,"gt_token","","",56,N],[3,"Binding","","A binding (equality constraint) on an associated type: `Item = u8`.",N,N],[12,"ident","","",57,N],[12,"eq_token","","",57,N],[12,"ty","","",57,N],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",N,N],[12,"ident","","",58,N],[12,"colon_token","","",58,N],[12,"bounds","","",58,N],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in `Fn(A,B) -> C`.",N,N],[12,"paren_token","","",59,N],[12,"inputs","","`(A, B)`",59,N],[12,"output","","`C`",59,N],[3,"Path","","A path at which a named item is exported: `std::collections::HashMap`.",N,N],[12,"leading_colon","","",60,N],[12,"segments","","",60,N],[3,"PathSegment","","A segment of a path together with any path arguments on that segment.",N,N],[12,"ident","","",61,N],[12,"arguments","","",61,N],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T as Display>::fmt`.",N,N],[12,"lt_token","","",62,N],[12,"ty","","",62,N],[12,"position","","",62,N],[12,"as_token","","",62,N],[12,"gt_token","","",62,N],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and attributes that are contained within an item.",N,N],[13,"Outer","","",63,N],[13,"Inner","","",63,N],[4,"Meta","","Content of a compile-time structured attribute.",N,N],[13,"Word","","",64,N],[13,"List","","A structured list within an attribute, like `derive(Copy, Clone)`.",64,N],[13,"NameValue","","A name-value pair within an attribute, like `feature = \"nightly\"`.",64,N],[4,"NestedMeta","","Element of a compile-time attribute list.",N,N],[13,"Meta","","A structured meta item, like the `Copy` in `#[derive(Copy)]` which would be a nested `Meta::Word`.",65,N],[13,"Literal","","A Rust literal, like the `\"new_name\"` in `#[rename(\"new_name\")]`.",65,N],[4,"Fields","","Data stored within an enum variant or struct.",N,N],[13,"Named","","Named fields of a struct or struct variant such as `Point { x: f64, y: f64 }`.",66,N],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as `Some(T)`.",66,N],[13,"Unit","","Unit struct or unit variant such as `None`.",66,N],[4,"Visibility","","The visibility level of an item: inherited or `pub` or `pub(restricted)`.",N,N],[13,"Public","","A public visibility level: `pub`.",67,N],[13,"Crate","","A crate-level visibility: `crate`.",67,N],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or `pub(super)` or `pub(crate)` or `pub(in some::module)`.",67,N],[13,"Inherited","","An inherited visibility, which usually means private.",67,N],[4,"Expr","","A Rust expression.",N,N],[13,"Box","","A box expression: `box f`.",68,N],[13,"InPlace","","A placement expression: `place <- value`.",68,N],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",68,N],[13,"Call","","A function call expression: `invoke(a, b)`.",68,N],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",68,N],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",68,N],[13,"Binary","","A binary operation: `a + b`, `a * b`.",68,N],[13,"Unary","","A unary operation: `!x`, `*x`.",68,N],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",68,N],[13,"Cast","","A cast expression: `foo as f64`.",68,N],[13,"Type","","A type ascription expression: `foo: f64`.",68,N],[13,"Let","","A `let` guard: `let Some(x) = opt`.",68,N],[13,"If","","An `if` expression with an optional `else` block: `if expr { ... } else { ... }`.",68,N],[13,"While","","A while loop: `while expr { ... }`.",68,N],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",68,N],[13,"Loop","","Conditionless loop: `loop { ... }`.",68,N],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {} }`.",68,N],[13,"Closure","","A closure expression: `|a, b| a + b`.",68,N],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",68,N],[13,"Block","","A blocked scope: `{ ... }`.",68,N],[13,"Assign","","An assignment expression: `a = compute()`.",68,N],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",68,N],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple struct field (`obj.0`).",68,N],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",68,N],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",68,N],[13,"Path","","A path like `std::mem::replace` possibly containing generic parameters and a qualified self-type.",68,N],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",68,N],[13,"Break","","A `break`, with an optional label to break and an optional expression.",68,N],[13,"Continue","","A `continue`, with an optional label.",68,N],[13,"Return","","A `return`, with an optional value to be returned.",68,N],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",68,N],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",68,N],[13,"Repeat","","An array literal constructed from one repeated element: `[0u8; N]`.",68,N],[13,"Paren","","A parenthesized expression: `(a + b)`.",68,N],[13,"Group","","An expression contained within invisible delimiters.",68,N],[13,"Try","","A try-expression: `expr?`.",68,N],[13,"Async","","An async block: `async { ... }`.",68,N],[13,"TryBlock","","A try block: `try { ... }`.",68,N],[13,"Yield","","A yield expression: `yield expr`.",68,N],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",68,N],[4,"Member","","A struct or tuple struct field accessed in a struct literal or field expression.",N,N],[13,"Named","","A named field like `self.x`.",69,N],[13,"Unnamed","","An unnamed field like `self.0`.",69,N],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T: Into<String>`, `'a: 'b`, `const LEN: usize`.",N,N],[13,"Type","","A generic type parameter: `T: Into<String>`.",70,N],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",70,N],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",70,N],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the `?` in `?Sized`.",N,N],[13,"None","","",71,N],[13,"Maybe","","",71,N],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",N,N],[13,"Trait","","",72,N],[13,"Lifetime","","",72,N],[4,"WherePredicate","","A single predicate in a `where` clause: `T: Deserialize<'de>`.",N,N],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>: Trait<'c>`.",73,N],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",73,N],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",73,N],[4,"FloatSuffix","","The suffix on a floating point literal if any, like the `f32` in `1.0f32`.",N,N],[13,"F32","","",74,N],[13,"F64","","",74,N],[13,"None","","",74,N],[4,"IntSuffix","","The suffix on an integer literal if any, like the `u8` in `127u8`.",N,N],[13,"I8","","",75,N],[13,"I16","","",75,N],[13,"I32","","",75,N],[13,"I64","","",75,N],[13,"I128","","",75,N],[13,"Isize","","",75,N],[13,"U8","","",75,N],[13,"U16","","",75,N],[13,"U32","","",75,N],[13,"U64","","",75,N],[13,"U128","","",75,N],[13,"Usize","","",75,N],[13,"None","","",75,N],[4,"Lit","","A Rust literal such as a string or integer or boolean.",N,N],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",76,N],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",76,N],[13,"Byte","","A byte literal: `b'f'`.",76,N],[13,"Char","","A character literal: `'a'`.",76,N],[13,"Int","","An integer literal: `1` or `1u16`.",76,N],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",76,N],[13,"Bool","","A boolean literal: `true` or `false`.",76,N],[13,"Verbatim","","A raw token literal not interpreted by Syn, possibly because it represents an integer larger than 64 bits.",76,N],[4,"StrStyle","","The style of a string literal, either plain quoted or a raw string like `r##\"data\"##`.",N,N],[13,"Cooked","","An ordinary string like `\"data\"`.",77,N],[13,"Raw","","A raw string like `r##\"data\"##`.",77,N],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or `m!{...}` or `m![...]`.",N,N],[13,"Paren","","",78,N],[13,"Brace","","",78,N],[13,"Bracket","","",78,N],[4,"Data","","The storage of a struct, enum or union data structure.",N,N],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",79,N],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",79,N],[13,"Union","","A tagged union input to a `proc_macro_derive` macro.",79,N],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",N,N],[13,"Add","","The `+` operator (addition)",80,N],[13,"Sub","","The `-` operator (subtraction)",80,N],[13,"Mul","","The `*` operator (multiplication)",80,N],[13,"Div","","The `/` operator (division)",80,N],[13,"Rem","","The `%` operator (modulus)",80,N],[13,"And","","The `&&` operator (logical and)",80,N],[13,"Or","","The `||` operator (logical or)",80,N],[13,"BitXor","","The `^` operator (bitwise xor)",80,N],[13,"BitAnd","","The `&` operator (bitwise and)",80,N],[13,"BitOr","","The `|` operator (bitwise or)",80,N],[13,"Shl","","The `<<` operator (shift left)",80,N],[13,"Shr","","The `>>` operator (shift right)",80,N],[13,"Eq","","The `==` operator (equality)",80,N],[13,"Lt","","The `<` operator (less than)",80,N],[13,"Le","","The `<=` operator (less than or equal to)",80,N],[13,"Ne","","The `!=` operator (not equal to)",80,N],[13,"Ge","","The `>=` operator (greater than or equal to)",80,N],[13,"Gt","","The `>` operator (greater than)",80,N],[13,"AddEq","","The `+=` operator",80,N],[13,"SubEq","","The `-=` operator",80,N],[13,"MulEq","","The `*=` operator",80,N],[13,"DivEq","","The `/=` operator",80,N],[13,"RemEq","","The `%=` operator",80,N],[13,"BitXorEq","","The `^=` operator",80,N],[13,"BitAndEq","","The `&=` operator",80,N],[13,"BitOrEq","","The `|=` operator",80,N],[13,"ShlEq","","The `<<=` operator",80,N],[13,"ShrEq","","The `>>=` operator",80,N],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",N,N],[13,"Deref","","The `*` operator for dereferencing",81,N],[13,"Not","","The `!` operator for logical inversion",81,N],[13,"Neg","","The `-` operator for negation",81,N],[4,"BareFnArgName","","Name of an argument in a function type: the `n` in `fn(n: usize)`.",N,N],[13,"Named","","Argument given a name.",82,N],[13,"Wild","","Argument not given a name, matched with `_`.",82,N],[4,"ReturnType","","Return type of a function signature.",N,N],[13,"Default","","Return type is not specified.",83,N],[13,"Type","","A particular type is returned.",83,N],[4,"Type","","The possible types that a Rust value could have.",N,N],[13,"Slice","","A dynamically sized slice type: `[T]`.",84,N],[13,"Array","","A fixed size array type: `[T; n]`.",84,N],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",84,N],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",84,N],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",84,N],[13,"Never","","The never type: `!`.",84,N],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",84,N],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with a self-type as in `<Vec<T> as SomeTrait>::Associated`.",84,N],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where `Bound` is a trait or a lifetime.",84,N],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a trait or a lifetime.",84,N],[13,"Paren","","A parenthesized type equivalent to the inner type.",84,N],[13,"Group","","A type contained within invisible delimiters.",84,N],[13,"Infer","","Indication that a type should be inferred by the compiler: `_`.",84,N],[13,"Macro","","A macro in the type position.",84,N],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",84,N],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item = T`.",N,N],[13,"Lifetime","","A lifetime argument.",85,N],[13,"Type","","A type argument.",85,N],[13,"Binding","","A binding (equality constraint) on an associated type: the `Item = u8` in `Iterator<Item = u8>`.",85,N],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",85,N],[13,"Const","","A const expression. Must be inside of a block.",85,N],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path segment.",N,N],[13,"None","","",86,N],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",86,N],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",86,N],[5,"parse","","Parse tokens of source code into the chosen syntax tree node.",N,[[["tokenstream"]],["result",["error"]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax tree node.",N,[[["tokenstream"]],["result",["error"]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree node.",N,[[["str"]],["result",["error"]]]],[0,"token","","Tokens representing Rust punctuation, keywords, and delimiters.",N,N],[3,"Underscore","syn::token","`_`",N,N],[12,"spans","","",87,N],[3,"Abstract","","`abstract`",N,N],[12,"span","","",88,N],[3,"As","","`as`",N,N],[12,"span","","",89,N],[3,"Async","","`async`",N,N],[12,"span","","",90,N],[3,"Auto","","`auto`",N,N],[12,"span","","",91,N],[3,"Become","","`become`",N,N],[12,"span","","",92,N],[3,"Box","","`box`",N,N],[12,"span","","",93,N],[3,"Break","","`break`",N,N],[12,"span","","",94,N],[3,"CapSelf","","`Self`",N,N],[12,"span","","",95,N],[3,"Const","","`const`",N,N],[12,"span","","",96,N],[3,"Continue","","`continue`",N,N],[12,"span","","",97,N],[3,"Crate","","`crate`",N,N],[12,"span","","",98,N],[3,"Default","","`default`",N,N],[12,"span","","",99,N],[3,"Do","","`do`",N,N],[12,"span","","",100,N],[3,"Dyn","","`dyn`",N,N],[12,"span","","",101,N],[3,"Else","","`else`",N,N],[12,"span","","",102,N],[3,"Enum","","`enum`",N,N],[12,"span","","",103,N],[3,"Existential","","`existential`",N,N],[12,"span","","",104,N],[3,"Extern","","`extern`",N,N],[12,"span","","",105,N],[3,"Final","","`final`",N,N],[12,"span","","",106,N],[3,"Fn","","`fn`",N,N],[12,"span","","",107,N],[3,"For","","`for`",N,N],[12,"span","","",108,N],[3,"If","","`if`",N,N],[12,"span","","",109,N],[3,"Impl","","`impl`",N,N],[12,"span","","",110,N],[3,"In","","`in`",N,N],[12,"span","","",111,N],[3,"Let","","`let`",N,N],[12,"span","","",112,N],[3,"Loop","","`loop`",N,N],[12,"span","","",113,N],[3,"Macro","","`macro`",N,N],[12,"span","","",114,N],[3,"Match","","`match`",N,N],[12,"span","","",115,N],[3,"Mod","","`mod`",N,N],[12,"span","","",116,N],[3,"Move","","`move`",N,N],[12,"span","","",117,N],[3,"Mut","","`mut`",N,N],[12,"span","","",118,N],[3,"Override","","`override`",N,N],[12,"span","","",119,N],[3,"Priv","","`priv`",N,N],[12,"span","","",120,N],[3,"Pub","","`pub`",N,N],[12,"span","","",121,N],[3,"Ref","","`ref`",N,N],[12,"span","","",122,N],[3,"Return","","`return`",N,N],[12,"span","","",123,N],[3,"Self_","","`self`",N,N],[12,"span","","",124,N],[3,"Static","","`static`",N,N],[12,"span","","",125,N],[3,"Struct","","`struct`",N,N],[12,"span","","",126,N],[3,"Super","","`super`",N,N],[12,"span","","",127,N],[3,"Trait","","`trait`",N,N],[12,"span","","",128,N],[3,"Try","","`try`",N,N],[12,"span","","",129,N],[3,"Type","","`type`",N,N],[12,"span","","",130,N],[3,"Typeof","","`typeof`",N,N],[12,"span","","",131,N],[3,"Union","","`union`",N,N],[12,"span","","",132,N],[3,"Unsafe","","`unsafe`",N,N],[12,"span","","",133,N],[3,"Unsized","","`unsized`",N,N],[12,"span","","",134,N],[3,"Use","","`use`",N,N],[12,"span","","",135,N],[3,"Virtual","","`virtual`",N,N],[12,"span","","",136,N],[3,"Where","","`where`",N,N],[12,"span","","",137,N],[3,"While","","`while`",N,N],[12,"span","","",138,N],[3,"Yield","","`yield`",N,N],[12,"span","","",139,N],[3,"Add","","`+`",N,N],[12,"spans","","",140,N],[3,"AddEq","","`+=`",N,N],[12,"spans","","",141,N],[3,"And","","`&`",N,N],[12,"spans","","",142,N],[3,"AndAnd","","`&&`",N,N],[12,"spans","","",143,N],[3,"AndEq","","`&=`",N,N],[12,"spans","","",144,N],[3,"At","","`@`",N,N],[12,"spans","","",145,N],[3,"Bang","","`!`",N,N],[12,"spans","","",146,N],[3,"Caret","","`^`",N,N],[12,"spans","","",147,N],[3,"CaretEq","","`^=`",N,N],[12,"spans","","",148,N],[3,"Colon","","`:`",N,N],[12,"spans","","",149,N],[3,"Colon2","","`::`",N,N],[12,"spans","","",150,N],[3,"Comma","","`,`",N,N],[12,"spans","","",151,N],[3,"Div","","`/`",N,N],[12,"spans","","",152,N],[3,"DivEq","","`/=`",N,N],[12,"spans","","",153,N],[3,"Dollar","","`$`",N,N],[12,"spans","","",154,N],[3,"Dot","","`.`",N,N],[12,"spans","","",155,N],[3,"Dot2","","`..`",N,N],[12,"spans","","",156,N],[3,"Dot3","","`...`",N,N],[12,"spans","","",157,N],[3,"DotDotEq","","`..=`",N,N],[12,"spans","","",158,N],[3,"Eq","","`=`",N,N],[12,"spans","","",159,N],[3,"EqEq","","`==`",N,N],[12,"spans","","",160,N],[3,"Ge","","`>=`",N,N],[12,"spans","","",161,N],[3,"Gt","","`>`",N,N],[12,"spans","","",162,N],[3,"Le","","`<=`",N,N],[12,"spans","","",163,N],[3,"Lt","","`<`",N,N],[12,"spans","","",164,N],[3,"MulEq","","`*=`",N,N],[12,"spans","","",165,N],[3,"Ne","","`!=`",N,N],[12,"spans","","",166,N],[3,"Or","","`|`",N,N],[12,"spans","","",167,N],[3,"OrEq","","`|=`",N,N],[12,"spans","","",168,N],[3,"OrOr","","`||`",N,N],[12,"spans","","",169,N],[3,"Pound","","`#`",N,N],[12,"spans","","",170,N],[3,"Question","","`?`",N,N],[12,"spans","","",171,N],[3,"RArrow","","`->`",N,N],[12,"spans","","",172,N],[3,"LArrow","","`<-`",N,N],[12,"spans","","",173,N],[3,"Rem","","`%`",N,N],[12,"spans","","",174,N],[3,"RemEq","","`%=`",N,N],[12,"spans","","",175,N],[3,"FatArrow","","`=>`",N,N],[12,"spans","","",176,N],[3,"Semi","","`;`",N,N],[12,"spans","","",177,N],[3,"Shl","","`<<`",N,N],[12,"spans","","",178,N],[3,"ShlEq","","`<<=`",N,N],[12,"spans","","",179,N],[3,"Shr","","`>>`",N,N],[12,"spans","","",180,N],[3,"ShrEq","","`>>=`",N,N],[12,"spans","","",181,N],[3,"Star","","`*`",N,N],[12,"spans","","",182,N],[3,"Sub","","`-`",N,N],[12,"spans","","",183,N],[3,"SubEq","","`-=`",N,N],[12,"spans","","",184,N],[3,"Tilde","","`~`",N,N],[12,"spans","","",185,N],[3,"Brace","","`{...}`",N,N],[12,"span","","",186,N],[3,"Bracket","","`[...]`",N,N],[12,"span","","",187,N],[3,"Paren","","`(...)`",N,N],[12,"span","","",188,N],[3,"Group","","None-delimited group",N,N],[12,"span","","",189,N],[8,"Token","","Marker trait for types that represent single tokens.",N,N],[11,"peek","syn","",31,[[["cursor"]],["bool"]]],[11,"display","","",31,[[],["str"]]],[11,"peek","","",76,[[["cursor"]],["bool"]]],[11,"display","","",76,[[],["str"]]],[11,"peek","","",190,[[["cursor"]],["bool"]]],[11,"display","","",190,[[],["str"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"peek","","",192,[[["cursor"]],["bool"]]],[11,"display","","",192,[[],["str"]]],[11,"peek","","",193,[[["cursor"]],["bool"]]],[11,"display","","",193,[[],["str"]]],[11,"peek","","",194,[[["cursor"]],["bool"]]],[11,"display","","",194,[[],["str"]]],[11,"peek","","",195,[[["cursor"]],["bool"]]],[11,"display","","",195,[[],["str"]]],[11,"peek","","",32,[[["cursor"]],["bool"]]],[11,"display","","",32,[[],["str"]]],[11,"clone","syn::token","",87,[[["self"]],["underscore"]]],[11,"default","","",87,[[],["self"]]],[11,"to_tokens","","",87,[[["self"],["tokenstream"]]]],[11,"parse","","",87,[[["parsestream"]],["result"]]],[11,"peek","","",87,[[["cursor"]],["bool"]]],[11,"display","","",87,[[],["str"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"clone","","",88,[[["self"]],["abstract"]]],[11,"default","","",88,[[],["self"]]],[11,"to_tokens","","",88,[[["self"],["tokenstream"]]]],[11,"parse","","",88,[[["parsestream"]],["result"]]],[11,"peek","","",88,[[["cursor"]],["bool"]]],[11,"display","","",88,[[],["str"]]],[11,"clone","","",89,[[["self"]],["as"]]],[11,"default","","",89,[[],["self"]]],[11,"to_tokens","","",89,[[["self"],["tokenstream"]]]],[11,"parse","","",89,[[["parsestream"]],["result"]]],[11,"peek","","",89,[[["cursor"]],["bool"]]],[11,"display","","",89,[[],["str"]]],[11,"clone","","",90,[[["self"]],["async"]]],[11,"default","","",90,[[],["self"]]],[11,"to_tokens","","",90,[[["self"],["tokenstream"]]]],[11,"parse","","",90,[[["parsestream"]],["result"]]],[11,"peek","","",90,[[["cursor"]],["bool"]]],[11,"display","","",90,[[],["str"]]],[11,"clone","","",91,[[["self"]],["auto"]]],[11,"default","","",91,[[],["self"]]],[11,"to_tokens","","",91,[[["self"],["tokenstream"]]]],[11,"parse","","",91,[[["parsestream"]],["result"]]],[11,"peek","","",91,[[["cursor"]],["bool"]]],[11,"display","","",91,[[],["str"]]],[11,"clone","","",92,[[["self"]],["become"]]],[11,"default","","",92,[[],["self"]]],[11,"to_tokens","","",92,[[["self"],["tokenstream"]]]],[11,"parse","","",92,[[["parsestream"]],["result"]]],[11,"peek","","",92,[[["cursor"]],["bool"]]],[11,"display","","",92,[[],["str"]]],[11,"clone","","",93,[[["self"]],["box"]]],[11,"default","","",93,[[],["self"]]],[11,"to_tokens","","",93,[[["self"],["tokenstream"]]]],[11,"parse","","",93,[[["parsestream"]],["result"]]],[11,"peek","","",93,[[["cursor"]],["bool"]]],[11,"display","","",93,[[],["str"]]],[11,"clone","","",94,[[["self"]],["break"]]],[11,"default","","",94,[[],["self"]]],[11,"to_tokens","","",94,[[["self"],["tokenstream"]]]],[11,"parse","","",94,[[["parsestream"]],["result"]]],[11,"peek","","",94,[[["cursor"]],["bool"]]],[11,"display","","",94,[[],["str"]]],[11,"clone","","",95,[[["self"]],["capself"]]],[11,"default","","",95,[[],["self"]]],[11,"to_tokens","","",95,[[["self"],["tokenstream"]]]],[11,"parse","","",95,[[["parsestream"]],["result"]]],[11,"peek","","",95,[[["cursor"]],["bool"]]],[11,"display","","",95,[[],["str"]]],[11,"clone","","",96,[[["self"]],["const"]]],[11,"default","","",96,[[],["self"]]],[11,"to_tokens","","",96,[[["self"],["tokenstream"]]]],[11,"parse","","",96,[[["parsestream"]],["result"]]],[11,"peek","","",96,[[["cursor"]],["bool"]]],[11,"display","","",96,[[],["str"]]],[11,"clone","","",97,[[["self"]],["continue"]]],[11,"default","","",97,[[],["self"]]],[11,"to_tokens","","",97,[[["self"],["tokenstream"]]]],[11,"parse","","",97,[[["parsestream"]],["result"]]],[11,"peek","","",97,[[["cursor"]],["bool"]]],[11,"display","","",97,[[],["str"]]],[11,"clone","","",98,[[["self"]],["crate"]]],[11,"default","","",98,[[],["self"]]],[11,"to_tokens","","",98,[[["self"],["tokenstream"]]]],[11,"parse","","",98,[[["parsestream"]],["result"]]],[11,"peek","","",98,[[["cursor"]],["bool"]]],[11,"display","","",98,[[],["str"]]],[11,"clone","","",99,[[["self"]],["default"]]],[11,"default","","",99,[[],["self"]]],[11,"to_tokens","","",99,[[["self"],["tokenstream"]]]],[11,"parse","","",99,[[["parsestream"]],["result"]]],[11,"peek","","",99,[[["cursor"]],["bool"]]],[11,"display","","",99,[[],["str"]]],[11,"clone","","",100,[[["self"]],["do"]]],[11,"default","","",100,[[],["self"]]],[11,"to_tokens","","",100,[[["self"],["tokenstream"]]]],[11,"parse","","",100,[[["parsestream"]],["result"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"clone","","",101,[[["self"]],["dyn"]]],[11,"default","","",101,[[],["self"]]],[11,"to_tokens","","",101,[[["self"],["tokenstream"]]]],[11,"parse","","",101,[[["parsestream"]],["result"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"clone","","",102,[[["self"]],["else"]]],[11,"default","","",102,[[],["self"]]],[11,"to_tokens","","",102,[[["self"],["tokenstream"]]]],[11,"parse","","",102,[[["parsestream"]],["result"]]],[11,"peek","","",102,[[["cursor"]],["bool"]]],[11,"display","","",102,[[],["str"]]],[11,"clone","","",103,[[["self"]],["enum"]]],[11,"default","","",103,[[],["self"]]],[11,"to_tokens","","",103,[[["self"],["tokenstream"]]]],[11,"parse","","",103,[[["parsestream"]],["result"]]],[11,"peek","","",103,[[["cursor"]],["bool"]]],[11,"display","","",103,[[],["str"]]],[11,"clone","","",104,[[["self"]],["existential"]]],[11,"default","","",104,[[],["self"]]],[11,"to_tokens","","",104,[[["self"],["tokenstream"]]]],[11,"parse","","",104,[[["parsestream"]],["result"]]],[11,"peek","","",104,[[["cursor"]],["bool"]]],[11,"display","","",104,[[],["str"]]],[11,"clone","","",105,[[["self"]],["extern"]]],[11,"default","","",105,[[],["self"]]],[11,"to_tokens","","",105,[[["self"],["tokenstream"]]]],[11,"parse","","",105,[[["parsestream"]],["result"]]],[11,"peek","","",105,[[["cursor"]],["bool"]]],[11,"display","","",105,[[],["str"]]],[11,"clone","","",106,[[["self"]],["final"]]],[11,"default","","",106,[[],["self"]]],[11,"to_tokens","","",106,[[["self"],["tokenstream"]]]],[11,"parse","","",106,[[["parsestream"]],["result"]]],[11,"peek","","",106,[[["cursor"]],["bool"]]],[11,"display","","",106,[[],["str"]]],[11,"clone","","",107,[[["self"]],["fn"]]],[11,"default","","",107,[[],["self"]]],[11,"to_tokens","","",107,[[["self"],["tokenstream"]]]],[11,"parse","","",107,[[["parsestream"]],["result"]]],[11,"peek","","",107,[[["cursor"]],["bool"]]],[11,"display","","",107,[[],["str"]]],[11,"clone","","",108,[[["self"]],["for"]]],[11,"default","","",108,[[],["self"]]],[11,"to_tokens","","",108,[[["self"],["tokenstream"]]]],[11,"parse","","",108,[[["parsestream"]],["result"]]],[11,"peek","","",108,[[["cursor"]],["bool"]]],[11,"display","","",108,[[],["str"]]],[11,"clone","","",109,[[["self"]],["if"]]],[11,"default","","",109,[[],["self"]]],[11,"to_tokens","","",109,[[["self"],["tokenstream"]]]],[11,"parse","","",109,[[["parsestream"]],["result"]]],[11,"peek","","",109,[[["cursor"]],["bool"]]],[11,"display","","",109,[[],["str"]]],[11,"clone","","",110,[[["self"]],["impl"]]],[11,"default","","",110,[[],["self"]]],[11,"to_tokens","","",110,[[["self"],["tokenstream"]]]],[11,"parse","","",110,[[["parsestream"]],["result"]]],[11,"peek","","",110,[[["cursor"]],["bool"]]],[11,"display","","",110,[[],["str"]]],[11,"clone","","",111,[[["self"]],["in"]]],[11,"default","","",111,[[],["self"]]],[11,"to_tokens","","",111,[[["self"],["tokenstream"]]]],[11,"parse","","",111,[[["parsestream"]],["result"]]],[11,"peek","","",111,[[["cursor"]],["bool"]]],[11,"display","","",111,[[],["str"]]],[11,"clone","","",112,[[["self"]],["let"]]],[11,"default","","",112,[[],["self"]]],[11,"to_tokens","","",112,[[["self"],["tokenstream"]]]],[11,"parse","","",112,[[["parsestream"]],["result"]]],[11,"peek","","",112,[[["cursor"]],["bool"]]],[11,"display","","",112,[[],["str"]]],[11,"clone","","",113,[[["self"]],["loop"]]],[11,"default","","",113,[[],["self"]]],[11,"to_tokens","","",113,[[["self"],["tokenstream"]]]],[11,"parse","","",113,[[["parsestream"]],["result"]]],[11,"peek","","",113,[[["cursor"]],["bool"]]],[11,"display","","",113,[[],["str"]]],[11,"clone","","",114,[[["self"]],["macro"]]],[11,"default","","",114,[[],["self"]]],[11,"to_tokens","","",114,[[["self"],["tokenstream"]]]],[11,"parse","","",114,[[["parsestream"]],["result"]]],[11,"peek","","",114,[[["cursor"]],["bool"]]],[11,"display","","",114,[[],["str"]]],[11,"clone","","",115,[[["self"]],["match"]]],[11,"default","","",115,[[],["self"]]],[11,"to_tokens","","",115,[[["self"],["tokenstream"]]]],[11,"parse","","",115,[[["parsestream"]],["result"]]],[11,"peek","","",115,[[["cursor"]],["bool"]]],[11,"display","","",115,[[],["str"]]],[11,"clone","","",116,[[["self"]],["mod"]]],[11,"default","","",116,[[],["self"]]],[11,"to_tokens","","",116,[[["self"],["tokenstream"]]]],[11,"parse","","",116,[[["parsestream"]],["result"]]],[11,"peek","","",116,[[["cursor"]],["bool"]]],[11,"display","","",116,[[],["str"]]],[11,"clone","","",117,[[["self"]],["move"]]],[11,"default","","",117,[[],["self"]]],[11,"to_tokens","","",117,[[["self"],["tokenstream"]]]],[11,"parse","","",117,[[["parsestream"]],["result"]]],[11,"peek","","",117,[[["cursor"]],["bool"]]],[11,"display","","",117,[[],["str"]]],[11,"clone","","",118,[[["self"]],["mut"]]],[11,"default","","",118,[[],["self"]]],[11,"to_tokens","","",118,[[["self"],["tokenstream"]]]],[11,"parse","","",118,[[["parsestream"]],["result"]]],[11,"peek","","",118,[[["cursor"]],["bool"]]],[11,"display","","",118,[[],["str"]]],[11,"clone","","",119,[[["self"]],["override"]]],[11,"default","","",119,[[],["self"]]],[11,"to_tokens","","",119,[[["self"],["tokenstream"]]]],[11,"parse","","",119,[[["parsestream"]],["result"]]],[11,"peek","","",119,[[["cursor"]],["bool"]]],[11,"display","","",119,[[],["str"]]],[11,"clone","","",120,[[["self"]],["priv"]]],[11,"default","","",120,[[],["self"]]],[11,"to_tokens","","",120,[[["self"],["tokenstream"]]]],[11,"parse","","",120,[[["parsestream"]],["result"]]],[11,"peek","","",120,[[["cursor"]],["bool"]]],[11,"display","","",120,[[],["str"]]],[11,"clone","","",121,[[["self"]],["pub"]]],[11,"default","","",121,[[],["self"]]],[11,"to_tokens","","",121,[[["self"],["tokenstream"]]]],[11,"parse","","",121,[[["parsestream"]],["result"]]],[11,"peek","","",121,[[["cursor"]],["bool"]]],[11,"display","","",121,[[],["str"]]],[11,"clone","","",122,[[["self"]],["ref"]]],[11,"default","","",122,[[],["self"]]],[11,"to_tokens","","",122,[[["self"],["tokenstream"]]]],[11,"parse","","",122,[[["parsestream"]],["result"]]],[11,"peek","","",122,[[["cursor"]],["bool"]]],[11,"display","","",122,[[],["str"]]],[11,"clone","","",123,[[["self"]],["return"]]],[11,"default","","",123,[[],["self"]]],[11,"to_tokens","","",123,[[["self"],["tokenstream"]]]],[11,"parse","","",123,[[["parsestream"]],["result"]]],[11,"peek","","",123,[[["cursor"]],["bool"]]],[11,"display","","",123,[[],["str"]]],[11,"clone","","",124,[[["self"]],["self_"]]],[11,"default","","",124,[[],["self"]]],[11,"to_tokens","","",124,[[["self"],["tokenstream"]]]],[11,"parse","","",124,[[["parsestream"]],["result"]]],[11,"peek","","",124,[[["cursor"]],["bool"]]],[11,"display","","",124,[[],["str"]]],[11,"clone","","",125,[[["self"]],["static"]]],[11,"default","","",125,[[],["self"]]],[11,"to_tokens","","",125,[[["self"],["tokenstream"]]]],[11,"parse","","",125,[[["parsestream"]],["result"]]],[11,"peek","","",125,[[["cursor"]],["bool"]]],[11,"display","","",125,[[],["str"]]],[11,"clone","","",126,[[["self"]],["struct"]]],[11,"default","","",126,[[],["self"]]],[11,"to_tokens","","",126,[[["self"],["tokenstream"]]]],[11,"parse","","",126,[[["parsestream"]],["result"]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"clone","","",127,[[["self"]],["super"]]],[11,"default","","",127,[[],["self"]]],[11,"to_tokens","","",127,[[["self"],["tokenstream"]]]],[11,"parse","","",127,[[["parsestream"]],["result"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"clone","","",128,[[["self"]],["trait"]]],[11,"default","","",128,[[],["self"]]],[11,"to_tokens","","",128,[[["self"],["tokenstream"]]]],[11,"parse","","",128,[[["parsestream"]],["result"]]],[11,"peek","","",128,[[["cursor"]],["bool"]]],[11,"display","","",128,[[],["str"]]],[11,"clone","","",129,[[["self"]],["try"]]],[11,"default","","",129,[[],["self"]]],[11,"to_tokens","","",129,[[["self"],["tokenstream"]]]],[11,"parse","","",129,[[["parsestream"]],["result"]]],[11,"peek","","",129,[[["cursor"]],["bool"]]],[11,"display","","",129,[[],["str"]]],[11,"clone","","",130,[[["self"]],["type"]]],[11,"default","","",130,[[],["self"]]],[11,"to_tokens","","",130,[[["self"],["tokenstream"]]]],[11,"parse","","",130,[[["parsestream"]],["result"]]],[11,"peek","","",130,[[["cursor"]],["bool"]]],[11,"display","","",130,[[],["str"]]],[11,"clone","","",131,[[["self"]],["typeof"]]],[11,"default","","",131,[[],["self"]]],[11,"to_tokens","","",131,[[["self"],["tokenstream"]]]],[11,"parse","","",131,[[["parsestream"]],["result"]]],[11,"peek","","",131,[[["cursor"]],["bool"]]],[11,"display","","",131,[[],["str"]]],[11,"clone","","",132,[[["self"]],["union"]]],[11,"default","","",132,[[],["self"]]],[11,"to_tokens","","",132,[[["self"],["tokenstream"]]]],[11,"parse","","",132,[[["parsestream"]],["result"]]],[11,"peek","","",132,[[["cursor"]],["bool"]]],[11,"display","","",132,[[],["str"]]],[11,"clone","","",133,[[["self"]],["unsafe"]]],[11,"default","","",133,[[],["self"]]],[11,"to_tokens","","",133,[[["self"],["tokenstream"]]]],[11,"parse","","",133,[[["parsestream"]],["result"]]],[11,"peek","","",133,[[["cursor"]],["bool"]]],[11,"display","","",133,[[],["str"]]],[11,"clone","","",134,[[["self"]],["unsized"]]],[11,"default","","",134,[[],["self"]]],[11,"to_tokens","","",134,[[["self"],["tokenstream"]]]],[11,"parse","","",134,[[["parsestream"]],["result"]]],[11,"peek","","",134,[[["cursor"]],["bool"]]],[11,"display","","",134,[[],["str"]]],[11,"clone","","",135,[[["self"]],["use"]]],[11,"default","","",135,[[],["self"]]],[11,"to_tokens","","",135,[[["self"],["tokenstream"]]]],[11,"parse","","",135,[[["parsestream"]],["result"]]],[11,"peek","","",135,[[["cursor"]],["bool"]]],[11,"display","","",135,[[],["str"]]],[11,"clone","","",136,[[["self"]],["virtual"]]],[11,"default","","",136,[[],["self"]]],[11,"to_tokens","","",136,[[["self"],["tokenstream"]]]],[11,"parse","","",136,[[["parsestream"]],["result"]]],[11,"peek","","",136,[[["cursor"]],["bool"]]],[11,"display","","",136,[[],["str"]]],[11,"clone","","",137,[[["self"]],["where"]]],[11,"default","","",137,[[],["self"]]],[11,"to_tokens","","",137,[[["self"],["tokenstream"]]]],[11,"parse","","",137,[[["parsestream"]],["result"]]],[11,"peek","","",137,[[["cursor"]],["bool"]]],[11,"display","","",137,[[],["str"]]],[11,"clone","","",138,[[["self"]],["while"]]],[11,"default","","",138,[[],["self"]]],[11,"to_tokens","","",138,[[["self"],["tokenstream"]]]],[11,"parse","","",138,[[["parsestream"]],["result"]]],[11,"peek","","",138,[[["cursor"]],["bool"]]],[11,"display","","",138,[[],["str"]]],[11,"clone","","",139,[[["self"]],["yield"]]],[11,"default","","",139,[[],["self"]]],[11,"to_tokens","","",139,[[["self"],["tokenstream"]]]],[11,"parse","","",139,[[["parsestream"]],["result"]]],[11,"peek","","",139,[[["cursor"]],["bool"]]],[11,"display","","",139,[[],["str"]]],[11,"clone","","",140,[[["self"]],["add"]]],[11,"default","","",140,[[],["self"]]],[11,"to_tokens","","",140,[[["self"],["tokenstream"]]]],[11,"parse","","",140,[[["parsestream"]],["result"]]],[11,"peek","","",140,[[["cursor"]],["bool"]]],[11,"display","","",140,[[],["str"]]],[11,"clone","","",141,[[["self"]],["addeq"]]],[11,"default","","",141,[[],["self"]]],[11,"to_tokens","","",141,[[["self"],["tokenstream"]]]],[11,"parse","","",141,[[["parsestream"]],["result"]]],[11,"peek","","",141,[[["cursor"]],["bool"]]],[11,"display","","",141,[[],["str"]]],[11,"clone","","",142,[[["self"]],["and"]]],[11,"default","","",142,[[],["self"]]],[11,"to_tokens","","",142,[[["self"],["tokenstream"]]]],[11,"parse","","",142,[[["parsestream"]],["result"]]],[11,"peek","","",142,[[["cursor"]],["bool"]]],[11,"display","","",142,[[],["str"]]],[11,"clone","","",143,[[["self"]],["andand"]]],[11,"default","","",143,[[],["self"]]],[11,"to_tokens","","",143,[[["self"],["tokenstream"]]]],[11,"parse","","",143,[[["parsestream"]],["result"]]],[11,"peek","","",143,[[["cursor"]],["bool"]]],[11,"display","","",143,[[],["str"]]],[11,"clone","","",144,[[["self"]],["andeq"]]],[11,"default","","",144,[[],["self"]]],[11,"to_tokens","","",144,[[["self"],["tokenstream"]]]],[11,"parse","","",144,[[["parsestream"]],["result"]]],[11,"peek","","",144,[[["cursor"]],["bool"]]],[11,"display","","",144,[[],["str"]]],[11,"clone","","",145,[[["self"]],["at"]]],[11,"default","","",145,[[],["self"]]],[11,"to_tokens","","",145,[[["self"],["tokenstream"]]]],[11,"parse","","",145,[[["parsestream"]],["result"]]],[11,"peek","","",145,[[["cursor"]],["bool"]]],[11,"display","","",145,[[],["str"]]],[11,"clone","","",146,[[["self"]],["bang"]]],[11,"default","","",146,[[],["self"]]],[11,"to_tokens","","",146,[[["self"],["tokenstream"]]]],[11,"parse","","",146,[[["parsestream"]],["result"]]],[11,"peek","","",146,[[["cursor"]],["bool"]]],[11,"display","","",146,[[],["str"]]],[11,"clone","","",147,[[["self"]],["caret"]]],[11,"default","","",147,[[],["self"]]],[11,"to_tokens","","",147,[[["self"],["tokenstream"]]]],[11,"parse","","",147,[[["parsestream"]],["result"]]],[11,"peek","","",147,[[["cursor"]],["bool"]]],[11,"display","","",147,[[],["str"]]],[11,"clone","","",148,[[["self"]],["careteq"]]],[11,"default","","",148,[[],["self"]]],[11,"to_tokens","","",148,[[["self"],["tokenstream"]]]],[11,"parse","","",148,[[["parsestream"]],["result"]]],[11,"peek","","",148,[[["cursor"]],["bool"]]],[11,"display","","",148,[[],["str"]]],[11,"clone","","",149,[[["self"]],["colon"]]],[11,"default","","",149,[[],["self"]]],[11,"to_tokens","","",149,[[["self"],["tokenstream"]]]],[11,"parse","","",149,[[["parsestream"]],["result"]]],[11,"peek","","",149,[[["cursor"]],["bool"]]],[11,"display","","",149,[[],["str"]]],[11,"clone","","",150,[[["self"]],["colon2"]]],[11,"default","","",150,[[],["self"]]],[11,"to_tokens","","",150,[[["self"],["tokenstream"]]]],[11,"parse","","",150,[[["parsestream"]],["result"]]],[11,"peek","","",150,[[["cursor"]],["bool"]]],[11,"display","","",150,[[],["str"]]],[11,"clone","","",151,[[["self"]],["comma"]]],[11,"default","","",151,[[],["self"]]],[11,"to_tokens","","",151,[[["self"],["tokenstream"]]]],[11,"parse","","",151,[[["parsestream"]],["result"]]],[11,"peek","","",151,[[["cursor"]],["bool"]]],[11,"display","","",151,[[],["str"]]],[11,"clone","","",152,[[["self"]],["div"]]],[11,"default","","",152,[[],["self"]]],[11,"to_tokens","","",152,[[["self"],["tokenstream"]]]],[11,"parse","","",152,[[["parsestream"]],["result"]]],[11,"peek","","",152,[[["cursor"]],["bool"]]],[11,"display","","",152,[[],["str"]]],[11,"clone","","",153,[[["self"]],["diveq"]]],[11,"default","","",153,[[],["self"]]],[11,"to_tokens","","",153,[[["self"],["tokenstream"]]]],[11,"parse","","",153,[[["parsestream"]],["result"]]],[11,"peek","","",153,[[["cursor"]],["bool"]]],[11,"display","","",153,[[],["str"]]],[11,"clone","","",154,[[["self"]],["dollar"]]],[11,"default","","",154,[[],["self"]]],[11,"to_tokens","","",154,[[["self"],["tokenstream"]]]],[11,"parse","","",154,[[["parsestream"]],["result"]]],[11,"peek","","",154,[[["cursor"]],["bool"]]],[11,"display","","",154,[[],["str"]]],[11,"clone","","",155,[[["self"]],["dot"]]],[11,"default","","",155,[[],["self"]]],[11,"to_tokens","","",155,[[["self"],["tokenstream"]]]],[11,"parse","","",155,[[["parsestream"]],["result"]]],[11,"peek","","",155,[[["cursor"]],["bool"]]],[11,"display","","",155,[[],["str"]]],[11,"clone","","",156,[[["self"]],["dot2"]]],[11,"default","","",156,[[],["self"]]],[11,"to_tokens","","",156,[[["self"],["tokenstream"]]]],[11,"parse","","",156,[[["parsestream"]],["result"]]],[11,"peek","","",156,[[["cursor"]],["bool"]]],[11,"display","","",156,[[],["str"]]],[11,"clone","","",157,[[["self"]],["dot3"]]],[11,"default","","",157,[[],["self"]]],[11,"to_tokens","","",157,[[["self"],["tokenstream"]]]],[11,"parse","","",157,[[["parsestream"]],["result"]]],[11,"peek","","",157,[[["cursor"]],["bool"]]],[11,"display","","",157,[[],["str"]]],[11,"clone","","",158,[[["self"]],["dotdoteq"]]],[11,"default","","",158,[[],["self"]]],[11,"to_tokens","","",158,[[["self"],["tokenstream"]]]],[11,"parse","","",158,[[["parsestream"]],["result"]]],[11,"peek","","",158,[[["cursor"]],["bool"]]],[11,"display","","",158,[[],["str"]]],[11,"clone","","",159,[[["self"]],["eq"]]],[11,"default","","",159,[[],["self"]]],[11,"to_tokens","","",159,[[["self"],["tokenstream"]]]],[11,"parse","","",159,[[["parsestream"]],["result"]]],[11,"peek","","",159,[[["cursor"]],["bool"]]],[11,"display","","",159,[[],["str"]]],[11,"clone","","",160,[[["self"]],["eqeq"]]],[11,"default","","",160,[[],["self"]]],[11,"to_tokens","","",160,[[["self"],["tokenstream"]]]],[11,"parse","","",160,[[["parsestream"]],["result"]]],[11,"peek","","",160,[[["cursor"]],["bool"]]],[11,"display","","",160,[[],["str"]]],[11,"clone","","",161,[[["self"]],["ge"]]],[11,"default","","",161,[[],["self"]]],[11,"to_tokens","","",161,[[["self"],["tokenstream"]]]],[11,"parse","","",161,[[["parsestream"]],["result"]]],[11,"peek","","",161,[[["cursor"]],["bool"]]],[11,"display","","",161,[[],["str"]]],[11,"clone","","",162,[[["self"]],["gt"]]],[11,"default","","",162,[[],["self"]]],[11,"to_tokens","","",162,[[["self"],["tokenstream"]]]],[11,"parse","","",162,[[["parsestream"]],["result"]]],[11,"peek","","",162,[[["cursor"]],["bool"]]],[11,"display","","",162,[[],["str"]]],[11,"clone","","",163,[[["self"]],["le"]]],[11,"default","","",163,[[],["self"]]],[11,"to_tokens","","",163,[[["self"],["tokenstream"]]]],[11,"parse","","",163,[[["parsestream"]],["result"]]],[11,"peek","","",163,[[["cursor"]],["bool"]]],[11,"display","","",163,[[],["str"]]],[11,"clone","","",164,[[["self"]],["lt"]]],[11,"default","","",164,[[],["self"]]],[11,"to_tokens","","",164,[[["self"],["tokenstream"]]]],[11,"parse","","",164,[[["parsestream"]],["result"]]],[11,"peek","","",164,[[["cursor"]],["bool"]]],[11,"display","","",164,[[],["str"]]],[11,"clone","","",165,[[["self"]],["muleq"]]],[11,"default","","",165,[[],["self"]]],[11,"to_tokens","","",165,[[["self"],["tokenstream"]]]],[11,"parse","","",165,[[["parsestream"]],["result"]]],[11,"peek","","",165,[[["cursor"]],["bool"]]],[11,"display","","",165,[[],["str"]]],[11,"clone","","",166,[[["self"]],["ne"]]],[11,"default","","",166,[[],["self"]]],[11,"to_tokens","","",166,[[["self"],["tokenstream"]]]],[11,"parse","","",166,[[["parsestream"]],["result"]]],[11,"peek","","",166,[[["cursor"]],["bool"]]],[11,"display","","",166,[[],["str"]]],[11,"clone","","",167,[[["self"]],["or"]]],[11,"default","","",167,[[],["self"]]],[11,"to_tokens","","",167,[[["self"],["tokenstream"]]]],[11,"parse","","",167,[[["parsestream"]],["result"]]],[11,"peek","","",167,[[["cursor"]],["bool"]]],[11,"display","","",167,[[],["str"]]],[11,"clone","","",168,[[["self"]],["oreq"]]],[11,"default","","",168,[[],["self"]]],[11,"to_tokens","","",168,[[["self"],["tokenstream"]]]],[11,"parse","","",168,[[["parsestream"]],["result"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"clone","","",169,[[["self"]],["oror"]]],[11,"default","","",169,[[],["self"]]],[11,"to_tokens","","",169,[[["self"],["tokenstream"]]]],[11,"parse","","",169,[[["parsestream"]],["result"]]],[11,"peek","","",169,[[["cursor"]],["bool"]]],[11,"display","","",169,[[],["str"]]],[11,"clone","","",170,[[["self"]],["pound"]]],[11,"default","","",170,[[],["self"]]],[11,"to_tokens","","",170,[[["self"],["tokenstream"]]]],[11,"parse","","",170,[[["parsestream"]],["result"]]],[11,"peek","","",170,[[["cursor"]],["bool"]]],[11,"display","","",170,[[],["str"]]],[11,"clone","","",171,[[["self"]],["question"]]],[11,"default","","",171,[[],["self"]]],[11,"to_tokens","","",171,[[["self"],["tokenstream"]]]],[11,"parse","","",171,[[["parsestream"]],["result"]]],[11,"peek","","",171,[[["cursor"]],["bool"]]],[11,"display","","",171,[[],["str"]]],[11,"clone","","",172,[[["self"]],["rarrow"]]],[11,"default","","",172,[[],["self"]]],[11,"to_tokens","","",172,[[["self"],["tokenstream"]]]],[11,"parse","","",172,[[["parsestream"]],["result"]]],[11,"peek","","",172,[[["cursor"]],["bool"]]],[11,"display","","",172,[[],["str"]]],[11,"clone","","",173,[[["self"]],["larrow"]]],[11,"default","","",173,[[],["self"]]],[11,"to_tokens","","",173,[[["self"],["tokenstream"]]]],[11,"parse","","",173,[[["parsestream"]],["result"]]],[11,"peek","","",173,[[["cursor"]],["bool"]]],[11,"display","","",173,[[],["str"]]],[11,"clone","","",174,[[["self"]],["rem"]]],[11,"default","","",174,[[],["self"]]],[11,"to_tokens","","",174,[[["self"],["tokenstream"]]]],[11,"parse","","",174,[[["parsestream"]],["result"]]],[11,"peek","","",174,[[["cursor"]],["bool"]]],[11,"display","","",174,[[],["str"]]],[11,"clone","","",175,[[["self"]],["remeq"]]],[11,"default","","",175,[[],["self"]]],[11,"to_tokens","","",175,[[["self"],["tokenstream"]]]],[11,"parse","","",175,[[["parsestream"]],["result"]]],[11,"peek","","",175,[[["cursor"]],["bool"]]],[11,"display","","",175,[[],["str"]]],[11,"clone","","",176,[[["self"]],["fatarrow"]]],[11,"default","","",176,[[],["self"]]],[11,"to_tokens","","",176,[[["self"],["tokenstream"]]]],[11,"parse","","",176,[[["parsestream"]],["result"]]],[11,"peek","","",176,[[["cursor"]],["bool"]]],[11,"display","","",176,[[],["str"]]],[11,"clone","","",177,[[["self"]],["semi"]]],[11,"default","","",177,[[],["self"]]],[11,"to_tokens","","",177,[[["self"],["tokenstream"]]]],[11,"parse","","",177,[[["parsestream"]],["result"]]],[11,"peek","","",177,[[["cursor"]],["bool"]]],[11,"display","","",177,[[],["str"]]],[11,"clone","","",178,[[["self"]],["shl"]]],[11,"default","","",178,[[],["self"]]],[11,"to_tokens","","",178,[[["self"],["tokenstream"]]]],[11,"parse","","",178,[[["parsestream"]],["result"]]],[11,"peek","","",178,[[["cursor"]],["bool"]]],[11,"display","","",178,[[],["str"]]],[11,"clone","","",179,[[["self"]],["shleq"]]],[11,"default","","",179,[[],["self"]]],[11,"to_tokens","","",179,[[["self"],["tokenstream"]]]],[11,"parse","","",179,[[["parsestream"]],["result"]]],[11,"peek","","",179,[[["cursor"]],["bool"]]],[11,"display","","",179,[[],["str"]]],[11,"clone","","",180,[[["self"]],["shr"]]],[11,"default","","",180,[[],["self"]]],[11,"to_tokens","","",180,[[["self"],["tokenstream"]]]],[11,"parse","","",180,[[["parsestream"]],["result"]]],[11,"peek","","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"clone","","",181,[[["self"]],["shreq"]]],[11,"default","","",181,[[],["self"]]],[11,"to_tokens","","",181,[[["self"],["tokenstream"]]]],[11,"parse","","",181,[[["parsestream"]],["result"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"clone","","",182,[[["self"]],["star"]]],[11,"default","","",182,[[],["self"]]],[11,"to_tokens","","",182,[[["self"],["tokenstream"]]]],[11,"parse","","",182,[[["parsestream"]],["result"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"clone","","",183,[[["self"]],["sub"]]],[11,"default","","",183,[[],["self"]]],[11,"to_tokens","","",183,[[["self"],["tokenstream"]]]],[11,"parse","","",183,[[["parsestream"]],["result"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"clone","","",184,[[["self"]],["subeq"]]],[11,"default","","",184,[[],["self"]]],[11,"to_tokens","","",184,[[["self"],["tokenstream"]]]],[11,"parse","","",184,[[["parsestream"]],["result"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"clone","","",185,[[["self"]],["tilde"]]],[11,"default","","",185,[[],["self"]]],[11,"to_tokens","","",185,[[["self"],["tokenstream"]]]],[11,"parse","","",185,[[["parsestream"]],["result"]]],[11,"peek","","",185,[[["cursor"]],["bool"]]],[11,"display","","",185,[[],["str"]]],[11,"clone","","",186,[[["self"]],["brace"]]],[11,"default","","",186,[[],["self"]]],[11,"surround","","",186,[[["self"],["tokenstream"],["f"]]]],[11,"clone","","",187,[[["self"]],["bracket"]]],[11,"default","","",187,[[],["self"]]],[11,"surround","","",187,[[["self"],["tokenstream"],["f"]]]],[11,"clone","","",188,[[["self"]],["paren"]]],[11,"default","","",188,[[],["self"]]],[11,"surround","","",188,[[["self"],["tokenstream"],["f"]]]],[11,"clone","","",189,[[["self"]],["group"]]],[11,"default","","",189,[[],["self"]]],[11,"surround","","",189,[[["self"],["tokenstream"],["f"]]]],[11,"parse","syn","",196,[[["parsestream"]],["result"]]],[11,"peek","","",196,[[["cursor"]],["bool"]]],[11,"display","","",196,[[],["str"]]],[11,"from","","",196,[[["self_"]],["ident"]]],[11,"from","","",196,[[["capself"]],["ident"]]],[11,"from","","",196,[[["super"]],["ident"]]],[11,"from","","",196,[[["crate"]],["ident"]]],[11,"from","","",196,[[["extern"]],["ident"]]],[11,"from","","",196,[[["underscore"]],["ident"]]],[11,"parse","","",64,[[["parsestream"]],["result"]]],[11,"parse","","",1,[[["parsestream"]],["result"]]],[11,"parse","","",2,[[["parsestream"]],["result"]]],[11,"parse","","",65,[[["parsestream"]],["result"]]],[11,"to_tokens","","",0,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",1,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",2,[[["self"],["tokenstream"]]]],[11,"clone","","",0,[[["self"]],["attribute"]]],[11,"parse_meta","","Parses the tokens after the path as a `Meta` if possible.",0,[[["self"]],["result",["meta"]]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",0,[[["parsestream"]],["result",["vec"]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",0,[[["parsestream"]],["result",["vec"]]]],[11,"clone","","",63,[[["self"]],["attrstyle"]]],[11,"clone","","",64,[[["self"]],["meta"]]],[11,"from","","",64,[[["ident"]],["meta"]]],[11,"clone","","",1,[[["self"]],["metalist"]]],[11,"from","","",64,[[["metalist"]],["meta"]]],[11,"clone","","",2,[[["self"]],["metanamevalue"]]],[11,"from","","",64,[[["metanamevalue"]],["meta"]]],[11,"to_tokens","","",64,[[["self"],["tokenstream"]]]],[11,"name","","Returns the identifier that begins this structured meta item.",64,[[["self"]],["ident"]]],[11,"clone","","",65,[[["self"]],["nestedmeta"]]],[11,"from","","",65,[[["meta"]],["nestedmeta"]]],[11,"from","","",65,[[["lit"]],["nestedmeta"]]],[11,"to_tokens","","",65,[[["self"],["tokenstream"]]]],[11,"parse","","",6,[[["parsestream"]],["result"]]],[11,"parse","","",4,[[["parsestream"]],["result"]]],[11,"parse","","",5,[[["parsestream"]],["result"]]],[11,"parse_named","","Parses a named (braced struct) field.",3,[[["parsestream"]],["result"]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",3,[[["parsestream"]],["result"]]],[11,"parse","","",67,[[["parsestream"]],["result"]]],[11,"to_tokens","","",6,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",4,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",5,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",3,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",8,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",7,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",9,[[["self"],["tokenstream"]]]],[11,"clone","","",6,[[["self"]],["variant"]]],[11,"clone","","",66,[[["self"]],["fields"]]],[11,"clone","","",4,[[["self"]],["fieldsnamed"]]],[11,"from","","",66,[[["fieldsnamed"]],["fields"]]],[11,"clone","","",5,[[["self"]],["fieldsunnamed"]]],[11,"from","","",66,[[["fieldsunnamed"]],["fields"]]],[11,"to_tokens","","",66,[[["self"],["tokenstream"]]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this object. This iterator can be used to iterate over a named or unnamed struct or variant's fields uniformly.",66,[[["self"]],["iter",["field"]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items in this object. This iterator can be used to iterate over a named or unnamed struct or variant's fields uniformly.",66,[[["self"]],["itermut",["field"]]]],[11,"clone","","",3,[[["self"]],["field"]]],[11,"clone","","",67,[[["self"]],["visibility"]]],[11,"clone","","",8,[[["self"]],["vispublic"]]],[11,"from","","",67,[[["vispublic"]],["visibility"]]],[11,"clone","","",7,[[["self"]],["viscrate"]]],[11,"from","","",67,[[["viscrate"]],["visibility"]]],[11,"clone","","",9,[[["self"]],["visrestricted"]]],[11,"from","","",67,[[["visrestricted"]],["visibility"]]],[11,"to_tokens","","",67,[[["self"],["tokenstream"]]]],[11,"parse","","",68,[[["parsestream"]],["result"]]],[11,"parse","","",17,[[["parsestream"]],["result"]]],[11,"parse","","",69,[[["parsestream"]],["result"]]],[11,"parse","","",20,[[["parsestream"]],["result"]]],[11,"to_tokens","","",11,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",10,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",18,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",15,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",12,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",13,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",69,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",20,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",14,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",17,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",16,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",19,[[["self"],["tokenstream"]]]],[11,"clone","","",68,[[["self"]],["expr"]]],[11,"clone","","",197,[[["self"]],["exprbox"]]],[11,"from","","",68,[[["exprbox"]],["expr"]]],[11,"clone","","",198,[[["self"]],["exprinplace"]]],[11,"from","","",68,[[["exprinplace"]],["expr"]]],[11,"clone","","",199,[[["self"]],["exprarray"]]],[11,"from","","",68,[[["exprarray"]],["expr"]]],[11,"clone","","",11,[[["self"]],["exprcall"]]],[11,"from","","",68,[[["exprcall"]],["expr"]]],[11,"clone","","",200,[[["self"]],["exprmethodcall"]]],[11,"from","","",68,[[["exprmethodcall"]],["expr"]]],[11,"clone","","",201,[[["self"]],["exprtuple"]]],[11,"from","","",68,[[["exprtuple"]],["expr"]]],[11,"clone","","",10,[[["self"]],["exprbinary"]]],[11,"from","","",68,[[["exprbinary"]],["expr"]]],[11,"clone","","",18,[[["self"]],["exprunary"]]],[11,"from","","",68,[[["exprunary"]],["expr"]]],[11,"clone","","",15,[[["self"]],["exprlit"]]],[11,"from","","",68,[[["exprlit"]],["expr"]]],[11,"clone","","",12,[[["self"]],["exprcast"]]],[11,"from","","",68,[[["exprcast"]],["expr"]]],[11,"clone","","",202,[[["self"]],["exprtype"]]],[11,"from","","",68,[[["exprtype"]],["expr"]]],[11,"clone","","",203,[[["self"]],["exprlet"]]],[11,"from","","",68,[[["exprlet"]],["expr"]]],[11,"clone","","",204,[[["self"]],["exprif"]]],[11,"from","","",68,[[["exprif"]],["expr"]]],[11,"clone","","",205,[[["self"]],["exprwhile"]]],[11,"from","","",68,[[["exprwhile"]],["expr"]]],[11,"clone","","",206,[[["self"]],["exprforloop"]]],[11,"from","","",68,[[["exprforloop"]],["expr"]]],[11,"clone","","",207,[[["self"]],["exprloop"]]],[11,"from","","",68,[[["exprloop"]],["expr"]]],[11,"clone","","",208,[[["self"]],["exprmatch"]]],[11,"from","","",68,[[["exprmatch"]],["expr"]]],[11,"clone","","",209,[[["self"]],["exprclosure"]]],[11,"from","","",68,[[["exprclosure"]],["expr"]]],[11,"clone","","",210,[[["self"]],["exprunsafe"]]],[11,"from","","",68,[[["exprunsafe"]],["expr"]]],[11,"clone","","",211,[[["self"]],["exprblock"]]],[11,"from","","",68,[[["exprblock"]],["expr"]]],[11,"clone","","",212,[[["self"]],["exprassign"]]],[11,"from","","",68,[[["exprassign"]],["expr"]]],[11,"clone","","",213,[[["self"]],["exprassignop"]]],[11,"from","","",68,[[["exprassignop"]],["expr"]]],[11,"clone","","",13,[[["self"]],["exprfield"]]],[11,"from","","",68,[[["exprfield"]],["expr"]]],[11,"clone","","",14,[[["self"]],["exprindex"]]],[11,"from","","",68,[[["exprindex"]],["expr"]]],[11,"clone","","",214,[[["self"]],["exprrange"]]],[11,"from","","",68,[[["exprrange"]],["expr"]]],[11,"clone","","",17,[[["self"]],["exprpath"]]],[11,"from","","",68,[[["exprpath"]],["expr"]]],[11,"clone","","",215,[[["self"]],["exprreference"]]],[11,"from","","",68,[[["exprreference"]],["expr"]]],[11,"clone","","",216,[[["self"]],["exprbreak"]]],[11,"from","","",68,[[["exprbreak"]],["expr"]]],[11,"clone","","",217,[[["self"]],["exprcontinue"]]],[11,"from","","",68,[[["exprcontinue"]],["expr"]]],[11,"clone","","",218,[[["self"]],["exprreturn"]]],[11,"from","","",68,[[["exprreturn"]],["expr"]]],[11,"clone","","",219,[[["self"]],["exprmacro"]]],[11,"from","","",68,[[["exprmacro"]],["expr"]]],[11,"clone","","",220,[[["self"]],["exprstruct"]]],[11,"from","","",68,[[["exprstruct"]],["expr"]]],[11,"clone","","",221,[[["self"]],["exprrepeat"]]],[11,"from","","",68,[[["exprrepeat"]],["expr"]]],[11,"clone","","",16,[[["self"]],["exprparen"]]],[11,"from","","",68,[[["exprparen"]],["expr"]]],[11,"clone","","",222,[[["self"]],["exprgroup"]]],[11,"from","","",68,[[["exprgroup"]],["expr"]]],[11,"clone","","",223,[[["self"]],["exprtry"]]],[11,"from","","",68,[[["exprtry"]],["expr"]]],[11,"clone","","",224,[[["self"]],["exprasync"]]],[11,"from","","",68,[[["exprasync"]],["expr"]]],[11,"clone","","",225,[[["self"]],["exprtryblock"]]],[11,"from","","",68,[[["exprtryblock"]],["expr"]]],[11,"clone","","",226,[[["self"]],["expryield"]]],[11,"from","","",68,[[["expryield"]],["expr"]]],[11,"clone","","",19,[[["self"]],["exprverbatim"]]],[11,"from","","",68,[[["exprverbatim"]],["expr"]]],[11,"to_tokens","","",68,[[["self"],["tokenstream"]]]],[11,"clone","","",69,[[["self"]],["member"]]],[11,"clone","","",20,[[["self"]],["index"]]],[11,"from","","",20,[[["usize"]],["index"]]],[11,"parse","","",23,[[["parsestream"]],["result"]]],[11,"parse","","",70,[[["parsestream"]],["result"]]],[11,"parse","","",24,[[["parsestream"]],["result"]]],[11,"parse","","",21,[[["parsestream"]],["result"]]],[11,"parse","","",29,[[["parsestream"]],["result"]]],[11,"parse","","",72,[[["parsestream"]],["result"]]],[11,"parse","","",28,[[["parsestream"]],["result"]]],[11,"parse","","",71,[[["parsestream"]],["result"]]],[11,"parse","","",22,[[["parsestream"]],["result"]]],[11,"parse","","",30,[[["parsestream"]],["result"]]],[11,"parse","","",73,[[["parsestream"]],["result"]]],[11,"to_tokens","","",23,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",227,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",228,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",229,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",21,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",24,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",29,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",28,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",71,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",22,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",30,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",27,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",26,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",25,[[["self"],["tokenstream"]]]],[11,"default","","",23,[[],["generics"]]],[11,"clone","","",23,[[["self"]],["generics"]]],[11,"clone","","",70,[[["self"]],["genericparam"]]],[11,"clone","","",29,[[["self"]],["typeparam"]]],[11,"from","","",70,[[["typeparam"]],["genericparam"]]],[11,"clone","","",24,[[["self"]],["lifetimedef"]]],[11,"from","","",70,[[["lifetimedef"]],["genericparam"]]],[11,"clone","","",22,[[["self"]],["constparam"]]],[11,"from","","",70,[[["constparam"]],["genericparam"]]],[11,"to_tokens","","",70,[[["self"],["tokenstream"]]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type parameters in `self.params`.",23,[[["self"]],["typeparams"]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type parameters in `self.params`.",23,[[["self"]],["typeparamsmut"]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime parameters in `self.params`.",23,[[["self"]],["lifetimes"]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the lifetime parameters in `self.params`.",23,[[["self"]],["lifetimesmut"]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant parameters in `self.params`.",23,[[["self"]],["constparams"]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the constant parameters in `self.params`.",23,[[["self"]],["constparamsmut"]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one present already.",23,[[["self"]],["whereclause"]]],[11,"clone","","",227,[[["self"]],["implgenerics"]]],[11,"clone","","",228,[[["self"]],["typegenerics"]]],[11,"clone","","",229,[[["self"]],["turbofish"]]],[11,"split_for_impl","","Split a type's generics into the pieces required for impl'ing a trait for that type.",23,N],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like `::<X, Y>`.",228,[[["self"]],["turbofish"]]],[11,"default","","",21,[[],["boundlifetimes"]]],[11,"clone","","",21,[[["self"]],["boundlifetimes"]]],[11,"new","","",24,[[["lifetime"]],["self"]]],[11,"from","","",29,[[["ident"]],["self"]]],[11,"clone","","",72,[[["self"]],["typeparambound"]]],[11,"from","","",72,[[["traitbound"]],["typeparambound"]]],[11,"from","","",72,[[["lifetime"]],["typeparambound"]]],[11,"to_tokens","","",72,[[["self"],["tokenstream"]]]],[11,"clone","","",28,[[["self"]],["traitbound"]]],[11,"clone","","",71,[[["self"]],["traitboundmodifier"]]],[11,"clone","","",30,[[["self"]],["whereclause"]]],[11,"clone","","",73,[[["self"]],["wherepredicate"]]],[11,"clone","","",27,[[["self"]],["predicatetype"]]],[11,"from","","",73,[[["predicatetype"]],["wherepredicate"]]],[11,"clone","","",26,[[["self"]],["predicatelifetime"]]],[11,"from","","",73,[[["predicatelifetime"]],["wherepredicate"]]],[11,"clone","","",25,[[["self"]],["predicateeq"]]],[11,"from","","",73,[[["predicateeq"]],["wherepredicate"]]],[11,"to_tokens","","",73,[[["self"],["tokenstream"]]]],[11,"parse","","",31,[[["parsestream"]],["result"]]],[11,"to_tokens","","",31,[[["self"],["tokenstream"]]]],[11,"clone","","",31,[[["self"]],["lifetime"]]],[11,"new","","Panics",31,[[["str"],["span"]],["self"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"eq","","",31,[[["self"],["lifetime"]],["bool"]]],[11,"partial_cmp","","",31,[[["self"],["lifetime"]],["option",["ordering"]]]],[11,"cmp","","",31,[[["self"],["lifetime"]],["ordering"]]],[11,"hash","","",31,[[["self"],["h"]]]],[11,"parse","","",76,[[["parsestream"]],["result"]]],[11,"parse","","",190,[[["parsestream"]],["result"]]],[11,"parse","","",191,[[["parsestream"]],["result"]]],[11,"parse","","",192,[[["parsestream"]],["result"]]],[11,"parse","","",193,[[["parsestream"]],["result"]]],[11,"parse","","",194,[[["parsestream"]],["result"]]],[11,"parse","","",195,[[["parsestream"]],["result"]]],[11,"parse","","",32,[[["parsestream"]],["result"]]],[11,"to_tokens","","",190,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",191,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",192,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",193,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",194,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",195,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",32,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",33,[[["self"],["tokenstream"]]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",76,[[["literal"]],["self"]]],[11,"clone","","",76,[[["self"]],["lit"]]],[11,"clone","","",190,[[["self"]],["litstr"]]],[11,"from","","",76,[[["litstr"]],["lit"]]],[11,"clone","","",191,[[["self"]],["litbytestr"]]],[11,"from","","",76,[[["litbytestr"]],["lit"]]],[11,"clone","","",192,[[["self"]],["litbyte"]]],[11,"from","","",76,[[["litbyte"]],["lit"]]],[11,"clone","","",193,[[["self"]],["litchar"]]],[11,"from","","",76,[[["litchar"]],["lit"]]],[11,"clone","","",194,[[["self"]],["litint"]]],[11,"from","","",76,[[["litint"]],["lit"]]],[11,"clone","","",195,[[["self"]],["litfloat"]]],[11,"from","","",76,[[["litfloat"]],["lit"]]],[11,"clone","","",32,[[["self"]],["litbool"]]],[11,"from","","",76,[[["litbool"]],["lit"]]],[11,"clone","","",33,[[["self"]],["litverbatim"]]],[11,"from","","",76,[[["litverbatim"]],["lit"]]],[11,"to_tokens","","",76,[[["self"],["tokenstream"]]]],[11,"new","","",190,[[["str"],["span"]],["self"]]],[11,"value","","",190,[[["self"]],["string"]]],[11,"parse","","Parse a syntax tree node from the content of this string literal.",190,[[["self"]],["result",["error"]]]],[11,"span","","",190,[[["self"]],["span"]]],[11,"set_span","","",190,[[["self"],["span"]]]],[11,"new","","",191,N],[11,"value","","",191,[[["self"]],["vec",["u8"]]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"set_span","","",191,[[["self"],["span"]]]],[11,"new","","",192,[[["u8"],["span"]],["self"]]],[11,"value","","",192,[[["self"]],["u8"]]],[11,"span","","",192,[[["self"]],["span"]]],[11,"set_span","","",192,[[["self"],["span"]]]],[11,"new","","",193,[[["char"],["span"]],["self"]]],[11,"value","","",193,[[["self"]],["char"]]],[11,"span","","",193,[[["self"]],["span"]]],[11,"set_span","","",193,[[["self"],["span"]]]],[11,"new","","",194,[[["u64"],["intsuffix"],["span"]],["self"]]],[11,"value","","",194,[[["self"]],["u64"]]],[11,"suffix","","",194,[[["self"]],["intsuffix"]]],[11,"span","","",194,[[["self"]],["span"]]],[11,"set_span","","",194,[[["self"],["span"]]]],[11,"new","","",195,[[["f64"],["floatsuffix"],["span"]],["self"]]],[11,"value","","",195,[[["self"]],["f64"]]],[11,"suffix","","",195,[[["self"]],["floatsuffix"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"set_span","","",195,[[["self"],["span"]]]],[11,"span","","",33,[[["self"]],["span"]]],[11,"set_span","","",33,[[["self"],["span"]]]],[11,"clone","","",77,[[["self"]],["strstyle"]]],[11,"clone","","",75,[[["self"]],["intsuffix"]]],[11,"clone","","",74,[[["self"]],["floatsuffix"]]],[11,"parse","","",34,[[["parsestream"]],["result"]]],[11,"to_tokens","","",34,[[["self"],["tokenstream"]]]],[11,"clone","","",34,[[["self"]],["macro"]]],[11,"clone","","",78,[[["self"]],["macrodelimiter"]]],[11,"parse","","",38,[[["parsestream"]],["result"]]],[11,"to_tokens","","",38,[[["self"],["tokenstream"]]]],[11,"clone","","",38,[[["self"]],["deriveinput"]]],[11,"clone","","",79,[[["self"]],["data"]]],[11,"clone","","",36,[[["self"]],["datastruct"]]],[11,"from","","",79,[[["datastruct"]],["data"]]],[11,"clone","","",35,[[["self"]],["dataenum"]]],[11,"from","","",79,[[["dataenum"]],["data"]]],[11,"clone","","",37,[[["self"]],["dataunion"]]],[11,"from","","",79,[[["dataunion"]],["data"]]],[11,"parse","","",80,[[["parsestream"]],["result"]]],[11,"parse","","",81,[[["parsestream"]],["result"]]],[11,"to_tokens","","",80,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",81,[[["self"],["tokenstream"]]]],[11,"clone","","",80,[[["self"]],["binop"]]],[11,"clone","","",81,[[["self"]],["unop"]]],[11,"parse","","",84,[[["parsestream"]],["result"]]],[11,"without_plus","","In some positions, types may not contain the `+` character, to disambiguate them. For example in the expression `1 as T`, T may not contain a `+` character.",84,[[["parsestream"]],["result"]]],[11,"parse","","",52,[[["parsestream"]],["result"]]],[11,"parse","","",41,[[["parsestream"]],["result"]]],[11,"parse","","",50,[[["parsestream"]],["result"]]],[11,"parse","","",51,[[["parsestream"]],["result"]]],[11,"parse","","",42,[[["parsestream"]],["result"]]],[11,"parse","","",47,[[["parsestream"]],["result"]]],[11,"parse","","",45,[[["parsestream"]],["result"]]],[11,"parse","","",54,[[["parsestream"]],["result"]]],[11,"parse","","",46,[[["parsestream"]],["result"]]],[11,"parse","","",49,[[["parsestream"]],["result"]]],[11,"without_plus","","",83,[[["parsestream"]],["result"]]],[11,"parse","","",83,[[["parsestream"],["bool"]],["result"]]],[11,"parse","","",83,[[["parsestream"]],["result"]]],[11,"parse","","",53,[[["parsestream"]],["result"]]],[11,"without_plus","","",53,[[["parsestream"]],["result"]]],[11,"parse","","",53,[[["parsestream"],["bool"]],["result"]]],[11,"parse","","",44,[[["parsestream"]],["result"]]],[11,"parse","","",43,[[["parsestream"]],["result"]]],[11,"parse","","",48,[[["parsestream"]],["result"]]],[11,"parse","","",40,[[["parsestream"]],["result"]]],[11,"parse","","",82,[[["parsestream"]],["result"]]],[11,"parse","","",39,[[["parsestream"]],["result"]]],[11,"to_tokens","","",52,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",41,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",50,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",51,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",42,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",47,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",54,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",49,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",53,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",44,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",43,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",48,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",45,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",46,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",55,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",83,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",40,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",82,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",39,[[["self"],["tokenstream"]]]],[11,"clone","","",84,[[["self"]],["type"]]],[11,"clone","","",52,[[["self"]],["typeslice"]]],[11,"from","","",84,[[["typeslice"]],["type"]]],[11,"clone","","",41,[[["self"]],["typearray"]]],[11,"from","","",84,[[["typearray"]],["type"]]],[11,"clone","","",50,[[["self"]],["typeptr"]]],[11,"from","","",84,[[["typeptr"]],["type"]]],[11,"clone","","",51,[[["self"]],["typereference"]]],[11,"from","","",84,[[["typereference"]],["type"]]],[11,"clone","","",42,[[["self"]],["typebarefn"]]],[11,"from","","",84,[[["typebarefn"]],["type"]]],[11,"clone","","",47,[[["self"]],["typenever"]]],[11,"from","","",84,[[["typenever"]],["type"]]],[11,"clone","","",54,[[["self"]],["typetuple"]]],[11,"from","","",84,[[["typetuple"]],["type"]]],[11,"clone","","",49,[[["self"]],["typepath"]]],[11,"from","","",84,[[["typepath"]],["type"]]],[11,"clone","","",53,[[["self"]],["typetraitobject"]]],[11,"from","","",84,[[["typetraitobject"]],["type"]]],[11,"clone","","",44,[[["self"]],["typeimpltrait"]]],[11,"from","","",84,[[["typeimpltrait"]],["type"]]],[11,"clone","","",48,[[["self"]],["typeparen"]]],[11,"from","","",84,[[["typeparen"]],["type"]]],[11,"clone","","",43,[[["self"]],["typegroup"]]],[11,"from","","",84,[[["typegroup"]],["type"]]],[11,"clone","","",45,[[["self"]],["typeinfer"]]],[11,"from","","",84,[[["typeinfer"]],["type"]]],[11,"clone","","",46,[[["self"]],["typemacro"]]],[11,"from","","",84,[[["typemacro"]],["type"]]],[11,"clone","","",55,[[["self"]],["typeverbatim"]]],[11,"from","","",84,[[["typeverbatim"]],["type"]]],[11,"to_tokens","","",84,[[["self"],["tokenstream"]]]],[11,"clone","","",39,[[["self"]],["abi"]]],[11,"clone","","",40,[[["self"]],["barefnarg"]]],[11,"clone","","",82,[[["self"]],["barefnargname"]]],[11,"clone","","",83,[[["self"]],["returntype"]]],[11,"parse","","",60,[[["parsestream"]],["result"]]],[11,"parse","","",85,[[["parsestream"]],["result"]]],[11,"parse","","",56,[[["parsestream"]],["result"]]],[11,"parse","","",59,[[["parsestream"]],["result"]]],[11,"parse","","",61,[[["parsestream"]],["result"]]],[11,"parse","","",57,[[["parsestream"]],["result"]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its segments.",60,[[["parsestream"]],["result"]]],[11,"to_tokens","","",60,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",61,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",86,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",85,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",56,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",57,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",58,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",59,[[["self"],["tokenstream"]]]],[11,"clone","","",60,[[["self"]],["path"]]],[11,"from","","",60,[[["t"]],["self"]]],[11,"clone","","",61,[[["self"]],["pathsegment"]]],[11,"from","","",61,[[["t"]],["self"]]],[11,"clone","","",86,[[["self"]],["patharguments"]]],[11,"default","","",86,[[],["self"]]],[11,"is_empty","","",86,[[["self"]],["bool"]]],[11,"clone","","",85,[[["self"]],["genericargument"]]],[11,"clone","","",56,[[["self"]],["anglebracketedgenericarguments"]]],[11,"clone","","",57,[[["self"]],["binding"]]],[11,"clone","","",58,[[["self"]],["constraint"]]],[11,"clone","","",59,[[["self"]],["parenthesizedgenericarguments"]]],[11,"clone","","",62,[[["self"]],["qself"]]],[0,"buffer","","A stably addressed token buffer supporting efficient traversal based on a cheaply copyable cursor.",N,N],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times, unlike `TokenStream` which requires a deep copy in order to traverse more than once.",N,N],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",N,N],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the input `TokenStream`.",230,[[["tokenstream"]],["tokenbuffer"]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the input `TokenStream`.",230,[[["tokenstream"]],["tokenbuffer"]]],[11,"begin","","Creates a cursor referencing the first token in the buffer and able to traverse until the end of the buffer.",230,[[["self"]],["cursor"]]],[11,"clone","","",231,[[["self"]],["cursor"]]],[11,"eq","","",231,[[["self"],["cursor"]],["bool"]]],[11,"ne","","",231,[[["self"],["cursor"]],["bool"]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",231,[[],["self"]]],[11,"eof","","Checks whether the cursor is currently pointing at the end of its valid scope.",231,[[["self"]],["bool"]]],[11,"group","","If the cursor is pointing at a `Group` with the given delimiter, returns a cursor into that group and one pointing to the next `TokenTree`.",231,[[["self"],["delimiter"]],["option"]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along with a cursor pointing at the next `TokenTree`.",231,[[["self"]],["option"]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along with a cursor pointing at the next `TokenTree`.",231,[[["self"]],["option"]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along with a cursor pointing at the next `TokenTree`.",231,[[["self"]],["option"]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it along with a cursor pointing at the next `TokenTree`.",231,[[["self"]],["option"]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into a `TokenStream`.",231,[[["self"]],["tokenstream"]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it along with a cursor pointing at the next `TokenTree`.",231,[[["self"]],["option"]]],[11,"span","","Returns the `Span` of the current token, or `Span::call_site()` if this cursor points to eof.",231,[[["self"]],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign types.",N,N],[8,"IdentExt","syn::ext","Additional parsing methods for `Ident`.",N,N],[10,"parse_any","","Parses any identifier including keywords.",232,[[["parsestream"]],["result"]]],[11,"parse_any","syn","",196,[[["parsestream"]],["result"]]],[0,"punctuated","","A punctuated sequence of syntax tree nodes separated by punctuation.",N,N],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T` separated by punctuation of type `P`.",N,N],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",N,N],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut T, &mut P>`.",N,N],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",N,N],[3,"IntoIter","","An iterator over owned values of type `T`.",N,N],[3,"Iter","","An iterator over borrowed values of type `&T`.",N,N],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",N,N],[4,"Pair","","A single syntax tree node of type `T` followed by its trailing punctuation of type `P` if any.",N,N],[13,"Punctuated","","",233,N],[13,"End","","",233,N],[11,"to_tokens","","",234,[[["self"],["tokenstream"]]]],[11,"to_tokens","","",233,[[["self"],["tokenstream"]]]],[11,"clone","","",234,[[["self"]],["punctuated"]]],[11,"new","","Creates an empty punctuated sequence.",234,[[],["punctuated"]]],[11,"is_empty","","Determines whether this punctuated sequence is empty, meaning it contains no syntax tree nodes or punctuation.",234,[[["self"]],["bool"]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated sequence.",234,[[["self"]],["usize"]]],[11,"first","","Borrows the first punctuated pair in this sequence.",234,[[["self"]],["option",["pair"]]]],[11,"last","","Borrows the last punctuated pair in this sequence.",234,[[["self"]],["option",["pair"]]]],[11,"last_mut","","Mutably borrows the last punctuated pair in this sequence.",234,[[["self"]],["option",["pair"]]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of type `&T`.",234,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree nodes of type `&mut T`.",234,[[["self"]],["itermut"]]],[11,"pairs","","Returns an iterator over the contents of this sequence as borrowed punctuated pairs.",234,[[["self"]],["pairs"]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as mutably borrowed punctuated pairs.",234,[[["self"]],["pairsmut"]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as owned punctuated pairs.",234,[[["self"]],["intopairs"]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated sequence. The sequence must previously have a trailing punctuation.",234,[[["self"],["t"]]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this punctuated sequence. The sequence must be non-empty and must not already have trailing punctuation.",234,[[["self"],["p"]]]],[11,"pop","","Removes the last punctuated pair from this sequence, or `None` if the sequence is empty.",234,[[["self"]],["option",["pair"]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a trailing punctuation.",234,[[["self"]],["bool"]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it has a trailing punctuation.",234,[[["self"]],["bool"]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated sequence.",234,[[["self"],["t"]]]],[11,"insert","","Inserts an element at position `index`.",234,[[["self"],["usize"],["t"]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by punctuation of type `P`, with optional trailing punctuation.",234,[[["parsestream"]],["result"]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given parse function, separated by punctuation of type `P`, with optional trailing punctuation.",234,N],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by punctuation of type `P`, not accepting trailing punctuation.",234,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given parse function, separated by punctuation of type `P`, not accepting trailing punctuation.",234,N],[11,"from_iter","","",234,[[["i"]],["self"]]],[11,"extend","","",234,[[["self"],["i"]]]],[11,"from_iter","","",234,[[["i"]],["self"]]],[11,"extend","","",234,[[["self"],["i"]]]],[11,"into_iter","","",234,N],[11,"default","","",234,[[],["self"]]],[11,"next","","",235,[[["self"]],["option"]]],[11,"len","","",235,[[["self"]],["usize"]]],[11,"next","","",236,[[["self"]],["option"]]],[11,"len","","",236,[[["self"]],["usize"]]],[11,"next","","",237,[[["self"]],["option"]]],[11,"len","","",237,[[["self"]],["usize"]]],[11,"next","","",238,[[["self"]],["option"]]],[11,"len","","",238,[[["self"]],["usize"]]],[11,"next","","",239,[[["self"]],["option"]]],[11,"len","","",239,[[["self"]],["usize"]]],[11,"next","","",240,[[["self"]],["option"]]],[11,"len","","",240,[[["self"]],["usize"]]],[11,"into_value","","Extracts the syntax tree node from this punctuated pair, discarding the following punctuation.",233,[[["self"]],["t"]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",233,[[["self"]],["t"]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated pair.",233,[[["self"]],["t"]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless this pair is the final one and there is no trailing punctuation.",233,[[["self"]],["option"]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an optional following punctuation.",233,[[["t"],["option"]],["self"]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree node and optional following punctuation.",233,N],[11,"index","","",234,N],[11,"index_mut","","",234,N],[0,"spanned","syn","A trait that can provide the `Span` of the complete contents of a syntax tree node.",N,N],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete contents of a syntax tree node.",N,N],[10,"span","","Returns a `Span` covering the complete contents of this syntax tree node, or [`Span::call_site()`] if this node is empty.",241,[[["self"]],["span"]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax tree.",N,N],[5,"visit_abi","syn::visit","",N,[[["v"],["abi"]]]],[5,"visit_angle_bracketed_generic_arguments","","",N,[[["v"],["anglebracketedgenericarguments"]]]],[5,"visit_attr_style","","",N,[[["v"],["attrstyle"]]]],[5,"visit_attribute","","",N,[[["v"],["attribute"]]]],[5,"visit_bare_fn_arg","","",N,[[["v"],["barefnarg"]]]],[5,"visit_bare_fn_arg_name","","",N,[[["v"],["barefnargname"]]]],[5,"visit_bin_op","","",N,[[["v"],["binop"]]]],[5,"visit_binding","","",N,[[["v"],["binding"]]]],[5,"visit_bound_lifetimes","","",N,[[["v"],["boundlifetimes"]]]],[5,"visit_const_param","","",N,[[["v"],["constparam"]]]],[5,"visit_constraint","","",N,[[["v"],["constraint"]]]],[5,"visit_data","","",N,[[["v"],["data"]]]],[5,"visit_data_enum","","",N,[[["v"],["dataenum"]]]],[5,"visit_data_struct","","",N,[[["v"],["datastruct"]]]],[5,"visit_data_union","","",N,[[["v"],["dataunion"]]]],[5,"visit_derive_input","","",N,[[["v"],["deriveinput"]]]],[5,"visit_expr","","",N,[[["v"],["expr"]]]],[5,"visit_expr_binary","","",N,[[["v"],["exprbinary"]]]],[5,"visit_expr_call","","",N,[[["v"],["exprcall"]]]],[5,"visit_expr_cast","","",N,[[["v"],["exprcast"]]]],[5,"visit_expr_field","","",N,[[["v"],["exprfield"]]]],[5,"visit_expr_index","","",N,[[["v"],["exprindex"]]]],[5,"visit_expr_lit","","",N,[[["v"],["exprlit"]]]],[5,"visit_expr_paren","","",N,[[["v"],["exprparen"]]]],[5,"visit_expr_path","","",N,[[["v"],["exprpath"]]]],[5,"visit_expr_unary","","",N,[[["v"],["exprunary"]]]],[5,"visit_expr_verbatim","","",N,[[["v"],["exprverbatim"]]]],[5,"visit_field","","",N,[[["v"],["field"]]]],[5,"visit_fields","","",N,[[["v"],["fields"]]]],[5,"visit_fields_named","","",N,[[["v"],["fieldsnamed"]]]],[5,"visit_fields_unnamed","","",N,[[["v"],["fieldsunnamed"]]]],[5,"visit_generic_argument","","",N,[[["v"],["genericargument"]]]],[5,"visit_generic_param","","",N,[[["v"],["genericparam"]]]],[5,"visit_generics","","",N,[[["v"],["generics"]]]],[5,"visit_ident","","",N,[[["v"],["ident"]]]],[5,"visit_index","","",N,[[["v"],["index"]]]],[5,"visit_lifetime","","",N,[[["v"],["lifetime"]]]],[5,"visit_lifetime_def","","",N,[[["v"],["lifetimedef"]]]],[5,"visit_lit","","",N,[[["v"],["lit"]]]],[5,"visit_lit_bool","","",N,[[["v"],["litbool"]]]],[5,"visit_lit_byte","","",N,[[["v"],["litbyte"]]]],[5,"visit_lit_byte_str","","",N,[[["v"],["litbytestr"]]]],[5,"visit_lit_char","","",N,[[["v"],["litchar"]]]],[5,"visit_lit_float","","",N,[[["v"],["litfloat"]]]],[5,"visit_lit_int","","",N,[[["v"],["litint"]]]],[5,"visit_lit_str","","",N,[[["v"],["litstr"]]]],[5,"visit_lit_verbatim","","",N,[[["v"],["litverbatim"]]]],[5,"visit_macro","","",N,[[["v"],["macro"]]]],[5,"visit_macro_delimiter","","",N,[[["v"],["macrodelimiter"]]]],[5,"visit_member","","",N,[[["v"],["member"]]]],[5,"visit_meta","","",N,[[["v"],["meta"]]]],[5,"visit_meta_list","","",N,[[["v"],["metalist"]]]],[5,"visit_meta_name_value","","",N,[[["v"],["metanamevalue"]]]],[5,"visit_nested_meta","","",N,[[["v"],["nestedmeta"]]]],[5,"visit_parenthesized_generic_arguments","","",N,[[["v"],["parenthesizedgenericarguments"]]]],[5,"visit_path","","",N,[[["v"],["path"]]]],[5,"visit_path_arguments","","",N,[[["v"],["patharguments"]]]],[5,"visit_path_segment","","",N,[[["v"],["pathsegment"]]]],[5,"visit_predicate_eq","","",N,[[["v"],["predicateeq"]]]],[5,"visit_predicate_lifetime","","",N,[[["v"],["predicatelifetime"]]]],[5,"visit_predicate_type","","",N,[[["v"],["predicatetype"]]]],[5,"visit_qself","","",N,[[["v"],["qself"]]]],[5,"visit_return_type","","",N,[[["v"],["returntype"]]]],[5,"visit_span","","",N,[[["v"],["span"]]]],[5,"visit_trait_bound","","",N,[[["v"],["traitbound"]]]],[5,"visit_trait_bound_modifier","","",N,[[["v"],["traitboundmodifier"]]]],[5,"visit_type","","",N,[[["v"],["type"]]]],[5,"visit_type_array","","",N,[[["v"],["typearray"]]]],[5,"visit_type_bare_fn","","",N,[[["v"],["typebarefn"]]]],[5,"visit_type_group","","",N,[[["v"],["typegroup"]]]],[5,"visit_type_impl_trait","","",N,[[["v"],["typeimpltrait"]]]],[5,"visit_type_infer","","",N,[[["v"],["typeinfer"]]]],[5,"visit_type_macro","","",N,[[["v"],["typemacro"]]]],[5,"visit_type_never","","",N,[[["v"],["typenever"]]]],[5,"visit_type_param","","",N,[[["v"],["typeparam"]]]],[5,"visit_type_param_bound","","",N,[[["v"],["typeparambound"]]]],[5,"visit_type_paren","","",N,[[["v"],["typeparen"]]]],[5,"visit_type_path","","",N,[[["v"],["typepath"]]]],[5,"visit_type_ptr","","",N,[[["v"],["typeptr"]]]],[5,"visit_type_reference","","",N,[[["v"],["typereference"]]]],[5,"visit_type_slice","","",N,[[["v"],["typeslice"]]]],[5,"visit_type_trait_object","","",N,[[["v"],["typetraitobject"]]]],[5,"visit_type_tuple","","",N,[[["v"],["typetuple"]]]],[5,"visit_type_verbatim","","",N,[[["v"],["typeverbatim"]]]],[5,"visit_un_op","","",N,[[["v"],["unop"]]]],[5,"visit_variant","","",N,[[["v"],["variant"]]]],[5,"visit_vis_crate","","",N,[[["v"],["viscrate"]]]],[5,"visit_vis_public","","",N,[[["v"],["vispublic"]]]],[5,"visit_vis_restricted","","",N,[[["v"],["visrestricted"]]]],[5,"visit_visibility","","",N,[[["v"],["visibility"]]]],[5,"visit_where_clause","","",N,[[["v"],["whereclause"]]]],[5,"visit_where_predicate","","",N,[[["v"],["wherepredicate"]]]],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax tree.",N,N],[11,"visit_abi","","",242,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",242,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_attr_style","","",242,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",242,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",242,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name","","",242,[[["self"],["barefnargname"]]]],[11,"visit_bin_op","","",242,[[["self"],["binop"]]]],[11,"visit_binding","","",242,[[["self"],["binding"]]]],[11,"visit_bound_lifetimes","","",242,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",242,[[["self"],["constparam"]]]],[11,"visit_constraint","","",242,[[["self"],["constraint"]]]],[11,"visit_data","","",242,[[["self"],["data"]]]],[11,"visit_data_enum","","",242,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",242,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",242,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",242,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",242,[[["self"],["expr"]]]],[11,"visit_expr_binary","","",242,[[["self"],["exprbinary"]]]],[11,"visit_expr_call","","",242,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",242,[[["self"],["exprcast"]]]],[11,"visit_expr_field","","",242,[[["self"],["exprfield"]]]],[11,"visit_expr_index","","",242,[[["self"],["exprindex"]]]],[11,"visit_expr_lit","","",242,[[["self"],["exprlit"]]]],[11,"visit_expr_paren","","",242,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",242,[[["self"],["exprpath"]]]],[11,"visit_expr_unary","","",242,[[["self"],["exprunary"]]]],[11,"visit_expr_verbatim","","",242,[[["self"],["exprverbatim"]]]],[11,"visit_field","","",242,[[["self"],["field"]]]],[11,"visit_fields","","",242,[[["self"],["fields"]]]],[11,"visit_fields_named","","",242,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",242,[[["self"],["fieldsunnamed"]]]],[11,"visit_generic_argument","","",242,[[["self"],["genericargument"]]]],[11,"visit_generic_param","","",242,[[["self"],["genericparam"]]]],[11,"visit_generics","","",242,[[["self"],["generics"]]]],[11,"visit_ident","","",242,[[["self"],["ident"]]]],[11,"visit_index","","",242,[[["self"],["index"]]]],[11,"visit_lifetime","","",242,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",242,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",242,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",242,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",242,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",242,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",242,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",242,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",242,[[["self"],["litint"]]]],[11,"visit_lit_str","","",242,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim","","",242,[[["self"],["litverbatim"]]]],[11,"visit_macro","","",242,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",242,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",242,[[["self"],["member"]]]],[11,"visit_meta","","",242,[[["self"],["meta"]]]],[11,"visit_meta_list","","",242,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",242,[[["self"],["metanamevalue"]]]],[11,"visit_nested_meta","","",242,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",242,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_path","","",242,[[["self"],["path"]]]],[11,"visit_path_arguments","","",242,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",242,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",242,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",242,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",242,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",242,[[["self"],["qself"]]]],[11,"visit_return_type","","",242,[[["self"],["returntype"]]]],[11,"visit_span","","",242,[[["self"],["span"]]]],[11,"visit_trait_bound","","",242,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",242,[[["self"],["traitboundmodifier"]]]],[11,"visit_type","","",242,[[["self"],["type"]]]],[11,"visit_type_array","","",242,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",242,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",242,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",242,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",242,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",242,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",242,[[["self"],["typenever"]]]],[11,"visit_type_param","","",242,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",242,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",242,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",242,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",242,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",242,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",242,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",242,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",242,[[["self"],["typetuple"]]]],[11,"visit_type_verbatim","","",242,[[["self"],["typeverbatim"]]]],[11,"visit_un_op","","",242,[[["self"],["unop"]]]],[11,"visit_variant","","",242,[[["self"],["variant"]]]],[11,"visit_vis_crate","","",242,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",242,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",242,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",242,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",242,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",242,[[["self"],["wherepredicate"]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax tree node.",N,N],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input tokens.",N,N],[3,"Lookahead1","","Support for checking the next token in a stream to decide how to parse.",N,N],[3,"ParseBuffer","","Cursor position within a buffered token stream.",N,N],[3,"StepCursor","","Cursor state associated with speculative parsing.",N,N],[6,"Result","","The result of a Syn parser.",N,N],[6,"ParseStream","","Input to a Syn parser function.",N,N],[8,"Peek","","Types that can be parsed by looking at just one token.",N,N],[8,"Parse","","Parsing interface implemented by all types that can be parsed in a default way from a token stream.",N,N],[10,"parse","","",243,[[["parsestream"]],["result"]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax tree node.",N,N],[16,"Output","","",244,N],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax tree node.",244,[[["self"],["tokenstream"]],["result"]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree node.",244,[[["self"],["tokenstream"]],["result"]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree node.",244,[[["self"],["str"]],["result"]]],[11,"drop","","",245,[[["self"]]]],[11,"clone","","",246,[[["self"]],["stepcursor"]]],[11,"deref","","",246,N],[11,"error","","Triggers an error at the current position of the parse stream.",246,[[["self"],["t"]],["error"]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the position of our parse stream past it.",245,[[["self"]],["result"]]],[11,"call","","Calls the given parser function to parse a syntax tree node of type `T` from this stream.",245,N],[11,"peek","","Looks at the next token in the parse stream to determine whether it matches the requested type of token.",245,[[["self"],["t"]],["bool"]]],[11,"peek2","","Looks at the second-next token in the parse stream.",245,[[["self"],["t"]],["bool"]]],[11,"peek3","","Looks at the third-next token in the parse stream.",245,[[["self"],["t"]],["bool"]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by punctuation of type `P`, with optional trailing punctuation.",245,N],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",245,[[["self"]],["bool"]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this stream and building an error message if it is not one of a set of expected tokens.",245,[[["self"]],["lookahead1"]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either the original or the fork does not advance the position of the other.",245,[[["self"]],["self"]]],[11,"error","","Triggers an error at the current position of the parse stream.",245,[[["self"],["t"]],["error"]]],[11,"step","","Speculatively parses tokens from this parse stream, advancing the position of this stream only if parsing succeeds.",245,[[["self"],["f"]],["result"]]],[11,"cursor","","Provides low-level access to the token representation underlying this parse stream.",245,[[["self"]],["cursor"]]],[11,"fmt","","",247,[[["self"],["formatter"]],["result"]]],[11,"clone","","",247,[[["self"]],["error"]]],[11,"new","","Usually the [`ParseStream::error`] method will be used instead, which automatically uses the correct span from the current position of the parse stream.",247,[[["span"],["t"]],["self"]]],[11,"span","","",247,[[["self"]],["span"]]],[11,"to_compile_error","","Render the error as an invocation of [`compile_error!`].",247,[[["self"]],["tokenstream"]]],[11,"fmt","","",247,[[["self"],["formatter"]],["result"]]],[11,"description","","",247,[[["self"]],["str"]]],[11,"from","","",247,[[["lexerror"]],["self"]]],[6,"AttributeArgs","syn","Conventional argument type associated with an invocation of an attribute macro.",N,N],[14,"parenthesized","","Parse a set of parentheses and expose their content to subsequent parsers.",N,N],[14,"braced","","Parse a set of curly braces and expose their content to subsequent parsers.",N,N],[14,"bracketed","","Parse a set of square brackets and expose their content to subsequent parsers.",N,N],[14,"Token","","A type-macro that expands to the name of the Rust type representation of a given token.",N,N],[14,"parse_quote","","Quasi-quotation macro that accepts input like the [`quote!`] macro but uses type inference to figure out a return type for those tokens.",N,N],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a compile error if the tokens fail to parse.",N,N],[14,"custom_keyword","","Define a type that supports parsing and printing a given identifier as if it were a keyword.",N,N],[11,"new","","Creates a new `Ident` with the given `string` as well as the specified `span`.",196,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",196,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its hygiene context.",196,N],[11,"clone","","",196,[[["self"]],["ident"]]],[11,"fmt","","",196,[[["self"],["formatter"]],["result",["error"]]]],[11,"partial_cmp","","",196,[[["self"],["ident"]],["option",["ordering"]]]],[11,"cmp","","",196,[[["self"],["ident"]],["ordering"]]],[11,"hash","","",196,N],[11,"fmt","","",196,[[["self"],["formatter"]],["result",["error"]]]],[11,"eq","","",196,[[["self"],["ident"]],["bool"]]],[11,"eq","","",196,[[["self"],["t"]],["bool"]]],[11,"to_tokens","","",196,N],[11,"visit_abi","syn::visit","",242,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",242,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_attr_style","","",242,[[["self"],["attrstyle"]]]],[11,"visit_attribute","","",242,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",242,[[["self"],["barefnarg"]]]],[11,"visit_bare_fn_arg_name","","",242,[[["self"],["barefnargname"]]]],[11,"visit_bin_op","","",242,[[["self"],["binop"]]]],[11,"visit_binding","","",242,[[["self"],["binding"]]]],[11,"visit_bound_lifetimes","","",242,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",242,[[["self"],["constparam"]]]],[11,"visit_constraint","","",242,[[["self"],["constraint"]]]],[11,"visit_data","","",242,[[["self"],["data"]]]],[11,"visit_data_enum","","",242,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",242,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",242,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",242,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",242,[[["self"],["expr"]]]],[11,"visit_expr_binary","","",242,[[["self"],["exprbinary"]]]],[11,"visit_expr_call","","",242,[[["self"],["exprcall"]]]],[11,"visit_expr_cast","","",242,[[["self"],["exprcast"]]]],[11,"visit_expr_field","","",242,[[["self"],["exprfield"]]]],[11,"visit_expr_index","","",242,[[["self"],["exprindex"]]]],[11,"visit_expr_lit","","",242,[[["self"],["exprlit"]]]],[11,"visit_expr_paren","","",242,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",242,[[["self"],["exprpath"]]]],[11,"visit_expr_unary","","",242,[[["self"],["exprunary"]]]],[11,"visit_expr_verbatim","","",242,[[["self"],["exprverbatim"]]]],[11,"visit_field","","",242,[[["self"],["field"]]]],[11,"visit_fields","","",242,[[["self"],["fields"]]]],[11,"visit_fields_named","","",242,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",242,[[["self"],["fieldsunnamed"]]]],[11,"visit_generic_argument","","",242,[[["self"],["genericargument"]]]],[11,"visit_generic_param","","",242,[[["self"],["genericparam"]]]],[11,"visit_generics","","",242,[[["self"],["generics"]]]],[11,"visit_ident","","",242,[[["self"],["ident"]]]],[11,"visit_index","","",242,[[["self"],["index"]]]],[11,"visit_lifetime","","",242,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",242,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",242,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",242,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",242,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",242,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",242,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",242,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",242,[[["self"],["litint"]]]],[11,"visit_lit_str","","",242,[[["self"],["litstr"]]]],[11,"visit_lit_verbatim","","",242,[[["self"],["litverbatim"]]]],[11,"visit_macro","","",242,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",242,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",242,[[["self"],["member"]]]],[11,"visit_meta","","",242,[[["self"],["meta"]]]],[11,"visit_meta_list","","",242,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",242,[[["self"],["metanamevalue"]]]],[11,"visit_nested_meta","","",242,[[["self"],["nestedmeta"]]]],[11,"visit_parenthesized_generic_arguments","","",242,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_path","","",242,[[["self"],["path"]]]],[11,"visit_path_arguments","","",242,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",242,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",242,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",242,[[["self"],["predicatelifetime"]]]],[11,"visit_predicate_type","","",242,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",242,[[["self"],["qself"]]]],[11,"visit_return_type","","",242,[[["self"],["returntype"]]]],[11,"visit_span","","",242,[[["self"],["span"]]]],[11,"visit_trait_bound","","",242,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",242,[[["self"],["traitboundmodifier"]]]],[11,"visit_type","","",242,[[["self"],["type"]]]],[11,"visit_type_array","","",242,[[["self"],["typearray"]]]],[11,"visit_type_bare_fn","","",242,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",242,[[["self"],["typegroup"]]]],[11,"visit_type_impl_trait","","",242,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",242,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",242,[[["self"],["typemacro"]]]],[11,"visit_type_never","","",242,[[["self"],["typenever"]]]],[11,"visit_type_param","","",242,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",242,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",242,[[["self"],["typeparen"]]]],[11,"visit_type_path","","",242,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",242,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",242,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",242,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",242,[[["self"],["typetraitobject"]]]],[11,"visit_type_tuple","","",242,[[["self"],["typetuple"]]]],[11,"visit_type_verbatim","","",242,[[["self"],["typeverbatim"]]]],[11,"visit_un_op","","",242,[[["self"],["unop"]]]],[11,"visit_variant","","",242,[[["self"],["variant"]]]],[11,"visit_vis_crate","","",242,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",242,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",242,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",242,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",242,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",242,[[["self"],["wherepredicate"]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine whether it matches the requested type of token.",248,[[["self"],["t"]],["bool"]]],[11,"error","","Triggers an error at the current position of the parse stream.",248,[[["self"]],["error"]]]],"paths":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"ExprBinary"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprField"],[3,"ExprIndex"],[3,"ExprLit"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprUnary"],[3,"ExprVerbatim"],[3,"Index"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"Lifetime"],[3,"LitBool"],[3,"LitVerbatim"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"TypeVerbatim"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"FloatSuffix"],[4,"IntSuffix"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"BareFnArgName"],[4,"ReturnType"],[4,"Type"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"CapSelf"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Existential"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"Self_"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"Ident"],[3,"ExprBox"],[3,"ExprInPlace"],[3,"ExprArray"],[3,"ExprMethodCall"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprLet"],[3,"ExprIf"],[3,"ExprWhile"],[3,"ExprForLoop"],[3,"ExprLoop"],[3,"ExprMatch"],[3,"ExprClosure"],[3,"ExprUnsafe"],[3,"ExprBlock"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprBreak"],[3,"ExprContinue"],[3,"ExprReturn"],[3,"ExprMacro"],[3,"ExprStruct"],[3,"ExprRepeat"],[3,"ExprGroup"],[3,"ExprTry"],[3,"ExprAsync"],[3,"ExprTryBlock"],[3,"ExprYield"],[3,"ImplGenerics"],[3,"TypeGenerics"],[3,"Turbofish"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,"Punctuated"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[8,"Spanned"],[8,"Visit"],[8,"Parse"],[8,"Parser"],[3,"ParseBuffer"],[3,"StepCursor"],[3,"Error"],[3,"Lookahead1"]]};
searchIndex["texture"]={"doc":"A generic library for textures.","items":[[3,"TextureSettings","texture","Texture creation parameters.",N,N],[4,"Format","","Texture format.",N,N],[13,"Rgba8","","`(red, green, blue, alpha)` with values 0-255.",0,N],[4,"Filter","","Sampling filter",N,N],[13,"Linear","","A Weighted Linear Blend",1,N],[13,"Nearest","","Nearest Texel",1,N],[0,"ops","","Image operations for textures.",N,N],[5,"flip_vertical","texture::ops","Flips the image vertically.",N,N],[5,"alpha_to_rgba8","","Converts from alpha to rgba8.",N,N],[8,"ImageSize","texture","Implemented by all images to be used with generic algorithms.",N,N],[10,"get_size","","Get the image size.",2,N],[11,"get_width","","Gets the image width.",2,[[["self"]],["u32"]]],[11,"get_height","","Gets the image height.",2,[[["self"]],["u32"]]],[8,"CreateTexture","","Implemented by textures for creation.",N,N],[16,"Error","","The error when creating texture.",3,N],[10,"create","","Create texture from memory.",3,N],[8,"UpdateTexture","","Implemented by textures for updating.",N,N],[16,"Error","","The error when updating texture.",4,N],[10,"update","","Update the texture.",4,N],[11,"clone","","",5,[[["self"]],["texturesettings"]]],[11,"new","","Create default settings.",5,[[],["texturesettings"]]],[11,"get_convert_gamma","","Gets whether to convert gamma, treated as sRGB color space.",5,[[["self"]],["bool"]]],[11,"set_convert_gamma","","Sets convert gamma.",5,[[["self"],["bool"]]]],[11,"convert_gamma","","Sets convert gamma.",5,[[["self"],["bool"]],["self"]]],[11,"get_compress","","Gets wheter compress on the GPU.",5,[[["self"]],["bool"]]],[11,"set_compress","","Sets compress.",5,[[["self"],["bool"]]]],[11,"compress","","Sets compress.",5,[[["self"],["bool"]],["self"]]],[11,"get_generate_mipmap","","Gets generate mipmap.",5,[[["self"]],["bool"]]],[11,"set_generate_mipmap","","Sets generate mipmap.",5,[[["self"],["bool"]]]],[11,"generate_mipmap","","Sets generate mipmap.",5,[[["self"],["bool"]],["self"]]],[11,"get_min","","Gets minify filter.",5,[[["self"]],["filter"]]],[11,"set_min","","Sets minify filter.",5,[[["self"],["filter"]]]],[11,"min","","Sets minify filter.",5,[[["self"],["filter"]],["self"]]],[11,"get_mag","","Gets magnify filter",5,[[["self"]],["filter"]]],[11,"set_mag","","Sets magnify filter",5,[[["self"],["filter"]]]],[11,"mag","","Sets magnify filter",5,[[["self"],["filter"]],["self"]]],[11,"get_mipmap","","Gets minify mipmap filter",5,[[["self"]],["filter"]]],[11,"set_mipmap","","Sets magnify mipmap filter, and sets generate_mipmap to true.",5,[[["self"],["filter"]]]],[11,"mipmap","","Sets magnify mipmap filter, and sets generate_mipmap to true",5,[[["self"],["filter"]],["self"]]],[11,"get_filter","","Returns the min and mag filter",5,N],[11,"set_filter","","Sets the min and mag filter",5,[[["self"],["filter"]]]],[11,"filter","","Sets the min and mag filter",5,[[["self"],["filter"]],["self"]]],[11,"clone","","",0,[[["self"]],["format"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["filter"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]]],"paths":[[4,"Format"],[4,"Filter"],[8,"ImageSize"],[8,"CreateTexture"],[8,"UpdateTexture"],[3,"TextureSettings"]]};
searchIndex["tiff"]={"doc":"Decoding and Encoding of TIFF Images","items":[[4,"TiffError","tiff","Tiff error kinds.",N,N],[13,"FormatError","","The Image is not formatted properly",0,N],[13,"UnsupportedError","","The Decoder does not support this image format",0,N],[13,"IoError","","An I/O Error occurred while decoding the image",0,N],[4,"TiffFormatError","","",N,N],[13,"TiffSignatureNotFound","","",1,N],[13,"TiffSignatureInvalid","","",1,N],[13,"ImageFileDirectoryNotFound","","",1,N],[13,"InconsistentSizesEncountered","","",1,N],[13,"InvalidTag","","",1,N],[13,"RequiredTagNotFound","","",1,N],[13,"UnknownPredictor","","",1,N],[13,"UnsignedIntegerExpected","","",1,N],[4,"TiffUnsupportedError","","",N,N],[13,"HorizontalPredictor","","",2,N],[13,"InterpretationWithBits","","",2,N],[13,"UnknownInterpretation","","",2,N],[13,"UnknownCompressionMethod","","",2,N],[13,"UnsupportedCompressionMethod","","",2,N],[13,"UnsupportedSampleDepth","","",2,N],[13,"UnsupportedColorType","","",2,N],[13,"UnsupportedBitsPerChannel","","",2,N],[13,"UnsupportedPlanarConfig","","",2,N],[13,"UnsupportedDataType","","",2,N],[4,"ColorType","","An enumeration over supported color types and their bit depths",N,N],[13,"Gray","","Pixel is grayscale",3,N],[13,"RGB","","Pixel contains R, G and B channels",3,N],[13,"Palette","","Pixel is an index into a color palette",3,N],[13,"GrayA","","Pixel is grayscale with an alpha channel",3,N],[13,"RGBA","","Pixel is RGB with an alpha channel",3,N],[13,"CMYK","","Pixel is CMYK",3,N],[0,"decoder","","",N,N],[3,"Decoder","tiff::decoder","The representation of a TIFF decoder",N,N],[4,"DecodingResult","","Result of a decoding process",N,N],[13,"U8","","A vector of unsigned bytes",4,N],[13,"U16","","A vector of unsigned words",4,N],[4,"PhotometricInterpretation","","",N,N],[13,"WhiteIsZero","","",5,N],[13,"BlackIsZero","","",5,N],[13,"RGB","","",5,N],[13,"RGBPalette","","",5,N],[13,"TransparencyMask","","",5,N],[13,"CMYK","","",5,N],[13,"YCbCr","","",5,N],[13,"CIELab","","",5,N],[4,"CompressionMethod","","",N,N],[13,"None","","",6,N],[13,"Huffman","","",6,N],[13,"Fax3","","",6,N],[13,"Fax4","","",6,N],[13,"LZW","","",6,N],[13,"JPEG","","",6,N],[13,"PackBits","","",6,N],[4,"PlanarConfiguration","","",N,N],[13,"Chunky","","",7,N],[13,"Planar","","",7,N],[0,"ifd","","Function for reading TIFF tags",N,N],[3,"Entry","tiff::decoder::ifd","",N,N],[4,"Tag","","TIFF tag",N,N],[13,"Artist","","",8,N],[13,"BitsPerSample","","",8,N],[13,"CellLength","","",8,N],[13,"CellWidth","","",8,N],[13,"ColorMap","","",8,N],[13,"Compression","","",8,N],[13,"Copyright","","",8,N],[13,"DateTime","","",8,N],[13,"ExtraSamples","","",8,N],[13,"FillOrder","","",8,N],[13,"FreeByteCounts","","",8,N],[13,"FreeOffsets","","",8,N],[13,"GrayResponseCurve","","",8,N],[13,"GrayResponseUnit","","",8,N],[13,"HostComputer","","",8,N],[13,"ImageDescription","","",8,N],[13,"ImageLength","","",8,N],[13,"ImageWidth","","",8,N],[13,"Make","","",8,N],[13,"MaxSampleValue","","",8,N],[13,"MinSampleValue","","",8,N],[13,"Model","","",8,N],[13,"NewSubfileType","","",8,N],[13,"Orientation","","",8,N],[13,"PhotometricInterpretation","","",8,N],[13,"PlanarConfiguration","","",8,N],[13,"ResolutionUnit","","",8,N],[13,"RowsPerStrip","","",8,N],[13,"SamplesPerPixel","","",8,N],[13,"Software","","",8,N],[13,"StripByteCounts","","",8,N],[13,"StripOffsets","","",8,N],[13,"SubfileType","","",8,N],[13,"Threshholding","","",8,N],[13,"XResolution","","",8,N],[13,"YResolution","","",8,N],[13,"Predictor","","",8,N],[13,"Unknown","","",8,N],[4,"Type","","",N,N],[13,"BYTE","","",9,N],[13,"ASCII","","",9,N],[13,"SHORT","","",9,N],[13,"LONG","","",9,N],[13,"RATIONAL","","",9,N],[4,"Value","","",N,N],[13,"Unsigned","","",10,N],[13,"List","","",10,N],[13,"Rational","","",10,N],[13,"Ascii","","",10,N],[6,"Directory","","Type representing an Image File Directory",N,N],[11,"clone","","",8,[[["self"]],["tag"]]],[11,"eq","","",8,[[["self"],["tag"]],["bool"]]],[11,"ne","","",8,[[["self"],["tag"]],["bool"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"hash","","",8,N],[11,"from_u16","","",8,[[["u16"]],["tag"]]],[11,"clone","","",9,[[["self"]],["type"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"clone","","",10,[[["self"]],["value"]]],[11,"eq","","",10,[[["self"],["value"]],["bool"]]],[11,"ne","","",10,[[["self"],["value"]],["bool"]]],[11,"hash","","",10,N],[11,"into_u32","","",10,[[["self"]],["tiffresult",["u32"]]]],[11,"into_u32_vec","","",10,[[["self"]],["tiffresult",["vec"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result",["error"]]]],[11,"new","","",11,N],[11,"val","","",11,[[["self"],["decoder"]],["tiffresult",["value"]]]],[11,"fmt","tiff::decoder","",4,[[["self"],["formatter"]],["result"]]],[11,"clone","","",5,[[["self"]],["photometricinterpretation"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"eq","","",5,[[["self"],["photometricinterpretation"]],["bool"]]],[11,"hash","","",5,N],[11,"clone","","",6,[[["self"]],["compressionmethod"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"eq","","",6,[[["self"],["compressionmethod"]],["bool"]]],[11,"hash","","",6,N],[11,"clone","","",7,[[["self"]],["planarconfiguration"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"eq","","",7,[[["self"],["planarconfiguration"]],["bool"]]],[11,"hash","","",7,N],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a new decoder that decodes from the stream `r`",12,[[["r"]],["tiffresult",["decoder"]]]],[11,"dimensions","","",12,[[["self"]],["tiffresult"]]],[11,"colortype","","",12,[[["self"]],["tiffresult",["colortype"]]]],[11,"init","","Initializes the decoder.",12,[[["self"]],["tiffresult",["decoder"]]]],[11,"next_image","","Reads in the next image. If there is no further image in the TIFF file a format error is returned. To determine whether there are more images call `TIFFDecoder::more_images` instead.",12,[[["self"]],["tiffresult",["decoder"]]]],[11,"more_images","","Returns `true` if there is at least one more image available.",12,[[["self"]],["bool"]]],[11,"byte_order","","Returns the byte_order",12,[[["self"]],["byteorder"]]],[11,"read_short","","Reads a TIFF short value",12,[[["self"]],["result",["u16","error"]]]],[11,"read_long","","Reads a TIFF long value",12,[[["self"]],["result",["u32","error"]]]],[11,"read_string","","Reads a string",12,[[["self"],["usize"]],["result",["string","fromutf8error"]]]],[11,"read_offset","","Reads a TIFF IFA offset/value field",12,[[["self"]],["result",["error"]]]],[11,"goto_offset","","Moves the cursor to the specified offset",12,[[["self"],["u32"]],["result"]]],[11,"find_tag","","Tries to retrieve a tag. Return `Ok(None)` if the tag is not present.",12,[[["self"],["tag"]],["tiffresult",["option"]]]],[11,"find_tag_u32","","Tries to retrieve a tag and convert it to the desired type.",12,[[["self"],["tag"]],["tiffresult",["option"]]]],[11,"find_tag_u32_vec","","Tries to retrieve a tag and convert it to the desired type.",12,[[["self"],["tag"]],["tiffresult",["option"]]]],[11,"get_tag","","Tries to retrieve a tag. Returns an error if the tag is not present",12,[[["self"],["tag"]],["tiffresult",["value"]]]],[11,"get_tag_u32","","Tries to retrieve a tag and convert it to the desired type.",12,[[["self"],["tag"]],["tiffresult",["u32"]]]],[11,"get_tag_u32_vec","","Tries to retrieve a tag and convert it to the desired type.",12,[[["self"],["tag"]],["tiffresult",["vec"]]]],[11,"read_image","","Decodes the entire image and return it as a Vector",12,[[["self"]],["tiffresult",["decodingresult"]]]],[11,"fmt","tiff","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["tiffformaterror"]]],[11,"eq","","",1,[[["self"],["tiffformaterror"]],["bool"]]],[11,"ne","","",1,[[["self"],["tiffformaterror"]],["bool"]]],[11,"hash","","",1,N],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"clone","","",2,[[["self"]],["tiffunsupportederror"]]],[11,"eq","","",2,[[["self"],["tiffunsupportederror"]],["bool"]]],[11,"ne","","",2,[[["self"],["tiffunsupportederror"]],["bool"]]],[11,"hash","","",2,N],[11,"fmt","","",2,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],["option",["error"]]]],[11,"from","","",0,[[["error"]],["tifferror"]]],[11,"from","","",0,[[["fromutf8error"]],["tifferror"]]],[6,"TiffResult","","Result of an image decoding/encoding process",N,N],[11,"eq","","",3,[[["self"],["colortype"]],["bool"]]],[11,"ne","","",3,[[["self"],["colortype"]],["bool"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"clone","","",3,[[["self"]],["colortype"]]],[11,"hash","","",3,N]],"paths":[[4,"TiffError"],[4,"TiffFormatError"],[4,"TiffUnsupportedError"],[4,"ColorType"],[4,"DecodingResult"],[4,"PhotometricInterpretation"],[4,"CompressionMethod"],[4,"PlanarConfiguration"],[4,"Tag"],[4,"Type"],[4,"Value"],[3,"Entry"],[3,"Decoder"]]};
searchIndex["unicode_xid"]={"doc":"Determine if a `char` is a valid identifier for a parser and/or lexer according to Unicode Standard Annex #31 rules.","items":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is based on.",N,N],[8,"UnicodeXID","","Methods for determining if a character is a valid identifier character.",N,N],[10,"is_xid_start","","Returns whether the specified character satisfies the 'XID_Start' Unicode property.",0,[[["self"]],["bool"]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the 'XID_Continue' Unicode property.",0,[[["self"]],["bool"]]]],"paths":[[8,"UnicodeXID"]]};
searchIndex["unreachable"]={"doc":"unreachable","items":[[5,"unreachable","unreachable","Hint to the optimizer that any code path which calls this function is statically unreachable and can be removed.",N,N],[8,"UncheckedOptionExt","","An extension trait for `Option<T>` providing unchecked unwrapping methods.",N,N],[10,"unchecked_unwrap","","Get the value out of this Option without checking for None.",0,[[["self"]],["t"]]],[10,"unchecked_unwrap_none","","Assert that this Option is a None to the optimizer.",0,[[["self"]]]],[8,"UncheckedResultExt","","An extension trait for `Result<T, E>` providing unchecked unwrapping methods.",N,N],[10,"unchecked_unwrap_ok","","Get the value out of this Result without checking for Err.",1,[[["self"]],["t"]]],[10,"unchecked_unwrap_err","","Get the error out of this Result without checking for Ok.",1,[[["self"]],["e"]]]],"paths":[[8,"UncheckedOptionExt"],[8,"UncheckedResultExt"]]};
searchIndex["vecmath"]={"doc":"A simple and generic library for vector math.","items":[[5,"col_mat3x2_mul_col","vecmath","Computes column vector in column matrix product.",N,[[["matrix3x2"],["matrix3x2"],["usize"]],["vector2"]]],[5,"col_mat3_mul_col","","Computes column vector in column matrix product.",N,[[["matrix3"],["matrix3"],["usize"]],["vector3"]]],[5,"col_mat4x3_mul_col","","Computes column vector in column matrix product.",N,[[["matrix4x3"],["matrix4x3"],["usize"]],["vector3"]]],[5,"col_mat4_mul_col","","Computes column vector in column matrix product.",N,[[["matrix4"],["matrix4"],["usize"]],["vector4"]]],[5,"row_mat2x3_mul_row","","Computes row vector in row matrix product.",N,[[["matrix2x3"],["matrix2x3"],["usize"]],["vector3"]]],[5,"row_mat3_mul_row","","Computes row vector in row matrix product.",N,[[["matrix3"],["matrix3"],["usize"]],["vector3"]]],[5,"row_mat3x4_mul_row","","Computes row vector in row matrix product.",N,[[["matrix3x4"],["matrix3x4"],["usize"]],["vector4"]]],[5,"row_mat4_mul_row","","Computes row vector in row matrix product.",N,[[["matrix4"],["matrix4"],["usize"]],["vector4"]]],[5,"col_mat3x2_mul","","Multiplies two matrices.",N,[[["matrix3x2"],["matrix3x2"]],["matrix3x2"]]],[5,"col_mat3_mul","","Multiplies two matrices.",N,[[["matrix3"],["matrix3"]],["matrix3"]]],[5,"col_mat4x3_mul","","Multiplies two matrices.",N,[[["matrix4x3"],["matrix4x3"]],["matrix4x3"]]],[5,"col_mat4_mul","","Multiplies two matrices.",N,[[["matrix4"],["matrix4"]],["matrix4"]]],[5,"row_mat2x3_mul","","Multiplies two matrices.",N,[[["matrix2x3"],["matrix2x3"]],["matrix2x3"]]],[5,"row_mat3_mul","","Multiplies two matrices.",N,[[["matrix3"],["matrix3"]],["matrix3"]]],[5,"row_mat3x4_mul","","Multiplies two matrices.",N,[[["matrix3x4"],["matrix3x4"]],["matrix3x4"]]],[5,"row_mat4_mul","","Multiplies two matrices.",N,[[["matrix4"],["matrix4"]],["matrix4"]]],[5,"mat2x3_id","","Constructs identity matrix.",N,[[],["matrix2x3"]]],[5,"mat3x2_id","","Constructs identity matrix.",N,[[],["matrix3x2"]]],[5,"mat3_id","","Constructs identity matrix.",N,[[],["matrix3"]]],[5,"mat3x4_id","","Constructs identity matrix.",N,[[],["matrix3x4"]]],[5,"mat4x3_id","","Constructs identity matrix.",N,[[],["matrix4x3"]]],[5,"mat4_id","","Constructs identity matrix.",N,[[],["matrix4"]]],[5,"vec2_cast","","Converts to another vector type.",N,[[["vector2"]],["vector2"]]],[5,"vec3_cast","","Converts to another vector type.",N,[[["vector3"]],["vector3"]]],[5,"vec4_cast","","Converts to another vector type.",N,[[["vector4"]],["vector4"]]],[5,"mat2x3_cast","","Converts to another matrix type.",N,[[["matrix2x3"]],["matrix2x3"]]],[5,"mat3x2_cast","","Converts to another matrix type.",N,[[["matrix3x2"]],["matrix3x2"]]],[5,"mat3_cast","","Converts to another matrix type.",N,[[["matrix3"]],["matrix3"]]],[5,"mat3x4_cast","","Converts to another matrix type.",N,[[["matrix3x4"]],["matrix3x4"]]],[5,"mat4x3_cast","","Converts to another matrix type.",N,[[["matrix4x3"]],["matrix4x3"]]],[5,"mat4_cast","","Converts to another matrix type.",N,[[["matrix4"]],["matrix4"]]],[5,"vec2_sub","","Subtracts 'b' from 'a'.",N,[[["vector2"],["vector2"]],["vector2"]]],[5,"vec3_sub","","Subtracts 'b' from 'a'.",N,[[["vector3"],["vector3"]],["vector3"]]],[5,"vec4_sub","","Subtracts 'b' from 'a'.",N,[[["vector4"],["vector4"]],["vector4"]]],[5,"mat2x3_sub","","Subtracts 'b' from 'a'.",N,[[["matrix2x3"],["matrix2x3"]],["matrix2x3"]]],[5,"mat3x2_sub","","Subtracts 'b' from 'a'.",N,[[["matrix3x2"],["matrix3x2"]],["matrix3x2"]]],[5,"mat3_sub","","Subtracts 'b' from 'a'.",N,[[["matrix3"],["matrix3"]],["matrix3"]]],[5,"mat3x4_sub","","Subtracts 'b' from 'a'.",N,[[["matrix3x4"],["matrix3x4"]],["matrix3x4"]]],[5,"mat4x3_sub","","Subtracts 'b' from 'a'.",N,[[["matrix4x3"],["matrix4x3"]],["matrix4x3"]]],[5,"mat4_sub","","Subtracts 'b' from 'a'.",N,[[["matrix4"],["matrix4"]],["matrix4"]]],[5,"vec2_add","","Adds two vectors.",N,[[["vector2"],["vector2"]],["vector2"]]],[5,"vec3_add","","Adds two vectors.",N,[[["vector3"],["vector3"]],["vector3"]]],[5,"vec4_add","","Adds two vectors.",N,[[["vector4"],["vector4"]],["vector4"]]],[5,"mat2x3_add","","Adds two matrices.",N,[[["matrix2x3"],["matrix2x3"]],["matrix2x3"]]],[5,"mat3x2_add","","Adds two matrices.",N,[[["matrix3x2"],["matrix3x2"]],["matrix3x2"]]],[5,"mat3_add","","Adds two matrices.",N,[[["matrix3"],["matrix3"]],["matrix3"]]],[5,"mat3x4_add","","Adds two matrices.",N,[[["matrix3x4"],["matrix3x4"]],["matrix3x4"]]],[5,"mat4x3_add","","Adds two matrices.",N,[[["matrix4x3"],["matrix4x3"]],["matrix4x3"]]],[5,"mat4_add","","Adds two matrices.",N,[[["matrix4"],["matrix4"]],["matrix4"]]],[5,"vec2_mul","","Multiplies two vectors component wise.",N,[[["vector2"],["vector2"]],["vector2"]]],[5,"vec3_mul","","Multiplies two vectors component wise.",N,[[["vector3"],["vector3"]],["vector3"]]],[5,"vec4_mul","","Multiplies two vectors component wise.",N,[[["vector4"],["vector4"]],["vector4"]]],[5,"vec2_dot","","Computes the dot product.",N,[[["vector2"],["vector2"]],["t"]]],[5,"vec3_dot","","Computes the dot product.",N,[[["vector3"],["vector3"]],["t"]]],[5,"vec4_dot","","Computes the dot product.",N,[[["vector4"],["vector4"]],["t"]]],[5,"vec2_square_len","","Computes the square length of a vector.",N,[[["vector2"]],["t"]]],[5,"vec3_square_len","","Computes the square length of a vector.",N,[[["vector3"]],["t"]]],[5,"vec4_square_len","","Computes the square length of a vector.",N,[[["vector4"]],["t"]]],[5,"vec2_cross","","Computes the cross product.",N,[[["vector2"],["vector2"]],["t"]]],[5,"vec3_cross","","Computes the cross product.",N,[[["vector3"],["vector3"]],["vector3"]]],[5,"vec2_scale","","Multiplies the vector with a scalar.",N,[[["vector2"],["t"]],["vector2"]]],[5,"vec3_scale","","Multiplies the vector with a scalar.",N,[[["vector3"],["t"]],["vector3"]]],[5,"vec4_scale","","Multiplies the vector with a scalar.",N,[[["vector4"],["t"]],["vector4"]]],[5,"vec2_neg","","Negates the vector.",N,[[["vector2"]],["vector2"]]],[5,"vec3_neg","","Negates the vector.",N,[[["vector3"]],["vector3"]]],[5,"vec4_neg","","Negates the vector.",N,[[["vector4"]],["vector4"]]],[5,"vec2_len","","Computes the length of vector.",N,[[["vector2"]],["t"]]],[5,"vec3_len","","Computes the length of vector.",N,[[["vector3"]],["t"]]],[5,"vec4_len","","Computes the length of vector.",N,[[["vector4"]],["t"]]],[5,"vec2_inv_len","","Computes the inverse length of a vector.",N,[[["vector2"]],["t"]]],[5,"vec3_inv_len","","Computes the inverse length of a vector.",N,[[["vector3"]],["t"]]],[5,"vec4_inv_len","","Computes the inverse length of a vector.",N,[[["vector4"]],["t"]]],[5,"vec2_normalized","","Computes the normalized.",N,[[["vector2"]],["vector2"]]],[5,"vec3_normalized","","Computes the normalized.",N,[[["vector3"]],["vector3"]]],[5,"vec4_normalized","","Computes the normalized.",N,[[["vector4"]],["vector4"]]],[5,"vec2_normalized_sub","","Computes the normalized difference between two vectors.",N,[[["vector2"],["vector2"]],["vector2"]]],[5,"vec3_normalized_sub","","Computes the normalized difference between two vectors.",N,[[["vector3"],["vector3"]],["vector3"]]],[5,"vec4_normalized_sub","","Computes the normalized difference between two vectors.",N,[[["vector4"],["vector4"]],["vector4"]]],[5,"vec3_dot_vec2","","Computes transformed vector component.",N,[[["vector3"],["vector2"]],["t"]]],[5,"vec4_dot_vec3","","Computes transformed vector component.",N,[[["vector4"],["vector3"]],["t"]]],[5,"vec3_dot_pos2","","Computes transformed position component.",N,[[["vector3"],["vector2"]],["t"]]],[5,"vec4_dot_pos3","","Computes transformed position component.",N,[[["vector4"],["vector3"]],["t"]]],[5,"row_mat2x3_col","","Returns a column vector of a row matrix.",N,[[["matrix2x3"],["usize"]],["vector2"]]],[5,"col_mat2x3_row","","Returns a row vector of a column matrix.",N,[[["matrix2x3"],["usize"]],["vector2"]]],[5,"row_mat3x2_col","","Returns a column vector of a row matrix.",N,[[["matrix3x2"],["usize"]],["vector3"]]],[5,"col_mat3x2_row","","Returns a row vector of a column matrix.",N,[[["matrix3x2"],["usize"]],["vector3"]]],[5,"row_mat3_col","","Returns a column vector of a row matrix.",N,[[["matrix3"],["usize"]],["vector3"]]],[5,"col_mat3_row","","Returns a row vector of a column matrix.",N,[[["matrix3"],["usize"]],["vector3"]]],[5,"row_mat3x4_col","","Returns a column vector of a row matrix.",N,[[["matrix3x4"],["usize"]],["vector3"]]],[5,"col_mat3x4_row","","Returns a row vector of a column matrix.",N,[[["matrix3x4"],["usize"]],["vector3"]]],[5,"row_mat4x3_col","","Returns a column vector of a row matrix.",N,[[["matrix4x3"],["usize"]],["vector4"]]],[5,"col_mat4x3_row","","Returns a column vector of a row matrix.",N,[[["matrix4x3"],["usize"]],["vector4"]]],[5,"row_mat4_col","","Returns a column vector of a row matrix.",N,[[["matrix4"],["usize"]],["vector4"]]],[5,"col_mat4_row","","Returns a row vector of a column matrix.",N,[[["matrix4"],["usize"]],["vector4"]]],[5,"mat2x3_transposed","","Constructs the transpose of a matrix.",N,[[["matrix2x3"]],["matrix3x2"]]],[5,"mat3x2_transposed","","Constructs the transpose of a matrix.",N,[[["matrix3x2"]],["matrix2x3"]]],[5,"mat3_transposed","","Constructs the transpose of a matrix.",N,[[["matrix3"]],["matrix3"]]],[5,"mat3x4_transposed","","Constructs the transpose of a matrix.",N,[[["matrix3x4"]],["matrix4x3"]]],[5,"mat4x3_transposed","","Constructs the transpose of a matrix.",N,[[["matrix4x3"]],["matrix3x4"]]],[5,"mat4_transposed","","Constructs the transpose of a matrix.",N,[[["matrix4"]],["matrix4"]]],[5,"col_mat3_transform","","Transforms a 3D vector through a matrix.",N,[[["matrix3"],["vector3"]],["vector3"]]],[5,"col_mat4_transform","","Transforms a 4D vector through a matrix.",N,[[["matrix4"],["vector4"]],["vector4"]]],[5,"row_mat3_transform","","Transforms a 3D vector through a matrix.",N,[[["matrix3"],["vector3"]],["vector3"]]],[5,"row_mat4_transform","","Transforms a 4D vector through a matrix.",N,[[["matrix4"],["vector4"]],["vector4"]]],[5,"row_mat2x3_transform_pos2","","Transforms a 2D position through matrix.",N,[[["matrix2x3"],["vector2"]],["vector2"]]],[5,"col_mat3x2_transform_pos2","","Transforms a 2D position through matrix.",N,[[["matrix3x2"],["vector2"]],["vector2"]]],[5,"row_mat3_transform_pos2","","Transforms a 2D position through row matrix.",N,[[["matrix3"],["vector2"]],["vector2"]]],[5,"col_mat3_transform_pos2","","Transforms a 2D position through column matrix.",N,[[["matrix3"],["vector2"]],["vector2"]]],[5,"row_mat3x4_transform_pos3","","Transforms a 3D position through matrix.",N,[[["matrix3x4"],["vector3"]],["vector3"]]],[5,"col_mat4x3_transform_pos3","","Transforms a 3D position through matrix.",N,[[["matrix4x3"],["vector3"]],["vector3"]]],[5,"row_mat2x3_transform_vec2","","Transforms a 2D vector through matrix.",N,[[["matrix2x3"],["vector2"]],["vector2"]]],[5,"col_mat3x2_transform_vec2","","Transforms a 2D vector through matrix.",N,[[["matrix3x2"],["vector2"]],["vector2"]]],[5,"row_mat3_transform_vec2","","Transforms a 2D vector through row matrix.",N,[[["matrix3"],["vector2"]],["vector2"]]],[5,"col_mat3_transform_vec2","","Transforms a 2D vector through column matrix.",N,[[["matrix3"],["vector2"]],["vector2"]]],[5,"row_mat3x4_transform_vec3","","Transforms a 3D vector through matrix.",N,[[["matrix3x4"],["vector3"]],["vector3"]]],[5,"col_mat4x3_transform_vec3","","Transforms a 3D vector through matrix.",N,[[["matrix4x3"],["vector3"]],["vector3"]]],[5,"mat2x3_det","","Computes the determinant of a matrix.",N,[[["matrix2x3"]],["t"]]],[5,"mat3x2_det","","Computes the determinant of a matrix.",N,[[["matrix3x2"]],["t"]]],[5,"mat3_det","","Computes the determinant of a matrix.",N,[[["matrix3"]],["t"]]],[5,"mat3x4_det","","Computes the determinant of a matrix.",N,[[["matrix3x4"]],["t"]]],[5,"mat4x3_det","","Computes the determinant of a matrix.",N,[[["matrix4x3"]],["t"]]],[5,"mat4_det","","Computes the determinant of a 4x4 matrix.",N,[[["matrix4"]],["t"]]],[5,"mat2x3_inv_det","","Computes inverse determinant of a 2x3 matrix.",N,[[["matrix2x3"]],["t"]]],[5,"mat3x2_inv_det","","Computes inverse determinant of a 3x2 matrix.",N,[[["matrix3x2"]],["t"]]],[5,"mat3_inv_det","","Computes inverse determinant of a 3x3 matrix.",N,[[["matrix3"]],["t"]]],[5,"mat3x4_inv_det","","Computes inverse determinant of a 3x4 matrix.",N,[[["matrix3x4"]],["t"]]],[5,"mat4x3_inv_det","","Computes inverse determinant of a 4x3 matrix.",N,[[["matrix4x3"]],["t"]]],[5,"mat4_inv_det","","Computes the inverse determinant of a 4x4 matrix.",N,[[["matrix4"]],["t"]]],[5,"mat2x3_inv","","Computes the inverse of a 2x3 matrix.",N,[[["matrix2x3"]],["matrix2x3"]]],[5,"mat3x2_inv","","Computes the inverse of a 3x2 matrix.",N,[[["matrix3x2"]],["matrix3x2"]]],[5,"mat3_inv","","Computes the inverse of a 3x3 matrix.",N,[[["matrix3"]],["matrix3"]]],[5,"mat3x4_inv","","Computes the inverse of a 3x4 matrix.",N,[[["matrix3x4"]],["matrix3x4"]]],[5,"mat4x3_inv","","Computes the inverse of a 4x3 matrix.",N,[[["matrix4x3"]],["matrix4x3"]]],[5,"mat4_inv","","Computes the inverse of a 4x4 matrix.",N,[[["matrix4"]],["matrix4"]]],[0,"traits","","Various useful traits",N,N],[8,"Float","vecmath::traits","Convenience trait for floats.",N,N],[8,"Min","","Minimum value.",N,N],[10,"min","","Returns the minimum value of self or other.",0,[[["self"],["self"]],["self"]]],[8,"Max","","Maximum value.",N,N],[10,"max","","Returns the maximum value of self or other.",1,[[["self"],["self"]],["self"]]],[8,"Signum","","The sign of the number.",N,N],[10,"signum","","Returns number representing the sign of self",2,[[["self"]],["self"]]],[8,"Powf","","Floating number power.",N,N],[10,"powf","","Returns floating power of the number.",3,[[["self"],["self"]],["self"]]],[8,"Radians","","Useful constants for radians.",N,N],[10,"_90","","Returns radians corresponding to 90 degrees.",4,[[],["self"]]],[10,"_180","","Returns radians corresponding to 180 degrees.",4,[[],["self"]]],[10,"_360","","Returns radians corresponding to 360 degrees.",4,[[],["self"]]],[10,"deg_to_rad","","Convert a value to radians from degrees. Equivalent to `value * (π / 180)`.",4,[[["self"]],["self"]]],[10,"rad_to_deg","","Convert a value to degrees from radians. Equivalent to `value * (180 / π)`.",4,[[["self"]],["self"]]],[8,"One","","Number 1.",N,N],[10,"one","","Returns 1.",5,[[],["self"]]],[8,"Zero","","Number 0.",N,N],[10,"zero","","Returns 0.",6,[[],["self"]]],[8,"Sqrt","","Square root.",N,N],[10,"sqrt","","Returns square root.",7,[[["self"]],["self"]]],[8,"Trig","","Basic trigonometry functions",N,N],[10,"sin","","Returns sine of self.",8,[[["self"]],["self"]]],[10,"cos","","Returns cosine of self.",8,[[["self"]],["self"]]],[10,"tan","","Returns tangent of self.",8,[[["self"]],["self"]]],[10,"asin","","Returns inverse sine of self.",8,[[["self"]],["self"]]],[10,"acos","","Returns inverse cosine of self.",8,[[["self"]],["self"]]],[10,"atan","","Returns inverse tangent of self.",8,[[["self"]],["self"]]],[10,"atan2","","Returns the four quadrant arctangent of self (y) and other (x).",8,[[["self"],["self"]],["self"]]],[10,"sinh","","Returns hyperbolic sine of self.",8,[[["self"]],["self"]]],[10,"cosh","","Returns hyperbolic cosine of self.",8,[[["self"]],["self"]]],[10,"tanh","","Returns hyperbolic tangent of self.",8,[[["self"]],["self"]]],[10,"asinh","","Returns inverse hyperbolic sine of self.",8,[[["self"]],["self"]]],[10,"acosh","","Returns inverse hyperbolic cosine of self.",8,[[["self"]],["self"]]],[10,"atanh","","Returns inverse hyperbolic tangent of self.",8,[[["self"]],["self"]]],[8,"Cast","","Casts into another type.",N,N],[10,"cast","","Casts into other type.",9,[[["self"]],["t"]]],[8,"FromPrimitive","","Trait for converting from different numeric types",N,N],[10,"from_f64","","from a f64",10,[[["f64"]],["self"]]],[10,"from_f32","","from a f32",10,[[["f32"]],["self"]]],[10,"from_isize","","from a isze",10,[[["isize"]],["self"]]],[10,"from_u32","","from a u32",10,[[["u32"]],["self"]]],[10,"from_i32","","from a i32",10,[[["i32"]],["self"]]],[6,"Vector2","vecmath","A 2D vector.",N,N],[6,"Vector3","","A 3D vector.",N,N],[6,"Vector4","","A 4D vector.",N,N],[6,"Matrix2x3","","A 2x3 matrix.",N,N],[6,"Matrix3x2","","A 3x2 matrix.",N,N],[6,"Matrix3","","A 3x3 matrix.",N,N],[6,"Matrix3x4","","A 3x4 matrix.",N,N],[6,"Matrix4x3","","A 4x3 matrix.",N,N],[6,"Matrix4","","A 4x4 matrix.",N,N]],"paths":[[8,"Min"],[8,"Max"],[8,"Signum"],[8,"Powf"],[8,"Radians"],[8,"One"],[8,"Zero"],[8,"Sqrt"],[8,"Trig"],[8,"Cast"],[8,"FromPrimitive"]]};
searchIndex["viewport"]={"doc":"A library for storing viewport information","items":[[3,"Viewport","viewport","Stores viewport information.",N,N],[12,"rect","","Viewport in pixels. `[x, y, width height]` where `(x, y)` is lower left corner.",0,N],[12,"draw_size","","The size of frame buffer in pixels.",0,N],[12,"window_size","","The size of window in points.",0,N],[11,"clone","","",0,[[["self"]],["viewport"]]],[11,"abs_transform","","Computes absolute transform for 2D graphics, which uses a row major 2x3 matrix. The origin is in the upper left corner of the viewport rectangle. The x axis points to the right, and the y axis points down. The units are in points (window coordinates).",0,N]],"paths":[[3,"Viewport"]]};
searchIndex["void"]={"doc":"Void","items":[[4,"Void","void","The empty type for cases which can't occur.",N,N],[5,"unreachable","","A safe version of `intrinsincs::unreachable`.",N,N],[8,"ResultVoidExt","","Extensions to `Result<T, Void>`",N,N],[10,"void_unwrap","","Get the value out of a wrapper.",0,[[["self"]],["t"]]],[8,"ResultVoidErrExt","","Extensions to `Result<Void, E>`",N,N],[10,"void_unwrap_err","","Get the error out of a wrapper.",1,[[["self"]],["e"]]],[11,"clone","","",2,[[["self"]],["void"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"eq","","",2,[[["self"],["t"]],["bool"]]],[11,"partial_cmp","","",2,[[["self"],["t"]],["option",["ordering"]]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"cause","","",2,[[["self"]],["option",["error"]]]]],"paths":[[8,"ResultVoidExt"],[8,"ResultVoidErrExt"],[4,"Void"]]};
searchIndex["wayland_client"]={"doc":"Client-side Wayland connector","items":[[3,"Display","wayland_client","A connection to a wayland server",N,N],[3,"EventQueue","","An event queue for protocol messages",N,N],[3,"QueueToken","","A token representing this event queue",N,N],[3,"ReadEventsGuard","","A guard over a read intention.",N,N],[3,"GlobalManager","","An utility to manage global objects",N,N],[3,"NewProxy","","A newly-created proxy that needs implementation",N,N],[3,"Proxy","","An handle to a wayland proxy",N,N],[4,"ConnectError","","Enum representing the possible reasons why connecting to the wayland server failed",N,N],[13,"NoWaylandLib","","The library was compiled with the `dlopen` feature, and the `libwayland-client.so` library could not be found at runtime",0,N],[13,"NoCompositorListening","","Any needed library was found, but the listening socket of the server could not be found.",0,N],[13,"InvalidName","","The provided socket name is invalid",0,N],[4,"GlobalError","","An error that occured trying to bind a global",N,N],[13,"Missing","","The requested global was missing",1,N],[13,"VersionTooLow","","The global abvertized by the server has a lower version number than the one requested",1,N],[4,"GlobalEvent","","Event provided to the user callback of GlobalManager",N,N],[13,"New","","A new global was created",2,N],[12,"id","wayland_client::GlobalEvent","Id of the new global",2,N],[12,"interface","","Interface of the new global",2,N],[12,"version","","Maximum supported version of the new global",2,N],[13,"Removed","wayland_client","A global was removed",2,N],[12,"id","wayland_client::GlobalEvent","Id of the removed global",2,N],[12,"interface","","Interface of the removed global",2,N],[11,"fmt","wayland_client","",0,[[["self"],["formatter"]],["result"]]],[11,"from_external_display","","Create a Display and Event Queue from an external display",3,N],[11,"get_display_ptr","","Retrieve the `wl_display` pointer",3,N],[11,"connect_to_env","","Attempt to connect to a wayland server using the contents of the environment variables",3,[[],["result",["connecterror"]]]],[11,"connect_to_name","","Attempt to connect to a wayland server socket with given name",3,[[["s"]],["result",["connecterror"]]]],[11,"flush","","Non-blocking write to the server",3,[[["self"]],["result",["i32"]]]],[11,"create_event_queue","","Create a new event queue associated with this wayland connection",3,[[["self"]],["eventqueue"]]],[11,"deref","","",3,[[["self"]],["proxy"]]],[11,"dispatch","","Dispatches events from the internal buffer.",4,[[["self"]],["ioresult",["u32"]]]],[11,"dispatch_pending","","Dispatches pending events from the internal buffer.",4,[[["self"]],["ioresult",["u32"]]]],[11,"sync_roundtrip","","Synchronous roundtrip",4,[[["self"]],["ioresult",["i32"]]]],[11,"get_token","","Create a new token associated with this event queue",4,[[["self"]],["queuetoken"]]],[11,"prepare_read","","Prepare an conccurent read",4,[[["self"]],["option",["readeventsguard"]]]],[11,"read_events","","Read events",5,[[["self"]],["ioresult",["i32"]]]],[11,"cancel","","Cancel the read",5,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"clone","","",6,[[["self"]],["globalmanager"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"new","","Create a global manager handling a registry",6,[[["newproxy",["wlregistry"]]],["globalmanager"]]],[11,"new_with_cb","","Create a global manager handling a registry with a callback",6,[[["newproxy",["wlregistry"]],["impl"]],["globalmanager"]]],[11,"instantiate_auto","","Instanciate a global with highest available version",6,[[["self"]],["result",["newproxy","globalerror"]]]],[11,"instantiate_exact","","Instanciate a global with a specific version",6,[[["self"],["u32"]],["result",["newproxy","globalerror"]]]],[11,"list","","Retrieve the list of currently known globals",6,[[["self"]],["vec"]]],[11,"eq","","",7,[[["self"],["proxy"]],["bool"]]],[11,"send","","Send a request through this object",7,N],[11,"is_alive","","Check if the object associated with this proxy is still alive",7,[[["self"]],["bool"]]],[11,"version","","Retrieve the interface version of this wayland object instance",7,[[["self"]],["u32"]]],[11,"set_user_data","","Associate an arbitrary payload to this object",7,N],[11,"get_user_data","","Retrieve the arbitrary payload associated to this object",7,N],[11,"is_external","","Check whether this proxy is managed by the library or not",7,[[["self"]],["bool"]]],[11,"equals","","Check if the other proxy refers to the same underlying wayland object",7,[[["self"],["proxy"]],["bool"]]],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",7,N],[11,"from_c_ptr","","Create a `Proxy` instance from a C pointer",7,N],[11,"make_wrapper","","Create a wrapper for this object for queue management",7,[[["self"],["queuetoken"]],["result",["proxy"]]]],[11,"child","","Create a new child object",7,[[["self"]],["newproxy"]]],[11,"is_implemented_with","","Check whether this proxy has been implemented with given type",7,[[["self"]],["bool"]]],[11,"clone","","",7,[[["self"]],["proxy"]]],[11,"drop","","",7,[[["self"]]]],[11,"implement","","Implement this proxy using given function and implementation data.",8,[[["self"],["impl"]],["proxy"]]],[11,"implement_nonsend","","Implement this proxy using given function and implementation data.",8,[[["self"],["impl"],["queuetoken"]],["proxy"]]],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",8,N],[11,"from_c_ptr","","Create a `NewProxy` instance from a C pointer.",8,N],[0,"cursor","","Cursor utilities",N,N],[3,"CursorTheme","wayland_client::cursor","Represents a cursor theme loaded from the system.",N,N],[3,"Cursor","","A cursor from a theme. Can contain several images if animated.",N,N],[3,"CursorImageBuffer","","A buffer containing a cursor image.",N,N],[5,"is_available","","Checks if the wayland-cursor lib is available and can be used",N,[[],["bool"]]],[5,"load_theme","","Attempts to load a cursor theme from given name.",N,[[["option",["str"]],["u32"],["proxy"]],["cursortheme"]]],[11,"get_cursor","","Retrieve a cursor from the theme.",9,[[["self"],["str"]],["option",["cursor"]]]],[11,"drop","","",9,[[["self"]]]],[11,"name","","Retrieve the name of this cursor.",10,[[["self"]],["string"]]],[11,"image_count","","Retrieve the number of images contained in this animated cursor",10,[[["self"]],["usize"]]],[11,"frame","","Retrieve the image number of cursor animation.",10,[[["self"],["u32"]],["usize"]]],[11,"frame_and_duration","","Retrieve the image number and its duration.",10,N],[11,"frame_buffer","","Retrieve a `CursorImageBuffer` containing the given image of an animation.",10,[[["self"],["usize"]],["option",["cursorimagebuffer"]]]],[11,"frame_info","","Retrive the metadate associated with given frame of the animation.",10,[[["self"],["usize"]],["option"]]],[11,"deref","","",11,[[["self"]],["proxy"]]],[0,"egl","wayland_client","EGL utilities",N,N],[3,"WlEglSurface","wayland_client::egl","EGL surface",N,N],[5,"is_available","","Checks if the wayland-egl lib is available and can be used",N,[[],["bool"]]],[11,"new","","Create an EGL surface from a wayland surface",12,[[["proxy"],["i32"],["i32"]],["wleglsurface"]]],[11,"new_from_raw","","Create an EGL surface from a raw pointer to a wayland surface",12,N],[11,"get_size","","Fetch current size of the EGL surface",12,N],[11,"resize","","Resize the EGL surface",12,[[["self"],["i32"],["i32"],["i32"],["i32"]]]],[11,"ptr","","Raw pointer to the EGL surface",12,N],[11,"drop","","",12,[[["self"]]]],[0,"commons","wayland_client","Re-export of wayland-commons",N,N],[8,"MessageGroup","wayland_client::commons","A group of messages",N,N],[10,"is_destructor","","Whether this message is a destructor",13,[[["self"]],["bool"]]],[10,"from_raw_c","","Construct a message of this group from its C representation",13,N],[10,"as_raw_c_in","","Build a C representation of this message",13,[[["self"],["f"]],["t"]]],[8,"Interface","","The description of a wayland interface",N,N],[16,"Request","","Set of requests associated to this interface",14,N],[16,"Event","","Set of events associated to this interface",14,N],[18,"NAME","","Name of this interface",14,N],[10,"c_interface","","Pointer to the C representation of this interface",14,N],[8,"Implementation","","Trait representing implementations for wayland objects",N,N],[10,"receive","","Receive a message",15,N],[5,"downcast_impl","","Attempt to downcast a boxed `Implementation` trait object.",N,[[["box",["implementation"]]],["result",["box","box"]]]],[3,"AnonymousObject","","Anonymous interface",N,N],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",N,N],[0,"sys","wayland_client","C-associated types",N,N],[0,"client","wayland_client::sys","Bindings to the client library `libwayland-client.so`",N,N],[4,"wl_proxy","wayland_client::sys::client","",N,N],[4,"wl_display","","",N,N],[4,"wl_event_queue","","",N,N],[3,"WaylandClient","","",N,N],[12,"wl_display_connect_to_fd","","",16,N],[12,"wl_display_connect","","",16,N],[12,"wl_display_disconnect","","",16,N],[12,"wl_display_get_fd","","",16,N],[12,"wl_display_roundtrip","","",16,N],[12,"wl_display_read_events","","",16,N],[12,"wl_display_prepare_read","","",16,N],[12,"wl_display_cancel_read","","",16,N],[12,"wl_display_dispatch","","",16,N],[12,"wl_display_dispatch_pending","","",16,N],[12,"wl_display_get_error","","",16,N],[12,"wl_display_get_protocol_error","","",16,N],[12,"wl_display_flush","","",16,N],[12,"wl_event_queue_destroy","","",16,N],[12,"wl_display_create_queue","","",16,N],[12,"wl_display_roundtrip_queue","","",16,N],[12,"wl_display_prepare_read_queue","","",16,N],[12,"wl_display_dispatch_queue","","",16,N],[12,"wl_display_dispatch_queue_pending","","",16,N],[12,"wl_proxy_create","","",16,N],[12,"wl_proxy_destroy","","",16,N],[12,"wl_proxy_add_listener","","",16,N],[12,"wl_proxy_get_listener","","",16,N],[12,"wl_proxy_add_dispatcher","","",16,N],[12,"wl_proxy_marshal_array_constructor","","",16,N],[12,"wl_proxy_marshal_array_constructor_versioned","","",16,N],[12,"wl_proxy_marshal_array","","",16,N],[12,"wl_proxy_set_user_data","","",16,N],[12,"wl_proxy_get_user_data","","",16,N],[12,"wl_proxy_get_id","","",16,N],[12,"wl_proxy_get_class","","",16,N],[12,"wl_proxy_set_queue","","",16,N],[12,"wl_proxy_get_version","","",16,N],[12,"wl_proxy_create_wrapper","","",16,N],[12,"wl_proxy_wrapper_destroy","","",16,N],[12,"wl_log_set_handler_client","","",16,N],[12,"wl_list_init","","",16,N],[12,"wl_list_insert","","",16,N],[12,"wl_list_remove","","",16,N],[12,"wl_list_length","","",16,N],[12,"wl_list_empty","","",16,N],[12,"wl_list_insert_list","","",16,N],[12,"wl_array_init","","",16,N],[12,"wl_array_release","","",16,N],[12,"wl_array_add","","",16,N],[12,"wl_array_copy","","",16,N],[12,"wl_proxy_marshal_constructor","","",16,N],[12,"wl_proxy_marshal_constructor_versioned","","",16,N],[12,"wl_proxy_marshal","","",16,N],[3,"WAYLAND_CLIENT_OPTION","","",N,N],[3,"WAYLAND_CLIENT_HANDLE","","",N,N],[5,"is_lib_available","","",N,[[],["bool"]]],[0,"common","wayland_client::sys","Various types and functions that are used by both the client and the server libraries.",N,N],[3,"wl_message","wayland_client::sys::common","",N,N],[12,"name","","",17,N],[12,"signature","","",17,N],[12,"types","","",17,N],[3,"wl_interface","","",N,N],[12,"name","","",18,N],[12,"version","","",18,N],[12,"request_count","","",18,N],[12,"requests","","",18,N],[12,"event_count","","",18,N],[12,"events","","",18,N],[3,"wl_list","","",N,N],[12,"prev","","",19,N],[12,"next","","",19,N],[3,"wl_array","","",N,N],[12,"size","","",20,N],[12,"alloc","","",20,N],[12,"data","","",20,N],[6,"wl_fixed_t","","",N,N],[5,"wl_fixed_to_double","","",N,[[["i32"]],["f64"]]],[5,"wl_fixed_from_double","","",N,[[["f64"]],["i32"]]],[5,"wl_fixed_to_int","","",N,[[["i32"]],["i32"]]],[5,"wl_fixed_from_int","","",N,[[["i32"]],["i32"]]],[19,"wl_argument","","",N,N],[12,"i","","",21,N],[12,"u","","",21,N],[12,"f","","",21,N],[12,"s","","",21,N],[12,"o","","",21,N],[12,"n","","",21,N],[12,"a","","",21,N],[12,"h","","",21,N],[6,"wl_dispatcher_func_t","","",N,N],[6,"wl_log_func_t","","",N,N],[0,"protocol_interfaces","wayland_client::sys","",N,N],[7,"wl_display_requests","wayland_client::sys::protocol_interfaces","",N,N],[7,"wl_display_events","","",N,N],[7,"wl_display_interface","","",N,N],[7,"wl_registry_requests","","",N,N],[7,"wl_registry_events","","",N,N],[7,"wl_registry_interface","","",N,N],[7,"wl_callback_events","","",N,N],[7,"wl_callback_interface","","",N,N],[7,"wl_compositor_requests","","",N,N],[7,"wl_compositor_interface","","",N,N],[7,"wl_shm_pool_requests","","",N,N],[7,"wl_shm_pool_interface","","",N,N],[7,"wl_shm_requests","","",N,N],[7,"wl_shm_events","","",N,N],[7,"wl_shm_interface","","",N,N],[7,"wl_buffer_requests","","",N,N],[7,"wl_buffer_events","","",N,N],[7,"wl_buffer_interface","","",N,N],[7,"wl_data_offer_requests","","",N,N],[7,"wl_data_offer_events","","",N,N],[7,"wl_data_offer_interface","","",N,N],[7,"wl_data_source_requests","","",N,N],[7,"wl_data_source_events","","",N,N],[7,"wl_data_source_interface","","",N,N],[7,"wl_data_device_requests","","",N,N],[7,"wl_data_device_events","","",N,N],[7,"wl_data_device_interface","","",N,N],[7,"wl_data_device_manager_requests","","",N,N],[7,"wl_data_device_manager_interface","","",N,N],[7,"wl_shell_requests","","",N,N],[7,"wl_shell_interface","","",N,N],[7,"wl_shell_surface_requests","","",N,N],[7,"wl_shell_surface_events","","",N,N],[7,"wl_shell_surface_interface","","",N,N],[7,"wl_surface_requests","","",N,N],[7,"wl_surface_events","","",N,N],[7,"wl_surface_interface","","",N,N],[7,"wl_seat_requests","","",N,N],[7,"wl_seat_events","","",N,N],[7,"wl_seat_interface","","",N,N],[7,"wl_pointer_requests","","",N,N],[7,"wl_pointer_events","","",N,N],[7,"wl_pointer_interface","","",N,N],[7,"wl_keyboard_requests","","",N,N],[7,"wl_keyboard_events","","",N,N],[7,"wl_keyboard_interface","","",N,N],[7,"wl_touch_requests","","",N,N],[7,"wl_touch_events","","",N,N],[7,"wl_touch_interface","","",N,N],[7,"wl_output_requests","","",N,N],[7,"wl_output_events","","",N,N],[7,"wl_output_interface","","",N,N],[7,"wl_region_requests","","",N,N],[7,"wl_region_interface","","",N,N],[7,"wl_subcompositor_requests","","",N,N],[7,"wl_subcompositor_interface","","",N,N],[7,"wl_subsurface_requests","","",N,N],[7,"wl_subsurface_interface","","",N,N],[0,"protocol","wayland_client","Generated interfaces for the core wayland protocol",N,N],[0,"wl_display","wayland_client::protocol","core global object",N,N],[3,"WlDisplay","wayland_client::protocol::wl_display","",N,N],[4,"Error","","global error values",N,N],[13,"InvalidObject","","server couldn't find object",22,N],[13,"InvalidMethod","","method doesn't exist on the specified interface",22,N],[13,"NoMemory","","server is out of memory",22,N],[4,"Request","","",N,N],[13,"Sync","","asynchronous roundtrip",23,N],[12,"callback","wayland_client::protocol::wl_display::Request","",23,N],[13,"GetRegistry","wayland_client::protocol::wl_display","get global registry object",23,N],[12,"registry","wayland_client::protocol::wl_display::Request","",23,N],[4,"Event","wayland_client::protocol::wl_display","",N,N],[13,"Error","","fatal error event",24,N],[12,"object_id","wayland_client::protocol::wl_display::Event","",24,N],[12,"code","","",24,N],[12,"message","","",24,N],[13,"DeleteId","wayland_client::protocol::wl_display","acknowledge object ID deletion",24,N],[12,"id","wayland_client::protocol::wl_display::Event","",24,N],[8,"RequestsTrait","wayland_client::protocol::wl_display","",N,N],[10,"sync","","asynchronous roundtrip",25,[[["self"]],["result",["newproxy"]]]],[10,"get_registry","","get global registry object",25,[[["self"]],["result",["newproxy"]]]],[0,"wl_registry","wayland_client::protocol","global registry object",N,N],[3,"WlRegistry","wayland_client::protocol::wl_registry","",N,N],[4,"Request","","",N,N],[13,"Bind","","bind an object to the display",26,N],[12,"name","wayland_client::protocol::wl_registry::Request","",26,N],[12,"id","","",26,N],[4,"Event","wayland_client::protocol::wl_registry","",N,N],[13,"Global","","announce global object",27,N],[12,"name","wayland_client::protocol::wl_registry::Event","",27,N],[12,"interface","","",27,N],[12,"version","","",27,N],[13,"GlobalRemove","wayland_client::protocol::wl_registry","announce removal of global object",27,N],[12,"name","wayland_client::protocol::wl_registry::Event","",27,N],[8,"RequestsTrait","wayland_client::protocol::wl_registry","",N,N],[10,"bind","","bind an object to the display",28,[[["self"],["u32"],["u32"]],["result",["newproxy"]]]],[0,"wl_callback","wayland_client::protocol","callback object",N,N],[3,"WlCallback","wayland_client::protocol::wl_callback","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"Done","","done event",29,N],[12,"callback_data","wayland_client::protocol::wl_callback::Event","",29,N],[8,"RequestsTrait","wayland_client::protocol::wl_callback","",N,N],[0,"wl_compositor","wayland_client::protocol","the compositor singleton",N,N],[3,"WlCompositor","wayland_client::protocol::wl_compositor","",N,N],[4,"Request","","",N,N],[13,"CreateSurface","","create new surface",30,N],[12,"id","wayland_client::protocol::wl_compositor::Request","",30,N],[13,"CreateRegion","wayland_client::protocol::wl_compositor","create new region",30,N],[12,"id","wayland_client::protocol::wl_compositor::Request","",30,N],[4,"Event","wayland_client::protocol::wl_compositor","",N,N],[8,"RequestsTrait","","",N,N],[10,"create_surface","","create new surface",31,[[["self"]],["result",["newproxy"]]]],[10,"create_region","","create new region",31,[[["self"]],["result",["newproxy"]]]],[0,"wl_shm_pool","wayland_client::protocol","a shared memory pool",N,N],[3,"WlShmPool","wayland_client::protocol::wl_shm_pool","",N,N],[4,"Request","","",N,N],[13,"CreateBuffer","","create a buffer from the pool",32,N],[12,"id","wayland_client::protocol::wl_shm_pool::Request","",32,N],[12,"offset","","",32,N],[12,"width","","",32,N],[12,"height","","",32,N],[12,"stride","","",32,N],[12,"format","","",32,N],[13,"Destroy","wayland_client::protocol::wl_shm_pool","destroy the pool",32,N],[13,"Resize","","change the size of the pool mapping",32,N],[12,"size","wayland_client::protocol::wl_shm_pool::Request","",32,N],[4,"Event","wayland_client::protocol::wl_shm_pool","",N,N],[8,"RequestsTrait","","",N,N],[10,"create_buffer","","create a buffer from the pool",33,[[["self"],["i32"],["i32"],["i32"],["i32"],["format"]],["result",["newproxy"]]]],[10,"destroy","","destroy the pool",33,N],[10,"resize","","change the size of the pool mapping",33,N],[0,"wl_shm","wayland_client::protocol","shared memory support",N,N],[3,"WlShm","wayland_client::protocol::wl_shm","",N,N],[4,"Error","","wl_shm error values",N,N],[13,"InvalidFormat","","buffer format is not known",34,N],[13,"InvalidStride","","invalid size or stride during pool or buffer creation",34,N],[13,"InvalidFd","","mmapping the file descriptor failed",34,N],[4,"Format","","pixel formats",N,N],[13,"Argb8888","","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian",35,N],[13,"Xrgb8888","","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian",35,N],[13,"C8","","8-bit color index format, [7:0] C",35,N],[13,"Rgb332","","8-bit RGB format, [7:0] R:G:B 3:3:2",35,N],[13,"Bgr233","","8-bit BGR format, [7:0] B:G:R 2:3:3",35,N],[13,"Xrgb4444","","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian",35,N],[13,"Xbgr4444","","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian",35,N],[13,"Rgbx4444","","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian",35,N],[13,"Bgrx4444","","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian",35,N],[13,"Argb4444","","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian",35,N],[13,"Abgr4444","","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian",35,N],[13,"Rgba4444","","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian",35,N],[13,"Bgra4444","","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian",35,N],[13,"Xrgb1555","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian",35,N],[13,"Xbgr1555","","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little endian",35,N],[13,"Rgbx5551","","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little endian",35,N],[13,"Bgrx5551","","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little endian",35,N],[13,"Argb1555","","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little endian",35,N],[13,"Abgr1555","","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little endian",35,N],[13,"Rgba5551","","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little endian",35,N],[13,"Bgra5551","","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little endian",35,N],[13,"Rgb565","","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian",35,N],[13,"Bgr565","","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian",35,N],[13,"Rgb888","","24-bit RGB format, [23:0] R:G:B little endian",35,N],[13,"Bgr888","","24-bit BGR format, [23:0] B:G:R little endian",35,N],[13,"Xbgr8888","","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian",35,N],[13,"Rgbx8888","","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian",35,N],[13,"Bgrx8888","","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian",35,N],[13,"Abgr8888","","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian",35,N],[13,"Rgba8888","","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian",35,N],[13,"Bgra8888","","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian",35,N],[13,"Xrgb2101010","","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian",35,N],[13,"Xbgr2101010","","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian",35,N],[13,"Rgbx1010102","","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian",35,N],[13,"Bgrx1010102","","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian",35,N],[13,"Argb2101010","","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian",35,N],[13,"Abgr2101010","","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian",35,N],[13,"Rgba1010102","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian",35,N],[13,"Bgra1010102","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian",35,N],[13,"Yuyv","","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little endian",35,N],[13,"Yvyu","","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little endian",35,N],[13,"Uyvy","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little endian",35,N],[13,"Vyuy","","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little endian",35,N],[13,"Ayuv","","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little endian",35,N],[13,"Nv12","","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane",35,N],[13,"Nv21","","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane",35,N],[13,"Nv16","","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane",35,N],[13,"Nv61","","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane",35,N],[13,"Yuv410","","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) planes",35,N],[13,"Yvu410","","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) planes",35,N],[13,"Yuv411","","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) planes",35,N],[13,"Yvu411","","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) planes",35,N],[13,"Yuv420","","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) planes",35,N],[13,"Yvu420","","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) planes",35,N],[13,"Yuv422","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) planes",35,N],[13,"Yvu422","","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) planes",35,N],[13,"Yuv444","","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) planes",35,N],[13,"Yvu444","","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) planes",35,N],[4,"Request","","",N,N],[13,"CreatePool","","create a shm pool",36,N],[12,"id","wayland_client::protocol::wl_shm::Request","",36,N],[12,"fd","","",36,N],[12,"size","","",36,N],[4,"Event","wayland_client::protocol::wl_shm","",N,N],[13,"Format","","pixel format description",37,N],[12,"format","wayland_client::protocol::wl_shm::Event","",37,N],[8,"RequestsTrait","wayland_client::protocol::wl_shm","",N,N],[10,"create_pool","","create a shm pool",38,[[["self"],["rawfd"],["i32"]],["result",["newproxy"]]]],[0,"wl_buffer","wayland_client::protocol","content for a wl_surface",N,N],[3,"WlBuffer","wayland_client::protocol::wl_buffer","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy a buffer",39,N],[4,"Event","","",N,N],[13,"Release","","compositor releases buffer",40,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy a buffer",41,N],[0,"wl_data_offer","wayland_client::protocol","offer to transfer data",N,N],[3,"WlDataOffer","wayland_client::protocol::wl_data_offer","",N,N],[4,"Error","","",N,N],[13,"InvalidFinish","","finish request was called untimely",42,N],[13,"InvalidActionMask","","action mask contains invalid values",42,N],[13,"InvalidAction","","action argument has an invalid value",42,N],[13,"InvalidOffer","","offer doesn't accept this request",42,N],[4,"Request","","",N,N],[13,"Accept","","accept one of the offered mime types",43,N],[12,"serial","wayland_client::protocol::wl_data_offer::Request","",43,N],[12,"mime_type","","",43,N],[13,"Receive","wayland_client::protocol::wl_data_offer","request that the data is transferred",43,N],[12,"mime_type","wayland_client::protocol::wl_data_offer::Request","",43,N],[12,"fd","","",43,N],[13,"Destroy","wayland_client::protocol::wl_data_offer","destroy data offer",43,N],[13,"Finish","","the offer will no longer be used",43,N],[13,"SetActions","","set the available/preferred drag-and-drop actions",43,N],[12,"dnd_actions","wayland_client::protocol::wl_data_offer::Request","",43,N],[12,"preferred_action","","",43,N],[4,"Event","wayland_client::protocol::wl_data_offer","",N,N],[13,"Offer","","advertise offered mime type",44,N],[12,"mime_type","wayland_client::protocol::wl_data_offer::Event","",44,N],[13,"SourceActions","wayland_client::protocol::wl_data_offer","notify the source-side available actions",44,N],[12,"source_actions","wayland_client::protocol::wl_data_offer::Event","",44,N],[13,"Action","wayland_client::protocol::wl_data_offer","notify the selected action",44,N],[12,"dnd_action","wayland_client::protocol::wl_data_offer::Event","",44,N],[8,"RequestsTrait","wayland_client::protocol::wl_data_offer","",N,N],[10,"accept","","accept one of the offered mime types",45,N],[10,"receive","","request that the data is transferred",45,N],[10,"destroy","","destroy data offer",45,N],[10,"finish","","the offer will no longer be used",45,N],[10,"set_actions","","set the available/preferred drag-and-drop actions",45,N],[0,"wl_data_source","wayland_client::protocol","offer to transfer data",N,N],[3,"WlDataSource","wayland_client::protocol::wl_data_source","",N,N],[4,"Error","","",N,N],[13,"InvalidActionMask","","action mask contains invalid values",46,N],[13,"InvalidSource","","source doesn't accept this request",46,N],[4,"Request","","",N,N],[13,"Offer","","add an offered mime type",47,N],[12,"mime_type","wayland_client::protocol::wl_data_source::Request","",47,N],[13,"Destroy","wayland_client::protocol::wl_data_source","destroy the data source",47,N],[13,"SetActions","","set the available drag-and-drop actions",47,N],[12,"dnd_actions","wayland_client::protocol::wl_data_source::Request","",47,N],[4,"Event","wayland_client::protocol::wl_data_source","",N,N],[13,"Target","","a target accepts an offered mime type",48,N],[12,"mime_type","wayland_client::protocol::wl_data_source::Event","",48,N],[13,"Send","wayland_client::protocol::wl_data_source","send the data",48,N],[12,"mime_type","wayland_client::protocol::wl_data_source::Event","",48,N],[12,"fd","","",48,N],[13,"Cancelled","wayland_client::protocol::wl_data_source","selection was cancelled",48,N],[13,"DndDropPerformed","","the drag-and-drop operation physically finished",48,N],[13,"DndFinished","","the drag-and-drop operation concluded",48,N],[13,"Action","","notify the selected action",48,N],[12,"dnd_action","wayland_client::protocol::wl_data_source::Event","",48,N],[8,"RequestsTrait","wayland_client::protocol::wl_data_source","",N,N],[10,"offer","","add an offered mime type",49,N],[10,"destroy","","destroy the data source",49,N],[10,"set_actions","","set the available drag-and-drop actions",49,N],[0,"wl_data_device","wayland_client::protocol","data transfer device",N,N],[3,"WlDataDevice","wayland_client::protocol::wl_data_device","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",50,N],[4,"Request","","",N,N],[13,"StartDrag","","start drag-and-drop operation",51,N],[12,"source","wayland_client::protocol::wl_data_device::Request","",51,N],[12,"origin","","",51,N],[12,"icon","","",51,N],[12,"serial","","",51,N],[13,"SetSelection","wayland_client::protocol::wl_data_device","copy data to the selection",51,N],[12,"source","wayland_client::protocol::wl_data_device::Request","",51,N],[12,"serial","","",51,N],[13,"Release","wayland_client::protocol::wl_data_device","destroy data device",51,N],[4,"Event","","",N,N],[13,"DataOffer","","introduce a new wl_data_offer",52,N],[12,"id","wayland_client::protocol::wl_data_device::Event","",52,N],[13,"Enter","wayland_client::protocol::wl_data_device","initiate drag-and-drop session",52,N],[12,"serial","wayland_client::protocol::wl_data_device::Event","",52,N],[12,"surface","","",52,N],[12,"x","","",52,N],[12,"y","","",52,N],[12,"id","","",52,N],[13,"Leave","wayland_client::protocol::wl_data_device","end drag-and-drop session",52,N],[13,"Motion","","drag-and-drop session motion",52,N],[12,"time","wayland_client::protocol::wl_data_device::Event","",52,N],[12,"x","","",52,N],[12,"y","","",52,N],[13,"Drop","wayland_client::protocol::wl_data_device","end drag-and-drop session successfully",52,N],[13,"Selection","","advertise new selection",52,N],[12,"id","wayland_client::protocol::wl_data_device::Event","",52,N],[8,"RequestsTrait","wayland_client::protocol::wl_data_device","",N,N],[10,"start_drag","","start drag-and-drop operation",53,N],[10,"set_selection","","copy data to the selection",53,N],[10,"release","","destroy data device",53,N],[0,"wl_data_device_manager","wayland_client::protocol","data transfer interface",N,N],[3,"DndAction","wayland_client::protocol::wl_data_device_manager","drag and drop actions",N,N],[3,"WlDataDeviceManager","","",N,N],[4,"Request","","",N,N],[13,"CreateDataSource","","create a new data source",54,N],[12,"id","wayland_client::protocol::wl_data_device_manager::Request","",54,N],[13,"GetDataDevice","wayland_client::protocol::wl_data_device_manager","create a new data device",54,N],[12,"id","wayland_client::protocol::wl_data_device_manager::Request","",54,N],[12,"seat","","",54,N],[4,"Event","wayland_client::protocol::wl_data_device_manager","",N,N],[8,"RequestsTrait","","",N,N],[10,"create_data_source","","create a new data source",55,[[["self"]],["result",["newproxy"]]]],[10,"get_data_device","","create a new data device",55,[[["self"],["proxy"]],["result",["newproxy"]]]],[0,"wl_shell","wayland_client::protocol","create desktop-style surfaces",N,N],[3,"WlShell","wayland_client::protocol::wl_shell","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",56,N],[4,"Request","","",N,N],[13,"GetShellSurface","","create a shell surface from a surface",57,N],[12,"id","wayland_client::protocol::wl_shell::Request","",57,N],[12,"surface","","",57,N],[4,"Event","wayland_client::protocol::wl_shell","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_shell_surface","","create a shell surface from a surface",58,[[["self"],["proxy"]],["result",["newproxy"]]]],[0,"wl_shell_surface","wayland_client::protocol","desktop-style metadata interface",N,N],[3,"Resize","wayland_client::protocol::wl_shell_surface","edge values for resizing",N,N],[3,"Transient","","details of transient behaviour",N,N],[3,"WlShellSurface","","",N,N],[4,"FullscreenMethod","","different method to set the surface fullscreen",N,N],[13,"Default","","no preference, apply default policy",59,N],[13,"Scale","","scale, preserve the surface's aspect ratio and center on output",59,N],[13,"Driver","","switch output mode to the smallest mode that can fit the surface, add black borders to compensate size mismatch",59,N],[13,"Fill","","no upscaling, center on output and add black borders to compensate size mismatch",59,N],[4,"Request","","",N,N],[13,"Pong","","respond to a ping event",60,N],[12,"serial","wayland_client::protocol::wl_shell_surface::Request","",60,N],[13,"Move","wayland_client::protocol::wl_shell_surface","start an interactive move",60,N],[12,"seat","wayland_client::protocol::wl_shell_surface::Request","",60,N],[12,"serial","","",60,N],[13,"Resize","wayland_client::protocol::wl_shell_surface","start an interactive resize",60,N],[12,"seat","wayland_client::protocol::wl_shell_surface::Request","",60,N],[12,"serial","","",60,N],[12,"edges","","",60,N],[13,"SetToplevel","wayland_client::protocol::wl_shell_surface","make the surface a toplevel surface",60,N],[13,"SetTransient","","make the surface a transient surface",60,N],[12,"parent","wayland_client::protocol::wl_shell_surface::Request","",60,N],[12,"x","","",60,N],[12,"y","","",60,N],[12,"flags","","",60,N],[13,"SetFullscreen","wayland_client::protocol::wl_shell_surface","make the surface a fullscreen surface",60,N],[12,"method","wayland_client::protocol::wl_shell_surface::Request","",60,N],[12,"framerate","","",60,N],[12,"output","","",60,N],[13,"SetPopup","wayland_client::protocol::wl_shell_surface","make the surface a popup surface",60,N],[12,"seat","wayland_client::protocol::wl_shell_surface::Request","",60,N],[12,"serial","","",60,N],[12,"parent","","",60,N],[12,"x","","",60,N],[12,"y","","",60,N],[12,"flags","","",60,N],[13,"SetMaximized","wayland_client::protocol::wl_shell_surface","make the surface a maximized surface",60,N],[12,"output","wayland_client::protocol::wl_shell_surface::Request","",60,N],[13,"SetTitle","wayland_client::protocol::wl_shell_surface","set surface title",60,N],[12,"title","wayland_client::protocol::wl_shell_surface::Request","",60,N],[13,"SetClass","wayland_client::protocol::wl_shell_surface","set surface class",60,N],[12,"class_","wayland_client::protocol::wl_shell_surface::Request","",60,N],[4,"Event","wayland_client::protocol::wl_shell_surface","",N,N],[13,"Ping","","ping client",61,N],[12,"serial","wayland_client::protocol::wl_shell_surface::Event","",61,N],[13,"Configure","wayland_client::protocol::wl_shell_surface","suggest resize",61,N],[12,"edges","wayland_client::protocol::wl_shell_surface::Event","",61,N],[12,"width","","",61,N],[12,"height","","",61,N],[13,"PopupDone","wayland_client::protocol::wl_shell_surface","popup interaction is done",61,N],[8,"RequestsTrait","","",N,N],[10,"pong","","respond to a ping event",62,N],[10,"_move","","start an interactive move",62,N],[10,"resize","","start an interactive resize",62,N],[10,"set_toplevel","","make the surface a toplevel surface",62,N],[10,"set_transient","","make the surface a transient surface",62,N],[10,"set_fullscreen","","make the surface a fullscreen surface",62,N],[10,"set_popup","","make the surface a popup surface",62,N],[10,"set_maximized","","make the surface a maximized surface",62,N],[10,"set_title","","set surface title",62,N],[10,"set_class","","set surface class",62,N],[0,"wl_surface","wayland_client::protocol","an onscreen surface",N,N],[3,"WlSurface","wayland_client::protocol::wl_surface","",N,N],[4,"Error","","wl_surface error values",N,N],[13,"InvalidScale","","buffer scale value is invalid",63,N],[13,"InvalidTransform","","buffer transform value is invalid",63,N],[4,"Request","","",N,N],[13,"Destroy","","delete surface",64,N],[13,"Attach","","set the surface contents",64,N],[12,"buffer","wayland_client::protocol::wl_surface::Request","",64,N],[12,"x","","",64,N],[12,"y","","",64,N],[13,"Damage","wayland_client::protocol::wl_surface","mark part of the surface damaged",64,N],[12,"x","wayland_client::protocol::wl_surface::Request","",64,N],[12,"y","","",64,N],[12,"width","","",64,N],[12,"height","","",64,N],[13,"Frame","wayland_client::protocol::wl_surface","request a frame throttling hint",64,N],[12,"callback","wayland_client::protocol::wl_surface::Request","",64,N],[13,"SetOpaqueRegion","wayland_client::protocol::wl_surface","set opaque region",64,N],[12,"region","wayland_client::protocol::wl_surface::Request","",64,N],[13,"SetInputRegion","wayland_client::protocol::wl_surface","set input region",64,N],[12,"region","wayland_client::protocol::wl_surface::Request","",64,N],[13,"Commit","wayland_client::protocol::wl_surface","commit pending surface state",64,N],[13,"SetBufferTransform","","sets the buffer transformation",64,N],[12,"transform","wayland_client::protocol::wl_surface::Request","",64,N],[13,"SetBufferScale","wayland_client::protocol::wl_surface","sets the buffer scaling factor",64,N],[12,"scale","wayland_client::protocol::wl_surface::Request","",64,N],[13,"DamageBuffer","wayland_client::protocol::wl_surface","mark part of the surface damaged using buffer coordinates",64,N],[12,"x","wayland_client::protocol::wl_surface::Request","",64,N],[12,"y","","",64,N],[12,"width","","",64,N],[12,"height","","",64,N],[4,"Event","wayland_client::protocol::wl_surface","",N,N],[13,"Enter","","surface enters an output",65,N],[12,"output","wayland_client::protocol::wl_surface::Event","",65,N],[13,"Leave","wayland_client::protocol::wl_surface","surface leaves an output",65,N],[12,"output","wayland_client::protocol::wl_surface::Event","",65,N],[8,"RequestsTrait","wayland_client::protocol::wl_surface","",N,N],[10,"destroy","","delete surface",66,N],[10,"attach","","set the surface contents",66,N],[10,"damage","","mark part of the surface damaged",66,N],[10,"frame","","request a frame throttling hint",66,[[["self"]],["result",["newproxy"]]]],[10,"set_opaque_region","","set opaque region",66,N],[10,"set_input_region","","set input region",66,N],[10,"commit","","commit pending surface state",66,N],[10,"set_buffer_transform","","sets the buffer transformation",66,N],[10,"set_buffer_scale","","sets the buffer scaling factor",66,N],[10,"damage_buffer","","mark part of the surface damaged using buffer coordinates",66,N],[0,"wl_seat","wayland_client::protocol","group of input devices",N,N],[3,"Capability","wayland_client::protocol::wl_seat","seat capability bitmask",N,N],[3,"WlSeat","","",N,N],[4,"Request","","",N,N],[13,"GetPointer","","return pointer object",67,N],[12,"id","wayland_client::protocol::wl_seat::Request","",67,N],[13,"GetKeyboard","wayland_client::protocol::wl_seat","return keyboard object",67,N],[12,"id","wayland_client::protocol::wl_seat::Request","",67,N],[13,"GetTouch","wayland_client::protocol::wl_seat","return touch object",67,N],[12,"id","wayland_client::protocol::wl_seat::Request","",67,N],[13,"Release","wayland_client::protocol::wl_seat","release the seat object",67,N],[4,"Event","","",N,N],[13,"Capabilities","","seat capabilities changed",68,N],[12,"capabilities","wayland_client::protocol::wl_seat::Event","",68,N],[13,"Name","wayland_client::protocol::wl_seat","unique identifier for this seat",68,N],[12,"name","wayland_client::protocol::wl_seat::Event","",68,N],[8,"RequestsTrait","wayland_client::protocol::wl_seat","",N,N],[10,"get_pointer","","return pointer object",69,[[["self"]],["result",["newproxy"]]]],[10,"get_keyboard","","return keyboard object",69,[[["self"]],["result",["newproxy"]]]],[10,"get_touch","","return touch object",69,[[["self"]],["result",["newproxy"]]]],[10,"release","","release the seat object",69,N],[0,"wl_pointer","wayland_client::protocol","pointer input device",N,N],[3,"WlPointer","wayland_client::protocol::wl_pointer","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",70,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","the button is not pressed",71,N],[13,"Pressed","","the button is pressed",71,N],[4,"Axis","","axis types",N,N],[13,"VerticalScroll","","vertical axis",72,N],[13,"HorizontalScroll","","horizontal axis",72,N],[4,"AxisSource","","axis source types",N,N],[13,"Wheel","","a physical wheel",73,N],[13,"Finger","","finger on a touch surface",73,N],[13,"Continuous","","continuous coordinate space",73,N],[4,"Request","","",N,N],[13,"SetCursor","","set the pointer surface",74,N],[12,"serial","wayland_client::protocol::wl_pointer::Request","",74,N],[12,"surface","","",74,N],[12,"hotspot_x","","",74,N],[12,"hotspot_y","","",74,N],[13,"Release","wayland_client::protocol::wl_pointer","release the pointer object",74,N],[4,"Event","","",N,N],[13,"Enter","","enter event",75,N],[12,"serial","wayland_client::protocol::wl_pointer::Event","",75,N],[12,"surface","","",75,N],[12,"surface_x","","",75,N],[12,"surface_y","","",75,N],[13,"Leave","wayland_client::protocol::wl_pointer","leave event",75,N],[12,"serial","wayland_client::protocol::wl_pointer::Event","",75,N],[12,"surface","","",75,N],[13,"Motion","wayland_client::protocol::wl_pointer","pointer motion event",75,N],[12,"time","wayland_client::protocol::wl_pointer::Event","",75,N],[12,"surface_x","","",75,N],[12,"surface_y","","",75,N],[13,"Button","wayland_client::protocol::wl_pointer","pointer button event",75,N],[12,"serial","wayland_client::protocol::wl_pointer::Event","",75,N],[12,"time","","",75,N],[12,"button","","",75,N],[12,"state","","",75,N],[13,"Axis","wayland_client::protocol::wl_pointer","axis event",75,N],[12,"time","wayland_client::protocol::wl_pointer::Event","",75,N],[12,"axis","","",75,N],[12,"value","","",75,N],[13,"Frame","wayland_client::protocol::wl_pointer","end of a pointer event sequence",75,N],[13,"AxisSource","","axis source event",75,N],[12,"axis_source","wayland_client::protocol::wl_pointer::Event","",75,N],[13,"AxisStop","wayland_client::protocol::wl_pointer","axis stop event",75,N],[12,"time","wayland_client::protocol::wl_pointer::Event","",75,N],[12,"axis","","",75,N],[13,"AxisDiscrete","wayland_client::protocol::wl_pointer","axis click event",75,N],[12,"axis","wayland_client::protocol::wl_pointer::Event","",75,N],[12,"discrete","","",75,N],[8,"RequestsTrait","wayland_client::protocol::wl_pointer","",N,N],[10,"set_cursor","","set the pointer surface",76,N],[10,"release","","release the pointer object",76,N],[0,"wl_keyboard","wayland_client::protocol","keyboard input device",N,N],[3,"WlKeyboard","wayland_client::protocol::wl_keyboard","",N,N],[4,"KeymapFormat","","keyboard mapping format",N,N],[13,"NoKeymap","","no keymap; client must understand how to interpret the raw keycode",77,N],[13,"XkbV1","","libxkbcommon compatible; to determine the xkb keycode, clients must add 8 to the key event keycode",77,N],[4,"KeyState","","physical key state",N,N],[13,"Released","","key is not pressed",78,N],[13,"Pressed","","key is pressed",78,N],[4,"Request","","",N,N],[13,"Release","","release the keyboard object",79,N],[4,"Event","","",N,N],[13,"Keymap","","keyboard mapping",80,N],[12,"format","wayland_client::protocol::wl_keyboard::Event","",80,N],[12,"fd","","",80,N],[12,"size","","",80,N],[13,"Enter","wayland_client::protocol::wl_keyboard","enter event",80,N],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",80,N],[12,"surface","","",80,N],[12,"keys","","",80,N],[13,"Leave","wayland_client::protocol::wl_keyboard","leave event",80,N],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",80,N],[12,"surface","","",80,N],[13,"Key","wayland_client::protocol::wl_keyboard","key event",80,N],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",80,N],[12,"time","","",80,N],[12,"key","","",80,N],[12,"state","","",80,N],[13,"Modifiers","wayland_client::protocol::wl_keyboard","modifier and group state",80,N],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",80,N],[12,"mods_depressed","","",80,N],[12,"mods_latched","","",80,N],[12,"mods_locked","","",80,N],[12,"group","","",80,N],[13,"RepeatInfo","wayland_client::protocol::wl_keyboard","repeat rate and delay",80,N],[12,"rate","wayland_client::protocol::wl_keyboard::Event","",80,N],[12,"delay","","",80,N],[8,"RequestsTrait","wayland_client::protocol::wl_keyboard","",N,N],[10,"release","","release the keyboard object",81,N],[0,"wl_touch","wayland_client::protocol","touchscreen input device",N,N],[3,"WlTouch","wayland_client::protocol::wl_touch","",N,N],[4,"Request","","",N,N],[13,"Release","","release the touch object",82,N],[4,"Event","","",N,N],[13,"Down","","touch down event and beginning of a touch sequence",83,N],[12,"serial","wayland_client::protocol::wl_touch::Event","",83,N],[12,"time","","",83,N],[12,"surface","","",83,N],[12,"id","","",83,N],[12,"x","","",83,N],[12,"y","","",83,N],[13,"Up","wayland_client::protocol::wl_touch","end of a touch event sequence",83,N],[12,"serial","wayland_client::protocol::wl_touch::Event","",83,N],[12,"time","","",83,N],[12,"id","","",83,N],[13,"Motion","wayland_client::protocol::wl_touch","update of touch point coordinates",83,N],[12,"time","wayland_client::protocol::wl_touch::Event","",83,N],[12,"id","","",83,N],[12,"x","","",83,N],[12,"y","","",83,N],[13,"Frame","wayland_client::protocol::wl_touch","end of touch frame event",83,N],[13,"Cancel","","touch session cancelled",83,N],[8,"RequestsTrait","","",N,N],[10,"release","","release the touch object",84,N],[0,"wl_output","wayland_client::protocol","compositor output region",N,N],[3,"Mode","wayland_client::protocol::wl_output","mode information",N,N],[3,"WlOutput","","",N,N],[4,"Subpixel","","subpixel geometry information",N,N],[13,"Unknown","","unknown geometry",85,N],[13,"None","","no geometry",85,N],[13,"HorizontalRgb","","horizontal RGB",85,N],[13,"HorizontalBgr","","horizontal BGR",85,N],[13,"VerticalRgb","","vertical RGB",85,N],[13,"VerticalBgr","","vertical BGR",85,N],[4,"Transform","","transform from framebuffer to output",N,N],[13,"Normal","","no transform",86,N],[13,"_90","","90 degrees counter-clockwise",86,N],[13,"_180","","180 degrees counter-clockwise",86,N],[13,"_270","","270 degrees counter-clockwise",86,N],[13,"Flipped","","180 degree flip around a vertical axis",86,N],[13,"Flipped90","","flip and rotate 90 degrees counter-clockwise",86,N],[13,"Flipped180","","flip and rotate 180 degrees counter-clockwise",86,N],[13,"Flipped270","","flip and rotate 270 degrees counter-clockwise",86,N],[4,"Request","","",N,N],[13,"Release","","release the output object",87,N],[4,"Event","","",N,N],[13,"Geometry","","properties of the output",88,N],[12,"x","wayland_client::protocol::wl_output::Event","",88,N],[12,"y","","",88,N],[12,"physical_width","","",88,N],[12,"physical_height","","",88,N],[12,"subpixel","","",88,N],[12,"make","","",88,N],[12,"model","","",88,N],[12,"transform","","",88,N],[13,"Mode","wayland_client::protocol::wl_output","advertise available modes for the output",88,N],[12,"flags","wayland_client::protocol::wl_output::Event","",88,N],[12,"width","","",88,N],[12,"height","","",88,N],[12,"refresh","","",88,N],[13,"Done","wayland_client::protocol::wl_output","sent all information about output",88,N],[13,"Scale","","output scaling properties",88,N],[12,"factor","wayland_client::protocol::wl_output::Event","",88,N],[8,"RequestsTrait","wayland_client::protocol::wl_output","",N,N],[10,"release","","release the output object",89,N],[0,"wl_region","wayland_client::protocol","region interface",N,N],[3,"WlRegion","wayland_client::protocol::wl_region","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy region",90,N],[13,"Add","","add rectangle to region",90,N],[12,"x","wayland_client::protocol::wl_region::Request","",90,N],[12,"y","","",90,N],[12,"width","","",90,N],[12,"height","","",90,N],[13,"Subtract","wayland_client::protocol::wl_region","subtract rectangle from region",90,N],[12,"x","wayland_client::protocol::wl_region::Request","",90,N],[12,"y","","",90,N],[12,"width","","",90,N],[12,"height","","",90,N],[4,"Event","wayland_client::protocol::wl_region","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy region",91,N],[10,"add","","add rectangle to region",91,N],[10,"subtract","","subtract rectangle from region",91,N],[0,"wl_subcompositor","wayland_client::protocol","sub-surface compositing",N,N],[3,"WlSubcompositor","wayland_client::protocol::wl_subcompositor","",N,N],[4,"Error","","",N,N],[13,"BadSurface","","the to-be sub-surface is invalid",92,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the subcompositor interface",93,N],[13,"GetSubsurface","","give a surface the role sub-surface",93,N],[12,"id","wayland_client::protocol::wl_subcompositor::Request","",93,N],[12,"surface","","",93,N],[12,"parent","","",93,N],[4,"Event","wayland_client::protocol::wl_subcompositor","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","unbind from the subcompositor interface",94,N],[10,"get_subsurface","","give a surface the role sub-surface",94,[[["self"],["proxy"],["proxy"]],["result",["newproxy"]]]],[0,"wl_subsurface","wayland_client::protocol","sub-surface interface to a wl_surface",N,N],[3,"WlSubsurface","wayland_client::protocol::wl_subsurface","",N,N],[4,"Error","","",N,N],[13,"BadSurface","","wl_surface is not a sibling or the parent",95,N],[4,"Request","","",N,N],[13,"Destroy","","remove sub-surface interface",96,N],[13,"SetPosition","","reposition the sub-surface",96,N],[12,"x","wayland_client::protocol::wl_subsurface::Request","",96,N],[12,"y","","",96,N],[13,"PlaceAbove","wayland_client::protocol::wl_subsurface","restack the sub-surface",96,N],[12,"sibling","wayland_client::protocol::wl_subsurface::Request","",96,N],[13,"PlaceBelow","wayland_client::protocol::wl_subsurface","restack the sub-surface",96,N],[12,"sibling","wayland_client::protocol::wl_subsurface::Request","",96,N],[13,"SetSync","wayland_client::protocol::wl_subsurface","set sub-surface to synchronized mode",96,N],[13,"SetDesync","","set sub-surface to desynchronized mode",96,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","remove sub-surface interface",97,N],[10,"set_position","","reposition the sub-surface",97,N],[10,"place_above","","restack the sub-surface",97,N],[10,"place_below","","restack the sub-surface",97,N],[10,"set_sync","","set sub-surface to synchronized mode",97,N],[10,"set_desync","","set sub-surface to desynchronized mode",97,N],[11,"clone","wayland_client::protocol::wl_display","",22,[[["self"]],["error"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"eq","","",22,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",22,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",22,[[["self"]],["u32"]]],[11,"is_destructor","","",23,[[["self"]],["bool"]]],[11,"from_raw_c","","",23,N],[11,"as_raw_c_in","","",23,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",24,[[["self"]],["bool"]]],[11,"from_raw_c","","",24,N],[11,"as_raw_c_in","","",24,[[["self"],["f"]],["t"]]],[11,"c_interface","","",98,N],[11,"sync","wayland_client","",7,[[["self"]],["result",["newproxy"]]]],[11,"get_registry","","",7,[[["self"]],["result",["newproxy"]]]],[11,"is_destructor","wayland_client::protocol::wl_registry","",26,[[["self"]],["bool"]]],[11,"from_raw_c","","",26,N],[11,"as_raw_c_in","","",26,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",27,[[["self"]],["bool"]]],[11,"from_raw_c","","",27,N],[11,"as_raw_c_in","","",27,[[["self"],["f"]],["t"]]],[11,"c_interface","","",99,N],[11,"bind","wayland_client","",7,[[["self"],["u32"],["u32"]],["result",["newproxy"]]]],[11,"is_destructor","wayland_client::protocol::wl_callback","",100,[[["self"]],["bool"]]],[11,"from_raw_c","","",100,N],[11,"as_raw_c_in","","",100,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",29,[[["self"]],["bool"]]],[11,"from_raw_c","","",29,N],[11,"as_raw_c_in","","",29,[[["self"],["f"]],["t"]]],[11,"c_interface","","",101,N],[11,"is_destructor","wayland_client::protocol::wl_compositor","",30,[[["self"]],["bool"]]],[11,"from_raw_c","","",30,N],[11,"as_raw_c_in","","",30,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",102,[[["self"]],["bool"]]],[11,"from_raw_c","","",102,N],[11,"as_raw_c_in","","",102,[[["self"],["f"]],["t"]]],[11,"c_interface","","",103,N],[11,"create_surface","wayland_client","",7,[[["self"]],["result",["newproxy"]]]],[11,"create_region","","",7,[[["self"]],["result",["newproxy"]]]],[11,"is_destructor","wayland_client::protocol::wl_shm_pool","",32,[[["self"]],["bool"]]],[11,"from_raw_c","","",32,N],[11,"as_raw_c_in","","",32,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",104,[[["self"]],["bool"]]],[11,"from_raw_c","","",104,N],[11,"as_raw_c_in","","",104,[[["self"],["f"]],["t"]]],[11,"c_interface","","",105,N],[11,"create_buffer","wayland_client","",7,[[["self"],["i32"],["i32"],["i32"],["i32"],["format"]],["result",["newproxy"]]]],[11,"destroy","","",7,N],[11,"resize","","",7,N],[11,"clone","wayland_client::protocol::wl_shm","",34,[[["self"]],["error"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"eq","","",34,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",34,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",34,[[["self"]],["u32"]]],[11,"clone","","",35,[[["self"]],["format"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"eq","","",35,[[["self"],["format"]],["bool"]]],[11,"from_raw","","",35,[[["u32"]],["option",["format"]]]],[11,"to_raw","","",35,[[["self"]],["u32"]]],[11,"is_destructor","","",36,[[["self"]],["bool"]]],[11,"from_raw_c","","",36,N],[11,"as_raw_c_in","","",36,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",37,[[["self"]],["bool"]]],[11,"from_raw_c","","",37,N],[11,"as_raw_c_in","","",37,[[["self"],["f"]],["t"]]],[11,"c_interface","","",106,N],[11,"create_pool","wayland_client","",7,[[["self"],["rawfd"],["i32"]],["result",["newproxy"]]]],[11,"is_destructor","wayland_client::protocol::wl_buffer","",39,[[["self"]],["bool"]]],[11,"from_raw_c","","",39,N],[11,"as_raw_c_in","","",39,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",40,[[["self"]],["bool"]]],[11,"from_raw_c","","",40,N],[11,"as_raw_c_in","","",40,[[["self"],["f"]],["t"]]],[11,"c_interface","","",107,N],[11,"destroy","wayland_client","",7,N],[11,"clone","wayland_client::protocol::wl_data_offer","",42,[[["self"]],["error"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"eq","","",42,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",42,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",42,[[["self"]],["u32"]]],[11,"is_destructor","","",43,[[["self"]],["bool"]]],[11,"from_raw_c","","",43,N],[11,"as_raw_c_in","","",43,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",44,[[["self"]],["bool"]]],[11,"from_raw_c","","",44,N],[11,"as_raw_c_in","","",44,[[["self"],["f"]],["t"]]],[11,"c_interface","","",108,N],[11,"accept","wayland_client","",7,N],[11,"receive","","",7,N],[11,"destroy","","",7,N],[11,"finish","","",7,N],[11,"set_actions","","",7,N],[11,"clone","wayland_client::protocol::wl_data_source","",46,[[["self"]],["error"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"eq","","",46,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",46,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",46,[[["self"]],["u32"]]],[11,"is_destructor","","",47,[[["self"]],["bool"]]],[11,"from_raw_c","","",47,N],[11,"as_raw_c_in","","",47,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",48,[[["self"]],["bool"]]],[11,"from_raw_c","","",48,N],[11,"as_raw_c_in","","",48,[[["self"],["f"]],["t"]]],[11,"c_interface","","",109,N],[11,"offer","wayland_client","",7,N],[11,"destroy","","",7,N],[11,"set_actions","","",7,N],[11,"clone","wayland_client::protocol::wl_data_device","",50,[[["self"]],["error"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"eq","","",50,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",50,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",50,[[["self"]],["u32"]]],[11,"is_destructor","","",51,[[["self"]],["bool"]]],[11,"from_raw_c","","",51,N],[11,"as_raw_c_in","","",51,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",52,[[["self"]],["bool"]]],[11,"from_raw_c","","",52,N],[11,"as_raw_c_in","","",52,[[["self"],["f"]],["t"]]],[11,"c_interface","","",110,N],[11,"start_drag","wayland_client","",7,N],[11,"set_selection","","",7,N],[11,"release","","",7,N],[11,"eq","wayland_client::protocol::wl_data_device_manager","",111,[[["self"],["dndaction"]],["bool"]]],[11,"ne","","",111,[[["self"],["dndaction"]],["bool"]]],[11,"clone","","",111,[[["self"]],["dndaction"]]],[11,"partial_cmp","","",111,[[["self"],["dndaction"]],["option",["ordering"]]]],[11,"lt","","",111,[[["self"],["dndaction"]],["bool"]]],[11,"le","","",111,[[["self"],["dndaction"]],["bool"]]],[11,"gt","","",111,[[["self"],["dndaction"]],["bool"]]],[11,"ge","","",111,[[["self"],["dndaction"]],["bool"]]],[11,"cmp","","",111,[[["self"],["dndaction"]],["ordering"]]],[11,"hash","","",111,N],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[18,"None","","no action",111,N],[18,"Copy","","copy action",111,N],[18,"Move","","move action",111,N],[18,"Ask","","ask action",111,N],[11,"empty","","Returns an empty set of flags.",111,[[],["dndaction"]]],[11,"all","","Returns the set containing all flags.",111,[[],["dndaction"]]],[11,"bits","","Returns the raw value of the flags currently stored.",111,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",111,[[["u32"]],["option",["dndaction"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",111,[[["u32"]],["dndaction"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",111,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",111,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",111,[[["self"],["dndaction"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",111,[[["self"],["dndaction"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",111,[[["self"],["dndaction"]]]],[11,"remove","","Removes the specified flags in-place.",111,[[["self"],["dndaction"]]]],[11,"toggle","","Toggles the specified flags in-place.",111,[[["self"],["dndaction"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",111,[[["self"],["dndaction"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",111,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitor_assign","","Adds the set of flags.",111,[[["self"],["dndaction"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",111,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitxor_assign","","Toggles the set of flags.",111,[[["self"],["dndaction"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",111,[[["self"],["dndaction"]],["dndaction"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",111,[[["self"],["dndaction"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",111,[[["self"],["dndaction"]],["dndaction"]]],[11,"sub_assign","","Disables all flags enabled in the set.",111,[[["self"],["dndaction"]]]],[11,"not","","Returns the complement of this set of flags.",111,[[["self"]],["dndaction"]]],[11,"extend","","",111,[[["self"],["t"]]]],[11,"from_iter","","",111,[[["t"]],["dndaction"]]],[11,"from_raw","","",111,[[["u32"]],["option",["dndaction"]]]],[11,"to_raw","","",111,[[["self"]],["u32"]]],[11,"is_destructor","","",54,[[["self"]],["bool"]]],[11,"from_raw_c","","",54,N],[11,"as_raw_c_in","","",54,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",112,[[["self"]],["bool"]]],[11,"from_raw_c","","",112,N],[11,"as_raw_c_in","","",112,[[["self"],["f"]],["t"]]],[11,"c_interface","","",113,N],[11,"create_data_source","wayland_client","",7,[[["self"]],["result",["newproxy"]]]],[11,"get_data_device","","",7,[[["self"],["proxy"]],["result",["newproxy"]]]],[11,"clone","wayland_client::protocol::wl_shell","",56,[[["self"]],["error"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"eq","","",56,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",56,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",56,[[["self"]],["u32"]]],[11,"is_destructor","","",57,[[["self"]],["bool"]]],[11,"from_raw_c","","",57,N],[11,"as_raw_c_in","","",57,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",114,[[["self"]],["bool"]]],[11,"from_raw_c","","",114,N],[11,"as_raw_c_in","","",114,[[["self"],["f"]],["t"]]],[11,"c_interface","","",115,N],[11,"get_shell_surface","wayland_client","",7,[[["self"],["proxy"]],["result",["newproxy"]]]],[11,"eq","wayland_client::protocol::wl_shell_surface","",116,[[["self"],["resize"]],["bool"]]],[11,"ne","","",116,[[["self"],["resize"]],["bool"]]],[11,"clone","","",116,[[["self"]],["resize"]]],[11,"partial_cmp","","",116,[[["self"],["resize"]],["option",["ordering"]]]],[11,"lt","","",116,[[["self"],["resize"]],["bool"]]],[11,"le","","",116,[[["self"],["resize"]],["bool"]]],[11,"gt","","",116,[[["self"],["resize"]],["bool"]]],[11,"ge","","",116,[[["self"],["resize"]],["bool"]]],[11,"cmp","","",116,[[["self"],["resize"]],["ordering"]]],[11,"hash","","",116,N],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[18,"None","","no edge",116,N],[18,"Top","","top edge",116,N],[18,"Bottom","","bottom edge",116,N],[18,"Left","","left edge",116,N],[18,"TopLeft","","top and left edges",116,N],[18,"BottomLeft","","bottom and left edges",116,N],[18,"Right","","right edge",116,N],[18,"TopRight","","top and right edges",116,N],[18,"BottomRight","","bottom and right edges",116,N],[11,"empty","","Returns an empty set of flags.",116,[[],["resize"]]],[11,"all","","Returns the set containing all flags.",116,[[],["resize"]]],[11,"bits","","Returns the raw value of the flags currently stored.",116,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",116,[[["u32"]],["option",["resize"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",116,[[["u32"]],["resize"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",116,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",116,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",116,[[["self"],["resize"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",116,[[["self"],["resize"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",116,[[["self"],["resize"]]]],[11,"remove","","Removes the specified flags in-place.",116,[[["self"],["resize"]]]],[11,"toggle","","Toggles the specified flags in-place.",116,[[["self"],["resize"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",116,[[["self"],["resize"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",116,[[["self"],["resize"]],["resize"]]],[11,"bitor_assign","","Adds the set of flags.",116,[[["self"],["resize"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",116,[[["self"],["resize"]],["resize"]]],[11,"bitxor_assign","","Toggles the set of flags.",116,[[["self"],["resize"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",116,[[["self"],["resize"]],["resize"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",116,[[["self"],["resize"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",116,[[["self"],["resize"]],["resize"]]],[11,"sub_assign","","Disables all flags enabled in the set.",116,[[["self"],["resize"]]]],[11,"not","","Returns the complement of this set of flags.",116,[[["self"]],["resize"]]],[11,"extend","","",116,[[["self"],["t"]]]],[11,"from_iter","","",116,[[["t"]],["resize"]]],[11,"from_raw","","",116,[[["u32"]],["option",["resize"]]]],[11,"to_raw","","",116,[[["self"]],["u32"]]],[11,"eq","","",117,[[["self"],["transient"]],["bool"]]],[11,"ne","","",117,[[["self"],["transient"]],["bool"]]],[11,"clone","","",117,[[["self"]],["transient"]]],[11,"partial_cmp","","",117,[[["self"],["transient"]],["option",["ordering"]]]],[11,"lt","","",117,[[["self"],["transient"]],["bool"]]],[11,"le","","",117,[[["self"],["transient"]],["bool"]]],[11,"gt","","",117,[[["self"],["transient"]],["bool"]]],[11,"ge","","",117,[[["self"],["transient"]],["bool"]]],[11,"cmp","","",117,[[["self"],["transient"]],["ordering"]]],[11,"hash","","",117,N],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[18,"Inactive","","do not set keyboard focus",117,N],[11,"empty","","Returns an empty set of flags.",117,[[],["transient"]]],[11,"all","","Returns the set containing all flags.",117,[[],["transient"]]],[11,"bits","","Returns the raw value of the flags currently stored.",117,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",117,[[["u32"]],["option",["transient"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",117,[[["u32"]],["transient"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",117,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",117,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",117,[[["self"],["transient"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",117,[[["self"],["transient"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",117,[[["self"],["transient"]]]],[11,"remove","","Removes the specified flags in-place.",117,[[["self"],["transient"]]]],[11,"toggle","","Toggles the specified flags in-place.",117,[[["self"],["transient"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",117,[[["self"],["transient"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",117,[[["self"],["transient"]],["transient"]]],[11,"bitor_assign","","Adds the set of flags.",117,[[["self"],["transient"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",117,[[["self"],["transient"]],["transient"]]],[11,"bitxor_assign","","Toggles the set of flags.",117,[[["self"],["transient"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",117,[[["self"],["transient"]],["transient"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",117,[[["self"],["transient"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",117,[[["self"],["transient"]],["transient"]]],[11,"sub_assign","","Disables all flags enabled in the set.",117,[[["self"],["transient"]]]],[11,"not","","Returns the complement of this set of flags.",117,[[["self"]],["transient"]]],[11,"extend","","",117,[[["self"],["t"]]]],[11,"from_iter","","",117,[[["t"]],["transient"]]],[11,"from_raw","","",117,[[["u32"]],["option",["transient"]]]],[11,"to_raw","","",117,[[["self"]],["u32"]]],[11,"clone","","",59,[[["self"]],["fullscreenmethod"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"eq","","",59,[[["self"],["fullscreenmethod"]],["bool"]]],[11,"from_raw","","",59,[[["u32"]],["option",["fullscreenmethod"]]]],[11,"to_raw","","",59,[[["self"]],["u32"]]],[11,"is_destructor","","",60,[[["self"]],["bool"]]],[11,"from_raw_c","","",60,N],[11,"as_raw_c_in","","",60,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",61,[[["self"]],["bool"]]],[11,"from_raw_c","","",61,N],[11,"as_raw_c_in","","",61,[[["self"],["f"]],["t"]]],[11,"c_interface","","",118,N],[11,"pong","wayland_client","",7,N],[11,"_move","","",7,N],[11,"resize","","",7,N],[11,"set_toplevel","","",7,N],[11,"set_transient","","",7,N],[11,"set_fullscreen","","",7,N],[11,"set_popup","","",7,N],[11,"set_maximized","","",7,N],[11,"set_title","","",7,N],[11,"set_class","","",7,N],[11,"clone","wayland_client::protocol::wl_surface","",63,[[["self"]],["error"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"eq","","",63,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",63,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",63,[[["self"]],["u32"]]],[11,"is_destructor","","",64,[[["self"]],["bool"]]],[11,"from_raw_c","","",64,N],[11,"as_raw_c_in","","",64,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",65,[[["self"]],["bool"]]],[11,"from_raw_c","","",65,N],[11,"as_raw_c_in","","",65,[[["self"],["f"]],["t"]]],[11,"c_interface","","",119,N],[11,"destroy","wayland_client","",7,N],[11,"attach","","",7,N],[11,"damage","","",7,N],[11,"frame","","",7,[[["self"]],["result",["newproxy"]]]],[11,"set_opaque_region","","",7,N],[11,"set_input_region","","",7,N],[11,"commit","","",7,N],[11,"set_buffer_transform","","",7,N],[11,"set_buffer_scale","","",7,N],[11,"damage_buffer","","",7,N],[11,"eq","wayland_client::protocol::wl_seat","",120,[[["self"],["capability"]],["bool"]]],[11,"ne","","",120,[[["self"],["capability"]],["bool"]]],[11,"clone","","",120,[[["self"]],["capability"]]],[11,"partial_cmp","","",120,[[["self"],["capability"]],["option",["ordering"]]]],[11,"lt","","",120,[[["self"],["capability"]],["bool"]]],[11,"le","","",120,[[["self"],["capability"]],["bool"]]],[11,"gt","","",120,[[["self"],["capability"]],["bool"]]],[11,"ge","","",120,[[["self"],["capability"]],["bool"]]],[11,"cmp","","",120,[[["self"],["capability"]],["ordering"]]],[11,"hash","","",120,N],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[18,"Pointer","","the seat has pointer devices",120,N],[18,"Keyboard","","the seat has one or more keyboards",120,N],[18,"Touch","","the seat has touch devices",120,N],[11,"empty","","Returns an empty set of flags.",120,[[],["capability"]]],[11,"all","","Returns the set containing all flags.",120,[[],["capability"]]],[11,"bits","","Returns the raw value of the flags currently stored.",120,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",120,[[["u32"]],["option",["capability"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",120,[[["u32"]],["capability"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",120,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",120,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",120,[[["self"],["capability"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",120,[[["self"],["capability"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",120,[[["self"],["capability"]]]],[11,"remove","","Removes the specified flags in-place.",120,[[["self"],["capability"]]]],[11,"toggle","","Toggles the specified flags in-place.",120,[[["self"],["capability"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",120,[[["self"],["capability"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",120,[[["self"],["capability"]],["capability"]]],[11,"bitor_assign","","Adds the set of flags.",120,[[["self"],["capability"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",120,[[["self"],["capability"]],["capability"]]],[11,"bitxor_assign","","Toggles the set of flags.",120,[[["self"],["capability"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",120,[[["self"],["capability"]],["capability"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",120,[[["self"],["capability"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",120,[[["self"],["capability"]],["capability"]]],[11,"sub_assign","","Disables all flags enabled in the set.",120,[[["self"],["capability"]]]],[11,"not","","Returns the complement of this set of flags.",120,[[["self"]],["capability"]]],[11,"extend","","",120,[[["self"],["t"]]]],[11,"from_iter","","",120,[[["t"]],["capability"]]],[11,"from_raw","","",120,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",120,[[["self"]],["u32"]]],[11,"is_destructor","","",67,[[["self"]],["bool"]]],[11,"from_raw_c","","",67,N],[11,"as_raw_c_in","","",67,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",68,[[["self"]],["bool"]]],[11,"from_raw_c","","",68,N],[11,"as_raw_c_in","","",68,[[["self"],["f"]],["t"]]],[11,"c_interface","","",121,N],[11,"get_pointer","wayland_client","",7,[[["self"]],["result",["newproxy"]]]],[11,"get_keyboard","","",7,[[["self"]],["result",["newproxy"]]]],[11,"get_touch","","",7,[[["self"]],["result",["newproxy"]]]],[11,"release","","",7,N],[11,"clone","wayland_client::protocol::wl_pointer","",70,[[["self"]],["error"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"eq","","",70,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",70,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",70,[[["self"]],["u32"]]],[11,"clone","","",71,[[["self"]],["buttonstate"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"eq","","",71,[[["self"],["buttonstate"]],["bool"]]],[11,"from_raw","","",71,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",71,[[["self"]],["u32"]]],[11,"clone","","",72,[[["self"]],["axis"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"eq","","",72,[[["self"],["axis"]],["bool"]]],[11,"from_raw","","",72,[[["u32"]],["option",["axis"]]]],[11,"to_raw","","",72,[[["self"]],["u32"]]],[11,"clone","","",73,[[["self"]],["axissource"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"eq","","",73,[[["self"],["axissource"]],["bool"]]],[11,"from_raw","","",73,[[["u32"]],["option",["axissource"]]]],[11,"to_raw","","",73,[[["self"]],["u32"]]],[11,"is_destructor","","",74,[[["self"]],["bool"]]],[11,"from_raw_c","","",74,N],[11,"as_raw_c_in","","",74,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",75,[[["self"]],["bool"]]],[11,"from_raw_c","","",75,N],[11,"as_raw_c_in","","",75,[[["self"],["f"]],["t"]]],[11,"c_interface","","",122,N],[11,"set_cursor","wayland_client","",7,N],[11,"release","","",7,N],[11,"clone","wayland_client::protocol::wl_keyboard","",77,[[["self"]],["keymapformat"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"eq","","",77,[[["self"],["keymapformat"]],["bool"]]],[11,"from_raw","","",77,[[["u32"]],["option",["keymapformat"]]]],[11,"to_raw","","",77,[[["self"]],["u32"]]],[11,"clone","","",78,[[["self"]],["keystate"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"eq","","",78,[[["self"],["keystate"]],["bool"]]],[11,"from_raw","","",78,[[["u32"]],["option",["keystate"]]]],[11,"to_raw","","",78,[[["self"]],["u32"]]],[11,"is_destructor","","",79,[[["self"]],["bool"]]],[11,"from_raw_c","","",79,N],[11,"as_raw_c_in","","",79,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",80,[[["self"]],["bool"]]],[11,"from_raw_c","","",80,N],[11,"as_raw_c_in","","",80,[[["self"],["f"]],["t"]]],[11,"c_interface","","",123,N],[11,"release","wayland_client","",7,N],[11,"is_destructor","wayland_client::protocol::wl_touch","",82,[[["self"]],["bool"]]],[11,"from_raw_c","","",82,N],[11,"as_raw_c_in","","",82,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",83,[[["self"]],["bool"]]],[11,"from_raw_c","","",83,N],[11,"as_raw_c_in","","",83,[[["self"],["f"]],["t"]]],[11,"c_interface","","",124,N],[11,"release","wayland_client","",7,N],[11,"clone","wayland_client::protocol::wl_output","",85,[[["self"]],["subpixel"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"eq","","",85,[[["self"],["subpixel"]],["bool"]]],[11,"from_raw","","",85,[[["u32"]],["option",["subpixel"]]]],[11,"to_raw","","",85,[[["self"]],["u32"]]],[11,"clone","","",86,[[["self"]],["transform"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"eq","","",86,[[["self"],["transform"]],["bool"]]],[11,"from_raw","","",86,[[["u32"]],["option",["transform"]]]],[11,"to_raw","","",86,[[["self"]],["u32"]]],[11,"eq","","",125,[[["self"],["mode"]],["bool"]]],[11,"ne","","",125,[[["self"],["mode"]],["bool"]]],[11,"clone","","",125,[[["self"]],["mode"]]],[11,"partial_cmp","","",125,[[["self"],["mode"]],["option",["ordering"]]]],[11,"lt","","",125,[[["self"],["mode"]],["bool"]]],[11,"le","","",125,[[["self"],["mode"]],["bool"]]],[11,"gt","","",125,[[["self"],["mode"]],["bool"]]],[11,"ge","","",125,[[["self"],["mode"]],["bool"]]],[11,"cmp","","",125,[[["self"],["mode"]],["ordering"]]],[11,"hash","","",125,N],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[18,"Current","","indicates this is the current mode",125,N],[18,"Preferred","","indicates this is the preferred mode",125,N],[11,"empty","","Returns an empty set of flags.",125,[[],["mode"]]],[11,"all","","Returns the set containing all flags.",125,[[],["mode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",125,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",125,[[["u32"]],["option",["mode"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",125,[[["u32"]],["mode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",125,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",125,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",125,[[["self"],["mode"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",125,[[["self"],["mode"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",125,[[["self"],["mode"]]]],[11,"remove","","Removes the specified flags in-place.",125,[[["self"],["mode"]]]],[11,"toggle","","Toggles the specified flags in-place.",125,[[["self"],["mode"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",125,[[["self"],["mode"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",125,[[["self"],["mode"]],["mode"]]],[11,"bitor_assign","","Adds the set of flags.",125,[[["self"],["mode"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",125,[[["self"],["mode"]],["mode"]]],[11,"bitxor_assign","","Toggles the set of flags.",125,[[["self"],["mode"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",125,[[["self"],["mode"]],["mode"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",125,[[["self"],["mode"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",125,[[["self"],["mode"]],["mode"]]],[11,"sub_assign","","Disables all flags enabled in the set.",125,[[["self"],["mode"]]]],[11,"not","","Returns the complement of this set of flags.",125,[[["self"]],["mode"]]],[11,"extend","","",125,[[["self"],["t"]]]],[11,"from_iter","","",125,[[["t"]],["mode"]]],[11,"from_raw","","",125,[[["u32"]],["option",["mode"]]]],[11,"to_raw","","",125,[[["self"]],["u32"]]],[11,"is_destructor","","",87,[[["self"]],["bool"]]],[11,"from_raw_c","","",87,N],[11,"as_raw_c_in","","",87,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",88,[[["self"]],["bool"]]],[11,"from_raw_c","","",88,N],[11,"as_raw_c_in","","",88,[[["self"],["f"]],["t"]]],[11,"c_interface","","",126,N],[11,"release","wayland_client","",7,N],[11,"is_destructor","wayland_client::protocol::wl_region","",90,[[["self"]],["bool"]]],[11,"from_raw_c","","",90,N],[11,"as_raw_c_in","","",90,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",127,[[["self"]],["bool"]]],[11,"from_raw_c","","",127,N],[11,"as_raw_c_in","","",127,[[["self"],["f"]],["t"]]],[11,"c_interface","","",128,N],[11,"destroy","wayland_client","",7,N],[11,"add","","",7,N],[11,"subtract","","",7,N],[11,"clone","wayland_client::protocol::wl_subcompositor","",92,[[["self"]],["error"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"eq","","",92,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",92,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",92,[[["self"]],["u32"]]],[11,"is_destructor","","",93,[[["self"]],["bool"]]],[11,"from_raw_c","","",93,N],[11,"as_raw_c_in","","",93,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",129,[[["self"]],["bool"]]],[11,"from_raw_c","","",129,N],[11,"as_raw_c_in","","",129,[[["self"],["f"]],["t"]]],[11,"c_interface","","",130,N],[11,"destroy","wayland_client","",7,N],[11,"get_subsurface","","",7,[[["self"],["proxy"],["proxy"]],["result",["newproxy"]]]],[11,"clone","wayland_client::protocol::wl_subsurface","",95,[[["self"]],["error"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"eq","","",95,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",95,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",95,[[["self"]],["u32"]]],[11,"is_destructor","","",96,[[["self"]],["bool"]]],[11,"from_raw_c","","",96,N],[11,"as_raw_c_in","","",96,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",131,[[["self"]],["bool"]]],[11,"from_raw_c","","",131,N],[11,"as_raw_c_in","","",131,[[["self"],["f"]],["t"]]],[11,"c_interface","","",132,N],[11,"destroy","wayland_client","",7,N],[11,"set_position","","",7,N],[11,"place_above","","",7,N],[11,"place_below","","",7,N],[11,"set_sync","","",7,N],[11,"set_desync","","",7,N],[14,"global_filter","","Convenience macro to create a `GlobalManager` callback",N,N],[11,"is_destructor","wayland_client::commons","",133,[[["self"]],["bool"]]],[11,"from_raw_c","","",133,N],[11,"as_raw_c_in","","",133,[[["self"],["f"]],["t"]]],[11,"c_interface","","",134,N],[11,"deref","wayland_client::sys::client","",135,[[["self"]],["waylandclient"]]],[11,"deref","","",136,[[["self"]],["option"]]],[11,"initialize","","",136,N],[11,"initialize","","",135,N],[11,"is","wayland_client::commons","Returns true if the trait object wraps an object of type `__T`.",15,[[["self"]],["bool"]]],[11,"downcast","","Returns a boxed object from a boxed trait object if the underlying object is of type `__T`. Returns the original boxed trait if it isn't.",15,[[["box",["implementation"]]],["result",["box","box"]]]],[11,"downcast_ref","","Returns a reference to the object within the trait object if it is of type `__T`, or `None` if it isn't.",15,[[["self"]],["option"]]],[11,"downcast_mut","","Returns a mutable reference to the object within the trait object if it is of type `__T`, or `None` if it isn't.",15,[[["self"]],["option"]]],[11,"open","wayland_client::sys::client","",16,[[["str"]],["result",["waylandclient","dlerror"]]]]],"paths":[[4,"ConnectError"],[4,"GlobalError"],[4,"GlobalEvent"],[3,"Display"],[3,"EventQueue"],[3,"ReadEventsGuard"],[3,"GlobalManager"],[3,"Proxy"],[3,"NewProxy"],[3,"CursorTheme"],[3,"Cursor"],[3,"CursorImageBuffer"],[3,"WlEglSurface"],[8,"MessageGroup"],[8,"Interface"],[8,"Implementation"],[3,"WaylandClient"],[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Format"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"FullscreenMethod"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"KeymapFormat"],[4,"KeyState"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Subpixel"],[4,"Transform"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[3,"WlDisplay"],[3,"WlRegistry"],[4,"Request"],[3,"WlCallback"],[4,"Event"],[3,"WlCompositor"],[4,"Event"],[3,"WlShmPool"],[3,"WlShm"],[3,"WlBuffer"],[3,"WlDataOffer"],[3,"WlDataSource"],[3,"WlDataDevice"],[3,"DndAction"],[4,"Event"],[3,"WlDataDeviceManager"],[4,"Event"],[3,"WlShell"],[3,"Resize"],[3,"Transient"],[3,"WlShellSurface"],[3,"WlSurface"],[3,"Capability"],[3,"WlSeat"],[3,"WlPointer"],[3,"WlKeyboard"],[3,"WlTouch"],[3,"Mode"],[3,"WlOutput"],[4,"Event"],[3,"WlRegion"],[4,"Event"],[3,"WlSubcompositor"],[4,"Event"],[3,"WlSubsurface"],[4,"NoMessage"],[3,"AnonymousObject"],[3,"WAYLAND_CLIENT_HANDLE"],[3,"WAYLAND_CLIENT_OPTION"]]};
searchIndex["wayland_commons"]={"doc":"Common definitions for wayland","items":[[3,"AnonymousObject","wayland_commons","Anonymous interface",N,N],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",N,N],[5,"downcast_impl","","Attempt to downcast a boxed `Implementation` trait object.",N,[[["box",["implementation"]]],["result",["box","box"]]]],[8,"MessageGroup","","A group of messages",N,N],[10,"is_destructor","","Whether this message is a destructor",0,[[["self"]],["bool"]]],[10,"from_raw_c","","Construct a message of this group from its C representation",0,N],[10,"as_raw_c_in","","Build a C representation of this message",0,[[["self"],["f"]],["t"]]],[8,"Interface","","The description of a wayland interface",N,N],[16,"Request","","Set of requests associated to this interface",1,N],[16,"Event","","Set of events associated to this interface",1,N],[18,"NAME","","Name of this interface",1,N],[10,"c_interface","","Pointer to the C representation of this interface",1,N],[8,"Implementation","","Trait representing implementations for wayland objects",N,N],[10,"receive","","Receive a message",2,[[["self"],["msg"],["meta"]]]],[11,"is","","Returns true if the trait object wraps an object of type `__T`.",2,[[["self"]],["bool"]]],[11,"downcast","","Returns a boxed object from a boxed trait object if the underlying object is of type `__T`. Returns the original boxed trait if it isn't.",2,[[["box"]],["result",["box","box"]]]],[11,"downcast_ref","","Returns a reference to the object within the trait object if it is of type `__T`, or `None` if it isn't.",2,[[["self"]],["option"]]],[11,"downcast_mut","","Returns a mutable reference to the object within the trait object if it is of type `__T`, or `None` if it isn't.",2,[[["self"]],["option"]]],[11,"c_interface","","",3,N],[11,"is_destructor","","",4,[[["self"]],["bool"]]],[11,"from_raw_c","","",4,N],[11,"as_raw_c_in","","",4,[[["self"],["f"]],["t"]]]],"paths":[[8,"MessageGroup"],[8,"Interface"],[8,"Implementation"],[3,"AnonymousObject"],[4,"NoMessage"]]};
searchIndex["wayland_protocols"]={"doc":"This crate provides bindings to the official wayland protocol extensions provided in https://cgit.freedesktop.org/wayland/wayland-protocols","items":[[0,"unstable","wayland_protocols","Unstable protocols from wayland-protocols",N,N],[0,"fullscreen_shell","wayland_protocols::unstable","Fullscreen shell protocol",N,N],[0,"v1","wayland_protocols::unstable::fullscreen_shell","",N,N],[0,"client","wayland_protocols::unstable::fullscreen_shell::v1","Client-side API of this protocol",N,N],[0,"zwp_fullscreen_shell_v1","wayland_protocols::unstable::fullscreen_shell::v1::client","displays a single surface per output",N,N],[3,"ZwpFullscreenShellV1","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",N,N],[4,"Capability","","capabilities advertised by the compositor",N,N],[13,"ArbitraryModes","","compositor is capable of almost any output mode",0,N],[13,"CursorPlane","","compositor has a separate cursor plane",0,N],[4,"PresentMethod","","different method to set the surface fullscreen",N,N],[13,"Default","","no preference, apply default policy",1,N],[13,"Center","","center the surface on the output",1,N],[13,"Zoom","","scale the surface, preserving aspect ratio, to the largest size that will fit on the output",1,N],[13,"ZoomCrop","","scale the surface, preserving aspect ratio, to fully fill the output cropping if needed",1,N],[13,"Stretch","","scale the surface to the size of the output ignoring aspect ratio",1,N],[4,"Error","","wl_fullscreen_shell error values",N,N],[13,"InvalidMethod","","present_method is not known",2,N],[4,"Request","","",N,N],[13,"Release","","release the wl_fullscreen_shell interface",3,N],[13,"PresentSurface","","present surface for display",3,N],[12,"surface","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Request","",3,N],[12,"method","","",3,N],[12,"output","","",3,N],[13,"PresentSurfaceForMode","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","present surface for display at a particular mode",3,N],[12,"surface","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Request","",3,N],[12,"output","","",3,N],[12,"framerate","","",3,N],[12,"feedback","","",3,N],[4,"Event","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",N,N],[13,"Capability","","advertises a capability of the compositor",4,N],[12,"capability","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Event","",4,N],[8,"RequestsTrait","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",N,N],[10,"release","","release the wl_fullscreen_shell interface",5,N],[10,"present_surface","","present surface for display",5,N],[10,"present_surface_for_mode","","present surface for display at a particular mode",5,[[["self"],["proxy"],["proxy"],["i32"]],["result",["newproxy"]]]],[0,"zwp_fullscreen_shell_mode_feedback_v1","wayland_protocols::unstable::fullscreen_shell::v1::client","",N,N],[3,"ZwpFullscreenShellModeFeedbackV1","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"ModeSuccessful","","mode switch succeeded",6,N],[13,"ModeFailed","","mode switch failed",6,N],[13,"PresentCancelled","","mode switch cancelled",6,N],[8,"RequestsTrait","","",N,N],[0,"c_interfaces","wayland_protocols::unstable::fullscreen_shell::v1","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::fullscreen_shell::v1::c_interfaces","",N,N],[7,"wl_output_interface","","",N,N],[7,"zwp_fullscreen_shell_v1_requests","","",N,N],[7,"zwp_fullscreen_shell_v1_events","","",N,N],[7,"zwp_fullscreen_shell_v1_interface","","",N,N],[7,"zwp_fullscreen_shell_mode_feedback_v1_events","","",N,N],[7,"zwp_fullscreen_shell_mode_feedback_v1_interface","","",N,N],[11,"clone","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",0,[[["self"]],["capability"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["capability"]],["bool"]]],[11,"from_raw","","",0,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",0,[[["self"]],["u32"]]],[11,"clone","","",1,[[["self"]],["presentmethod"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",1,[[["self"],["presentmethod"]],["bool"]]],[11,"from_raw","","",1,[[["u32"]],["option",["presentmethod"]]]],[11,"to_raw","","",1,[[["self"]],["u32"]]],[11,"clone","","",2,[[["self"]],["error"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"eq","","",2,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",2,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",2,[[["self"]],["u32"]]],[11,"is_destructor","","",3,[[["self"]],["bool"]]],[11,"from_raw_c","","",3,N],[11,"as_raw_c_in","","",3,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",4,[[["self"]],["bool"]]],[11,"from_raw_c","","",4,N],[11,"as_raw_c_in","","",4,[[["self"],["f"]],["t"]]],[11,"c_interface","","",7,N],[11,"is_destructor","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",8,[[["self"]],["bool"]]],[11,"from_raw_c","","",8,N],[11,"as_raw_c_in","","",8,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",6,[[["self"]],["bool"]]],[11,"from_raw_c","","",6,N],[11,"as_raw_c_in","","",6,[[["self"],["f"]],["t"]]],[11,"c_interface","","",9,N],[0,"idle_inhibit","wayland_protocols::unstable","Screensaver inhibition protocol",N,N],[0,"v1","wayland_protocols::unstable::idle_inhibit","",N,N],[0,"client","wayland_protocols::unstable::idle_inhibit::v1","Client-side API of this protocol",N,N],[0,"zwp_idle_inhibit_manager_v1","wayland_protocols::unstable::idle_inhibit::v1::client","control behavior when display idles",N,N],[3,"ZwpIdleInhibitManagerV1","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the idle inhibitor object",10,N],[13,"CreateInhibitor","","create a new inhibitor object",10,N],[12,"id","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1::Request","",10,N],[12,"surface","","",10,N],[4,"Event","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the idle inhibitor object",11,N],[10,"create_inhibitor","","create a new inhibitor object",11,[[["self"],["proxy"]],["result",["newproxy"]]]],[0,"zwp_idle_inhibitor_v1","wayland_protocols::unstable::idle_inhibit::v1::client","context object for inhibiting idle behavior",N,N],[3,"ZwpIdleInhibitorV1","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the idle inhibitor object",12,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the idle inhibitor object",13,N],[0,"c_interfaces","wayland_protocols::unstable::idle_inhibit::v1","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::idle_inhibit::v1::c_interfaces","",N,N],[7,"zwp_idle_inhibit_manager_v1_requests","","",N,N],[7,"zwp_idle_inhibit_manager_v1_interface","","",N,N],[7,"zwp_idle_inhibitor_v1_requests","","",N,N],[7,"zwp_idle_inhibitor_v1_interface","","",N,N],[11,"is_destructor","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",10,[[["self"]],["bool"]]],[11,"from_raw_c","","",10,N],[11,"as_raw_c_in","","",10,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",14,[[["self"]],["bool"]]],[11,"from_raw_c","","",14,N],[11,"as_raw_c_in","","",14,[[["self"],["f"]],["t"]]],[11,"c_interface","","",15,N],[11,"is_destructor","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",12,[[["self"]],["bool"]]],[11,"from_raw_c","","",12,N],[11,"as_raw_c_in","","",12,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",16,[[["self"]],["bool"]]],[11,"from_raw_c","","",16,N],[11,"as_raw_c_in","","",16,[[["self"],["f"]],["t"]]],[11,"c_interface","","",17,N],[0,"input_method","wayland_protocols::unstable","Input method protocol",N,N],[0,"v1","wayland_protocols::unstable::input_method","",N,N],[0,"client","wayland_protocols::unstable::input_method::v1","Client-side API of this protocol",N,N],[0,"zwp_input_method_context_v1","wayland_protocols::unstable::input_method::v1::client","input method context",N,N],[3,"ZwpInputMethodContextV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","This is a destructor, once sent this object cannot be used any longer.",18,N],[13,"CommitString","","commit string",18,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",18,N],[12,"text","","",18,N],[13,"PreeditString","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","pre-edit string",18,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",18,N],[12,"text","","",18,N],[12,"commit","","",18,N],[13,"PreeditStyling","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","pre-edit styling",18,N],[12,"index","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",18,N],[12,"length","","",18,N],[12,"style","","",18,N],[13,"PreeditCursor","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","pre-edit cursor",18,N],[12,"index","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",18,N],[13,"DeleteSurroundingText","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","delete text",18,N],[12,"index","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",18,N],[12,"length","","",18,N],[13,"CursorPosition","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","set cursor to a new position",18,N],[12,"index","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",18,N],[12,"anchor","","",18,N],[13,"ModifiersMap","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",18,N],[12,"map","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",18,N],[13,"Keysym","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","keysym",18,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",18,N],[12,"time","","",18,N],[12,"sym","","",18,N],[12,"state","","",18,N],[12,"modifiers","","",18,N],[13,"GrabKeyboard","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","grab hardware keyboard",18,N],[12,"keyboard","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",18,N],[13,"Key","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","forward key event",18,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",18,N],[12,"time","","",18,N],[12,"key","","",18,N],[12,"state","","",18,N],[13,"Modifiers","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","forward modifiers event",18,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",18,N],[12,"mods_depressed","","",18,N],[12,"mods_latched","","",18,N],[12,"mods_locked","","",18,N],[12,"group","","",18,N],[13,"Language","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",18,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",18,N],[12,"language","","",18,N],[13,"TextDirection","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",18,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",18,N],[12,"direction","","",18,N],[4,"Event","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",N,N],[13,"SurroundingText","","surrounding text event",19,N],[12,"text","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",19,N],[12,"cursor","","",19,N],[12,"anchor","","",19,N],[13,"Reset","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",19,N],[13,"ContentType","","",19,N],[12,"hint","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",19,N],[12,"purpose","","",19,N],[13,"InvokeAction","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",19,N],[12,"button","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",19,N],[12,"index","","",19,N],[13,"CommitState","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",19,N],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",19,N],[13,"PreferredLanguage","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",19,N],[12,"language","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",19,N],[8,"RequestsTrait","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",N,N],[10,"destroy","","This is a destructor, you cannot send requests to this object any longer once this method is called.",20,N],[10,"commit_string","","commit string",20,N],[10,"preedit_string","","pre-edit string",20,N],[10,"preedit_styling","","pre-edit styling",20,N],[10,"preedit_cursor","","pre-edit cursor",20,N],[10,"delete_surrounding_text","","delete text",20,N],[10,"cursor_position","","set cursor to a new position",20,N],[10,"modifiers_map","","",20,N],[10,"keysym","","keysym",20,N],[10,"grab_keyboard","","grab hardware keyboard",20,[[["self"]],["result",["newproxy"]]]],[10,"key","","forward key event",20,N],[10,"modifiers","","forward modifiers event",20,N],[10,"language","","",20,N],[10,"text_direction","","",20,N],[0,"zwp_input_method_v1","wayland_protocols::unstable::input_method::v1::client","input method",N,N],[3,"ZwpInputMethodV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",N,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"Activate","","activate event",21,N],[12,"id","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1::Event","",21,N],[13,"Deactivate","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","deactivate event",21,N],[12,"context","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1::Event","",21,N],[8,"RequestsTrait","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",N,N],[0,"zwp_input_panel_v1","wayland_protocols::unstable::input_method::v1::client","interface for implementing keyboards",N,N],[3,"ZwpInputPanelV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",N,N],[4,"Request","","",N,N],[13,"GetInputPanelSurface","","",22,N],[12,"id","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1::Request","",22,N],[12,"surface","","",22,N],[4,"Event","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_input_panel_surface","","",23,[[["self"],["proxy"]],["result",["newproxy"]]]],[0,"zwp_input_panel_surface_v1","wayland_protocols::unstable::input_method::v1::client","",N,N],[3,"ZwpInputPanelSurfaceV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",N,N],[4,"Position","","",N,N],[13,"CenterBottom","","",24,N],[4,"Request","","",N,N],[13,"SetToplevel","","set the surface type as a keyboard",25,N],[12,"output","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1::Request","",25,N],[12,"position","","",25,N],[13,"SetOverlayPanel","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","set the surface type as an overlay panel",25,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"set_toplevel","","set the surface type as a keyboard",26,N],[10,"set_overlay_panel","","set the surface type as an overlay panel",26,N],[0,"c_interfaces","wayland_protocols::unstable::input_method::v1","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::input_method::v1::c_interfaces","",N,N],[7,"wl_output_interface","","",N,N],[7,"wl_keyboard_interface","","",N,N],[7,"zwp_input_method_context_v1_requests","","",N,N],[7,"zwp_input_method_context_v1_events","","",N,N],[7,"zwp_input_method_context_v1_interface","","",N,N],[7,"zwp_input_method_v1_events","","",N,N],[7,"zwp_input_method_v1_interface","","",N,N],[7,"zwp_input_panel_v1_requests","","",N,N],[7,"zwp_input_panel_v1_interface","","",N,N],[7,"zwp_input_panel_surface_v1_requests","","",N,N],[7,"zwp_input_panel_surface_v1_interface","","",N,N],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",18,[[["self"]],["bool"]]],[11,"from_raw_c","","",18,N],[11,"as_raw_c_in","","",18,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",19,[[["self"]],["bool"]]],[11,"from_raw_c","","",19,N],[11,"as_raw_c_in","","",19,[[["self"],["f"]],["t"]]],[11,"c_interface","","",27,N],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",28,[[["self"]],["bool"]]],[11,"from_raw_c","","",28,N],[11,"as_raw_c_in","","",28,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",21,[[["self"]],["bool"]]],[11,"from_raw_c","","",21,N],[11,"as_raw_c_in","","",21,[[["self"],["f"]],["t"]]],[11,"c_interface","","",29,N],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",22,[[["self"]],["bool"]]],[11,"from_raw_c","","",22,N],[11,"as_raw_c_in","","",22,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",30,[[["self"]],["bool"]]],[11,"from_raw_c","","",30,N],[11,"as_raw_c_in","","",30,[[["self"],["f"]],["t"]]],[11,"c_interface","","",31,N],[11,"clone","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",24,[[["self"]],["position"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"eq","","",24,[[["self"],["position"]],["bool"]]],[11,"from_raw","","",24,[[["u32"]],["option",["position"]]]],[11,"to_raw","","",24,[[["self"]],["u32"]]],[11,"is_destructor","","",25,[[["self"]],["bool"]]],[11,"from_raw_c","","",25,N],[11,"as_raw_c_in","","",25,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",32,[[["self"]],["bool"]]],[11,"from_raw_c","","",32,N],[11,"as_raw_c_in","","",32,[[["self"],["f"]],["t"]]],[11,"c_interface","","",33,N],[0,"keyboard_shortcuts_inhibit","wayland_protocols::unstable","Protocol for inhibiting the compositor keyboard shortcuts",N,N],[0,"v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit","",N,N],[0,"client","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1","Client-side API of this protocol",N,N],[0,"zwp_keyboard_shortcuts_inhibit_manager_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client","context object for keyboard grab_manager",N,N],[3,"ZwpKeyboardShortcutsInhibitManagerV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",N,N],[4,"Error","","",N,N],[13,"AlreadyInhibited","","the shortcuts are already inhibited for this surface",34,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",35,N],[13,"InhibitShortcuts","","create a new keyboard shortcuts inhibitor object",35,N],[12,"id","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1::Request","",35,N],[12,"surface","","",35,N],[12,"seat","","",35,N],[4,"Event","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the keyboard shortcuts inhibitor object",36,N],[10,"inhibit_shortcuts","","create a new keyboard shortcuts inhibitor object",36,[[["self"],["proxy"],["proxy"]],["result",["newproxy"]]]],[0,"zwp_keyboard_shortcuts_inhibitor_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client","context object for keyboard shortcuts inhibitor",N,N],[3,"ZwpKeyboardShortcutsInhibitorV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",37,N],[4,"Event","","",N,N],[13,"Active","","shortcuts are inhibited",38,N],[13,"Inactive","","shortcuts are restored",38,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the keyboard shortcuts inhibitor object",39,N],[0,"c_interfaces","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1","C interfaces for this protocol",N,N],[7,"wl_seat_interface","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::c_interfaces","",N,N],[7,"wl_surface_interface","","",N,N],[7,"zwp_keyboard_shortcuts_inhibit_manager_v1_requests","","",N,N],[7,"zwp_keyboard_shortcuts_inhibit_manager_v1_interface","","",N,N],[7,"zwp_keyboard_shortcuts_inhibitor_v1_requests","","",N,N],[7,"zwp_keyboard_shortcuts_inhibitor_v1_events","","",N,N],[7,"zwp_keyboard_shortcuts_inhibitor_v1_interface","","",N,N],[11,"clone","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",34,[[["self"]],["error"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"eq","","",34,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",34,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",34,[[["self"]],["u32"]]],[11,"is_destructor","","",35,[[["self"]],["bool"]]],[11,"from_raw_c","","",35,N],[11,"as_raw_c_in","","",35,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",40,[[["self"]],["bool"]]],[11,"from_raw_c","","",40,N],[11,"as_raw_c_in","","",40,[[["self"],["f"]],["t"]]],[11,"c_interface","","",41,N],[11,"is_destructor","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",37,[[["self"]],["bool"]]],[11,"from_raw_c","","",37,N],[11,"as_raw_c_in","","",37,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",38,[[["self"]],["bool"]]],[11,"from_raw_c","","",38,N],[11,"as_raw_c_in","","",38,[[["self"],["f"]],["t"]]],[11,"c_interface","","",42,N],[0,"linux_dmabuf","wayland_protocols::unstable","Linux DMA-BUF protocol",N,N],[0,"v1","wayland_protocols::unstable::linux_dmabuf","",N,N],[0,"client","wayland_protocols::unstable::linux_dmabuf::v1","Client-side API of this protocol",N,N],[0,"zwp_linux_dmabuf_v1","wayland_protocols::unstable::linux_dmabuf::v1::client","factory for creating dmabuf-based wl_buffers",N,N],[3,"ZwpLinuxDmabufV1","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","unbind the factory",43,N],[13,"CreateParams","","create a temporary object for buffer parameters",43,N],[12,"params_id","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1::Request","",43,N],[4,"Event","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",N,N],[13,"Format","","supported buffer format",44,N],[12,"format","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1::Event","",44,N],[13,"Modifier","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","supported buffer format modifier",44,N],[12,"format","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1::Event","",44,N],[12,"modifier_hi","","",44,N],[12,"modifier_lo","","",44,N],[8,"RequestsTrait","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",N,N],[10,"destroy","","unbind the factory",45,N],[10,"create_params","","create a temporary object for buffer parameters",45,[[["self"]],["result",["newproxy"]]]],[0,"zwp_linux_buffer_params_v1","wayland_protocols::unstable::linux_dmabuf::v1::client","parameters for creating a dmabuf-based wl_buffer",N,N],[3,"ZwpLinuxBufferParamsV1","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",N,N],[4,"Error","","",N,N],[13,"AlreadyUsed","","the dmabuf_batch object has already been used to create a wl_buffer",46,N],[13,"PlaneIdx","","plane index out of bounds",46,N],[13,"PlaneSet","","the plane index was already set",46,N],[13,"Incomplete","","missing or too many planes to create a buffer",46,N],[13,"InvalidFormat","","format not supported",46,N],[13,"InvalidDimensions","","invalid width or height",46,N],[13,"OutOfBounds","","offset + stride * height goes out of dmabuf bounds",46,N],[13,"InvalidWlBuffer","","invalid wl_buffer resulted from importing dmabufs via the create_immed request on given buffer_params",46,N],[4,"Flags","","",N,N],[13,"YInvert","","contents are y-inverted",47,N],[13,"Interlaced","","content is interlaced",47,N],[13,"BottomFirst","","bottom field first",47,N],[4,"Request","","",N,N],[13,"Destroy","","delete this object, used or not",48,N],[13,"Add","","add a dmabuf to the temporary set",48,N],[12,"fd","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Request","",48,N],[12,"plane_idx","","",48,N],[12,"offset","","",48,N],[12,"stride","","",48,N],[12,"modifier_hi","","",48,N],[12,"modifier_lo","","",48,N],[13,"Create","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","create a wl_buffer from the given dmabufs",48,N],[12,"width","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Request","",48,N],[12,"height","","",48,N],[12,"format","","",48,N],[12,"flags","","",48,N],[13,"CreateImmed","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","immediately create a wl_buffer from the given dmabufs",48,N],[12,"buffer_id","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Request","",48,N],[12,"width","","",48,N],[12,"height","","",48,N],[12,"format","","",48,N],[12,"flags","","",48,N],[4,"Event","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",N,N],[13,"Created","","buffer creation succeeded",49,N],[12,"buffer","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Event","",49,N],[13,"Failed","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","buffer creation failed",49,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","delete this object, used or not",50,N],[10,"add","","add a dmabuf to the temporary set",50,N],[10,"create","","create a wl_buffer from the given dmabufs",50,N],[10,"create_immed","","immediately create a wl_buffer from the given dmabufs",50,[[["self"],["i32"],["i32"],["u32"],["u32"]],["result",["newproxy"]]]],[0,"c_interfaces","wayland_protocols::unstable::linux_dmabuf::v1","C interfaces for this protocol",N,N],[7,"wl_buffer_interface","wayland_protocols::unstable::linux_dmabuf::v1::c_interfaces","",N,N],[7,"zwp_linux_dmabuf_v1_requests","","",N,N],[7,"zwp_linux_dmabuf_v1_events","","",N,N],[7,"zwp_linux_dmabuf_v1_interface","","",N,N],[7,"zwp_linux_buffer_params_v1_requests","","",N,N],[7,"zwp_linux_buffer_params_v1_events","","",N,N],[7,"zwp_linux_buffer_params_v1_interface","","",N,N],[11,"is_destructor","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",43,[[["self"]],["bool"]]],[11,"from_raw_c","","",43,N],[11,"as_raw_c_in","","",43,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",44,[[["self"]],["bool"]]],[11,"from_raw_c","","",44,N],[11,"as_raw_c_in","","",44,[[["self"],["f"]],["t"]]],[11,"c_interface","","",51,N],[11,"clone","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",46,[[["self"]],["error"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"eq","","",46,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",46,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",46,[[["self"]],["u32"]]],[11,"clone","","",47,[[["self"]],["flags"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"eq","","",47,[[["self"],["flags"]],["bool"]]],[11,"from_raw","","",47,[[["u32"]],["option",["flags"]]]],[11,"to_raw","","",47,[[["self"]],["u32"]]],[11,"is_destructor","","",48,[[["self"]],["bool"]]],[11,"from_raw_c","","",48,N],[11,"as_raw_c_in","","",48,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",49,[[["self"]],["bool"]]],[11,"from_raw_c","","",49,N],[11,"as_raw_c_in","","",49,[[["self"],["f"]],["t"]]],[11,"c_interface","","",52,N],[0,"pointer_constraints","wayland_protocols::unstable","protocol for constraining pointer motions",N,N],[0,"v1","wayland_protocols::unstable::pointer_constraints","",N,N],[0,"client","wayland_protocols::unstable::pointer_constraints::v1","Client-side API of this protocol",N,N],[0,"zwp_pointer_constraints_v1","wayland_protocols::unstable::pointer_constraints::v1::client","constrain the movement of a pointer",N,N],[3,"ZwpPointerConstraintsV1","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",N,N],[4,"Error","","wp_pointer_constraints error values",N,N],[13,"AlreadyConstrained","","pointer constraint already requested on that surface",53,N],[4,"Lifetime","","constraint lifetime",N,N],[13,"Oneshot","","the pointer constraint is defunct once deactivated",54,N],[13,"Persistent","","the pointer constraint may reactivate",54,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pointer constraints manager object",55,N],[13,"LockPointer","","lock pointer to a position",55,N],[12,"id","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1::Request","",55,N],[12,"surface","","",55,N],[12,"pointer","","",55,N],[12,"region","","",55,N],[12,"lifetime","","",55,N],[13,"ConfinePointer","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","confine pointer to a region",55,N],[12,"id","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1::Request","",55,N],[12,"surface","","",55,N],[12,"pointer","","",55,N],[12,"region","","",55,N],[12,"lifetime","","",55,N],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the pointer constraints manager object",56,N],[10,"lock_pointer","","lock pointer to a position",56,[[["self"],["proxy"],["proxy"],["option",["proxy"]],["u32"]],["result",["newproxy"]]]],[10,"confine_pointer","","confine pointer to a region",56,[[["self"],["proxy"],["proxy"],["option",["proxy"]],["u32"]],["result",["newproxy"]]]],[0,"zwp_locked_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::client","receive relative pointer motion events",N,N],[3,"ZwpLockedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the locked pointer object",57,N],[13,"SetCursorPositionHint","","set the pointer cursor position hint",57,N],[12,"surface_x","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1::Request","",57,N],[12,"surface_y","","",57,N],[13,"SetRegion","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","set a new lock region",57,N],[12,"region","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1::Request","",57,N],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",N,N],[13,"Locked","","lock activation event",58,N],[13,"Unlocked","","lock deactivation event",58,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the locked pointer object",59,N],[10,"set_cursor_position_hint","","set the pointer cursor position hint",59,N],[10,"set_region","","set a new lock region",59,N],[0,"zwp_confined_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::client","confined pointer object",N,N],[3,"ZwpConfinedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the confined pointer object",60,N],[13,"SetRegion","","set a new confine region",60,N],[12,"region","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1::Request","",60,N],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",N,N],[13,"Confined","","pointer confined",61,N],[13,"Unconfined","","pointer unconfined",61,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the confined pointer object",62,N],[10,"set_region","","set a new confine region",62,N],[0,"c_interfaces","wayland_protocols::unstable::pointer_constraints::v1","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::pointer_constraints::v1::c_interfaces","",N,N],[7,"wl_pointer_interface","","",N,N],[7,"wl_region_interface","","",N,N],[7,"zwp_pointer_constraints_v1_requests","","",N,N],[7,"zwp_pointer_constraints_v1_interface","","",N,N],[7,"zwp_locked_pointer_v1_requests","","",N,N],[7,"zwp_locked_pointer_v1_events","","",N,N],[7,"zwp_locked_pointer_v1_interface","","",N,N],[7,"zwp_confined_pointer_v1_requests","","",N,N],[7,"zwp_confined_pointer_v1_events","","",N,N],[7,"zwp_confined_pointer_v1_interface","","",N,N],[11,"clone","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",53,[[["self"]],["error"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"eq","","",53,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",53,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",53,[[["self"]],["u32"]]],[11,"clone","","",54,[[["self"]],["lifetime"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"eq","","",54,[[["self"],["lifetime"]],["bool"]]],[11,"from_raw","","",54,[[["u32"]],["option",["lifetime"]]]],[11,"to_raw","","",54,[[["self"]],["u32"]]],[11,"is_destructor","","",55,[[["self"]],["bool"]]],[11,"from_raw_c","","",55,N],[11,"as_raw_c_in","","",55,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",63,[[["self"]],["bool"]]],[11,"from_raw_c","","",63,N],[11,"as_raw_c_in","","",63,[[["self"],["f"]],["t"]]],[11,"c_interface","","",64,N],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",57,[[["self"]],["bool"]]],[11,"from_raw_c","","",57,N],[11,"as_raw_c_in","","",57,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",58,[[["self"]],["bool"]]],[11,"from_raw_c","","",58,N],[11,"as_raw_c_in","","",58,[[["self"],["f"]],["t"]]],[11,"c_interface","","",65,N],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",60,[[["self"]],["bool"]]],[11,"from_raw_c","","",60,N],[11,"as_raw_c_in","","",60,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",61,[[["self"]],["bool"]]],[11,"from_raw_c","","",61,N],[11,"as_raw_c_in","","",61,[[["self"],["f"]],["t"]]],[11,"c_interface","","",66,N],[0,"pointer_gestures","wayland_protocols::unstable","Pointer gestures protocol",N,N],[0,"v1","wayland_protocols::unstable::pointer_gestures","",N,N],[0,"client","wayland_protocols::unstable::pointer_gestures::v1","Client-side API of this protocol",N,N],[0,"zwp_pointer_gestures_v1","wayland_protocols::unstable::pointer_gestures::v1::client","touchpad gestures",N,N],[3,"ZwpPointerGesturesV1","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",N,N],[4,"Request","","",N,N],[13,"GetSwipeGesture","","get swipe gesture",67,N],[12,"id","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1::Request","",67,N],[12,"pointer","","",67,N],[13,"GetPinchGesture","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","get pinch gesture",67,N],[12,"id","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1::Request","",67,N],[12,"pointer","","",67,N],[4,"Event","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_swipe_gesture","","get swipe gesture",68,[[["self"],["proxy"]],["result",["newproxy"]]]],[10,"get_pinch_gesture","","get pinch gesture",68,[[["self"],["proxy"]],["result",["newproxy"]]]],[0,"zwp_pointer_gesture_swipe_v1","wayland_protocols::unstable::pointer_gestures::v1::client","a swipe gesture object",N,N],[3,"ZwpPointerGestureSwipeV1","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pointer swipe gesture object",69,N],[4,"Event","","",N,N],[13,"Begin","","multi-finger swipe begin",70,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1::Event","",70,N],[12,"time","","",70,N],[12,"surface","","",70,N],[12,"fingers","","",70,N],[13,"Update","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","multi-finger swipe motion",70,N],[12,"time","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1::Event","",70,N],[12,"dx","","",70,N],[12,"dy","","",70,N],[13,"End","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","multi-finger swipe end",70,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1::Event","",70,N],[12,"time","","",70,N],[12,"cancelled","","",70,N],[8,"RequestsTrait","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",N,N],[10,"destroy","","destroy the pointer swipe gesture object",71,N],[0,"zwp_pointer_gesture_pinch_v1","wayland_protocols::unstable::pointer_gestures::v1::client","a pinch gesture object",N,N],[3,"ZwpPointerGesturePinchV1","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pinch gesture object",72,N],[4,"Event","","",N,N],[13,"Begin","","multi-finger pinch begin",73,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1::Event","",73,N],[12,"time","","",73,N],[12,"surface","","",73,N],[12,"fingers","","",73,N],[13,"Update","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","multi-finger pinch motion",73,N],[12,"time","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1::Event","",73,N],[12,"dx","","",73,N],[12,"dy","","",73,N],[12,"scale","","",73,N],[12,"rotation","","",73,N],[13,"End","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","multi-finger pinch end",73,N],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1::Event","",73,N],[12,"time","","",73,N],[12,"cancelled","","",73,N],[8,"RequestsTrait","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",N,N],[10,"destroy","","destroy the pinch gesture object",74,N],[0,"c_interfaces","wayland_protocols::unstable::pointer_gestures::v1","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::pointer_gestures::v1::c_interfaces","",N,N],[7,"wl_pointer_interface","","",N,N],[7,"zwp_pointer_gestures_v1_requests","","",N,N],[7,"zwp_pointer_gestures_v1_interface","","",N,N],[7,"zwp_pointer_gesture_swipe_v1_requests","","",N,N],[7,"zwp_pointer_gesture_swipe_v1_events","","",N,N],[7,"zwp_pointer_gesture_swipe_v1_interface","","",N,N],[7,"zwp_pointer_gesture_pinch_v1_requests","","",N,N],[7,"zwp_pointer_gesture_pinch_v1_events","","",N,N],[7,"zwp_pointer_gesture_pinch_v1_interface","","",N,N],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",67,[[["self"]],["bool"]]],[11,"from_raw_c","","",67,N],[11,"as_raw_c_in","","",67,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",75,[[["self"]],["bool"]]],[11,"from_raw_c","","",75,N],[11,"as_raw_c_in","","",75,[[["self"],["f"]],["t"]]],[11,"c_interface","","",76,N],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",69,[[["self"]],["bool"]]],[11,"from_raw_c","","",69,N],[11,"as_raw_c_in","","",69,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",70,[[["self"]],["bool"]]],[11,"from_raw_c","","",70,N],[11,"as_raw_c_in","","",70,[[["self"],["f"]],["t"]]],[11,"c_interface","","",77,N],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",72,[[["self"]],["bool"]]],[11,"from_raw_c","","",72,N],[11,"as_raw_c_in","","",72,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",73,[[["self"]],["bool"]]],[11,"from_raw_c","","",73,N],[11,"as_raw_c_in","","",73,[[["self"],["f"]],["t"]]],[11,"c_interface","","",78,N],[0,"relative_pointer","wayland_protocols::unstable","protocol for relative pointer motion events",N,N],[0,"v1","wayland_protocols::unstable::relative_pointer","",N,N],[0,"client","wayland_protocols::unstable::relative_pointer::v1","Client-side API of this protocol",N,N],[0,"zwp_relative_pointer_manager_v1","wayland_protocols::unstable::relative_pointer::v1::client","get relative pointer objects",N,N],[3,"ZwpRelativePointerManagerV1","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the relative pointer manager object",79,N],[13,"GetRelativePointer","","get a relative pointer object",79,N],[12,"id","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1::Request","",79,N],[12,"pointer","","",79,N],[4,"Event","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the relative pointer manager object",80,N],[10,"get_relative_pointer","","get a relative pointer object",80,[[["self"],["proxy"]],["result",["newproxy"]]]],[0,"zwp_relative_pointer_v1","wayland_protocols::unstable::relative_pointer::v1::client","relative pointer object",N,N],[3,"ZwpRelativePointerV1","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","release the relative pointer object",81,N],[4,"Event","","",N,N],[13,"RelativeMotion","","relative pointer motion",82,N],[12,"utime_hi","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1::Event","",82,N],[12,"utime_lo","","",82,N],[12,"dx","","",82,N],[12,"dy","","",82,N],[12,"dx_unaccel","","",82,N],[12,"dy_unaccel","","",82,N],[8,"RequestsTrait","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",N,N],[10,"destroy","","release the relative pointer object",83,N],[0,"c_interfaces","wayland_protocols::unstable::relative_pointer::v1","C interfaces for this protocol",N,N],[7,"wl_pointer_interface","wayland_protocols::unstable::relative_pointer::v1::c_interfaces","",N,N],[7,"zwp_relative_pointer_manager_v1_requests","","",N,N],[7,"zwp_relative_pointer_manager_v1_interface","","",N,N],[7,"zwp_relative_pointer_v1_requests","","",N,N],[7,"zwp_relative_pointer_v1_events","","",N,N],[7,"zwp_relative_pointer_v1_interface","","",N,N],[11,"is_destructor","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",79,[[["self"]],["bool"]]],[11,"from_raw_c","","",79,N],[11,"as_raw_c_in","","",79,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",84,[[["self"]],["bool"]]],[11,"from_raw_c","","",84,N],[11,"as_raw_c_in","","",84,[[["self"],["f"]],["t"]]],[11,"c_interface","","",85,N],[11,"is_destructor","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",81,[[["self"]],["bool"]]],[11,"from_raw_c","","",81,N],[11,"as_raw_c_in","","",81,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",82,[[["self"]],["bool"]]],[11,"from_raw_c","","",82,N],[11,"as_raw_c_in","","",82,[[["self"],["f"]],["t"]]],[11,"c_interface","","",86,N],[0,"tablet","wayland_protocols::unstable","Wayland protocol for graphics tablets",N,N],[0,"v1","wayland_protocols::unstable::tablet","",N,N],[0,"client","wayland_protocols::unstable::tablet::v1","Client-side API of this protocol",N,N],[0,"zwp_tablet_manager_v1","wayland_protocols::unstable::tablet::v1::client","controller object for graphic tablet devices",N,N],[3,"ZwpTabletManagerV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",N,N],[4,"Request","","",N,N],[13,"GetTabletSeat","","get the tablet seat",87,N],[12,"tablet_seat","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1::Request","",87,N],[12,"seat","","",87,N],[13,"Destroy","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","release the memory for the tablet manager object",87,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_tablet_seat","","get the tablet seat",88,[[["self"],["proxy"]],["result",["newproxy"]]]],[10,"destroy","","release the memory for the tablet manager object",88,N],[0,"zwp_tablet_seat_v1","wayland_protocols::unstable::tablet::v1::client","controller object for graphic tablet devices of a seat",N,N],[3,"ZwpTabletSeatV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","release the memory for the tablet seat object",89,N],[4,"Event","","",N,N],[13,"TabletAdded","","new device notification",90,N],[12,"id","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1::Event","",90,N],[13,"ToolAdded","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","a new tool has been used with a tablet",90,N],[12,"id","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1::Event","",90,N],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",N,N],[10,"destroy","","release the memory for the tablet seat object",91,N],[0,"zwp_tablet_tool_v1","wayland_protocols::unstable::tablet::v1::client","a physical tablet tool",N,N],[3,"ZwpTabletToolV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",N,N],[4,"Type","","a physical tool type",N,N],[13,"Pen","","Pen",92,N],[13,"Eraser","","Eraser",92,N],[13,"Brush","","Brush",92,N],[13,"Pencil","","Pencil",92,N],[13,"Airbrush","","Airbrush",92,N],[13,"Finger","","Finger",92,N],[13,"Mouse","","Mouse",92,N],[13,"Lens","","Lens",92,N],[4,"Capability","","capability flags for a tool",N,N],[13,"Tilt","","Tilt axes",93,N],[13,"Pressure","","Pressure axis",93,N],[13,"Distance","","Distance axis",93,N],[13,"Rotation","","Z-rotation axis",93,N],[13,"Slider","","Slider axis",93,N],[13,"Wheel","","Wheel axis",93,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","button is not pressed",94,N],[13,"Pressed","","button is pressed",94,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",95,N],[4,"Request","","",N,N],[13,"SetCursor","","set the tablet tool's surface",96,N],[12,"serial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Request","",96,N],[12,"surface","","",96,N],[12,"hotspot_x","","",96,N],[12,"hotspot_y","","",96,N],[13,"Destroy","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","destroy the tool object",96,N],[4,"Event","","",N,N],[13,"Type","","tool type",97,N],[12,"tool_type","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",97,N],[13,"HardwareSerial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","unique hardware serial number of the tool",97,N],[12,"hardware_serial_hi","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",97,N],[12,"hardware_serial_lo","","",97,N],[13,"HardwareIdWacom","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","hardware id notification in Wacom's format",97,N],[12,"hardware_id_hi","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",97,N],[12,"hardware_id_lo","","",97,N],[13,"Capability","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tool capability notification",97,N],[12,"capability","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",97,N],[13,"Done","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tool description events sequence complete",97,N],[13,"Removed","","tool removed",97,N],[13,"ProximityIn","","proximity in event",97,N],[12,"serial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",97,N],[12,"tablet","","",97,N],[12,"surface","","",97,N],[13,"ProximityOut","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","proximity out event",97,N],[13,"Down","","tablet tool is making contact",97,N],[12,"serial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",97,N],[13,"Up","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tablet tool is no longer making contact",97,N],[13,"Motion","","motion event",97,N],[12,"x","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",97,N],[12,"y","","",97,N],[13,"Pressure","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","pressure change event",97,N],[12,"pressure","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",97,N],[13,"Distance","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","distance change event",97,N],[12,"distance","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",97,N],[13,"Tilt","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tilt change event",97,N],[12,"tilt_x","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",97,N],[12,"tilt_y","","",97,N],[13,"Rotation","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","z-rotation change event",97,N],[12,"degrees","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",97,N],[13,"Slider","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","Slider position change event",97,N],[12,"position","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",97,N],[13,"Wheel","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","Wheel delta event",97,N],[12,"degrees","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",97,N],[12,"clicks","","",97,N],[13,"Button","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","button event",97,N],[12,"serial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",97,N],[12,"button","","",97,N],[12,"state","","",97,N],[13,"Frame","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","frame event",97,N],[12,"time","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",97,N],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",N,N],[10,"set_cursor","","set the tablet tool's surface",98,N],[10,"destroy","","destroy the tool object",98,N],[0,"zwp_tablet_v1","wayland_protocols::unstable::tablet::v1::client","graphics tablet device",N,N],[3,"ZwpTabletV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the tablet object",99,N],[4,"Event","","",N,N],[13,"Name","","tablet device name",100,N],[12,"name","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1::Event","",100,N],[13,"Id","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","tablet device USB vendor/product id",100,N],[12,"vid","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1::Event","",100,N],[12,"pid","","",100,N],[13,"Path","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","path to the device",100,N],[12,"path","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1::Event","",100,N],[13,"Done","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","tablet description events sequence complete",100,N],[13,"Removed","","tablet removed event",100,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the tablet object",101,N],[0,"c_interfaces","wayland_protocols::unstable::tablet::v1","C interfaces for this protocol",N,N],[7,"wl_seat_interface","wayland_protocols::unstable::tablet::v1::c_interfaces","",N,N],[7,"wl_surface_interface","","",N,N],[7,"zwp_tablet_manager_v1_requests","","",N,N],[7,"zwp_tablet_manager_v1_interface","","",N,N],[7,"zwp_tablet_seat_v1_requests","","",N,N],[7,"zwp_tablet_seat_v1_events","","",N,N],[7,"zwp_tablet_seat_v1_interface","","",N,N],[7,"zwp_tablet_tool_v1_requests","","",N,N],[7,"zwp_tablet_tool_v1_events","","",N,N],[7,"zwp_tablet_tool_v1_interface","","",N,N],[7,"zwp_tablet_v1_requests","","",N,N],[7,"zwp_tablet_v1_events","","",N,N],[7,"zwp_tablet_v1_interface","","",N,N],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",87,[[["self"]],["bool"]]],[11,"from_raw_c","","",87,N],[11,"as_raw_c_in","","",87,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",102,[[["self"]],["bool"]]],[11,"from_raw_c","","",102,N],[11,"as_raw_c_in","","",102,[[["self"],["f"]],["t"]]],[11,"c_interface","","",103,N],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",89,[[["self"]],["bool"]]],[11,"from_raw_c","","",89,N],[11,"as_raw_c_in","","",89,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",90,[[["self"]],["bool"]]],[11,"from_raw_c","","",90,N],[11,"as_raw_c_in","","",90,[[["self"],["f"]],["t"]]],[11,"c_interface","","",104,N],[11,"clone","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",92,[[["self"]],["type"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"eq","","",92,[[["self"],["type"]],["bool"]]],[11,"from_raw","","",92,[[["u32"]],["option",["type"]]]],[11,"to_raw","","",92,[[["self"]],["u32"]]],[11,"clone","","",93,[[["self"]],["capability"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"eq","","",93,[[["self"],["capability"]],["bool"]]],[11,"from_raw","","",93,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",93,[[["self"]],["u32"]]],[11,"clone","","",94,[[["self"]],["buttonstate"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"eq","","",94,[[["self"],["buttonstate"]],["bool"]]],[11,"from_raw","","",94,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",94,[[["self"]],["u32"]]],[11,"clone","","",95,[[["self"]],["error"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"eq","","",95,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",95,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",95,[[["self"]],["u32"]]],[11,"is_destructor","","",96,[[["self"]],["bool"]]],[11,"from_raw_c","","",96,N],[11,"as_raw_c_in","","",96,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",97,[[["self"]],["bool"]]],[11,"from_raw_c","","",97,N],[11,"as_raw_c_in","","",97,[[["self"],["f"]],["t"]]],[11,"c_interface","","",105,N],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","",99,[[["self"]],["bool"]]],[11,"from_raw_c","","",99,N],[11,"as_raw_c_in","","",99,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",100,[[["self"]],["bool"]]],[11,"from_raw_c","","",100,N],[11,"as_raw_c_in","","",100,[[["self"],["f"]],["t"]]],[11,"c_interface","","",106,N],[0,"v2","wayland_protocols::unstable::tablet","",N,N],[0,"client","wayland_protocols::unstable::tablet::v2","Client-side API of this protocol",N,N],[0,"zwp_tablet_manager_v2","wayland_protocols::unstable::tablet::v2::client","controller object for graphic tablet devices",N,N],[3,"ZwpTabletManagerV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",N,N],[4,"Request","","",N,N],[13,"GetTabletSeat","","get the tablet seat",107,N],[12,"tablet_seat","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2::Request","",107,N],[12,"seat","","",107,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","release the memory for the tablet manager object",107,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"get_tablet_seat","","get the tablet seat",108,[[["self"],["proxy"]],["result",["newproxy"]]]],[10,"destroy","","release the memory for the tablet manager object",108,N],[0,"zwp_tablet_seat_v2","wayland_protocols::unstable::tablet::v2::client","controller object for graphic tablet devices of a seat",N,N],[3,"ZwpTabletSeatV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","release the memory for the tablet seat object",109,N],[4,"Event","","",N,N],[13,"TabletAdded","","new device notification",110,N],[12,"id","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2::Event","",110,N],[13,"ToolAdded","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","a new tool has been used with a tablet",110,N],[12,"id","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2::Event","",110,N],[13,"PadAdded","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","new pad notification",110,N],[12,"id","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2::Event","",110,N],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",N,N],[10,"destroy","","release the memory for the tablet seat object",111,N],[0,"zwp_tablet_tool_v2","wayland_protocols::unstable::tablet::v2::client","a physical tablet tool",N,N],[3,"ZwpTabletToolV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",N,N],[4,"Type","","a physical tool type",N,N],[13,"Pen","","Pen",112,N],[13,"Eraser","","Eraser",112,N],[13,"Brush","","Brush",112,N],[13,"Pencil","","Pencil",112,N],[13,"Airbrush","","Airbrush",112,N],[13,"Finger","","Finger",112,N],[13,"Mouse","","Mouse",112,N],[13,"Lens","","Lens",112,N],[4,"Capability","","capability flags for a tool",N,N],[13,"Tilt","","Tilt axes",113,N],[13,"Pressure","","Pressure axis",113,N],[13,"Distance","","Distance axis",113,N],[13,"Rotation","","Z-rotation axis",113,N],[13,"Slider","","Slider axis",113,N],[13,"Wheel","","Wheel axis",113,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","button is not pressed",114,N],[13,"Pressed","","button is pressed",114,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",115,N],[4,"Request","","",N,N],[13,"SetCursor","","set the tablet tool's surface",116,N],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Request","",116,N],[12,"surface","","",116,N],[12,"hotspot_x","","",116,N],[12,"hotspot_y","","",116,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","destroy the tool object",116,N],[4,"Event","","",N,N],[13,"Type","","tool type",117,N],[12,"tool_type","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",117,N],[13,"HardwareSerial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","unique hardware serial number of the tool",117,N],[12,"hardware_serial_hi","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",117,N],[12,"hardware_serial_lo","","",117,N],[13,"HardwareIdWacom","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","hardware id notification in Wacom's format",117,N],[12,"hardware_id_hi","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",117,N],[12,"hardware_id_lo","","",117,N],[13,"Capability","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tool capability notification",117,N],[12,"capability","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",117,N],[13,"Done","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tool description events sequence complete",117,N],[13,"Removed","","tool removed",117,N],[13,"ProximityIn","","proximity in event",117,N],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",117,N],[12,"tablet","","",117,N],[12,"surface","","",117,N],[13,"ProximityOut","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","proximity out event",117,N],[13,"Down","","tablet tool is making contact",117,N],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",117,N],[13,"Up","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tablet tool is no longer making contact",117,N],[13,"Motion","","motion event",117,N],[12,"x","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",117,N],[12,"y","","",117,N],[13,"Pressure","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","pressure change event",117,N],[12,"pressure","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",117,N],[13,"Distance","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","distance change event",117,N],[12,"distance","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",117,N],[13,"Tilt","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tilt change event",117,N],[12,"tilt_x","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",117,N],[12,"tilt_y","","",117,N],[13,"Rotation","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","z-rotation change event",117,N],[12,"degrees","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",117,N],[13,"Slider","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","Slider position change event",117,N],[12,"position","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",117,N],[13,"Wheel","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","Wheel delta event",117,N],[12,"degrees","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",117,N],[12,"clicks","","",117,N],[13,"Button","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","button event",117,N],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",117,N],[12,"button","","",117,N],[12,"state","","",117,N],[13,"Frame","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","frame event",117,N],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",117,N],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",N,N],[10,"set_cursor","","set the tablet tool's surface",118,N],[10,"destroy","","destroy the tool object",118,N],[0,"zwp_tablet_v2","wayland_protocols::unstable::tablet::v2::client","graphics tablet device",N,N],[3,"ZwpTabletV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the tablet object",119,N],[4,"Event","","",N,N],[13,"Name","","tablet device name",120,N],[12,"name","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2::Event","",120,N],[13,"Id","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","tablet device USB vendor/product id",120,N],[12,"vid","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2::Event","",120,N],[12,"pid","","",120,N],[13,"Path","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","path to the device",120,N],[12,"path","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2::Event","",120,N],[13,"Done","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","tablet description events sequence complete",120,N],[13,"Removed","","tablet removed event",120,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the tablet object",121,N],[0,"zwp_tablet_pad_ring_v2","wayland_protocols::unstable::tablet::v2::client","pad ring",N,N],[3,"ZwpTabletPadRingV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",N,N],[4,"Source","","ring axis source",N,N],[13,"Finger","","finger",122,N],[4,"Request","","",N,N],[13,"SetFeedback","","set compositor feedback",123,N],[12,"description","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Request","",123,N],[12,"serial","","",123,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","destroy the ring object",123,N],[4,"Event","","",N,N],[13,"Source","","ring event source",124,N],[12,"source","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Event","",124,N],[13,"Angle","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","angle changed",124,N],[12,"degrees","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Event","",124,N],[13,"Stop","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","interaction stopped",124,N],[13,"Frame","","end of a ring event sequence",124,N],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Event","",124,N],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",N,N],[10,"set_feedback","","set compositor feedback",125,N],[10,"destroy","","destroy the ring object",125,N],[0,"zwp_tablet_pad_strip_v2","wayland_protocols::unstable::tablet::v2::client","pad strip",N,N],[3,"ZwpTabletPadStripV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",N,N],[4,"Source","","strip axis source",N,N],[13,"Finger","","finger",126,N],[4,"Request","","",N,N],[13,"SetFeedback","","set compositor feedback",127,N],[12,"description","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Request","",127,N],[12,"serial","","",127,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","destroy the strip object",127,N],[4,"Event","","",N,N],[13,"Source","","strip event source",128,N],[12,"source","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Event","",128,N],[13,"Position","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","position changed",128,N],[12,"position","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Event","",128,N],[13,"Stop","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","interaction stopped",128,N],[13,"Frame","","end of a strip event sequence",128,N],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Event","",128,N],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",N,N],[10,"set_feedback","","set compositor feedback",129,N],[10,"destroy","","destroy the strip object",129,N],[0,"zwp_tablet_pad_group_v2","wayland_protocols::unstable::tablet::v2::client","a set of buttons, rings and strips",N,N],[3,"ZwpTabletPadGroupV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the pad object",130,N],[4,"Event","","",N,N],[13,"Buttons","","buttons announced",131,N],[12,"buttons","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",131,N],[13,"Ring","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","ring announced",131,N],[12,"ring","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",131,N],[13,"Strip","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","strip announced",131,N],[12,"strip","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",131,N],[13,"Modes","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","mode-switch ability announced",131,N],[12,"modes","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",131,N],[13,"Done","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","tablet group description events sequence complete",131,N],[13,"ModeSwitch","","mode switch event",131,N],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",131,N],[12,"serial","","",131,N],[12,"mode","","",131,N],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",N,N],[10,"destroy","","destroy the pad object",132,N],[0,"zwp_tablet_pad_v2","wayland_protocols::unstable::tablet::v2::client","a set of buttons, rings and strips",N,N],[3,"ZwpTabletPadV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",N,N],[4,"ButtonState","","physical button state",N,N],[13,"Released","","the button is not pressed",133,N],[13,"Pressed","","the button is pressed",133,N],[4,"Request","","",N,N],[13,"SetFeedback","","set compositor feedback",134,N],[12,"button","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Request","",134,N],[12,"description","","",134,N],[12,"serial","","",134,N],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","destroy the pad object",134,N],[4,"Event","","",N,N],[13,"Group","","group announced",135,N],[12,"pad_group","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",135,N],[13,"Path","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","path to the device",135,N],[12,"path","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",135,N],[13,"Buttons","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","buttons announced",135,N],[12,"buttons","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",135,N],[13,"Done","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","pad description event sequence complete",135,N],[13,"Button","","physical button state",135,N],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",135,N],[12,"button","","",135,N],[12,"state","","",135,N],[13,"Enter","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","enter event",135,N],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",135,N],[12,"tablet","","",135,N],[12,"surface","","",135,N],[13,"Leave","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","enter event",135,N],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",135,N],[12,"surface","","",135,N],[13,"Removed","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","pad removed event",135,N],[8,"RequestsTrait","","",N,N],[10,"set_feedback","","set compositor feedback",136,N],[10,"destroy","","destroy the pad object",136,N],[0,"c_interfaces","wayland_protocols::unstable::tablet::v2","C interfaces for this protocol",N,N],[7,"wl_seat_interface","wayland_protocols::unstable::tablet::v2::c_interfaces","",N,N],[7,"wl_surface_interface","","",N,N],[7,"zwp_tablet_manager_v2_requests","","",N,N],[7,"zwp_tablet_manager_v2_interface","","",N,N],[7,"zwp_tablet_seat_v2_requests","","",N,N],[7,"zwp_tablet_seat_v2_events","","",N,N],[7,"zwp_tablet_seat_v2_interface","","",N,N],[7,"zwp_tablet_tool_v2_requests","","",N,N],[7,"zwp_tablet_tool_v2_events","","",N,N],[7,"zwp_tablet_tool_v2_interface","","",N,N],[7,"zwp_tablet_v2_requests","","",N,N],[7,"zwp_tablet_v2_events","","",N,N],[7,"zwp_tablet_v2_interface","","",N,N],[7,"zwp_tablet_pad_ring_v2_requests","","",N,N],[7,"zwp_tablet_pad_ring_v2_events","","",N,N],[7,"zwp_tablet_pad_ring_v2_interface","","",N,N],[7,"zwp_tablet_pad_strip_v2_requests","","",N,N],[7,"zwp_tablet_pad_strip_v2_events","","",N,N],[7,"zwp_tablet_pad_strip_v2_interface","","",N,N],[7,"zwp_tablet_pad_group_v2_requests","","",N,N],[7,"zwp_tablet_pad_group_v2_events","","",N,N],[7,"zwp_tablet_pad_group_v2_interface","","",N,N],[7,"zwp_tablet_pad_v2_requests","","",N,N],[7,"zwp_tablet_pad_v2_events","","",N,N],[7,"zwp_tablet_pad_v2_interface","","",N,N],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",107,[[["self"]],["bool"]]],[11,"from_raw_c","","",107,N],[11,"as_raw_c_in","","",107,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",137,[[["self"]],["bool"]]],[11,"from_raw_c","","",137,N],[11,"as_raw_c_in","","",137,[[["self"],["f"]],["t"]]],[11,"c_interface","","",138,N],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",109,[[["self"]],["bool"]]],[11,"from_raw_c","","",109,N],[11,"as_raw_c_in","","",109,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",110,[[["self"]],["bool"]]],[11,"from_raw_c","","",110,N],[11,"as_raw_c_in","","",110,[[["self"],["f"]],["t"]]],[11,"c_interface","","",139,N],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",112,[[["self"]],["type"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"eq","","",112,[[["self"],["type"]],["bool"]]],[11,"from_raw","","",112,[[["u32"]],["option",["type"]]]],[11,"to_raw","","",112,[[["self"]],["u32"]]],[11,"clone","","",113,[[["self"]],["capability"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"eq","","",113,[[["self"],["capability"]],["bool"]]],[11,"from_raw","","",113,[[["u32"]],["option",["capability"]]]],[11,"to_raw","","",113,[[["self"]],["u32"]]],[11,"clone","","",114,[[["self"]],["buttonstate"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"eq","","",114,[[["self"],["buttonstate"]],["bool"]]],[11,"from_raw","","",114,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",114,[[["self"]],["u32"]]],[11,"clone","","",115,[[["self"]],["error"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"eq","","",115,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",115,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",115,[[["self"]],["u32"]]],[11,"is_destructor","","",116,[[["self"]],["bool"]]],[11,"from_raw_c","","",116,N],[11,"as_raw_c_in","","",116,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",117,[[["self"]],["bool"]]],[11,"from_raw_c","","",117,N],[11,"as_raw_c_in","","",117,[[["self"],["f"]],["t"]]],[11,"c_interface","","",140,N],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","",119,[[["self"]],["bool"]]],[11,"from_raw_c","","",119,N],[11,"as_raw_c_in","","",119,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",120,[[["self"]],["bool"]]],[11,"from_raw_c","","",120,N],[11,"as_raw_c_in","","",120,[[["self"],["f"]],["t"]]],[11,"c_interface","","",141,N],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",122,[[["self"]],["source"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"eq","","",122,[[["self"],["source"]],["bool"]]],[11,"from_raw","","",122,[[["u32"]],["option",["source"]]]],[11,"to_raw","","",122,[[["self"]],["u32"]]],[11,"is_destructor","","",123,[[["self"]],["bool"]]],[11,"from_raw_c","","",123,N],[11,"as_raw_c_in","","",123,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",124,[[["self"]],["bool"]]],[11,"from_raw_c","","",124,N],[11,"as_raw_c_in","","",124,[[["self"],["f"]],["t"]]],[11,"c_interface","","",142,N],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",126,[[["self"]],["source"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"eq","","",126,[[["self"],["source"]],["bool"]]],[11,"from_raw","","",126,[[["u32"]],["option",["source"]]]],[11,"to_raw","","",126,[[["self"]],["u32"]]],[11,"is_destructor","","",127,[[["self"]],["bool"]]],[11,"from_raw_c","","",127,N],[11,"as_raw_c_in","","",127,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",128,[[["self"]],["bool"]]],[11,"from_raw_c","","",128,N],[11,"as_raw_c_in","","",128,[[["self"],["f"]],["t"]]],[11,"c_interface","","",143,N],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",130,[[["self"]],["bool"]]],[11,"from_raw_c","","",130,N],[11,"as_raw_c_in","","",130,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",131,[[["self"]],["bool"]]],[11,"from_raw_c","","",131,N],[11,"as_raw_c_in","","",131,[[["self"],["f"]],["t"]]],[11,"c_interface","","",144,N],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",133,[[["self"]],["buttonstate"]]],[11,"fmt","","",133,[[["self"],["formatter"]],["result"]]],[11,"eq","","",133,[[["self"],["buttonstate"]],["bool"]]],[11,"from_raw","","",133,[[["u32"]],["option",["buttonstate"]]]],[11,"to_raw","","",133,[[["self"]],["u32"]]],[11,"is_destructor","","",134,[[["self"]],["bool"]]],[11,"from_raw_c","","",134,N],[11,"as_raw_c_in","","",134,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",135,[[["self"]],["bool"]]],[11,"from_raw_c","","",135,N],[11,"as_raw_c_in","","",135,[[["self"],["f"]],["t"]]],[11,"c_interface","","",145,N],[0,"text_input","wayland_protocols::unstable","Text input protocol",N,N],[0,"v1","wayland_protocols::unstable::text_input","",N,N],[0,"client","wayland_protocols::unstable::text_input::v1","Client-side API of this protocol",N,N],[0,"zwp_text_input_v1","wayland_protocols::unstable::text_input::v1::client","text input",N,N],[3,"ZwpTextInputV1","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",N,N],[4,"ContentHint","","content hint",N,N],[13,"None","","no special behaviour",146,N],[13,"Default","","auto completion, correction and capitalization",146,N],[13,"Password","","hidden and sensitive text",146,N],[13,"AutoCompletion","","suggest word completions",146,N],[13,"AutoCorrection","","suggest word corrections",146,N],[13,"AutoCapitalization","","switch to uppercase letters at the start of a sentence",146,N],[13,"Lowercase","","prefer lowercase letters",146,N],[13,"Uppercase","","prefer uppercase letters",146,N],[13,"Titlecase","","prefer casing for titles and headings (can be language dependent)",146,N],[13,"HiddenText","","characters should be hidden",146,N],[13,"SensitiveData","","typed text should not be stored",146,N],[13,"Latin","","just latin characters should be entered",146,N],[13,"Multiline","","the text input is multiline",146,N],[4,"ContentPurpose","","content purpose",N,N],[13,"Normal","","default input, allowing all characters",147,N],[13,"Alpha","","allow only alphabetic characters",147,N],[13,"Digits","","allow only digits",147,N],[13,"Number","","input a number (including decimal separator and sign)",147,N],[13,"Phone","","input a phone number",147,N],[13,"Url","","input an URL",147,N],[13,"Email","","input an email address",147,N],[13,"Name","","input a name of a person",147,N],[13,"Password","","input a password (combine with password or sensitive_data hint)",147,N],[13,"Date","","input a date",147,N],[13,"Time","","input a time",147,N],[13,"Datetime","","input a date and time",147,N],[13,"Terminal","","input for a terminal",147,N],[4,"PreeditStyle","","",N,N],[13,"Default","","default style for composing text",148,N],[13,"None","","style should be the same as in non-composing text",148,N],[13,"Active","","",148,N],[13,"Inactive","","",148,N],[13,"Highlight","","",148,N],[13,"Underline","","",148,N],[13,"Selection","","",148,N],[13,"Incorrect","","",148,N],[4,"TextDirection","","",N,N],[13,"Auto","","automatic text direction based on text and language",149,N],[13,"Ltr","","left-to-right",149,N],[13,"Rtl","","right-to-left",149,N],[4,"Request","","",N,N],[13,"Activate","","request activation",150,N],[12,"seat","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",150,N],[12,"surface","","",150,N],[13,"Deactivate","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","request deactivation",150,N],[12,"seat","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",150,N],[13,"ShowInputPanel","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","show input panels",150,N],[13,"HideInputPanel","","hide input panels",150,N],[13,"Reset","","reset",150,N],[13,"SetSurroundingText","","sets the surrounding text",150,N],[12,"text","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",150,N],[12,"cursor","","",150,N],[12,"anchor","","",150,N],[13,"SetContentType","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","set content purpose and hint",150,N],[12,"hint","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",150,N],[12,"purpose","","",150,N],[13,"SetCursorRectangle","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",150,N],[12,"x","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",150,N],[12,"y","","",150,N],[12,"width","","",150,N],[12,"height","","",150,N],[13,"SetPreferredLanguage","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","sets preferred language",150,N],[12,"language","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",150,N],[13,"CommitState","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",150,N],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",150,N],[13,"InvokeAction","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",150,N],[12,"button","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",150,N],[12,"index","","",150,N],[4,"Event","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",N,N],[13,"Enter","","enter event",151,N],[12,"surface","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",151,N],[13,"Leave","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","leave event",151,N],[13,"ModifiersMap","","modifiers map",151,N],[12,"map","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",151,N],[13,"InputPanelState","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","state of the input panel",151,N],[12,"state","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",151,N],[13,"PreeditString","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","pre-edit",151,N],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",151,N],[12,"text","","",151,N],[12,"commit","","",151,N],[13,"PreeditStyling","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","pre-edit styling",151,N],[12,"index","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",151,N],[12,"length","","",151,N],[12,"style","","",151,N],[13,"PreeditCursor","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","pre-edit cursor",151,N],[12,"index","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",151,N],[13,"CommitString","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","commit",151,N],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",151,N],[12,"text","","",151,N],[13,"CursorPosition","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","set cursor to new position",151,N],[12,"index","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",151,N],[12,"anchor","","",151,N],[13,"DeleteSurroundingText","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","delete surrounding text",151,N],[12,"index","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",151,N],[12,"length","","",151,N],[13,"Keysym","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","keysym",151,N],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",151,N],[12,"time","","",151,N],[12,"sym","","",151,N],[12,"state","","",151,N],[12,"modifiers","","",151,N],[13,"Language","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","language",151,N],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",151,N],[12,"language","","",151,N],[13,"TextDirection","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","text direction",151,N],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",151,N],[12,"direction","","",151,N],[8,"RequestsTrait","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",N,N],[10,"activate","","request activation",152,N],[10,"deactivate","","request deactivation",152,N],[10,"show_input_panel","","show input panels",152,N],[10,"hide_input_panel","","hide input panels",152,N],[10,"reset","","reset",152,N],[10,"set_surrounding_text","","sets the surrounding text",152,N],[10,"set_content_type","","set content purpose and hint",152,N],[10,"set_cursor_rectangle","","",152,N],[10,"set_preferred_language","","sets preferred language",152,N],[10,"commit_state","","",152,N],[10,"invoke_action","","",152,N],[0,"zwp_text_input_manager_v1","wayland_protocols::unstable::text_input::v1::client","text input manager",N,N],[3,"ZwpTextInputManagerV1","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",N,N],[4,"Request","","",N,N],[13,"CreateTextInput","","create text input",153,N],[12,"id","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1::Request","",153,N],[4,"Event","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"create_text_input","","create text input",154,[[["self"]],["result",["newproxy"]]]],[0,"c_interfaces","wayland_protocols::unstable::text_input::v1","C interfaces for this protocol",N,N],[7,"wl_seat_interface","wayland_protocols::unstable::text_input::v1::c_interfaces","",N,N],[7,"wl_surface_interface","","",N,N],[7,"zwp_text_input_v1_requests","","",N,N],[7,"zwp_text_input_v1_events","","",N,N],[7,"zwp_text_input_v1_interface","","",N,N],[7,"zwp_text_input_manager_v1_requests","","",N,N],[7,"zwp_text_input_manager_v1_interface","","",N,N],[11,"clone","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",146,[[["self"]],["contenthint"]]],[11,"fmt","","",146,[[["self"],["formatter"]],["result"]]],[11,"eq","","",146,[[["self"],["contenthint"]],["bool"]]],[11,"from_raw","","",146,[[["u32"]],["option",["contenthint"]]]],[11,"to_raw","","",146,[[["self"]],["u32"]]],[11,"clone","","",147,[[["self"]],["contentpurpose"]]],[11,"fmt","","",147,[[["self"],["formatter"]],["result"]]],[11,"eq","","",147,[[["self"],["contentpurpose"]],["bool"]]],[11,"from_raw","","",147,[[["u32"]],["option",["contentpurpose"]]]],[11,"to_raw","","",147,[[["self"]],["u32"]]],[11,"clone","","",148,[[["self"]],["preeditstyle"]]],[11,"fmt","","",148,[[["self"],["formatter"]],["result"]]],[11,"eq","","",148,[[["self"],["preeditstyle"]],["bool"]]],[11,"from_raw","","",148,[[["u32"]],["option",["preeditstyle"]]]],[11,"to_raw","","",148,[[["self"]],["u32"]]],[11,"clone","","",149,[[["self"]],["textdirection"]]],[11,"fmt","","",149,[[["self"],["formatter"]],["result"]]],[11,"eq","","",149,[[["self"],["textdirection"]],["bool"]]],[11,"from_raw","","",149,[[["u32"]],["option",["textdirection"]]]],[11,"to_raw","","",149,[[["self"]],["u32"]]],[11,"is_destructor","","",150,[[["self"]],["bool"]]],[11,"from_raw_c","","",150,N],[11,"as_raw_c_in","","",150,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",151,[[["self"]],["bool"]]],[11,"from_raw_c","","",151,N],[11,"as_raw_c_in","","",151,[[["self"],["f"]],["t"]]],[11,"c_interface","","",155,N],[11,"is_destructor","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",153,[[["self"]],["bool"]]],[11,"from_raw_c","","",153,N],[11,"as_raw_c_in","","",153,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",156,[[["self"]],["bool"]]],[11,"from_raw_c","","",156,N],[11,"as_raw_c_in","","",156,[[["self"],["f"]],["t"]]],[11,"c_interface","","",157,N],[0,"xdg_decoration","wayland_protocols::unstable","This interface allows a compositor to announce support for server-side decorations. A window decoration is a set of window controls as deemed appropriate by the party managing them, such as user interface components used to move, resize and change a window's state. A client can use this protocol to request being decorated by a supporting compositor. If compositor and client do not negotiate the use of a server-side decoration using this protocol, clients continue to self-decorate as they see fit.",N,N],[0,"v1","wayland_protocols::unstable::xdg_decoration","",N,N],[0,"client","wayland_protocols::unstable::xdg_decoration::v1","Client-side API of this protocol",N,N],[0,"zxdg_decoration_manager_v1","wayland_protocols::unstable::xdg_decoration::v1::client","window decoration manager",N,N],[3,"ZxdgDecorationManagerV1","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the decoration manager object",158,N],[13,"GetToplevelDecoration","","create a new toplevel decoration object",158,N],[12,"id","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1::Request","",158,N],[12,"toplevel","","",158,N],[4,"Event","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the decoration manager object",159,N],[10,"get_toplevel_decoration","","create a new toplevel decoration object",159,[[["self"],["proxy"]],["result",["newproxy"]]]],[0,"zxdg_toplevel_decoration_v1","wayland_protocols::unstable::xdg_decoration::v1::client","decoration object for a toplevel surface",N,N],[3,"ZxdgToplevelDecorationV1","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",N,N],[4,"Error","","",N,N],[13,"UnconfiguredBuffer","","xdg_toplevel has a buffer attached before configure",160,N],[13,"AlreadyConstructed","","xdg_toplevel already has a decoration object",160,N],[13,"Orphaned","","xdg_toplevel destroyed before the decoration object",160,N],[4,"Mode","","window decoration modes",N,N],[13,"ClientSide","","no server-side window decoration",161,N],[13,"ServerSide","","server-side window decoration",161,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the decoration object",162,N],[13,"SetMode","","set the decoration mode",162,N],[12,"mode","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1::Request","",162,N],[13,"UnsetMode","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","unset the decoration mode",162,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",163,N],[12,"mode","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1::Event","",163,N],[8,"RequestsTrait","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",N,N],[10,"destroy","","destroy the decoration object",164,N],[10,"set_mode","","set the decoration mode",164,N],[10,"unset_mode","","unset the decoration mode",164,N],[0,"c_interfaces","wayland_protocols::unstable::xdg_decoration::v1","C interfaces for this protocol",N,N],[7,"zxdg_decoration_manager_v1_requests","wayland_protocols::unstable::xdg_decoration::v1::c_interfaces","",N,N],[7,"zxdg_decoration_manager_v1_interface","","",N,N],[7,"zxdg_toplevel_decoration_v1_requests","","",N,N],[7,"zxdg_toplevel_decoration_v1_events","","",N,N],[7,"zxdg_toplevel_decoration_v1_interface","","",N,N],[11,"is_destructor","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",158,[[["self"]],["bool"]]],[11,"from_raw_c","","",158,N],[11,"as_raw_c_in","","",158,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",165,[[["self"]],["bool"]]],[11,"from_raw_c","","",165,N],[11,"as_raw_c_in","","",165,[[["self"],["f"]],["t"]]],[11,"c_interface","","",166,N],[11,"clone","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",160,[[["self"]],["error"]]],[11,"fmt","","",160,[[["self"],["formatter"]],["result"]]],[11,"eq","","",160,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",160,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",160,[[["self"]],["u32"]]],[11,"clone","","",161,[[["self"]],["mode"]]],[11,"fmt","","",161,[[["self"],["formatter"]],["result"]]],[11,"eq","","",161,[[["self"],["mode"]],["bool"]]],[11,"from_raw","","",161,[[["u32"]],["option",["mode"]]]],[11,"to_raw","","",161,[[["self"]],["u32"]]],[11,"is_destructor","","",162,[[["self"]],["bool"]]],[11,"from_raw_c","","",162,N],[11,"as_raw_c_in","","",162,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",163,[[["self"]],["bool"]]],[11,"from_raw_c","","",163,N],[11,"as_raw_c_in","","",163,[[["self"],["f"]],["t"]]],[11,"c_interface","","",167,N],[0,"xdg_foreign","wayland_protocols::unstable","Protocol for exporting xdg surface handles",N,N],[0,"v1","wayland_protocols::unstable::xdg_foreign","",N,N],[0,"client","wayland_protocols::unstable::xdg_foreign::v1","Client-side API of this protocol",N,N],[0,"zxdg_exporter_v1","wayland_protocols::unstable::xdg_foreign::v1::client","interface for exporting surfaces",N,N],[3,"ZxdgExporterV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_exporter object",168,N],[13,"Export","","export a surface",168,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1::Request","",168,N],[12,"surface","","",168,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_exporter object",169,N],[10,"export","","export a surface",169,[[["self"],["proxy"]],["result",["newproxy"]]]],[0,"zxdg_importer_v1","wayland_protocols::unstable::xdg_foreign::v1::client","interface for importing surfaces",N,N],[3,"ZxdgImporterV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_importer object",170,N],[13,"Import","","import a surface",170,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1::Request","",170,N],[12,"handle","","",170,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_importer object",171,N],[10,"import","","import a surface",171,[[["self"],["string"]],["result",["newproxy"]]]],[0,"zxdg_exported_v1","wayland_protocols::unstable::xdg_foreign::v1::client","an exported surface handle",N,N],[3,"ZxdgExportedV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","unexport the exported surface",172,N],[4,"Event","","",N,N],[13,"Handle","","the exported surface handle",173,N],[12,"handle","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1::Event","",173,N],[8,"RequestsTrait","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",N,N],[10,"destroy","","unexport the exported surface",174,N],[0,"zxdg_imported_v1","wayland_protocols::unstable::xdg_foreign::v1::client","an imported surface handle",N,N],[3,"ZxdgImportedV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_imported object",175,N],[13,"SetParentOf","","set as the parent of some surface",175,N],[12,"surface","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1::Request","",175,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",N,N],[13,"Destroyed","","the imported surface handle has been destroyed",176,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_imported object",177,N],[10,"set_parent_of","","set as the parent of some surface",177,N],[0,"c_interfaces","wayland_protocols::unstable::xdg_foreign::v1","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::xdg_foreign::v1::c_interfaces","",N,N],[7,"zxdg_exporter_v1_requests","","",N,N],[7,"zxdg_exporter_v1_interface","","",N,N],[7,"zxdg_importer_v1_requests","","",N,N],[7,"zxdg_importer_v1_interface","","",N,N],[7,"zxdg_exported_v1_requests","","",N,N],[7,"zxdg_exported_v1_events","","",N,N],[7,"zxdg_exported_v1_interface","","",N,N],[7,"zxdg_imported_v1_requests","","",N,N],[7,"zxdg_imported_v1_events","","",N,N],[7,"zxdg_imported_v1_interface","","",N,N],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",168,[[["self"]],["bool"]]],[11,"from_raw_c","","",168,N],[11,"as_raw_c_in","","",168,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",178,[[["self"]],["bool"]]],[11,"from_raw_c","","",178,N],[11,"as_raw_c_in","","",178,[[["self"],["f"]],["t"]]],[11,"c_interface","","",179,N],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",170,[[["self"]],["bool"]]],[11,"from_raw_c","","",170,N],[11,"as_raw_c_in","","",170,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",180,[[["self"]],["bool"]]],[11,"from_raw_c","","",180,N],[11,"as_raw_c_in","","",180,[[["self"],["f"]],["t"]]],[11,"c_interface","","",181,N],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",172,[[["self"]],["bool"]]],[11,"from_raw_c","","",172,N],[11,"as_raw_c_in","","",172,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",173,[[["self"]],["bool"]]],[11,"from_raw_c","","",173,N],[11,"as_raw_c_in","","",173,[[["self"],["f"]],["t"]]],[11,"c_interface","","",182,N],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",175,[[["self"]],["bool"]]],[11,"from_raw_c","","",175,N],[11,"as_raw_c_in","","",175,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",176,[[["self"]],["bool"]]],[11,"from_raw_c","","",176,N],[11,"as_raw_c_in","","",176,[[["self"],["f"]],["t"]]],[11,"c_interface","","",183,N],[0,"v2","wayland_protocols::unstable::xdg_foreign","",N,N],[0,"client","wayland_protocols::unstable::xdg_foreign::v2","Client-side API of this protocol",N,N],[0,"zxdg_exporter_v2","wayland_protocols::unstable::xdg_foreign::v2::client","interface for exporting surfaces",N,N],[3,"ZxdgExporterV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_exporter object",184,N],[13,"ExportToplevel","","export a toplevel surface",184,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2::Request","",184,N],[12,"surface","","",184,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_exporter object",185,N],[10,"export_toplevel","","export a toplevel surface",185,[[["self"],["proxy"]],["result",["newproxy"]]]],[0,"zxdg_importer_v2","wayland_protocols::unstable::xdg_foreign::v2::client","interface for importing surfaces",N,N],[3,"ZxdgImporterV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_importer object",186,N],[13,"ImportToplevel","","import a toplevel surface",186,N],[12,"id","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2::Request","",186,N],[12,"handle","","",186,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_importer object",187,N],[10,"import_toplevel","","import a toplevel surface",187,[[["self"],["string"]],["result",["newproxy"]]]],[0,"zxdg_exported_v2","wayland_protocols::unstable::xdg_foreign::v2::client","an exported surface handle",N,N],[3,"ZxdgExportedV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","unexport the exported surface",188,N],[4,"Event","","",N,N],[13,"Handle","","the exported surface handle",189,N],[12,"handle","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2::Event","",189,N],[8,"RequestsTrait","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",N,N],[10,"destroy","","unexport the exported surface",190,N],[0,"zxdg_imported_v2","wayland_protocols::unstable::xdg_foreign::v2::client","an imported surface handle",N,N],[3,"ZxdgImportedV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_imported object",191,N],[13,"SetParentOf","","set as the parent of some surface",191,N],[12,"surface","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2::Request","",191,N],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",N,N],[13,"Destroyed","","the imported surface handle has been destroyed",192,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_imported object",193,N],[10,"set_parent_of","","set as the parent of some surface",193,N],[0,"c_interfaces","wayland_protocols::unstable::xdg_foreign::v2","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::xdg_foreign::v2::c_interfaces","",N,N],[7,"zxdg_exporter_v2_requests","","",N,N],[7,"zxdg_exporter_v2_interface","","",N,N],[7,"zxdg_importer_v2_requests","","",N,N],[7,"zxdg_importer_v2_interface","","",N,N],[7,"zxdg_exported_v2_requests","","",N,N],[7,"zxdg_exported_v2_events","","",N,N],[7,"zxdg_exported_v2_interface","","",N,N],[7,"zxdg_imported_v2_requests","","",N,N],[7,"zxdg_imported_v2_events","","",N,N],[7,"zxdg_imported_v2_interface","","",N,N],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",184,[[["self"]],["bool"]]],[11,"from_raw_c","","",184,N],[11,"as_raw_c_in","","",184,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",194,[[["self"]],["bool"]]],[11,"from_raw_c","","",194,N],[11,"as_raw_c_in","","",194,[[["self"],["f"]],["t"]]],[11,"c_interface","","",195,N],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",186,[[["self"]],["bool"]]],[11,"from_raw_c","","",186,N],[11,"as_raw_c_in","","",186,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",196,[[["self"]],["bool"]]],[11,"from_raw_c","","",196,N],[11,"as_raw_c_in","","",196,[[["self"],["f"]],["t"]]],[11,"c_interface","","",197,N],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",188,[[["self"]],["bool"]]],[11,"from_raw_c","","",188,N],[11,"as_raw_c_in","","",188,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",189,[[["self"]],["bool"]]],[11,"from_raw_c","","",189,N],[11,"as_raw_c_in","","",189,[[["self"],["f"]],["t"]]],[11,"c_interface","","",198,N],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",191,[[["self"]],["bool"]]],[11,"from_raw_c","","",191,N],[11,"as_raw_c_in","","",191,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",192,[[["self"]],["bool"]]],[11,"from_raw_c","","",192,N],[11,"as_raw_c_in","","",192,[[["self"],["f"]],["t"]]],[11,"c_interface","","",199,N],[0,"xdg_output","wayland_protocols::unstable","Protocol to describe output regions",N,N],[0,"v1","wayland_protocols::unstable::xdg_output","",N,N],[0,"client","wayland_protocols::unstable::xdg_output::v1","Client-side API of this protocol",N,N],[0,"zxdg_output_manager_v1","wayland_protocols::unstable::xdg_output::v1::client","manage xdg_output objects",N,N],[3,"ZxdgOutputManagerV1","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_output_manager object",200,N],[13,"GetXdgOutput","","create an xdg output from a wl_output",200,N],[12,"id","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1::Request","",200,N],[12,"output","","",200,N],[4,"Event","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_output_manager object",201,N],[10,"get_xdg_output","","create an xdg output from a wl_output",201,[[["self"],["proxy"]],["result",["newproxy"]]]],[0,"zxdg_output_v1","wayland_protocols::unstable::xdg_output::v1::client","compositor logical output region",N,N],[3,"ZxdgOutputV1","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_output object",202,N],[4,"Event","","",N,N],[13,"LogicalPosition","","position of the output within the global compositor space",203,N],[12,"x","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",203,N],[12,"y","","",203,N],[13,"LogicalSize","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","size of the output in the global compositor space",203,N],[12,"width","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",203,N],[12,"height","","",203,N],[13,"Done","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","all information about the output have been sent",203,N],[13,"Name","","name of this output",203,N],[12,"name","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",203,N],[13,"Description","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","human-readable description of this output",203,N],[12,"description","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",203,N],[8,"RequestsTrait","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",N,N],[10,"destroy","","destroy the xdg_output object",204,N],[0,"c_interfaces","wayland_protocols::unstable::xdg_output::v1","C interfaces for this protocol",N,N],[7,"wl_output_interface","wayland_protocols::unstable::xdg_output::v1::c_interfaces","",N,N],[7,"zxdg_output_manager_v1_requests","","",N,N],[7,"zxdg_output_manager_v1_interface","","",N,N],[7,"zxdg_output_v1_requests","","",N,N],[7,"zxdg_output_v1_events","","",N,N],[7,"zxdg_output_v1_interface","","",N,N],[11,"is_destructor","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",200,[[["self"]],["bool"]]],[11,"from_raw_c","","",200,N],[11,"as_raw_c_in","","",200,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",205,[[["self"]],["bool"]]],[11,"from_raw_c","","",205,N],[11,"as_raw_c_in","","",205,[[["self"],["f"]],["t"]]],[11,"c_interface","","",206,N],[11,"is_destructor","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",202,[[["self"]],["bool"]]],[11,"from_raw_c","","",202,N],[11,"as_raw_c_in","","",202,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",203,[[["self"]],["bool"]]],[11,"from_raw_c","","",203,N],[11,"as_raw_c_in","","",203,[[["self"],["f"]],["t"]]],[11,"c_interface","","",207,N],[0,"xdg_shell","wayland_protocols::unstable","XDG Shell protocol",N,N],[0,"v5","wayland_protocols::unstable::xdg_shell","",N,N],[0,"client","wayland_protocols::unstable::xdg_shell::v5","Client-side API of this protocol",N,N],[0,"xdg_shell","wayland_protocols::unstable::xdg_shell::v5::client","create desktop-style surfaces",N,N],[3,"XdgShell","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",N,N],[4,"Version","","latest protocol version",N,N],[13,"Current","","Always the latest version",208,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",209,N],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",209,N],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",209,N],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",209,N],[4,"Request","","",N,N],[13,"Destroy","","destroy xdg_shell",210,N],[13,"UseUnstableVersion","","enable use of this unstable version",210,N],[12,"version","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",210,N],[13,"GetXdgSurface","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","create a shell surface from a surface",210,N],[12,"id","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",210,N],[12,"surface","","",210,N],[13,"GetXdgPopup","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","create a popup for a surface",210,N],[12,"id","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",210,N],[12,"surface","","",210,N],[12,"parent","","",210,N],[12,"seat","","",210,N],[12,"serial","","",210,N],[12,"x","","",210,N],[12,"y","","",210,N],[13,"Pong","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","respond to a ping event",210,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",210,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",N,N],[13,"Ping","","check if the client is alive",211,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Event","",211,N],[8,"RequestsTrait","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",N,N],[10,"destroy","","destroy xdg_shell",212,N],[10,"use_unstable_version","","enable use of this unstable version",212,N],[10,"get_xdg_surface","","create a shell surface from a surface",212,[[["self"],["proxy"]],["result",["newproxy"]]]],[10,"get_xdg_popup","","create a popup for a surface",212,[[["self"],["proxy"],["proxy"],["proxy"],["u32"],["i32"],["i32"]],["result",["newproxy"]]]],[10,"pong","","respond to a ping event",212,N],[0,"xdg_surface","wayland_protocols::unstable::xdg_shell::v5::client","A desktop window",N,N],[3,"XdgSurface","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",N,N],[4,"ResizeEdge","","edge values for resizing",N,N],[13,"None","","",213,N],[13,"Top","","",213,N],[13,"Bottom","","",213,N],[13,"Left","","",213,N],[13,"TopLeft","","",213,N],[13,"BottomLeft","","",213,N],[13,"Right","","",213,N],[13,"TopRight","","",213,N],[13,"BottomRight","","",213,N],[4,"State","","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",214,N],[13,"Fullscreen","","the surface is fullscreen",214,N],[13,"Resizing","","the surface is being resized",214,N],[13,"Activated","","the surface is now activated",214,N],[4,"Request","","",N,N],[13,"Destroy","","Destroy the xdg_surface",215,N],[13,"SetParent","","set the parent of this surface",215,N],[12,"parent","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",215,N],[13,"SetTitle","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","set surface title",215,N],[12,"title","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",215,N],[13,"SetAppId","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","set application ID",215,N],[12,"app_id","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",215,N],[13,"ShowWindowMenu","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","show the window menu",215,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",215,N],[12,"serial","","",215,N],[12,"x","","",215,N],[12,"y","","",215,N],[13,"Move","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","start an interactive move",215,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",215,N],[12,"serial","","",215,N],[13,"Resize","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","start an interactive resize",215,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",215,N],[12,"serial","","",215,N],[12,"edges","","",215,N],[13,"AckConfigure","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","ack a configure event",215,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",215,N],[13,"SetWindowGeometry","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","set the new window geometry",215,N],[12,"x","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",215,N],[12,"y","","",215,N],[12,"width","","",215,N],[12,"height","","",215,N],[13,"SetMaximized","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","maximize the window",215,N],[13,"UnsetMaximized","","unmaximize the window",215,N],[13,"SetFullscreen","","set the window as fullscreen on a monitor",215,N],[12,"output","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",215,N],[13,"UnsetFullscreen","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",215,N],[13,"SetMinimized","","set the window as minimized",215,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",216,N],[12,"width","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Event","",216,N],[12,"height","","",216,N],[12,"states","","",216,N],[12,"serial","","",216,N],[13,"Close","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","surface wants to be closed",216,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","Destroy the xdg_surface",217,N],[10,"set_parent","","set the parent of this surface",217,N],[10,"set_title","","set surface title",217,N],[10,"set_app_id","","set application ID",217,N],[10,"show_window_menu","","show the window menu",217,N],[10,"_move","","start an interactive move",217,N],[10,"resize","","start an interactive resize",217,N],[10,"ack_configure","","ack a configure event",217,N],[10,"set_window_geometry","","set the new window geometry",217,N],[10,"set_maximized","","maximize the window",217,N],[10,"unset_maximized","","unmaximize the window",217,N],[10,"set_fullscreen","","set the window as fullscreen on a monitor",217,N],[10,"unset_fullscreen","","",217,N],[10,"set_minimized","","set the window as minimized",217,N],[0,"xdg_popup","wayland_protocols::unstable::xdg_shell::v5::client","short-lived, popup surfaces for menus",N,N],[3,"XdgPopup","wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup","",N,N],[4,"Request","","",N,N],[13,"Destroy","","remove xdg_popup interface",218,N],[4,"Event","","",N,N],[13,"PopupDone","","popup interaction is done",219,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","remove xdg_popup interface",220,N],[0,"c_interfaces","wayland_protocols::unstable::xdg_shell::v5","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::xdg_shell::v5::c_interfaces","",N,N],[7,"wl_output_interface","","",N,N],[7,"wl_seat_interface","","",N,N],[7,"xdg_shell_requests","","",N,N],[7,"xdg_shell_events","","",N,N],[7,"xdg_shell_interface","","",N,N],[7,"xdg_surface_requests","","",N,N],[7,"xdg_surface_events","","",N,N],[7,"xdg_surface_interface","","",N,N],[7,"xdg_popup_requests","","",N,N],[7,"xdg_popup_events","","",N,N],[7,"xdg_popup_interface","","",N,N],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",208,[[["self"]],["version"]]],[11,"fmt","","",208,[[["self"],["formatter"]],["result"]]],[11,"eq","","",208,[[["self"],["version"]],["bool"]]],[11,"from_raw","","",208,[[["u32"]],["option",["version"]]]],[11,"to_raw","","",208,[[["self"]],["u32"]]],[11,"clone","","",209,[[["self"]],["error"]]],[11,"fmt","","",209,[[["self"],["formatter"]],["result"]]],[11,"eq","","",209,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",209,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",209,[[["self"]],["u32"]]],[11,"is_destructor","","",210,[[["self"]],["bool"]]],[11,"from_raw_c","","",210,N],[11,"as_raw_c_in","","",210,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",211,[[["self"]],["bool"]]],[11,"from_raw_c","","",211,N],[11,"as_raw_c_in","","",211,[[["self"],["f"]],["t"]]],[11,"c_interface","","",221,N],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",213,[[["self"]],["resizeedge"]]],[11,"fmt","","",213,[[["self"],["formatter"]],["result"]]],[11,"eq","","",213,[[["self"],["resizeedge"]],["bool"]]],[11,"from_raw","","",213,[[["u32"]],["option",["resizeedge"]]]],[11,"to_raw","","",213,[[["self"]],["u32"]]],[11,"clone","","",214,[[["self"]],["state"]]],[11,"fmt","","",214,[[["self"],["formatter"]],["result"]]],[11,"eq","","",214,[[["self"],["state"]],["bool"]]],[11,"from_raw","","",214,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",214,[[["self"]],["u32"]]],[11,"is_destructor","","",215,[[["self"]],["bool"]]],[11,"from_raw_c","","",215,N],[11,"as_raw_c_in","","",215,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",216,[[["self"]],["bool"]]],[11,"from_raw_c","","",216,N],[11,"as_raw_c_in","","",216,[[["self"],["f"]],["t"]]],[11,"c_interface","","",222,N],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup","",218,[[["self"]],["bool"]]],[11,"from_raw_c","","",218,N],[11,"as_raw_c_in","","",218,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",219,[[["self"]],["bool"]]],[11,"from_raw_c","","",219,N],[11,"as_raw_c_in","","",219,[[["self"],["f"]],["t"]]],[11,"c_interface","","",223,N],[0,"v6","wayland_protocols::unstable::xdg_shell","",N,N],[0,"client","wayland_protocols::unstable::xdg_shell::v6","Client-side API of this protocol",N,N],[0,"zxdg_shell_v6","wayland_protocols::unstable::xdg_shell::v6::client","create desktop-style surfaces",N,N],[3,"ZxdgShellV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",224,N],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",224,N],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",224,N],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",224,N],[13,"InvalidSurfaceState","","the client provided an invalid surface state",224,N],[13,"InvalidPositioner","","the client provided an invalid positioner",224,N],[4,"Request","","",N,N],[13,"Destroy","","destroy xdg_shell",225,N],[13,"CreatePositioner","","create a positioner object",225,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Request","",225,N],[13,"GetXdgSurface","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","create a shell surface from a surface",225,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Request","",225,N],[12,"surface","","",225,N],[13,"Pong","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","respond to a ping event",225,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Request","",225,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",N,N],[13,"Ping","","check if the client is alive",226,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Event","",226,N],[8,"RequestsTrait","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",N,N],[10,"destroy","","destroy xdg_shell",227,N],[10,"create_positioner","","create a positioner object",227,[[["self"]],["result",["newproxy"]]]],[10,"get_xdg_surface","","create a shell surface from a surface",227,[[["self"],["proxy"]],["result",["newproxy"]]]],[10,"pong","","respond to a ping event",227,N],[0,"zxdg_positioner_v6","wayland_protocols::unstable::xdg_shell::v6::client","child surface positioner",N,N],[3,"Anchor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",N,N],[3,"Gravity","","",N,N],[3,"ConstraintAdjustment","","constraint adjustments",N,N],[3,"ZxdgPositionerV6","","",N,N],[4,"Error","","",N,N],[13,"InvalidInput","","invalid input provided",228,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_positioner object",229,N],[13,"SetSize","","set the size of the to-be positioned rectangle",229,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",229,N],[12,"height","","",229,N],[13,"SetAnchorRect","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set the anchor rectangle within the parent surface",229,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",229,N],[12,"y","","",229,N],[12,"width","","",229,N],[12,"height","","",229,N],[13,"SetAnchor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set anchor rectangle anchor edges",229,N],[12,"anchor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",229,N],[13,"SetGravity","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set child surface gravity",229,N],[12,"gravity","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",229,N],[13,"SetConstraintAdjustment","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set the adjustment to be done when constrained",229,N],[12,"constraint_adjustment","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",229,N],[13,"SetOffset","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set surface position offset",229,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",229,N],[12,"y","","",229,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_positioner object",230,N],[10,"set_size","","set the size of the to-be positioned rectangle",230,N],[10,"set_anchor_rect","","set the anchor rectangle within the parent surface",230,N],[10,"set_anchor","","set anchor rectangle anchor edges",230,N],[10,"set_gravity","","set child surface gravity",230,N],[10,"set_constraint_adjustment","","set the adjustment to be done when constrained",230,N],[10,"set_offset","","set surface position offset",230,N],[0,"zxdg_surface_v6","wayland_protocols::unstable::xdg_shell::v6::client","desktop user interface surface base interface",N,N],[3,"ZxdgSurfaceV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",N,N],[4,"Error","","",N,N],[13,"NotConstructed","","",231,N],[13,"AlreadyConstructed","","",231,N],[13,"UnconfiguredBuffer","","",231,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_surface",232,N],[13,"GetToplevel","","assign the xdg_toplevel surface role",232,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",232,N],[13,"GetPopup","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","assign the xdg_popup surface role",232,N],[12,"id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",232,N],[12,"parent","","",232,N],[12,"positioner","","",232,N],[13,"SetWindowGeometry","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","set the new window geometry",232,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",232,N],[12,"y","","",232,N],[12,"width","","",232,N],[12,"height","","",232,N],[13,"AckConfigure","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","ack a configure event",232,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",232,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",N,N],[13,"Configure","","suggest a surface change",233,N],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Event","",233,N],[8,"RequestsTrait","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",N,N],[10,"destroy","","destroy the xdg_surface",234,N],[10,"get_toplevel","","assign the xdg_toplevel surface role",234,[[["self"]],["result",["newproxy"]]]],[10,"get_popup","","assign the xdg_popup surface role",234,[[["self"],["proxy"],["proxy"]],["result",["newproxy"]]]],[10,"set_window_geometry","","set the new window geometry",234,N],[10,"ack_configure","","ack a configure event",234,N],[0,"zxdg_toplevel_v6","wayland_protocols::unstable::xdg_shell::v6::client","toplevel surface",N,N],[3,"ZxdgToplevelV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",N,N],[4,"ResizeEdge","","edge values for resizing",N,N],[13,"None","","",235,N],[13,"Top","","",235,N],[13,"Bottom","","",235,N],[13,"Left","","",235,N],[13,"TopLeft","","",235,N],[13,"BottomLeft","","",235,N],[13,"Right","","",235,N],[13,"TopRight","","",235,N],[13,"BottomRight","","",235,N],[4,"State","","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",236,N],[13,"Fullscreen","","the surface is fullscreen",236,N],[13,"Resizing","","the surface is being resized",236,N],[13,"Activated","","the surface is now activated",236,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_toplevel",237,N],[13,"SetParent","","set the parent of this surface",237,N],[12,"parent","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",237,N],[13,"SetTitle","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set surface title",237,N],[12,"title","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",237,N],[13,"SetAppId","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set application ID",237,N],[12,"app_id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",237,N],[13,"ShowWindowMenu","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","show the window menu",237,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",237,N],[12,"serial","","",237,N],[12,"x","","",237,N],[12,"y","","",237,N],[13,"Move","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","start an interactive move",237,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",237,N],[12,"serial","","",237,N],[13,"Resize","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","start an interactive resize",237,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",237,N],[12,"serial","","",237,N],[12,"edges","","",237,N],[13,"SetMaxSize","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set the maximum size",237,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",237,N],[12,"height","","",237,N],[13,"SetMinSize","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set the minimum size",237,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",237,N],[12,"height","","",237,N],[13,"SetMaximized","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","maximize the window",237,N],[13,"UnsetMaximized","","unmaximize the window",237,N],[13,"SetFullscreen","","set the window as fullscreen on a monitor",237,N],[12,"output","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",237,N],[13,"UnsetFullscreen","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",237,N],[13,"SetMinimized","","set the window as minimized",237,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",238,N],[12,"width","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Event","",238,N],[12,"height","","",238,N],[12,"states","","",238,N],[13,"Close","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","surface wants to be closed",238,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_toplevel",239,N],[10,"set_parent","","set the parent of this surface",239,N],[10,"set_title","","set surface title",239,N],[10,"set_app_id","","set application ID",239,N],[10,"show_window_menu","","show the window menu",239,N],[10,"_move","","start an interactive move",239,N],[10,"resize","","start an interactive resize",239,N],[10,"set_max_size","","set the maximum size",239,N],[10,"set_min_size","","set the minimum size",239,N],[10,"set_maximized","","maximize the window",239,N],[10,"unset_maximized","","unmaximize the window",239,N],[10,"set_fullscreen","","set the window as fullscreen on a monitor",239,N],[10,"unset_fullscreen","","",239,N],[10,"set_minimized","","set the window as minimized",239,N],[0,"zxdg_popup_v6","wayland_protocols::unstable::xdg_shell::v6::client","short-lived, popup surfaces for menus",N,N],[3,"ZxdgPopupV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",N,N],[4,"Error","","",N,N],[13,"InvalidGrab","","tried to grab after being mapped",240,N],[4,"Request","","",N,N],[13,"Destroy","","remove xdg_popup interface",241,N],[13,"Grab","","make the popup take an explicit grab",241,N],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6::Request","",241,N],[12,"serial","","",241,N],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",N,N],[13,"Configure","","configure the popup surface",242,N],[12,"x","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6::Event","",242,N],[12,"y","","",242,N],[12,"width","","",242,N],[12,"height","","",242,N],[13,"PopupDone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","popup interaction is done",242,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","remove xdg_popup interface",243,N],[10,"grab","","make the popup take an explicit grab",243,N],[0,"c_interfaces","wayland_protocols::unstable::xdg_shell::v6","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::unstable::xdg_shell::v6::c_interfaces","",N,N],[7,"wl_output_interface","","",N,N],[7,"wl_seat_interface","","",N,N],[7,"zxdg_shell_v6_requests","","",N,N],[7,"zxdg_shell_v6_events","","",N,N],[7,"zxdg_shell_v6_interface","","",N,N],[7,"zxdg_positioner_v6_requests","","",N,N],[7,"zxdg_positioner_v6_interface","","",N,N],[7,"zxdg_surface_v6_requests","","",N,N],[7,"zxdg_surface_v6_events","","",N,N],[7,"zxdg_surface_v6_interface","","",N,N],[7,"zxdg_toplevel_v6_requests","","",N,N],[7,"zxdg_toplevel_v6_events","","",N,N],[7,"zxdg_toplevel_v6_interface","","",N,N],[7,"zxdg_popup_v6_requests","","",N,N],[7,"zxdg_popup_v6_events","","",N,N],[7,"zxdg_popup_v6_interface","","",N,N],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",224,[[["self"]],["error"]]],[11,"fmt","","",224,[[["self"],["formatter"]],["result"]]],[11,"eq","","",224,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",224,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",224,[[["self"]],["u32"]]],[11,"is_destructor","","",225,[[["self"]],["bool"]]],[11,"from_raw_c","","",225,N],[11,"as_raw_c_in","","",225,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",226,[[["self"]],["bool"]]],[11,"from_raw_c","","",226,N],[11,"as_raw_c_in","","",226,[[["self"],["f"]],["t"]]],[11,"c_interface","","",244,N],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",228,[[["self"]],["error"]]],[11,"fmt","","",228,[[["self"],["formatter"]],["result"]]],[11,"eq","","",228,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",228,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",228,[[["self"]],["u32"]]],[11,"eq","","",245,[[["self"],["anchor"]],["bool"]]],[11,"ne","","",245,[[["self"],["anchor"]],["bool"]]],[11,"clone","","",245,[[["self"]],["anchor"]]],[11,"partial_cmp","","",245,[[["self"],["anchor"]],["option",["ordering"]]]],[11,"lt","","",245,[[["self"],["anchor"]],["bool"]]],[11,"le","","",245,[[["self"],["anchor"]],["bool"]]],[11,"gt","","",245,[[["self"],["anchor"]],["bool"]]],[11,"ge","","",245,[[["self"],["anchor"]],["bool"]]],[11,"cmp","","",245,[[["self"],["anchor"]],["ordering"]]],[11,"hash","","",245,N],[11,"fmt","","",245,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",245,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",245,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",245,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",245,[[["self"],["formatter"]],["result"]]],[18,"None","","the center of the anchor rectangle",245,N],[18,"Top","","the top edge of the anchor rectangle",245,N],[18,"Bottom","","the bottom edge of the anchor rectangle",245,N],[18,"Left","","the left edge of the anchor rectangle",245,N],[18,"Right","","the right edge of the anchor rectangle",245,N],[11,"empty","","Returns an empty set of flags.",245,[[],["anchor"]]],[11,"all","","Returns the set containing all flags.",245,[[],["anchor"]]],[11,"bits","","Returns the raw value of the flags currently stored.",245,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",245,[[["u32"]],["option",["anchor"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",245,[[["u32"]],["anchor"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",245,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",245,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",245,[[["self"],["anchor"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",245,[[["self"],["anchor"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",245,[[["self"],["anchor"]]]],[11,"remove","","Removes the specified flags in-place.",245,[[["self"],["anchor"]]]],[11,"toggle","","Toggles the specified flags in-place.",245,[[["self"],["anchor"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",245,[[["self"],["anchor"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",245,[[["self"],["anchor"]],["anchor"]]],[11,"bitor_assign","","Adds the set of flags.",245,[[["self"],["anchor"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",245,[[["self"],["anchor"]],["anchor"]]],[11,"bitxor_assign","","Toggles the set of flags.",245,[[["self"],["anchor"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",245,[[["self"],["anchor"]],["anchor"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",245,[[["self"],["anchor"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",245,[[["self"],["anchor"]],["anchor"]]],[11,"sub_assign","","Disables all flags enabled in the set.",245,[[["self"],["anchor"]]]],[11,"not","","Returns the complement of this set of flags.",245,[[["self"]],["anchor"]]],[11,"extend","","",245,[[["self"],["t"]]]],[11,"from_iter","","",245,[[["t"]],["anchor"]]],[11,"from_raw","","",245,[[["u32"]],["option",["anchor"]]]],[11,"to_raw","","",245,[[["self"]],["u32"]]],[11,"eq","","",246,[[["self"],["gravity"]],["bool"]]],[11,"ne","","",246,[[["self"],["gravity"]],["bool"]]],[11,"clone","","",246,[[["self"]],["gravity"]]],[11,"partial_cmp","","",246,[[["self"],["gravity"]],["option",["ordering"]]]],[11,"lt","","",246,[[["self"],["gravity"]],["bool"]]],[11,"le","","",246,[[["self"],["gravity"]],["bool"]]],[11,"gt","","",246,[[["self"],["gravity"]],["bool"]]],[11,"ge","","",246,[[["self"],["gravity"]],["bool"]]],[11,"cmp","","",246,[[["self"],["gravity"]],["ordering"]]],[11,"hash","","",246,N],[11,"fmt","","",246,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",246,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",246,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",246,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",246,[[["self"],["formatter"]],["result"]]],[18,"None","","center over the anchor edge",246,N],[18,"Top","","position above the anchor edge",246,N],[18,"Bottom","","position below the anchor edge",246,N],[18,"Left","","position to the left of the anchor edge",246,N],[18,"Right","","position to the right of the anchor edge",246,N],[11,"empty","","Returns an empty set of flags.",246,[[],["gravity"]]],[11,"all","","Returns the set containing all flags.",246,[[],["gravity"]]],[11,"bits","","Returns the raw value of the flags currently stored.",246,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",246,[[["u32"]],["option",["gravity"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",246,[[["u32"]],["gravity"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",246,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",246,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",246,[[["self"],["gravity"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",246,[[["self"],["gravity"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",246,[[["self"],["gravity"]]]],[11,"remove","","Removes the specified flags in-place.",246,[[["self"],["gravity"]]]],[11,"toggle","","Toggles the specified flags in-place.",246,[[["self"],["gravity"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",246,[[["self"],["gravity"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",246,[[["self"],["gravity"]],["gravity"]]],[11,"bitor_assign","","Adds the set of flags.",246,[[["self"],["gravity"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",246,[[["self"],["gravity"]],["gravity"]]],[11,"bitxor_assign","","Toggles the set of flags.",246,[[["self"],["gravity"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",246,[[["self"],["gravity"]],["gravity"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",246,[[["self"],["gravity"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",246,[[["self"],["gravity"]],["gravity"]]],[11,"sub_assign","","Disables all flags enabled in the set.",246,[[["self"],["gravity"]]]],[11,"not","","Returns the complement of this set of flags.",246,[[["self"]],["gravity"]]],[11,"extend","","",246,[[["self"],["t"]]]],[11,"from_iter","","",246,[[["t"]],["gravity"]]],[11,"from_raw","","",246,[[["u32"]],["option",["gravity"]]]],[11,"to_raw","","",246,[[["self"]],["u32"]]],[11,"eq","","",247,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ne","","",247,[[["self"],["constraintadjustment"]],["bool"]]],[11,"clone","","",247,[[["self"]],["constraintadjustment"]]],[11,"partial_cmp","","",247,[[["self"],["constraintadjustment"]],["option",["ordering"]]]],[11,"lt","","",247,[[["self"],["constraintadjustment"]],["bool"]]],[11,"le","","",247,[[["self"],["constraintadjustment"]],["bool"]]],[11,"gt","","",247,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ge","","",247,[[["self"],["constraintadjustment"]],["bool"]]],[11,"cmp","","",247,[[["self"],["constraintadjustment"]],["ordering"]]],[11,"hash","","",247,N],[11,"fmt","","",247,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",247,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",247,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",247,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",247,[[["self"],["formatter"]],["result"]]],[18,"None","","don't move the child surface when constrained",247,N],[18,"SlideX","","move along the x axis until unconstrained",247,N],[18,"SlideY","","move along the y axis until unconstrained",247,N],[18,"FlipX","","invert the anchor and gravity on the x axis",247,N],[18,"FlipY","","invert the anchor and gravity on the y axis",247,N],[18,"ResizeX","","horizontally resize the surface",247,N],[18,"ResizeY","","vertically resize the surface",247,N],[11,"empty","","Returns an empty set of flags.",247,[[],["constraintadjustment"]]],[11,"all","","Returns the set containing all flags.",247,[[],["constraintadjustment"]]],[11,"bits","","Returns the raw value of the flags currently stored.",247,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",247,[[["u32"]],["option",["constraintadjustment"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",247,[[["u32"]],["constraintadjustment"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",247,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",247,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",247,[[["self"],["constraintadjustment"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",247,[[["self"],["constraintadjustment"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",247,[[["self"],["constraintadjustment"]]]],[11,"remove","","Removes the specified flags in-place.",247,[[["self"],["constraintadjustment"]]]],[11,"toggle","","Toggles the specified flags in-place.",247,[[["self"],["constraintadjustment"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",247,[[["self"],["constraintadjustment"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",247,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitor_assign","","Adds the set of flags.",247,[[["self"],["constraintadjustment"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",247,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitxor_assign","","Toggles the set of flags.",247,[[["self"],["constraintadjustment"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",247,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",247,[[["self"],["constraintadjustment"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",247,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"sub_assign","","Disables all flags enabled in the set.",247,[[["self"],["constraintadjustment"]]]],[11,"not","","Returns the complement of this set of flags.",247,[[["self"]],["constraintadjustment"]]],[11,"extend","","",247,[[["self"],["t"]]]],[11,"from_iter","","",247,[[["t"]],["constraintadjustment"]]],[11,"from_raw","","",247,[[["u32"]],["option",["constraintadjustment"]]]],[11,"to_raw","","",247,[[["self"]],["u32"]]],[11,"is_destructor","","",229,[[["self"]],["bool"]]],[11,"from_raw_c","","",229,N],[11,"as_raw_c_in","","",229,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",248,[[["self"]],["bool"]]],[11,"from_raw_c","","",248,N],[11,"as_raw_c_in","","",248,[[["self"],["f"]],["t"]]],[11,"c_interface","","",249,N],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",231,[[["self"]],["error"]]],[11,"fmt","","",231,[[["self"],["formatter"]],["result"]]],[11,"eq","","",231,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",231,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",231,[[["self"]],["u32"]]],[11,"is_destructor","","",232,[[["self"]],["bool"]]],[11,"from_raw_c","","",232,N],[11,"as_raw_c_in","","",232,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",233,[[["self"]],["bool"]]],[11,"from_raw_c","","",233,N],[11,"as_raw_c_in","","",233,[[["self"],["f"]],["t"]]],[11,"c_interface","","",250,N],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",235,[[["self"]],["resizeedge"]]],[11,"fmt","","",235,[[["self"],["formatter"]],["result"]]],[11,"eq","","",235,[[["self"],["resizeedge"]],["bool"]]],[11,"from_raw","","",235,[[["u32"]],["option",["resizeedge"]]]],[11,"to_raw","","",235,[[["self"]],["u32"]]],[11,"clone","","",236,[[["self"]],["state"]]],[11,"fmt","","",236,[[["self"],["formatter"]],["result"]]],[11,"eq","","",236,[[["self"],["state"]],["bool"]]],[11,"from_raw","","",236,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",236,[[["self"]],["u32"]]],[11,"is_destructor","","",237,[[["self"]],["bool"]]],[11,"from_raw_c","","",237,N],[11,"as_raw_c_in","","",237,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",238,[[["self"]],["bool"]]],[11,"from_raw_c","","",238,N],[11,"as_raw_c_in","","",238,[[["self"],["f"]],["t"]]],[11,"c_interface","","",251,N],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",240,[[["self"]],["error"]]],[11,"fmt","","",240,[[["self"],["formatter"]],["result"]]],[11,"eq","","",240,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",240,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",240,[[["self"]],["u32"]]],[11,"is_destructor","","",241,[[["self"]],["bool"]]],[11,"from_raw_c","","",241,N],[11,"as_raw_c_in","","",241,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",242,[[["self"]],["bool"]]],[11,"from_raw_c","","",242,N],[11,"as_raw_c_in","","",242,[[["self"],["f"]],["t"]]],[11,"c_interface","","",252,N],[0,"xwayland_keyboard_grab","wayland_protocols::unstable","Protocol for grabbing the keyboard from Xwayland",N,N],[0,"v1","wayland_protocols::unstable::xwayland_keyboard_grab","",N,N],[0,"client","wayland_protocols::unstable::xwayland_keyboard_grab::v1","Client-side API of this protocol",N,N],[0,"zwp_xwayland_keyboard_grab_manager_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client","context object for keyboard grab manager",N,N],[3,"ZwpXwaylandKeyboardGrabManagerV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the keyboard grab manager",253,N],[13,"GrabKeyboard","","grab the keyboard to a surface",253,N],[12,"id","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1::Request","",253,N],[12,"surface","","",253,N],[12,"seat","","",253,N],[4,"Event","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the keyboard grab manager",254,N],[10,"grab_keyboard","","grab the keyboard to a surface",254,[[["self"],["proxy"],["proxy"]],["result",["newproxy"]]]],[0,"zwp_xwayland_keyboard_grab_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client","interface for grabbing the keyboard",N,N],[3,"ZwpXwaylandKeyboardGrabV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",N,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the grabbed keyboard object",255,N],[4,"Event","","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the grabbed keyboard object",256,N],[0,"c_interfaces","wayland_protocols::unstable::xwayland_keyboard_grab::v1","C interfaces for this protocol",N,N],[7,"wl_seat_interface","wayland_protocols::unstable::xwayland_keyboard_grab::v1::c_interfaces","",N,N],[7,"wl_surface_interface","","",N,N],[7,"zwp_xwayland_keyboard_grab_manager_v1_requests","","",N,N],[7,"zwp_xwayland_keyboard_grab_manager_v1_interface","","",N,N],[7,"zwp_xwayland_keyboard_grab_v1_requests","","",N,N],[7,"zwp_xwayland_keyboard_grab_v1_interface","","",N,N],[11,"is_destructor","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",253,[[["self"]],["bool"]]],[11,"from_raw_c","","",253,N],[11,"as_raw_c_in","","",253,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",257,[[["self"]],["bool"]]],[11,"from_raw_c","","",257,N],[11,"as_raw_c_in","","",257,[[["self"],["f"]],["t"]]],[11,"c_interface","","",258,N],[11,"is_destructor","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",255,[[["self"]],["bool"]]],[11,"from_raw_c","","",255,N],[11,"as_raw_c_in","","",255,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",259,[[["self"]],["bool"]]],[11,"from_raw_c","","",259,N],[11,"as_raw_c_in","","",259,[[["self"],["f"]],["t"]]],[11,"c_interface","","",260,N],[0,"presentation_time","wayland_protocols","Presentation time protocol",N,N],[0,"client","wayland_protocols::presentation_time","Client-side API of this protocol",N,N],[0,"wp_presentation","wayland_protocols::presentation_time::client","timed presentation related wl_surface requests",N,N],[3,"WpPresentation","wayland_protocols::presentation_time::client::wp_presentation","",N,N],[4,"Error","","fatal presentation errors",N,N],[13,"InvalidTimestamp","","invalid value in tv_nsec",261,N],[13,"InvalidFlag","","invalid flag",261,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the presentation interface",262,N],[13,"Feedback","","request presentation feedback information",262,N],[12,"surface","wayland_protocols::presentation_time::client::wp_presentation::Request","",262,N],[12,"callback","","",262,N],[4,"Event","wayland_protocols::presentation_time::client::wp_presentation","",N,N],[13,"ClockId","","clock ID for timestamps",263,N],[12,"clk_id","wayland_protocols::presentation_time::client::wp_presentation::Event","",263,N],[8,"RequestsTrait","wayland_protocols::presentation_time::client::wp_presentation","",N,N],[10,"destroy","","unbind from the presentation interface",264,N],[10,"feedback","","request presentation feedback information",264,[[["self"],["proxy"]],["result",["newproxy"]]]],[0,"wp_presentation_feedback","wayland_protocols::presentation_time::client","presentation time feedback event",N,N],[3,"WpPresentationFeedback","wayland_protocols::presentation_time::client::wp_presentation_feedback","",N,N],[4,"Kind","","bitmask of flags in presented event",N,N],[13,"Vsync","","presentation was vsync'd",265,N],[13,"HwClock","","hardware provided the presentation timestamp",265,N],[13,"HwCompletion","","hardware signalled the start of the presentation",265,N],[13,"ZeroCopy","","presentation was done zero-copy",265,N],[4,"Request","","",N,N],[4,"Event","","",N,N],[13,"SyncOutput","","presentation synchronized to this output",266,N],[12,"output","wayland_protocols::presentation_time::client::wp_presentation_feedback::Event","",266,N],[13,"Presented","wayland_protocols::presentation_time::client::wp_presentation_feedback","the content update was displayed",266,N],[12,"tv_sec_hi","wayland_protocols::presentation_time::client::wp_presentation_feedback::Event","",266,N],[12,"tv_sec_lo","","",266,N],[12,"tv_nsec","","",266,N],[12,"refresh","","",266,N],[12,"seq_hi","","",266,N],[12,"seq_lo","","",266,N],[12,"flags","","",266,N],[13,"Discarded","wayland_protocols::presentation_time::client::wp_presentation_feedback","the content update was not displayed",266,N],[8,"RequestsTrait","","",N,N],[0,"c_interfaces","wayland_protocols::presentation_time","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::presentation_time::c_interfaces","",N,N],[7,"wl_output_interface","","",N,N],[7,"wp_presentation_requests","","",N,N],[7,"wp_presentation_events","","",N,N],[7,"wp_presentation_interface","","",N,N],[7,"wp_presentation_feedback_events","","",N,N],[7,"wp_presentation_feedback_interface","","",N,N],[0,"xdg_shell","wayland_protocols","XDG Shell protocol",N,N],[0,"client","wayland_protocols::xdg_shell","Client-side API of this protocol",N,N],[0,"xdg_wm_base","wayland_protocols::xdg_shell::client","create desktop-style surfaces",N,N],[3,"XdgWmBase","wayland_protocols::xdg_shell::client::xdg_wm_base","",N,N],[4,"Error","","",N,N],[13,"Role","","given wl_surface has another role",267,N],[13,"DefunctSurfaces","","xdg_wm_base was destroyed before children",267,N],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",267,N],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",267,N],[13,"InvalidSurfaceState","","the client provided an invalid surface state",267,N],[13,"InvalidPositioner","","the client provided an invalid positioner",267,N],[4,"Request","","",N,N],[13,"Destroy","","destroy xdg_wm_base",268,N],[13,"CreatePositioner","","create a positioner object",268,N],[12,"id","wayland_protocols::xdg_shell::client::xdg_wm_base::Request","",268,N],[13,"GetXdgSurface","wayland_protocols::xdg_shell::client::xdg_wm_base","create a shell surface from a surface",268,N],[12,"id","wayland_protocols::xdg_shell::client::xdg_wm_base::Request","",268,N],[12,"surface","","",268,N],[13,"Pong","wayland_protocols::xdg_shell::client::xdg_wm_base","respond to a ping event",268,N],[12,"serial","wayland_protocols::xdg_shell::client::xdg_wm_base::Request","",268,N],[4,"Event","wayland_protocols::xdg_shell::client::xdg_wm_base","",N,N],[13,"Ping","","check if the client is alive",269,N],[12,"serial","wayland_protocols::xdg_shell::client::xdg_wm_base::Event","",269,N],[8,"RequestsTrait","wayland_protocols::xdg_shell::client::xdg_wm_base","",N,N],[10,"destroy","","destroy xdg_wm_base",270,N],[10,"create_positioner","","create a positioner object",270,[[["self"]],["result",["newproxy"]]]],[10,"get_xdg_surface","","create a shell surface from a surface",270,[[["self"],["proxy"]],["result",["newproxy"]]]],[10,"pong","","respond to a ping event",270,N],[0,"xdg_positioner","wayland_protocols::xdg_shell::client","child surface positioner",N,N],[3,"ConstraintAdjustment","wayland_protocols::xdg_shell::client::xdg_positioner","constraint adjustments",N,N],[3,"XdgPositioner","","",N,N],[4,"Error","","",N,N],[13,"InvalidInput","","invalid input provided",271,N],[4,"Anchor","","",N,N],[13,"None","","",272,N],[13,"Top","","",272,N],[13,"Bottom","","",272,N],[13,"Left","","",272,N],[13,"Right","","",272,N],[13,"TopLeft","","",272,N],[13,"BottomLeft","","",272,N],[13,"TopRight","","",272,N],[13,"BottomRight","","",272,N],[4,"Gravity","","",N,N],[13,"None","","",273,N],[13,"Top","","",273,N],[13,"Bottom","","",273,N],[13,"Left","","",273,N],[13,"Right","","",273,N],[13,"TopLeft","","",273,N],[13,"BottomLeft","","",273,N],[13,"TopRight","","",273,N],[13,"BottomRight","","",273,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_positioner object",274,N],[13,"SetSize","","set the size of the to-be positioned rectangle",274,N],[12,"width","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",274,N],[12,"height","","",274,N],[13,"SetAnchorRect","wayland_protocols::xdg_shell::client::xdg_positioner","set the anchor rectangle within the parent surface",274,N],[12,"x","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",274,N],[12,"y","","",274,N],[12,"width","","",274,N],[12,"height","","",274,N],[13,"SetAnchor","wayland_protocols::xdg_shell::client::xdg_positioner","set anchor rectangle anchor",274,N],[12,"anchor","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",274,N],[13,"SetGravity","wayland_protocols::xdg_shell::client::xdg_positioner","set child surface gravity",274,N],[12,"gravity","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",274,N],[13,"SetConstraintAdjustment","wayland_protocols::xdg_shell::client::xdg_positioner","set the adjustment to be done when constrained",274,N],[12,"constraint_adjustment","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",274,N],[13,"SetOffset","wayland_protocols::xdg_shell::client::xdg_positioner","set surface position offset",274,N],[12,"x","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",274,N],[12,"y","","",274,N],[4,"Event","wayland_protocols::xdg_shell::client::xdg_positioner","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_positioner object",275,N],[10,"set_size","","set the size of the to-be positioned rectangle",275,N],[10,"set_anchor_rect","","set the anchor rectangle within the parent surface",275,N],[10,"set_anchor","","set anchor rectangle anchor",275,N],[10,"set_gravity","","set child surface gravity",275,N],[10,"set_constraint_adjustment","","set the adjustment to be done when constrained",275,N],[10,"set_offset","","set surface position offset",275,N],[0,"xdg_surface","wayland_protocols::xdg_shell::client","desktop user interface surface base interface",N,N],[3,"XdgSurface","wayland_protocols::xdg_shell::client::xdg_surface","",N,N],[4,"Error","","",N,N],[13,"NotConstructed","","",276,N],[13,"AlreadyConstructed","","",276,N],[13,"UnconfiguredBuffer","","",276,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_surface",277,N],[13,"GetToplevel","","assign the xdg_toplevel surface role",277,N],[12,"id","wayland_protocols::xdg_shell::client::xdg_surface::Request","",277,N],[13,"GetPopup","wayland_protocols::xdg_shell::client::xdg_surface","assign the xdg_popup surface role",277,N],[12,"id","wayland_protocols::xdg_shell::client::xdg_surface::Request","",277,N],[12,"parent","","",277,N],[12,"positioner","","",277,N],[13,"SetWindowGeometry","wayland_protocols::xdg_shell::client::xdg_surface","set the new window geometry",277,N],[12,"x","wayland_protocols::xdg_shell::client::xdg_surface::Request","",277,N],[12,"y","","",277,N],[12,"width","","",277,N],[12,"height","","",277,N],[13,"AckConfigure","wayland_protocols::xdg_shell::client::xdg_surface","ack a configure event",277,N],[12,"serial","wayland_protocols::xdg_shell::client::xdg_surface::Request","",277,N],[4,"Event","wayland_protocols::xdg_shell::client::xdg_surface","",N,N],[13,"Configure","","suggest a surface change",278,N],[12,"serial","wayland_protocols::xdg_shell::client::xdg_surface::Event","",278,N],[8,"RequestsTrait","wayland_protocols::xdg_shell::client::xdg_surface","",N,N],[10,"destroy","","destroy the xdg_surface",279,N],[10,"get_toplevel","","assign the xdg_toplevel surface role",279,[[["self"]],["result",["newproxy"]]]],[10,"get_popup","","assign the xdg_popup surface role",279,[[["self"],["option",["proxy"]],["proxy"]],["result",["newproxy"]]]],[10,"set_window_geometry","","set the new window geometry",279,N],[10,"ack_configure","","ack a configure event",279,N],[0,"xdg_toplevel","wayland_protocols::xdg_shell::client","toplevel surface",N,N],[3,"XdgToplevel","wayland_protocols::xdg_shell::client::xdg_toplevel","",N,N],[4,"ResizeEdge","","edge values for resizing",N,N],[13,"None","","",280,N],[13,"Top","","",280,N],[13,"Bottom","","",280,N],[13,"Left","","",280,N],[13,"TopLeft","","",280,N],[13,"BottomLeft","","",280,N],[13,"Right","","",280,N],[13,"TopRight","","",280,N],[13,"BottomRight","","",280,N],[4,"State","","types of state on the surface",N,N],[13,"Maximized","","the surface is maximized",281,N],[13,"Fullscreen","","the surface is fullscreen",281,N],[13,"Resizing","","the surface is being resized",281,N],[13,"Activated","","the surface is now activated",281,N],[13,"TiledLeft","","the surface is tiled",281,N],[13,"TiledRight","","the surface is tiled",281,N],[13,"TiledTop","","the surface is tiled",281,N],[13,"TiledBottom","","the surface is tiled",281,N],[4,"Request","","",N,N],[13,"Destroy","","destroy the xdg_toplevel",282,N],[13,"SetParent","","set the parent of this surface",282,N],[12,"parent","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",282,N],[13,"SetTitle","wayland_protocols::xdg_shell::client::xdg_toplevel","set surface title",282,N],[12,"title","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",282,N],[13,"SetAppId","wayland_protocols::xdg_shell::client::xdg_toplevel","set application ID",282,N],[12,"app_id","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",282,N],[13,"ShowWindowMenu","wayland_protocols::xdg_shell::client::xdg_toplevel","show the window menu",282,N],[12,"seat","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",282,N],[12,"serial","","",282,N],[12,"x","","",282,N],[12,"y","","",282,N],[13,"Move","wayland_protocols::xdg_shell::client::xdg_toplevel","start an interactive move",282,N],[12,"seat","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",282,N],[12,"serial","","",282,N],[13,"Resize","wayland_protocols::xdg_shell::client::xdg_toplevel","start an interactive resize",282,N],[12,"seat","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",282,N],[12,"serial","","",282,N],[12,"edges","","",282,N],[13,"SetMaxSize","wayland_protocols::xdg_shell::client::xdg_toplevel","set the maximum size",282,N],[12,"width","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",282,N],[12,"height","","",282,N],[13,"SetMinSize","wayland_protocols::xdg_shell::client::xdg_toplevel","set the minimum size",282,N],[12,"width","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",282,N],[12,"height","","",282,N],[13,"SetMaximized","wayland_protocols::xdg_shell::client::xdg_toplevel","maximize the window",282,N],[13,"UnsetMaximized","","unmaximize the window",282,N],[13,"SetFullscreen","","set the window as fullscreen on an output",282,N],[12,"output","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",282,N],[13,"UnsetFullscreen","wayland_protocols::xdg_shell::client::xdg_toplevel","unset the window as fullscreen",282,N],[13,"SetMinimized","","set the window as minimized",282,N],[4,"Event","","",N,N],[13,"Configure","","suggest a surface change",283,N],[12,"width","wayland_protocols::xdg_shell::client::xdg_toplevel::Event","",283,N],[12,"height","","",283,N],[12,"states","","",283,N],[13,"Close","wayland_protocols::xdg_shell::client::xdg_toplevel","surface wants to be closed",283,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","destroy the xdg_toplevel",284,N],[10,"set_parent","","set the parent of this surface",284,N],[10,"set_title","","set surface title",284,N],[10,"set_app_id","","set application ID",284,N],[10,"show_window_menu","","show the window menu",284,N],[10,"_move","","start an interactive move",284,N],[10,"resize","","start an interactive resize",284,N],[10,"set_max_size","","set the maximum size",284,N],[10,"set_min_size","","set the minimum size",284,N],[10,"set_maximized","","maximize the window",284,N],[10,"unset_maximized","","unmaximize the window",284,N],[10,"set_fullscreen","","set the window as fullscreen on an output",284,N],[10,"unset_fullscreen","","unset the window as fullscreen",284,N],[10,"set_minimized","","set the window as minimized",284,N],[0,"xdg_popup","wayland_protocols::xdg_shell::client","short-lived, popup surfaces for menus",N,N],[3,"XdgPopup","wayland_protocols::xdg_shell::client::xdg_popup","",N,N],[4,"Error","","",N,N],[13,"InvalidGrab","","tried to grab after being mapped",285,N],[4,"Request","","",N,N],[13,"Destroy","","remove xdg_popup interface",286,N],[13,"Grab","","make the popup take an explicit grab",286,N],[12,"seat","wayland_protocols::xdg_shell::client::xdg_popup::Request","",286,N],[12,"serial","","",286,N],[4,"Event","wayland_protocols::xdg_shell::client::xdg_popup","",N,N],[13,"Configure","","configure the popup surface",287,N],[12,"x","wayland_protocols::xdg_shell::client::xdg_popup::Event","",287,N],[12,"y","","",287,N],[12,"width","","",287,N],[12,"height","","",287,N],[13,"PopupDone","wayland_protocols::xdg_shell::client::xdg_popup","popup interaction is done",287,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","remove xdg_popup interface",288,N],[10,"grab","","make the popup take an explicit grab",288,N],[0,"c_interfaces","wayland_protocols::xdg_shell","C interfaces for this protocol",N,N],[7,"wl_seat_interface","wayland_protocols::xdg_shell::c_interfaces","",N,N],[7,"wl_surface_interface","","",N,N],[7,"wl_output_interface","","",N,N],[7,"xdg_wm_base_requests","","",N,N],[7,"xdg_wm_base_events","","",N,N],[7,"xdg_wm_base_interface","","",N,N],[7,"xdg_positioner_requests","","",N,N],[7,"xdg_positioner_interface","","",N,N],[7,"xdg_surface_requests","","",N,N],[7,"xdg_surface_events","","",N,N],[7,"xdg_surface_interface","","",N,N],[7,"xdg_toplevel_requests","","",N,N],[7,"xdg_toplevel_events","","",N,N],[7,"xdg_toplevel_interface","","",N,N],[7,"xdg_popup_requests","","",N,N],[7,"xdg_popup_events","","",N,N],[7,"xdg_popup_interface","","",N,N],[0,"viewporter","wayland_protocols","Viewporter protocol",N,N],[0,"client","wayland_protocols::viewporter","Client-side API of this protocol",N,N],[0,"wp_viewporter","wayland_protocols::viewporter::client","surface cropping and scaling",N,N],[3,"WpViewporter","wayland_protocols::viewporter::client::wp_viewporter","",N,N],[4,"Error","","",N,N],[13,"ViewportExists","","the surface already has a viewport object associated",289,N],[4,"Request","","",N,N],[13,"Destroy","","unbind from the cropping and scaling interface",290,N],[13,"GetViewport","","extend surface interface for crop and scale",290,N],[12,"id","wayland_protocols::viewporter::client::wp_viewporter::Request","",290,N],[12,"surface","","",290,N],[4,"Event","wayland_protocols::viewporter::client::wp_viewporter","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","unbind from the cropping and scaling interface",291,N],[10,"get_viewport","","extend surface interface for crop and scale",291,[[["self"],["proxy"]],["result",["newproxy"]]]],[0,"wp_viewport","wayland_protocols::viewporter::client","crop and scale interface to a wl_surface",N,N],[3,"WpViewport","wayland_protocols::viewporter::client::wp_viewport","",N,N],[4,"Error","","",N,N],[13,"BadValue","","negative or zero values in width or height",292,N],[13,"BadSize","","destination size is not integer",292,N],[13,"OutOfBuffer","","source rectangle extends outside of the content area",292,N],[13,"NoSurface","","the wl_surface was destroyed",292,N],[4,"Request","","",N,N],[13,"Destroy","","remove scaling and cropping from the surface",293,N],[13,"SetSource","","set the source rectangle for cropping",293,N],[12,"x","wayland_protocols::viewporter::client::wp_viewport::Request","",293,N],[12,"y","","",293,N],[12,"width","","",293,N],[12,"height","","",293,N],[13,"SetDestination","wayland_protocols::viewporter::client::wp_viewport","set the surface size for scaling",293,N],[12,"width","wayland_protocols::viewporter::client::wp_viewport::Request","",293,N],[12,"height","","",293,N],[4,"Event","wayland_protocols::viewporter::client::wp_viewport","",N,N],[8,"RequestsTrait","","",N,N],[10,"destroy","","remove scaling and cropping from the surface",294,N],[10,"set_source","","set the source rectangle for cropping",294,N],[10,"set_destination","","set the surface size for scaling",294,N],[0,"c_interfaces","wayland_protocols::viewporter","C interfaces for this protocol",N,N],[7,"wl_surface_interface","wayland_protocols::viewporter::c_interfaces","",N,N],[7,"wp_viewporter_requests","","",N,N],[7,"wp_viewporter_interface","","",N,N],[7,"wp_viewport_requests","","",N,N],[7,"wp_viewport_interface","","",N,N],[11,"clone","wayland_protocols::presentation_time::client::wp_presentation","",261,[[["self"]],["error"]]],[11,"fmt","","",261,[[["self"],["formatter"]],["result"]]],[11,"eq","","",261,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",261,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",261,[[["self"]],["u32"]]],[11,"is_destructor","","",262,[[["self"]],["bool"]]],[11,"from_raw_c","","",262,N],[11,"as_raw_c_in","","",262,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",263,[[["self"]],["bool"]]],[11,"from_raw_c","","",263,N],[11,"as_raw_c_in","","",263,[[["self"],["f"]],["t"]]],[11,"c_interface","","",295,N],[11,"clone","wayland_protocols::presentation_time::client::wp_presentation_feedback","",265,[[["self"]],["kind"]]],[11,"fmt","","",265,[[["self"],["formatter"]],["result"]]],[11,"eq","","",265,[[["self"],["kind"]],["bool"]]],[11,"from_raw","","",265,[[["u32"]],["option",["kind"]]]],[11,"to_raw","","",265,[[["self"]],["u32"]]],[11,"is_destructor","","",296,[[["self"]],["bool"]]],[11,"from_raw_c","","",296,N],[11,"as_raw_c_in","","",296,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",266,[[["self"]],["bool"]]],[11,"from_raw_c","","",266,N],[11,"as_raw_c_in","","",266,[[["self"],["f"]],["t"]]],[11,"c_interface","","",297,N],[11,"clone","wayland_protocols::xdg_shell::client::xdg_wm_base","",267,[[["self"]],["error"]]],[11,"fmt","","",267,[[["self"],["formatter"]],["result"]]],[11,"eq","","",267,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",267,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",267,[[["self"]],["u32"]]],[11,"is_destructor","","",268,[[["self"]],["bool"]]],[11,"from_raw_c","","",268,N],[11,"as_raw_c_in","","",268,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",269,[[["self"]],["bool"]]],[11,"from_raw_c","","",269,N],[11,"as_raw_c_in","","",269,[[["self"],["f"]],["t"]]],[11,"c_interface","","",298,N],[11,"clone","wayland_protocols::xdg_shell::client::xdg_positioner","",271,[[["self"]],["error"]]],[11,"fmt","","",271,[[["self"],["formatter"]],["result"]]],[11,"eq","","",271,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",271,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",271,[[["self"]],["u32"]]],[11,"clone","","",272,[[["self"]],["anchor"]]],[11,"fmt","","",272,[[["self"],["formatter"]],["result"]]],[11,"eq","","",272,[[["self"],["anchor"]],["bool"]]],[11,"from_raw","","",272,[[["u32"]],["option",["anchor"]]]],[11,"to_raw","","",272,[[["self"]],["u32"]]],[11,"clone","","",273,[[["self"]],["gravity"]]],[11,"fmt","","",273,[[["self"],["formatter"]],["result"]]],[11,"eq","","",273,[[["self"],["gravity"]],["bool"]]],[11,"from_raw","","",273,[[["u32"]],["option",["gravity"]]]],[11,"to_raw","","",273,[[["self"]],["u32"]]],[11,"eq","","",299,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ne","","",299,[[["self"],["constraintadjustment"]],["bool"]]],[11,"clone","","",299,[[["self"]],["constraintadjustment"]]],[11,"partial_cmp","","",299,[[["self"],["constraintadjustment"]],["option",["ordering"]]]],[11,"lt","","",299,[[["self"],["constraintadjustment"]],["bool"]]],[11,"le","","",299,[[["self"],["constraintadjustment"]],["bool"]]],[11,"gt","","",299,[[["self"],["constraintadjustment"]],["bool"]]],[11,"ge","","",299,[[["self"],["constraintadjustment"]],["bool"]]],[11,"cmp","","",299,[[["self"],["constraintadjustment"]],["ordering"]]],[11,"hash","","",299,N],[11,"fmt","","",299,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",299,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",299,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",299,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",299,[[["self"],["formatter"]],["result"]]],[18,"None","","don't move the child surface when constrained",299,N],[18,"SlideX","","move along the x axis until unconstrained",299,N],[18,"SlideY","","move along the y axis until unconstrained",299,N],[18,"FlipX","","invert the anchor and gravity on the x axis",299,N],[18,"FlipY","","invert the anchor and gravity on the y axis",299,N],[18,"ResizeX","","horizontally resize the surface",299,N],[18,"ResizeY","","vertically resize the surface",299,N],[11,"empty","","Returns an empty set of flags.",299,[[],["constraintadjustment"]]],[11,"all","","Returns the set containing all flags.",299,[[],["constraintadjustment"]]],[11,"bits","","Returns the raw value of the flags currently stored.",299,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",299,[[["u32"]],["option",["constraintadjustment"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",299,[[["u32"]],["constraintadjustment"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",299,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",299,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",299,[[["self"],["constraintadjustment"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",299,[[["self"],["constraintadjustment"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",299,[[["self"],["constraintadjustment"]]]],[11,"remove","","Removes the specified flags in-place.",299,[[["self"],["constraintadjustment"]]]],[11,"toggle","","Toggles the specified flags in-place.",299,[[["self"],["constraintadjustment"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",299,[[["self"],["constraintadjustment"],["bool"]]]],[11,"bitor","","Returns the union of the two sets of flags.",299,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitor_assign","","Adds the set of flags.",299,[[["self"],["constraintadjustment"]]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",299,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitxor_assign","","Toggles the set of flags.",299,[[["self"],["constraintadjustment"]]]],[11,"bitand","","Returns the intersection between the two sets of flags.",299,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",299,[[["self"],["constraintadjustment"]]]],[11,"sub","","Returns the set difference of the two sets of flags.",299,[[["self"],["constraintadjustment"]],["constraintadjustment"]]],[11,"sub_assign","","Disables all flags enabled in the set.",299,[[["self"],["constraintadjustment"]]]],[11,"not","","Returns the complement of this set of flags.",299,[[["self"]],["constraintadjustment"]]],[11,"extend","","",299,[[["self"],["t"]]]],[11,"from_iter","","",299,[[["t"]],["constraintadjustment"]]],[11,"from_raw","","",299,[[["u32"]],["option",["constraintadjustment"]]]],[11,"to_raw","","",299,[[["self"]],["u32"]]],[11,"is_destructor","","",274,[[["self"]],["bool"]]],[11,"from_raw_c","","",274,N],[11,"as_raw_c_in","","",274,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",300,[[["self"]],["bool"]]],[11,"from_raw_c","","",300,N],[11,"as_raw_c_in","","",300,[[["self"],["f"]],["t"]]],[11,"c_interface","","",301,N],[11,"clone","wayland_protocols::xdg_shell::client::xdg_surface","",276,[[["self"]],["error"]]],[11,"fmt","","",276,[[["self"],["formatter"]],["result"]]],[11,"eq","","",276,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",276,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",276,[[["self"]],["u32"]]],[11,"is_destructor","","",277,[[["self"]],["bool"]]],[11,"from_raw_c","","",277,N],[11,"as_raw_c_in","","",277,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",278,[[["self"]],["bool"]]],[11,"from_raw_c","","",278,N],[11,"as_raw_c_in","","",278,[[["self"],["f"]],["t"]]],[11,"c_interface","","",302,N],[11,"clone","wayland_protocols::xdg_shell::client::xdg_toplevel","",280,[[["self"]],["resizeedge"]]],[11,"fmt","","",280,[[["self"],["formatter"]],["result"]]],[11,"eq","","",280,[[["self"],["resizeedge"]],["bool"]]],[11,"from_raw","","",280,[[["u32"]],["option",["resizeedge"]]]],[11,"to_raw","","",280,[[["self"]],["u32"]]],[11,"clone","","",281,[[["self"]],["state"]]],[11,"fmt","","",281,[[["self"],["formatter"]],["result"]]],[11,"eq","","",281,[[["self"],["state"]],["bool"]]],[11,"from_raw","","",281,[[["u32"]],["option",["state"]]]],[11,"to_raw","","",281,[[["self"]],["u32"]]],[11,"is_destructor","","",282,[[["self"]],["bool"]]],[11,"from_raw_c","","",282,N],[11,"as_raw_c_in","","",282,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",283,[[["self"]],["bool"]]],[11,"from_raw_c","","",283,N],[11,"as_raw_c_in","","",283,[[["self"],["f"]],["t"]]],[11,"c_interface","","",303,N],[11,"clone","wayland_protocols::xdg_shell::client::xdg_popup","",285,[[["self"]],["error"]]],[11,"fmt","","",285,[[["self"],["formatter"]],["result"]]],[11,"eq","","",285,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",285,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",285,[[["self"]],["u32"]]],[11,"is_destructor","","",286,[[["self"]],["bool"]]],[11,"from_raw_c","","",286,N],[11,"as_raw_c_in","","",286,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",287,[[["self"]],["bool"]]],[11,"from_raw_c","","",287,N],[11,"as_raw_c_in","","",287,[[["self"],["f"]],["t"]]],[11,"c_interface","","",304,N],[11,"clone","wayland_protocols::viewporter::client::wp_viewporter","",289,[[["self"]],["error"]]],[11,"fmt","","",289,[[["self"],["formatter"]],["result"]]],[11,"eq","","",289,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",289,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",289,[[["self"]],["u32"]]],[11,"is_destructor","","",290,[[["self"]],["bool"]]],[11,"from_raw_c","","",290,N],[11,"as_raw_c_in","","",290,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",305,[[["self"]],["bool"]]],[11,"from_raw_c","","",305,N],[11,"as_raw_c_in","","",305,[[["self"],["f"]],["t"]]],[11,"c_interface","","",306,N],[11,"clone","wayland_protocols::viewporter::client::wp_viewport","",292,[[["self"]],["error"]]],[11,"fmt","","",292,[[["self"],["formatter"]],["result"]]],[11,"eq","","",292,[[["self"],["error"]],["bool"]]],[11,"from_raw","","",292,[[["u32"]],["option",["error"]]]],[11,"to_raw","","",292,[[["self"]],["u32"]]],[11,"is_destructor","","",293,[[["self"]],["bool"]]],[11,"from_raw_c","","",293,N],[11,"as_raw_c_in","","",293,[[["self"],["f"]],["t"]]],[11,"is_destructor","","",307,[[["self"]],["bool"]]],[11,"from_raw_c","","",307,N],[11,"as_raw_c_in","","",307,[[["self"],["f"]],["t"]]],[11,"c_interface","","",308,N]],"paths":[[4,"Capability"],[4,"PresentMethod"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[3,"ZwpFullscreenShellV1"],[4,"Request"],[3,"ZwpFullscreenShellModeFeedbackV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Event"],[3,"ZwpIdleInhibitManagerV1"],[4,"Event"],[3,"ZwpIdleInhibitorV1"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[4,"Request"],[8,"RequestsTrait"],[4,"Position"],[4,"Request"],[8,"RequestsTrait"],[3,"ZwpInputMethodContextV1"],[4,"Request"],[3,"ZwpInputMethodV1"],[4,"Event"],[3,"ZwpInputPanelV1"],[4,"Event"],[3,"ZwpInputPanelSurfaceV1"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[3,"ZwpKeyboardShortcutsInhibitManagerV1"],[3,"ZwpKeyboardShortcutsInhibitorV1"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Flags"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[3,"ZwpLinuxDmabufV1"],[3,"ZwpLinuxBufferParamsV1"],[4,"Error"],[4,"Lifetime"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[3,"ZwpPointerConstraintsV1"],[3,"ZwpLockedPointerV1"],[3,"ZwpConfinedPointerV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[3,"ZwpPointerGesturesV1"],[3,"ZwpPointerGestureSwipeV1"],[3,"ZwpPointerGesturePinchV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[3,"ZwpRelativePointerManagerV1"],[3,"ZwpRelativePointerV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[3,"ZwpTabletManagerV1"],[3,"ZwpTabletSeatV1"],[3,"ZwpTabletToolV1"],[3,"ZwpTabletV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Source"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Source"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ButtonState"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[3,"ZwpTabletManagerV2"],[3,"ZwpTabletSeatV2"],[3,"ZwpTabletToolV2"],[3,"ZwpTabletV2"],[3,"ZwpTabletPadRingV2"],[3,"ZwpTabletPadStripV2"],[3,"ZwpTabletPadGroupV2"],[3,"ZwpTabletPadV2"],[4,"ContentHint"],[4,"ContentPurpose"],[4,"PreeditStyle"],[4,"TextDirection"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[3,"ZwpTextInputV1"],[4,"Event"],[3,"ZwpTextInputManagerV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Mode"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[3,"ZxdgDecorationManagerV1"],[3,"ZxdgToplevelDecorationV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[3,"ZxdgExporterV1"],[4,"Event"],[3,"ZxdgImporterV1"],[3,"ZxdgExportedV1"],[3,"ZxdgImportedV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[3,"ZxdgExporterV2"],[4,"Event"],[3,"ZxdgImporterV2"],[3,"ZxdgExportedV2"],[3,"ZxdgImportedV2"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[3,"ZxdgOutputManagerV1"],[3,"ZxdgOutputV1"],[4,"Version"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[3,"XdgShell"],[3,"XdgSurface"],[3,"XdgPopup"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[3,"ZxdgShellV6"],[3,"Anchor"],[3,"Gravity"],[3,"ConstraintAdjustment"],[4,"Event"],[3,"ZxdgPositionerV6"],[3,"ZxdgSurfaceV6"],[3,"ZxdgToplevelV6"],[3,"ZxdgPopupV6"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Event"],[3,"ZwpXwaylandKeyboardGrabManagerV1"],[4,"Event"],[3,"ZwpXwaylandKeyboardGrabV1"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Kind"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Anchor"],[4,"Gravity"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[3,"WpPresentation"],[4,"Request"],[3,"WpPresentationFeedback"],[3,"XdgWmBase"],[3,"ConstraintAdjustment"],[4,"Event"],[3,"XdgPositioner"],[3,"XdgSurface"],[3,"XdgToplevel"],[3,"XdgPopup"],[4,"Event"],[3,"WpViewporter"],[4,"Event"],[3,"WpViewport"]]};
searchIndex["wayland_sys"]={"doc":"FFI bindings to the wayland system libraries.","items":[[0,"common","wayland_sys","Various types and functions that are used by both the client and the server libraries.",N,N],[3,"wl_message","wayland_sys::common","",N,N],[12,"name","","",0,N],[12,"signature","","",0,N],[12,"types","","",0,N],[3,"wl_interface","","",N,N],[12,"name","","",1,N],[12,"version","","",1,N],[12,"request_count","","",1,N],[12,"requests","","",1,N],[12,"event_count","","",1,N],[12,"events","","",1,N],[3,"wl_list","","",N,N],[12,"prev","","",2,N],[12,"next","","",2,N],[3,"wl_array","","",N,N],[12,"size","","",3,N],[12,"alloc","","",3,N],[12,"data","","",3,N],[19,"wl_argument","","",N,N],[12,"i","","",4,N],[12,"u","","",4,N],[12,"f","","",4,N],[12,"s","","",4,N],[12,"o","","",4,N],[12,"n","","",4,N],[12,"a","","",4,N],[12,"h","","",4,N],[5,"wl_fixed_to_double","","",N,[[["wl_fixed_t"]],["f64"]]],[5,"wl_fixed_from_double","","",N,[[["f64"]],["wl_fixed_t"]]],[5,"wl_fixed_to_int","","",N,[[["wl_fixed_t"]],["i32"]]],[5,"wl_fixed_from_int","","",N,[[["i32"]],["wl_fixed_t"]]],[6,"wl_fixed_t","","",N,N],[6,"wl_dispatcher_func_t","","",N,N],[6,"wl_log_func_t","","",N,N],[0,"client","wayland_sys","Bindings to the client library `libwayland-client.so`",N,N],[3,"WaylandClient","wayland_sys::client","",N,N],[12,"wl_display_connect_to_fd","","",5,N],[12,"wl_display_connect","","",5,N],[12,"wl_display_disconnect","","",5,N],[12,"wl_display_get_fd","","",5,N],[12,"wl_display_roundtrip","","",5,N],[12,"wl_display_read_events","","",5,N],[12,"wl_display_prepare_read","","",5,N],[12,"wl_display_cancel_read","","",5,N],[12,"wl_display_dispatch","","",5,N],[12,"wl_display_dispatch_pending","","",5,N],[12,"wl_display_get_error","","",5,N],[12,"wl_display_get_protocol_error","","",5,N],[12,"wl_display_flush","","",5,N],[12,"wl_event_queue_destroy","","",5,N],[12,"wl_display_create_queue","","",5,N],[12,"wl_display_roundtrip_queue","","",5,N],[12,"wl_display_prepare_read_queue","","",5,N],[12,"wl_display_dispatch_queue","","",5,N],[12,"wl_display_dispatch_queue_pending","","",5,N],[12,"wl_proxy_create","","",5,N],[12,"wl_proxy_destroy","","",5,N],[12,"wl_proxy_add_listener","","",5,N],[12,"wl_proxy_get_listener","","",5,N],[12,"wl_proxy_add_dispatcher","","",5,N],[12,"wl_proxy_marshal_array_constructor","","",5,N],[12,"wl_proxy_marshal_array_constructor_versioned","","",5,N],[12,"wl_proxy_marshal_array","","",5,N],[12,"wl_proxy_set_user_data","","",5,N],[12,"wl_proxy_get_user_data","","",5,N],[12,"wl_proxy_get_id","","",5,N],[12,"wl_proxy_get_class","","",5,N],[12,"wl_proxy_set_queue","","",5,N],[12,"wl_proxy_get_version","","",5,N],[12,"wl_proxy_create_wrapper","","",5,N],[12,"wl_proxy_wrapper_destroy","","",5,N],[12,"wl_log_set_handler_client","","",5,N],[12,"wl_list_init","","",5,N],[12,"wl_list_insert","","",5,N],[12,"wl_list_remove","","",5,N],[12,"wl_list_length","","",5,N],[12,"wl_list_empty","","",5,N],[12,"wl_list_insert_list","","",5,N],[12,"wl_array_init","","",5,N],[12,"wl_array_release","","",5,N],[12,"wl_array_add","","",5,N],[12,"wl_array_copy","","",5,N],[12,"wl_proxy_marshal_constructor","","",5,N],[12,"wl_proxy_marshal_constructor_versioned","","",5,N],[12,"wl_proxy_marshal","","",5,N],[3,"WAYLAND_CLIENT_OPTION","","",N,N],[3,"WAYLAND_CLIENT_HANDLE","","",N,N],[4,"wl_proxy","","",N,N],[4,"wl_display","","",N,N],[4,"wl_event_queue","","",N,N],[5,"is_lib_available","","",N,[[],["bool"]]],[11,"open","","",5,[[["str"]],["result",["waylandclient","dlerror"]]]],[11,"deref","","",6,[[["self"]],["option"]]],[11,"initialize","","",6,[[["self"]]]],[11,"deref","","",7,[[["self"]],["waylandclient"]]],[11,"initialize","","",7,[[["self"]]]],[0,"egl","wayland_sys","Bindings to the EGL library `libwayland-egl.so`",N,N],[3,"WaylandEgl","wayland_sys::egl","",N,N],[12,"wl_egl_window_create","","",8,N],[12,"wl_egl_window_destroy","","",8,N],[12,"wl_egl_window_resize","","",8,N],[12,"wl_egl_window_get_attached_size","","",8,N],[3,"WAYLAND_EGL_OPTION","","",N,N],[3,"WAYLAND_EGL_HANDLE","","",N,N],[4,"wl_egl_window","","",N,N],[5,"is_lib_available","","",N,[[],["bool"]]],[11,"open","","",8,[[["str"]],["result",["waylandegl","dlerror"]]]],[11,"deref","","",9,[[["self"]],["option"]]],[11,"initialize","","",9,[[["self"]]]],[11,"deref","","",10,[[["self"]],["waylandegl"]]],[11,"initialize","","",10,[[["self"]]]],[0,"cursor","wayland_sys","Bindings to the `wayland-cursor.so` library",N,N],[3,"wl_cursor_image","wayland_sys::cursor","",N,N],[12,"width","","actual width",11,N],[12,"height","","actual height",11,N],[12,"hotspot_x","","hot spot x (must be inside image)",11,N],[12,"hotspot_y","","hot spot y (must be inside image)",11,N],[12,"delay","","animation delay to next frame",11,N],[3,"wl_cursor","","",N,N],[12,"image_count","","",12,N],[12,"images","","",12,N],[12,"name","","",12,N],[3,"WaylandCursor","","",N,N],[12,"wl_cursor_theme_load","","",13,N],[12,"wl_cursor_theme_destroy","","",13,N],[12,"wl_cursor_theme_get_cursor","","",13,N],[12,"wl_cursor_image_get_buffer","","",13,N],[12,"wl_cursor_frame","","",13,N],[12,"wl_cursor_frame_and_duration","","",13,N],[3,"WAYLAND_CURSOR_OPTION","","",N,N],[3,"WAYLAND_CURSOR_HANDLE","","",N,N],[4,"wl_cursor_theme","","",N,N],[5,"is_lib_available","","",N,[[],["bool"]]],[11,"open","","",13,[[["str"]],["result",["waylandcursor","dlerror"]]]],[11,"deref","","",14,[[["self"]],["option"]]],[11,"initialize","","",14,[[["self"]]]],[11,"deref","","",15,[[["self"]],["waylandcursor"]]],[11,"initialize","","",15,[[["self"]]]],[7,"RUST_MANAGED","wayland_sys","Magic pointer for wayland objects managed by wayland-client or wayland-server",N,N],[14,"ffi_dispatch","","",N,N]],"paths":[[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[3,"WaylandClient"],[3,"WAYLAND_CLIENT_OPTION"],[3,"WAYLAND_CLIENT_HANDLE"],[3,"WaylandEgl"],[3,"WAYLAND_EGL_OPTION"],[3,"WAYLAND_EGL_HANDLE"],[3,"wl_cursor_image"],[3,"wl_cursor"],[3,"WaylandCursor"],[3,"WAYLAND_CURSOR_OPTION"],[3,"WAYLAND_CURSOR_HANDLE"]]};
searchIndex["window"]={"doc":"Window storage and interfacing traits.","items":[[3,"NoWindow","window","A window without user interface, often used in server event loops.",N,N],[3,"Size","","Structure to store the window size.",N,N],[12,"width","","The width.",0,N],[12,"height","","The height.",0,N],[3,"Position","","Structure to store the window position.",N,N],[12,"x","","The x coordinate.",1,N],[12,"y","","The y coordinate.",1,N],[3,"WindowSettings","","Settings structure for window behavior.",N,N],[11,"new","","Creates a new `NoWindow`.",2,[[["windowsettings"]],["nowindow"]]],[11,"should_close","","",2,[[["self"]],["bool"]]],[11,"set_should_close","","",2,[[["self"],["bool"]]]],[11,"size","","",2,[[["self"]],["size"]]],[11,"swap_buffers","","",2,[[["self"]]]],[11,"wait_event","","",2,[[["self"]],["input"]]],[11,"wait_event_timeout","","",2,[[["self"],["duration"]],["option",["input"]]]],[11,"poll_event","","",2,[[["self"]],["option",["input"]]]],[11,"draw_size","","",2,[[["self"]],["size"]]],[11,"build_from_window_settings","","Errors",2,[[["windowsettings"]],["result",["string"]]]],[11,"get_title","","",2,[[["self"]],["string"]]],[11,"set_title","","",2,[[["self"],["string"]]]],[11,"get_exit_on_esc","","",2,[[["self"]],["bool"]]],[11,"set_exit_on_esc","","",2,[[["self"],["bool"]]]],[11,"set_capture_cursor","","",2,[[["self"],["bool"]]]],[11,"show","","",2,[[["self"]]]],[11,"hide","","",2,[[["self"]]]],[11,"get_position","","",2,[[["self"]],["option",["position"]]]],[11,"set_position","","",2,[[["self"],["p"]]]],[11,"set_size","","",2,[[["self"],["s"]]]],[6,"ProcAddress","","The type of an OpenGL function address.",N,N],[8,"BuildFromWindowSettings","","Constructs a window from a `WindowSettings` object.",N,N],[10,"build_from_window_settings","","Builds the window from a `WindowSettings` object.",3,[[["windowsettings"]],["result",["string"]]]],[8,"Window","","Trait representing the minimum requirements for defining a window.",N,N],[10,"set_should_close","","Tells the window to close or stay open.",4,[[["self"],["bool"]]]],[10,"should_close","","Returns true if the window should close.",4,[[["self"]],["bool"]]],[10,"size","","Gets the size of the window.",4,[[["self"]],["size"]]],[10,"swap_buffers","","Swaps render buffers.",4,[[["self"]]]],[10,"wait_event","","Wait indefinitely for an input event to be available from the window.",4,[[["self"]],["input"]]],[10,"wait_event_timeout","","Wait for an input event to be available from the window or for the specified timeout to be reached.",4,[[["self"],["duration"]],["option",["input"]]]],[10,"poll_event","","Polls an input event from the window.",4,[[["self"]],["option",["input"]]]],[10,"draw_size","","Gets the draw size of the window.",4,[[["self"]],["size"]]],[8,"AdvancedWindow","","Trait representing a window with the most features that are still generic.",N,N],[10,"get_title","","Gets a copy of the title of the window.",5,[[["self"]],["string"]]],[10,"set_title","","Sets the title of the window.",5,[[["self"],["string"]]]],[11,"title","","Sets title on window.",5,[[["self"],["string"]],["self"]]],[10,"get_exit_on_esc","","Gets whether to exit when pressing esc.",5,[[["self"]],["bool"]]],[10,"set_exit_on_esc","","Sets whether to exit when pressing esc.",5,[[["self"],["bool"]]]],[11,"exit_on_esc","","Sets whether to exit when pressing the Esc button.",5,[[["self"],["bool"]],["self"]]],[10,"set_capture_cursor","","Sets whether to capture/grab the cursor.",5,[[["self"],["bool"]]]],[11,"capture_cursor","","Sets whether to capture/grab the cursor.",5,[[["self"],["bool"]],["self"]]],[10,"show","","Shows the window.",5,[[["self"]]]],[10,"hide","","Hides the window.",5,[[["self"]]]],[10,"get_position","","Gets the position of window.",5,[[["self"]],["option",["position"]]]],[10,"set_position","","Sets the position of window.",5,[[["self"],["p"]]]],[10,"set_size","","Sets the window size.",5,[[["self"],["s"]]]],[11,"position","","Sets the position of window.",5,[[["self"],["p"]],["self"]]],[8,"OpenGLWindow","","Trait for OpenGL specific operations on a window.",N,N],[10,"get_proc_address","","Returns the address of the specified OpenGL function if it exists.",6,[[["self"],["str"]],["procaddress"]]],[10,"is_current","","Returns true if this window's gl context is the current gl context.",6,[[["self"]],["bool"]]],[10,"make_current","","Make the window's gl context the current gl context.",6,[[["self"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["size"]]],[11,"eq","","",0,[[["self"],["size"]],["bool"]]],[11,"ne","","",0,[[["self"],["size"]],["bool"]]],[11,"from","","",0,N],[11,"from","","",0,N],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["position"]]],[11,"eq","","",1,[[["self"],["position"]],["bool"]]],[11,"ne","","",1,[[["self"],["position"]],["bool"]]],[11,"from","","",1,N],[11,"from","","",1,N],[11,"clone","","",7,[[["self"]],["windowsettings"]]],[11,"new","","Creates window settings with defaults.",7,[[["t"],["s"]],["windowsettings"]]],[11,"build","","Builds window from the given settings.",7,[[["self"]],["result",["string"]]]],[11,"get_title","","Gets the title of built windows.",7,[[["self"]],["string"]]],[11,"set_title","","Sets the title of built windows.",7,[[["self"],["string"]]]],[11,"title","","Sets the title of built windows.",7,[[["self"],["string"]],["self"]]],[11,"get_size","","Gets the size of built windows.",7,[[["self"]],["size"]]],[11,"set_size","","Sets the size of built windows.",7,[[["self"],["size"]]]],[11,"size","","Sets the size of built windows.",7,[[["self"],["size"]],["self"]]],[11,"get_fullscreen","","Gets whether built windows will be fullscreen.",7,[[["self"]],["bool"]]],[11,"set_fullscreen","","Sets whether built windows will be fullscreen.",7,[[["self"],["bool"]]]],[11,"fullscreen","","Sets whether built windows will be fullscreen.",7,[[["self"],["bool"]],["self"]]],[11,"get_exit_on_esc","","Gets whether built windows should exit when the Esc key is pressed.",7,[[["self"]],["bool"]]],[11,"set_exit_on_esc","","Sets whether built windows should exit when the Esc key is pressed.",7,[[["self"],["bool"]]]],[11,"exit_on_esc","","Sets whether built windows should exit when the Esc key is pressed.",7,[[["self"],["bool"]],["self"]]],[11,"get_samples","","Gets the number of samples to use for anti-aliasing.",7,[[["self"]],["u8"]]],[11,"set_samples","","Sets the number of samples to use for anti-aliasing.",7,[[["self"],["u8"]]]],[11,"samples","","Sets the number of samples to use for anti-aliasing.",7,[[["self"],["u8"]],["self"]]],[11,"get_vsync","","Gets whether built windows should use vsync.",7,[[["self"]],["bool"]]],[11,"set_vsync","","Sets whether built windows should use vsync.",7,[[["self"],["bool"]]]],[11,"vsync","","Sets whether built windows should use vsync.",7,[[["self"],["bool"]],["self"]]],[11,"get_maybe_opengl","","Gets the OpenGL version of built windows.",7,[[["self"]],["option",["opengl"]]]],[11,"set_maybe_opengl","","Sets OpenGL version of built windows.",7,[[["self"],["option",["opengl"]]]]],[11,"maybe_opengl","","Sets OpenGL version of built windows.",7,[[["self"],["option",["opengl"]]],["self"]]],[11,"set_opengl","","Sets OpenGL version of built windows.",7,[[["self"],["opengl"]]]],[11,"opengl","","Sets the OpenGL version of built windows.",7,[[["self"],["opengl"]],["self"]]],[11,"get_srgb","","Gets whether built windows should use hardware accelerated color conversion.",7,[[["self"]],["bool"]]],[11,"set_srgb","","Sets whether built windows should use hardware accelerated color conversion.",7,[[["self"],["bool"]]]],[11,"srgb","","Sets whether built windows should use hardware accelerated color conversion.",7,[[["self"],["bool"]],["self"]]],[11,"get_resizable","","Gets whether built windows should be resizable.",7,[[["self"]],["bool"]]],[11,"set_resizable","","Sets whether built windows should be resizable.",7,[[["self"],["bool"]]]],[11,"resizable","","Sets whether built windows should be resizable.",7,[[["self"],["bool"]],["self"]]],[11,"get_decorated","","Gets whether built windows should be decorated.",7,[[["self"]],["bool"]]],[11,"set_decorated","","Sets whether built windows should be decorated.",7,[[["self"],["bool"]]]],[11,"decorated","","Sets whether built windows should be decorated.",7,[[["self"],["bool"]],["self"]]],[11,"get_controllers","","Gets whether built windows should listen to controller input.",7,[[["self"]],["bool"]]],[11,"set_controllers","","Sets whether built windows should listen to controller input.",7,[[["self"],["bool"]]]],[11,"controllers","","Sets whether build windows should listen to controller input.",7,[[["self"],["bool"]],["self"]]]],"paths":[[3,"Size"],[3,"Position"],[3,"NoWindow"],[8,"BuildFromWindowSettings"],[8,"Window"],[8,"AdvancedWindow"],[8,"OpenGLWindow"],[3,"WindowSettings"]]};
searchIndex["winit"]={"doc":"Winit allows you to build a window on as many platforms as possible.","items":[[3,"KeyboardInput","winit","Describes a keyboard input event.",N,N],[12,"scancode","","Identifies the physical key pressed",0,N],[12,"state","","",0,N],[12,"virtual_keycode","","Identifies the semantic meaning of the key",0,N],[12,"modifiers","","Modifier keys active at the time of this input.",0,N],[3,"Touch","","Represents touch event",N,N],[12,"device_id","","",1,N],[12,"phase","","",1,N],[12,"location","","",1,N],[12,"id","","unique identifier of a finger.",1,N],[3,"ModifiersState","","Represents the current state of the keyboard modifiers",N,N],[12,"shift","","The \"shift\" key",2,N],[12,"ctrl","","The \"control\" key",2,N],[12,"alt","","The \"alt\" key",2,N],[12,"logo","","The \"logo\" key",2,N],[3,"AvailableMonitorsIter","","An iterator for the list of available monitors.",N,N],[3,"MonitorId","","Identifier for a monitor.",N,N],[3,"Icon","","An icon used for the window titlebar, taskbar, etc.",N,N],[3,"Window","","Represents a window.",N,N],[3,"WindowId","","Identifier of a window. Unique for each window.",N,N],[3,"DeviceId","","Identifier of an input device.",N,N],[3,"EventsLoop","","Provides a way to retrieve events from the system and from the windows that were registered to the events loop.",N,N],[3,"EventsLoopProxy","","Used to wake up the `EventsLoop` from another thread.",N,N],[3,"EventsLoopClosed","","The error that is returned when an `EventsLoopProxy` attempts to wake up an `EventsLoop` that no longer exists.",N,N],[3,"WindowBuilder","","Object that allows you to build windows.",N,N],[12,"window","","The attributes to use to create the window.",3,N],[3,"WindowAttributes","","Attributes to use when creating a window.",N,N],[12,"dimensions","","The dimensions of the window. If this is `None`, some platform-specific dimensions will be used.",4,N],[12,"min_dimensions","","The minimum dimensions a window can be, If this is `None`, the window will have no minimum dimensions (aside from reserved).",4,N],[12,"max_dimensions","","The maximum dimensions a window can be, If this is `None`, the maximum will have no maximum or will be set to the primary monitor's dimensions by the platform.",4,N],[12,"resizable","","Whether the window is resizable or not.",4,N],[12,"fullscreen","","Whether the window should be set as fullscreen upon creation.",4,N],[12,"title","","The title of the window in the title bar.",4,N],[12,"maximized","","Whether the window should be maximized upon creation.",4,N],[12,"visible","","Whether the window should be immediately visible upon creation.",4,N],[12,"transparent","","Whether the the window should be transparent. If this is true, writing colors with alpha values different than `1.0` will produce a transparent window.",4,N],[12,"decorations","","Whether the window should have borders and bars.",4,N],[12,"always_on_top","","Whether the window should always be on top of other windows.",4,N],[12,"window_icon","","The window icon.",4,N],[12,"multitouch","","[iOS only] Enable multitouch, see multipleTouchEnabled",4,N],[4,"Event","","Describes a generic event.",N,N],[13,"WindowEvent","","",5,N],[12,"window_id","winit::Event","",5,N],[12,"event","","",5,N],[13,"DeviceEvent","winit","",5,N],[12,"device_id","winit::Event","",5,N],[12,"event","","",5,N],[13,"Awakened","winit","",5,N],[13,"Suspended","","The application has been suspended or resumed.",5,N],[4,"WindowEvent","","Describes an event from a `Window`.",N,N],[13,"Resized","","The size of the window has changed. Contains the client area's new dimensions.",6,N],[13,"Moved","","The position of the window has changed. Contains the window's new position.",6,N],[13,"CloseRequested","","The window has been requested to close.",6,N],[13,"Destroyed","","The window has been destroyed.",6,N],[13,"DroppedFile","","A file has been dropped into the window.",6,N],[13,"HoveredFile","","A file is being hovered over the window.",6,N],[13,"HoveredFileCancelled","","A file was hovered, but has exited the window.",6,N],[13,"ReceivedCharacter","","The window received a unicode character.",6,N],[13,"Focused","","The window gained or lost focus.",6,N],[13,"KeyboardInput","","An event from the keyboard has been received.",6,N],[12,"device_id","winit::WindowEvent","",6,N],[12,"input","","",6,N],[13,"CursorMoved","winit","The cursor has moved on the window.",6,N],[12,"device_id","winit::WindowEvent","",6,N],[12,"position","","(x,y) coords in pixels relative to the top-left corner of the window. Because the range of this data is limited by the display area and it may have been transformed by the OS to implement effects such as cursor acceleration, it should not be used to implement non-cursor-like interactions such as 3D camera control.",6,N],[12,"modifiers","","",6,N],[13,"CursorEntered","winit","The cursor has entered the window.",6,N],[12,"device_id","winit::WindowEvent","",6,N],[13,"CursorLeft","winit","The cursor has left the window.",6,N],[12,"device_id","winit::WindowEvent","",6,N],[13,"MouseWheel","winit","A mouse wheel movement or touchpad scroll occurred.",6,N],[12,"device_id","winit::WindowEvent","",6,N],[12,"delta","","",6,N],[12,"phase","","",6,N],[12,"modifiers","","",6,N],[13,"MouseInput","winit","An mouse button press has been received.",6,N],[12,"device_id","winit::WindowEvent","",6,N],[12,"state","","",6,N],[12,"button","","",6,N],[12,"modifiers","","",6,N],[13,"TouchpadPressure","winit","Touchpad pressure event.",6,N],[12,"device_id","winit::WindowEvent","",6,N],[12,"pressure","","",6,N],[12,"stage","","",6,N],[13,"AxisMotion","winit","Motion on some analog axis. May report data redundant to other, more specific events.",6,N],[12,"device_id","winit::WindowEvent","",6,N],[12,"axis","","",6,N],[12,"value","","",6,N],[13,"Refresh","winit","The window needs to be redrawn.",6,N],[13,"Touch","","Touch event has been received",6,N],[13,"HiDpiFactorChanged","","The DPI factor of the window has changed.",6,N],[4,"DeviceEvent","","Represents raw hardware events that are not associated with any particular window.",N,N],[13,"Added","","",7,N],[13,"Removed","","",7,N],[13,"MouseMotion","","Change in physical position of a pointing device.",7,N],[12,"delta","winit::DeviceEvent","(x, y) change in position in unspecified units.",7,N],[13,"MouseWheel","winit","Physical scroll event",7,N],[12,"delta","winit::DeviceEvent","",7,N],[13,"Motion","winit","Motion on some analog axis.  This event will be reported for all arbitrary input devices that winit supports on this platform, including mouse devices.  If the device is a mouse device then this will be reported alongside the MouseMotion event.",7,N],[12,"axis","winit::DeviceEvent","",7,N],[12,"value","","",7,N],[13,"Button","winit","",7,N],[12,"button","winit::DeviceEvent","",7,N],[12,"state","","",7,N],[13,"Key","winit","",7,N],[13,"Text","","",7,N],[12,"codepoint","winit::DeviceEvent","",7,N],[4,"TouchPhase","winit","Describes touch-screen input state.",N,N],[13,"Started","","",8,N],[13,"Moved","","",8,N],[13,"Ended","","",8,N],[13,"Cancelled","","",8,N],[4,"ElementState","","Describes the input state of a key.",N,N],[13,"Pressed","","",9,N],[13,"Released","","",9,N],[4,"MouseButton","","Describes a button of a mouse controller.",N,N],[13,"Left","","",10,N],[13,"Right","","",10,N],[13,"Middle","","",10,N],[13,"Other","","",10,N],[4,"MouseScrollDelta","","Describes a difference in the mouse scroll wheel state.",N,N],[13,"LineDelta","","Amount in lines or rows to scroll in the horizontal and vertical directions.",11,N],[13,"PixelDelta","","Amount in pixels to scroll in the horizontal and vertical direction.",11,N],[4,"VirtualKeyCode","","Symbolic name for a keyboard key.",N,N],[13,"Key1","","The '1' key over the letters.",12,N],[13,"Key2","","The '2' key over the letters.",12,N],[13,"Key3","","The '3' key over the letters.",12,N],[13,"Key4","","The '4' key over the letters.",12,N],[13,"Key5","","The '5' key over the letters.",12,N],[13,"Key6","","The '6' key over the letters.",12,N],[13,"Key7","","The '7' key over the letters.",12,N],[13,"Key8","","The '8' key over the letters.",12,N],[13,"Key9","","The '9' key over the letters.",12,N],[13,"Key0","","The '0' key over the 'O' and 'P' keys.",12,N],[13,"A","","",12,N],[13,"B","","",12,N],[13,"C","","",12,N],[13,"D","","",12,N],[13,"E","","",12,N],[13,"F","","",12,N],[13,"G","","",12,N],[13,"H","","",12,N],[13,"I","","",12,N],[13,"J","","",12,N],[13,"K","","",12,N],[13,"L","","",12,N],[13,"M","","",12,N],[13,"N","","",12,N],[13,"O","","",12,N],[13,"P","","",12,N],[13,"Q","","",12,N],[13,"R","","",12,N],[13,"S","","",12,N],[13,"T","","",12,N],[13,"U","","",12,N],[13,"V","","",12,N],[13,"W","","",12,N],[13,"X","","",12,N],[13,"Y","","",12,N],[13,"Z","","",12,N],[13,"Escape","","The Escape key, next to F1.",12,N],[13,"F1","","",12,N],[13,"F2","","",12,N],[13,"F3","","",12,N],[13,"F4","","",12,N],[13,"F5","","",12,N],[13,"F6","","",12,N],[13,"F7","","",12,N],[13,"F8","","",12,N],[13,"F9","","",12,N],[13,"F10","","",12,N],[13,"F11","","",12,N],[13,"F12","","",12,N],[13,"F13","","",12,N],[13,"F14","","",12,N],[13,"F15","","",12,N],[13,"Snapshot","","Print Screen/SysRq.",12,N],[13,"Scroll","","Scroll Lock.",12,N],[13,"Pause","","Pause/Break key, next to Scroll lock.",12,N],[13,"Insert","","`Insert`, next to Backspace.",12,N],[13,"Home","","",12,N],[13,"Delete","","",12,N],[13,"End","","",12,N],[13,"PageDown","","",12,N],[13,"PageUp","","",12,N],[13,"Left","","",12,N],[13,"Up","","",12,N],[13,"Right","","",12,N],[13,"Down","","",12,N],[13,"Back","","The Backspace key, right over Enter.",12,N],[13,"Return","","The Enter key.",12,N],[13,"Space","","The space bar.",12,N],[13,"Compose","","The \"Compose\" key on Linux.",12,N],[13,"Caret","","",12,N],[13,"Numlock","","",12,N],[13,"Numpad0","","",12,N],[13,"Numpad1","","",12,N],[13,"Numpad2","","",12,N],[13,"Numpad3","","",12,N],[13,"Numpad4","","",12,N],[13,"Numpad5","","",12,N],[13,"Numpad6","","",12,N],[13,"Numpad7","","",12,N],[13,"Numpad8","","",12,N],[13,"Numpad9","","",12,N],[13,"AbntC1","","",12,N],[13,"AbntC2","","",12,N],[13,"Add","","",12,N],[13,"Apostrophe","","",12,N],[13,"Apps","","",12,N],[13,"At","","",12,N],[13,"Ax","","",12,N],[13,"Backslash","","",12,N],[13,"Calculator","","",12,N],[13,"Capital","","",12,N],[13,"Colon","","",12,N],[13,"Comma","","",12,N],[13,"Convert","","",12,N],[13,"Decimal","","",12,N],[13,"Divide","","",12,N],[13,"Equals","","",12,N],[13,"Grave","","",12,N],[13,"Kana","","",12,N],[13,"Kanji","","",12,N],[13,"LAlt","","",12,N],[13,"LBracket","","",12,N],[13,"LControl","","",12,N],[13,"LShift","","",12,N],[13,"LWin","","",12,N],[13,"Mail","","",12,N],[13,"MediaSelect","","",12,N],[13,"MediaStop","","",12,N],[13,"Minus","","",12,N],[13,"Multiply","","",12,N],[13,"Mute","","",12,N],[13,"MyComputer","","",12,N],[13,"NavigateForward","","",12,N],[13,"NavigateBackward","","",12,N],[13,"NextTrack","","",12,N],[13,"NoConvert","","",12,N],[13,"NumpadComma","","",12,N],[13,"NumpadEnter","","",12,N],[13,"NumpadEquals","","",12,N],[13,"OEM102","","",12,N],[13,"Period","","",12,N],[13,"PlayPause","","",12,N],[13,"Power","","",12,N],[13,"PrevTrack","","",12,N],[13,"RAlt","","",12,N],[13,"RBracket","","",12,N],[13,"RControl","","",12,N],[13,"RShift","","",12,N],[13,"RWin","","",12,N],[13,"Semicolon","","",12,N],[13,"Slash","","",12,N],[13,"Sleep","","",12,N],[13,"Stop","","",12,N],[13,"Subtract","","",12,N],[13,"Sysrq","","",12,N],[13,"Tab","","",12,N],[13,"Underline","","",12,N],[13,"Unlabeled","","",12,N],[13,"VolumeDown","","",12,N],[13,"VolumeUp","","",12,N],[13,"Wake","","",12,N],[13,"WebBack","","",12,N],[13,"WebFavorites","","",12,N],[13,"WebForward","","",12,N],[13,"WebHome","","",12,N],[13,"WebRefresh","","",12,N],[13,"WebSearch","","",12,N],[13,"WebStop","","",12,N],[13,"Yen","","",12,N],[13,"Copy","","",12,N],[13,"Paste","","",12,N],[13,"Cut","","",12,N],[4,"BadIcon","","An error produced when using `Icon::from_rgba` with invalid arguments.",N,N],[13,"ByteCountNotDivisibleBy4","","Produced when the length of the `rgba` argument isn't divisible by 4, thus `rgba` can't be safely interpreted as 32bpp RGBA pixels.",13,N],[12,"byte_count","winit::BadIcon","",13,N],[13,"DimensionsVsPixelCount","winit","Produced when the number of pixels (`rgba.len() / 4`) isn't equal to `width * height`. At least one of your arguments is incorrect.",13,N],[12,"width","winit::BadIcon","",13,N],[12,"height","","",13,N],[12,"width_x_height","","",13,N],[12,"pixel_count","","",13,N],[4,"ControlFlow","winit","Returned by the user callback given to the `EventsLoop::run_forever` method.",N,N],[13,"Continue","","Continue looping and waiting for events.",14,N],[13,"Break","","Break from the event loop.",14,N],[4,"CreationError","","Error that can happen while creating a window or a headless renderer.",N,N],[13,"OsError","","",15,N],[13,"NotSupported","","TODO: remove this error",15,N],[4,"MouseCursor","","Describes the appearance of the mouse cursor.",N,N],[13,"Default","","The platform-dependent default cursor.",16,N],[13,"Crosshair","","A simple crosshair.",16,N],[13,"Hand","","A hand (often used to indicate links in web browsers).",16,N],[13,"Arrow","","Self explanatory.",16,N],[13,"Move","","Indicates something is to be moved.",16,N],[13,"Text","","Indicates text that may be selected or edited.",16,N],[13,"Wait","","Program busy indicator.",16,N],[13,"Help","","Help indicator (often rendered as a \"?\")",16,N],[13,"Progress","","Progress indicator. Shows that processing is being done. But in contrast with \"Wait\" the user may still interact with the program. Often rendered as a spinning beach ball, or an arrow with a watch or hourglass.",16,N],[13,"NotAllowed","","Cursor showing that something cannot be done.",16,N],[13,"ContextMenu","","",16,N],[13,"Cell","","",16,N],[13,"VerticalText","","",16,N],[13,"Alias","","",16,N],[13,"Copy","","",16,N],[13,"NoDrop","","",16,N],[13,"Grab","","",16,N],[13,"Grabbing","","",16,N],[13,"AllScroll","","",16,N],[13,"ZoomIn","","",16,N],[13,"ZoomOut","","",16,N],[13,"EResize","","Indicate that some edge is to be moved. For example, the 'SeResize' cursor is used when the movement starts from the south-east corner of the box.",16,N],[13,"NResize","","",16,N],[13,"NeResize","","",16,N],[13,"NwResize","","",16,N],[13,"SResize","","",16,N],[13,"SeResize","","",16,N],[13,"SwResize","","",16,N],[13,"WResize","","",16,N],[13,"EwResize","","",16,N],[13,"NsResize","","",16,N],[13,"NeswResize","","",16,N],[13,"NwseResize","","",16,N],[13,"ColResize","","",16,N],[13,"RowResize","","",16,N],[0,"dpi","","DPI is important, so read the docs for this module if you don't want to be confused.",N,N],[3,"LogicalPosition","winit::dpi","A position represented in logical pixels.",N,N],[12,"x","","",17,N],[12,"y","","",17,N],[3,"PhysicalPosition","","A position represented in physical pixels.",N,N],[12,"x","","",18,N],[12,"y","","",18,N],[3,"LogicalSize","","A size represented in logical pixels.",N,N],[12,"width","","",19,N],[12,"height","","",19,N],[3,"PhysicalSize","","A size represented in physical pixels.",N,N],[12,"width","","",20,N],[12,"height","","",20,N],[5,"validate_hidpi_factor","","Checks that the DPI factor is a normal positive `f64`.",N,[[["f64"]],["bool"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"clone","","",17,[[["self"]],["logicalposition"]]],[11,"eq","","",17,[[["self"],["logicalposition"]],["bool"]]],[11,"ne","","",17,[[["self"],["logicalposition"]],["bool"]]],[11,"new","","",17,[[["f64"],["f64"]],["self"]]],[11,"from_physical","","",17,[[["t"],["f64"]],["self"]]],[11,"to_physical","","",17,[[["self"],["f64"]],["physicalposition"]]],[11,"from","","",17,N],[11,"from","","",17,N],[11,"into","","",17,N],[11,"into","","Note that this rounds instead of truncating.",17,N],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"clone","","",18,[[["self"]],["physicalposition"]]],[11,"eq","","",18,[[["self"],["physicalposition"]],["bool"]]],[11,"ne","","",18,[[["self"],["physicalposition"]],["bool"]]],[11,"new","","",18,[[["f64"],["f64"]],["self"]]],[11,"from_logical","","",18,[[["t"],["f64"]],["self"]]],[11,"to_logical","","",18,[[["self"],["f64"]],["logicalposition"]]],[11,"from","","",18,N],[11,"from","","",18,N],[11,"into","","",18,N],[11,"into","","Note that this rounds instead of truncating.",18,N],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"clone","","",19,[[["self"]],["logicalsize"]]],[11,"eq","","",19,[[["self"],["logicalsize"]],["bool"]]],[11,"ne","","",19,[[["self"],["logicalsize"]],["bool"]]],[11,"new","","",19,[[["f64"],["f64"]],["self"]]],[11,"from_physical","","",19,[[["t"],["f64"]],["self"]]],[11,"to_physical","","",19,[[["self"],["f64"]],["physicalsize"]]],[11,"from","","",19,N],[11,"from","","",19,N],[11,"into","","",19,N],[11,"into","","Note that this rounds instead of truncating.",19,N],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"clone","","",20,[[["self"]],["physicalsize"]]],[11,"eq","","",20,[[["self"],["physicalsize"]],["bool"]]],[11,"ne","","",20,[[["self"],["physicalsize"]],["bool"]]],[11,"new","","",20,[[["f64"],["f64"]],["self"]]],[11,"from_logical","","",20,[[["t"],["f64"]],["self"]]],[11,"to_logical","","",20,[[["self"],["f64"]],["logicalsize"]]],[11,"from","","",20,N],[11,"from","","",20,N],[11,"into","","",20,N],[11,"into","","Note that this rounds instead of truncating.",20,N],[11,"clone","winit","",5,[[["self"]],["event"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"clone","","",6,[[["self"]],["windowevent"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"clone","","",7,[[["self"]],["deviceevent"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"clone","","",0,[[["self"]],["keyboardinput"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"hash","","",8,N],[11,"eq","","",8,[[["self"],["touchphase"]],["bool"]]],[11,"clone","","",8,[[["self"]],["touchphase"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"clone","","",1,[[["self"]],["touch"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"hash","","",9,N],[11,"eq","","",9,[[["self"],["elementstate"]],["bool"]]],[11,"clone","","",9,[[["self"]],["elementstate"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"hash","","",10,N],[11,"eq","","",10,[[["self"],["mousebutton"]],["bool"]]],[11,"ne","","",10,[[["self"],["mousebutton"]],["bool"]]],[11,"clone","","",10,[[["self"]],["mousebutton"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"clone","","",11,[[["self"]],["mousescrolldelta"]]],[11,"eq","","",11,[[["self"],["mousescrolldelta"]],["bool"]]],[11,"ne","","",11,[[["self"],["mousescrolldelta"]],["bool"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"hash","","",12,N],[11,"eq","","",12,[[["self"],["virtualkeycode"]],["bool"]]],[11,"clone","","",12,[[["self"]],["virtualkeycode"]]],[11,"default","","",2,[[],["modifiersstate"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"hash","","",2,N],[11,"eq","","",2,[[["self"],["modifiersstate"]],["bool"]]],[11,"ne","","",2,[[["self"],["modifiersstate"]],["bool"]]],[11,"clone","","",2,[[["self"]],["modifiersstate"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"clone","","",13,[[["self"]],["badicon"]]],[11,"eq","","",13,[[["self"],["badicon"]],["bool"]]],[11,"ne","","",13,[[["self"],["badicon"]],["bool"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"description","","",13,[[["self"]],["str"]]],[11,"cause","","",13,[[["self"]],["option",["error"]]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"clone","","",21,[[["self"]],["icon"]]],[11,"eq","","",21,[[["self"],["icon"]],["bool"]]],[11,"ne","","",21,[[["self"],["icon"]],["bool"]]],[11,"from_rgba","","Creates an `Icon` from 32bpp RGBA data.",21,[[["vec",["u8"]],["u32"],["u32"]],["result",["badicon"]]]],[11,"from","","",2,[[["modifiersstate"]],["modifiersstate"]]],[11,"from","","",2,[[["ximodifierstate"]],["self"]]],[11,"new","","Initializes a new `WindowBuilder` with default values.",3,[[],["windowbuilder"]]],[11,"with_dimensions","","Requests the window to be of specific dimensions.",3,[[["self"],["logicalsize"]],["windowbuilder"]]],[11,"with_min_dimensions","","Sets a minimum dimension size for the window",3,[[["self"],["logicalsize"]],["windowbuilder"]]],[11,"with_max_dimensions","","Sets a maximum dimension size for the window",3,[[["self"],["logicalsize"]],["windowbuilder"]]],[11,"with_resizable","","Sets whether the window is resizable or not",3,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_title","","Requests a specific title for the window.",3,[[["self"],["t"]],["windowbuilder"]]],[11,"with_fullscreen","","Sets the window fullscreen state. None means a normal window, Some(MonitorId) means a fullscreen window on that specific monitor",3,[[["self"],["option",["monitorid"]]],["windowbuilder"]]],[11,"with_maximized","","Requests maximized mode.",3,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_visibility","","Sets whether the window will be initially hidden or visible.",3,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_transparency","","Sets whether the background of the window should be transparent.",3,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_decorations","","Sets whether the window should have a border, a title bar, etc.",3,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_always_on_top","","Sets whether or not the window will always be on top of other windows.",3,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_window_icon","","Sets the window icon. On Windows and X11, this is typically the small icon in the top-left corner of the titlebar.",3,[[["self"],["option",["icon"]]],["windowbuilder"]]],[11,"with_multitouch","","Enables multitouch.",3,[[["self"]],["windowbuilder"]]],[11,"build","","Builds the window.",3,[[["self"],["eventsloop"]],["result",["window","creationerror"]]]],[11,"new","","Creates a new Window for platforms where this is appropriate.",22,[[["eventsloop"]],["result",["window","creationerror"]]]],[11,"set_title","","Modifies the title of the window.",22,[[["self"],["str"]]]],[11,"show","","Shows the window if it was hidden.",22,[[["self"]]]],[11,"hide","","Hides the window if it was visible.",22,[[["self"]]]],[11,"get_position","","Returns the position of the top-left hand corner of the window relative to the  top-left hand corner of the desktop.",22,[[["self"]],["option",["logicalposition"]]]],[11,"get_inner_position","","Returns the position of the top-left hand corner of the window's client area relative to the top-left hand corner of the desktop.",22,[[["self"]],["option",["logicalposition"]]]],[11,"set_position","","Modifies the position of the window.",22,[[["self"],["logicalposition"]]]],[11,"get_inner_size","","Returns the logical size of the window's client area.",22,[[["self"]],["option",["logicalsize"]]]],[11,"get_outer_size","","Returns the logical size of the entire window.",22,[[["self"]],["option",["logicalsize"]]]],[11,"set_inner_size","","Modifies the inner size of the window.",22,[[["self"],["logicalsize"]]]],[11,"set_min_dimensions","","Sets a minimum dimension size for the window.",22,[[["self"],["option",["logicalsize"]]]]],[11,"set_max_dimensions","","Sets a maximum dimension size for the window.",22,[[["self"],["option",["logicalsize"]]]]],[11,"set_resizable","","Sets whether the window is resizable or not.",22,[[["self"],["bool"]]]],[11,"get_hidpi_factor","","Returns the DPI factor that can be used to map logical pixels to physical pixels, and vice versa.",22,[[["self"]],["f64"]]],[11,"set_cursor","","Modifies the mouse cursor of the window. Has no effect on Android.",22,[[["self"],["mousecursor"]]]],[11,"set_cursor_position","","Changes the position of the cursor in window coordinates.",22,[[["self"],["logicalposition"]],["result",["string"]]]],[11,"grab_cursor","","Grabs the cursor, preventing it from leaving the window.",22,[[["self"],["bool"]],["result",["string"]]]],[11,"hide_cursor","","Hides the cursor, making it invisible but still usable.",22,[[["self"],["bool"]]]],[11,"set_maximized","","Sets the window to maximized or back",22,[[["self"],["bool"]]]],[11,"set_fullscreen","","Sets the window to fullscreen or back",22,[[["self"],["option",["monitorid"]]]]],[11,"set_decorations","","Turn window decorations on or off.",22,[[["self"],["bool"]]]],[11,"set_always_on_top","","Change whether or not the window will always be on top of other windows.",22,[[["self"],["bool"]]]],[11,"set_window_icon","","Sets the window icon. On Windows and X11, this is typically the small icon in the top-left corner of the titlebar.",22,[[["self"],["option",["icon"]]]]],[11,"set_ime_spot","","Sets location of IME candidate box in client area coordinates relative to the top left.",22,[[["self"],["logicalposition"]]]],[11,"get_current_monitor","","Returns the monitor on which the window currently resides",22,[[["self"]],["monitorid"]]],[11,"get_available_monitors","","Returns the list of all the monitors available on the system.",22,[[["self"]],["availablemonitorsiter"]]],[11,"get_primary_monitor","","Returns the primary monitor of the system.",22,[[["self"]],["monitorid"]]],[11,"id","","",22,[[["self"]],["windowid"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"next","","",23,[[["self"]],["option",["monitorid"]]]],[11,"size_hint","","",23,N],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"clone","","",24,[[["self"]],["monitorid"]]],[11,"get_name","","Returns a human-readable name of the monitor.",24,[[["self"]],["option",["string"]]]],[11,"get_dimensions","","Returns the monitor's resolution.",24,[[["self"]],["physicalsize"]]],[11,"get_position","","Returns the top-left corner position of the monitor relative to the larger full screen area.",24,[[["self"]],["physicalposition"]]],[11,"get_hidpi_factor","","Returns the DPI factor that can be used to map logical pixels to physical pixels, and vice versa.",24,[[["self"]],["f64"]]],[0,"os","","Contains traits with platform-specific methods in them.",N,N],[0,"unix","winit::os","",N,N],[4,"XNotSupported","winit::os::unix","Error returned if this system doesn't have XLib or can't create an X connection.",N,N],[13,"LibraryOpenError","","Failed to load one or several shared libraries.",25,N],[13,"XOpenDisplayFailed","","Connecting to the X server with `XOpenDisplay` failed.",25,N],[4,"XWindowType","","X window type. Maps directly to `_NET_WM_WINDOW_TYPE`.",N,N],[13,"Desktop","","A desktop feature. This can include a single window containing desktop icons with the same dimensions as the screen, allowing the desktop environment to have full control of the desktop, without the need for proxying root window clicks.",26,N],[13,"Dock","","A dock or panel feature. Typically a Window Manager would keep such windows on top of all other windows.",26,N],[13,"Toolbar","","Toolbar windows. \"Torn off\" from the main application.",26,N],[13,"Menu","","Pinnable menu windows. \"Torn off\" from the main application.",26,N],[13,"Utility","","A small persistent utility window, such as a palette or toolbox.",26,N],[13,"Splash","","The window is a splash screen displayed as an application is starting up.",26,N],[13,"Dialog","","This is a dialog window.",26,N],[13,"Normal","","This is a normal, top-level window.",26,N],[8,"EventsLoopExt","","Additional methods on `EventsLoop` that are specific to Linux.",N,N],[10,"new_x11","","Builds a new `EventsLoop` that is forced to use X11.",27,[[],["result",["xnotsupported"]]]],[10,"new_wayland","","Builds a new `EventsLoop` that is forced to use Wayland.",27,[[],["self"]]],[10,"is_wayland","","True if the `EventsLoop` uses Wayland.",27,[[["self"]],["bool"]]],[10,"is_x11","","True if the `EventsLoop` uses X11.",27,[[["self"]],["bool"]]],[8,"WindowExt","","Additional methods on `Window` that are specific to Unix.",N,N],[10,"get_xlib_window","","Returns the ID of the `Window` xlib object that is used by this window.",28,[[["self"]],["option",["c_ulong"]]]],[10,"get_xlib_display","","Returns a pointer to the `Display` object of xlib that is used by this window.",28,[[["self"]],["option"]]],[10,"get_xlib_screen_id","","",28,[[["self"]],["option",["c_int"]]]],[10,"set_urgent","","Set window urgency hint (`XUrgencyHint`). Only relevant on X.",28,[[["self"],["bool"]]]],[10,"get_xcb_connection","","This function returns the underlying `xcb_connection_t` of an xlib `Display`.",28,[[["self"]],["option"]]],[10,"get_wayland_surface","","Returns a pointer to the `wl_surface` object of wayland that is used by this window.",28,[[["self"]],["option"]]],[10,"get_wayland_display","","Returns a pointer to the `wl_display` object of wayland that is used by this window.",28,[[["self"]],["option"]]],[10,"is_ready","","Check if the window is ready for drawing",28,[[["self"]],["bool"]]],[8,"WindowBuilderExt","","Additional methods on `WindowBuilder` that are specific to Unix.",N,N],[10,"with_x11_visual","","",29,N],[10,"with_x11_screen","","",29,[[["self"],["i32"]],["windowbuilder"]]],[10,"with_class","","Build window with `WM_CLASS` hint; defaults to the name of the binary. Only relevant on X11.",29,[[["self"],["string"],["string"]],["windowbuilder"]]],[10,"with_override_redirect","","Build window with override-redirect flag; defaults to false. Only relevant on X11.",29,[[["self"],["bool"]],["windowbuilder"]]],[10,"with_x11_window_type","","Build window with `_NET_WM_WINDOW_TYPE` hint; defaults to `Normal`. Only relevant on X11.",29,[[["self"],["xwindowtype"]],["windowbuilder"]]],[10,"with_resize_increments","","Build window with resize increment hint. Only implemented on X11.",29,[[["self"],["logicalsize"]],["windowbuilder"]]],[10,"with_base_size","","Build window with base size hint. Only implemented on X11.",29,[[["self"],["logicalsize"]],["windowbuilder"]]],[8,"MonitorIdExt","","Additional methods on `MonitorId` that are specific to Linux.",N,N],[10,"native_id","","Returns the inner identifier of the monitor.",30,[[["self"]],["u32"]]],[11,"new_x11","winit","",31,[[],["result",["xnotsupported"]]]],[11,"new_wayland","","",31,[[],["self"]]],[11,"is_wayland","","",31,[[["self"]],["bool"]]],[11,"is_x11","","",31,[[["self"]],["bool"]]],[11,"get_xlib_window","","",22,[[["self"]],["option",["c_ulong"]]]],[11,"get_xlib_display","","",22,[[["self"]],["option"]]],[11,"get_xlib_screen_id","","",22,[[["self"]],["option",["c_int"]]]],[11,"get_xcb_connection","","",22,[[["self"]],["option"]]],[11,"set_urgent","","",22,[[["self"],["bool"]]]],[11,"get_wayland_surface","","",22,[[["self"]],["option"]]],[11,"get_wayland_display","","",22,[[["self"]],["option"]]],[11,"is_ready","","",22,[[["self"]],["bool"]]],[11,"with_x11_visual","","",3,N],[11,"with_x11_screen","","",3,[[["self"],["i32"]],["windowbuilder"]]],[11,"with_class","","",3,[[["self"],["string"],["string"]],["windowbuilder"]]],[11,"with_override_redirect","","",3,[[["self"],["bool"]],["windowbuilder"]]],[11,"with_x11_window_type","","",3,[[["self"],["xwindowtype"]],["windowbuilder"]]],[11,"with_resize_increments","","",3,[[["self"],["logicalsize"]],["windowbuilder"]]],[11,"with_base_size","","",3,[[["self"],["logicalsize"]],["windowbuilder"]]],[11,"native_id","","",24,[[["self"]],["u32"]]],[6,"ScanCode","","Hardware-dependent keyboard scan code.",N,N],[6,"AxisId","","Identifier for a specific analog axis on some device.",N,N],[6,"ButtonId","","Identifier for a specific button on some device.",N,N],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"clone","","",32,[[["self"]],["windowid"]]],[11,"eq","","",32,[[["self"],["windowid"]],["bool"]]],[11,"ne","","",32,[[["self"],["windowid"]],["bool"]]],[11,"partial_cmp","","",32,[[["self"],["windowid"]],["option",["ordering"]]]],[11,"lt","","",32,[[["self"],["windowid"]],["bool"]]],[11,"le","","",32,[[["self"],["windowid"]],["bool"]]],[11,"gt","","",32,[[["self"],["windowid"]],["bool"]]],[11,"ge","","",32,[[["self"],["windowid"]],["bool"]]],[11,"cmp","","",32,[[["self"],["windowid"]],["ordering"]]],[11,"hash","","",32,N],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"clone","","",33,[[["self"]],["deviceid"]]],[11,"eq","","",33,[[["self"],["deviceid"]],["bool"]]],[11,"ne","","",33,[[["self"],["deviceid"]],["bool"]]],[11,"partial_cmp","","",33,[[["self"],["deviceid"]],["option",["ordering"]]]],[11,"lt","","",33,[[["self"],["deviceid"]],["bool"]]],[11,"le","","",33,[[["self"],["deviceid"]],["bool"]]],[11,"gt","","",33,[[["self"],["deviceid"]],["bool"]]],[11,"ge","","",33,[[["self"],["deviceid"]],["bool"]]],[11,"cmp","","",33,[[["self"],["deviceid"]],["ordering"]]],[11,"hash","","",33,N],[11,"clone","","",14,[[["self"]],["controlflow"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"eq","","",14,[[["self"],["controlflow"]],["bool"]]],[11,"new","","Builds a new events loop.",31,[[],["eventsloop"]]],[11,"get_available_monitors","","Returns the list of all the monitors available on the system.",31,[[["self"]],["availablemonitorsiter"]]],[11,"get_primary_monitor","","Returns the primary monitor of the system.",31,[[["self"]],["monitorid"]]],[11,"poll_events","","Fetches all the events that are pending, calls the callback function for each of them, and returns.",31,[[["self"],["f"]]]],[11,"run_forever","","Calls `callback` every time an event is received. If no event is available, sleeps the current thread and waits for an event. If the callback returns `ControlFlow::Break` then `run_forever` will immediately return.",31,[[["self"],["f"]]]],[11,"create_proxy","","Creates an `EventsLoopProxy` that can be used to wake up the `EventsLoop` from another thread.",31,[[["self"]],["eventsloopproxy"]]],[11,"clone","","",34,[[["self"]],["eventsloopproxy"]]],[11,"wakeup","","Wake up the `EventsLoop` from which this proxy was created.",34,[[["self"]],["result",["eventsloopclosed"]]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"clone","","",35,[[["self"]],["eventsloopclosed"]]],[11,"eq","","",35,[[["self"],["eventsloopclosed"]],["bool"]]],[11,"hash","","",35,N],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"description","","",35,[[["self"]],["str"]]],[11,"clone","","",3,[[["self"]],["windowbuilder"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"clone","","",15,[[["self"]],["creationerror"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",15,[[["self"]],["str"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"clone","","",16,[[["self"]],["mousecursor"]]],[11,"eq","","",16,[[["self"],["mousecursor"]],["bool"]]],[11,"default","","",16,[[],["self"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"clone","","",4,[[["self"]],["windowattributes"]]],[11,"default","","",4,[[],["windowattributes"]]],[11,"clone","winit::os::unix","",25,[[["self"]],["xnotsupported"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"from","","",25,[[["openerror"]],["xnotsupported"]]],[11,"description","","",25,[[["self"]],["str"]]],[11,"cause","","",25,[[["self"]],["option",["error"]]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result",["error"]]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"clone","","",26,[[["self"]],["windowtype"]]],[11,"eq","","",26,[[["self"],["windowtype"]],["bool"]]],[11,"hash","","",26,N],[11,"default","","",26,[[],["self"]]]],"paths":[[3,"KeyboardInput"],[3,"Touch"],[3,"ModifiersState"],[3,"WindowBuilder"],[3,"WindowAttributes"],[4,"Event"],[4,"WindowEvent"],[4,"DeviceEvent"],[4,"TouchPhase"],[4,"ElementState"],[4,"MouseButton"],[4,"MouseScrollDelta"],[4,"VirtualKeyCode"],[4,"BadIcon"],[4,"ControlFlow"],[4,"CreationError"],[4,"MouseCursor"],[3,"LogicalPosition"],[3,"PhysicalPosition"],[3,"LogicalSize"],[3,"PhysicalSize"],[3,"Icon"],[3,"Window"],[3,"AvailableMonitorsIter"],[3,"MonitorId"],[4,"XNotSupported"],[4,"XWindowType"],[8,"EventsLoopExt"],[8,"WindowExt"],[8,"WindowBuilderExt"],[8,"MonitorIdExt"],[3,"EventsLoop"],[3,"WindowId"],[3,"DeviceId"],[3,"EventsLoopProxy"],[3,"EventsLoopClosed"]]};
searchIndex["x11_dl"]={"doc":"","items":[[0,"error","x11_dl","",N,N],[3,"OpenError","x11_dl::error","",N,N],[4,"OpenErrorKind","","",N,N],[13,"Library","","",0,N],[13,"Symbol","","",0,N],[11,"clone","","",1,[[["self"]],["openerror"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"detail","","",1,[[["self"]],["str"]]],[11,"kind","","",1,[[["self"]],["openerrorkind"]]],[11,"new","","",1,[[["openerrorkind"],["string"]],["openerror"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result",["error"]]]],[11,"description","","",1,[[["self"]],["str"]]],[11,"clone","","",0,[[["self"]],["openerrorkind"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"hash","","",0,N],[11,"eq","","",0,[[["self"],["openerrorkind"]],["bool"]]],[11,"as_str","","",0,[[["self"]],["str"]]],[0,"xlib","x11_dl","",N,N],[3,"Xlib","x11_dl::xlib","",N,N],[12,"XActivateScreenSaver","","",2,N],[12,"XAddConnectionWatch","","",2,N],[12,"XAddExtension","","",2,N],[12,"XAddHost","","",2,N],[12,"XAddHosts","","",2,N],[12,"XAddPixel","","",2,N],[12,"XAddToExtensionList","","",2,N],[12,"XAddToSaveSet","","",2,N],[12,"XAllocClassHint","","",2,N],[12,"XAllocColor","","",2,N],[12,"XAllocColorCells","","",2,N],[12,"XAllocColorPlanes","","",2,N],[12,"XAllocIconSize","","",2,N],[12,"XAllocNamedColor","","",2,N],[12,"XAllocSizeHints","","",2,N],[12,"XAllocStandardColormap","","",2,N],[12,"XAllocWMHints","","",2,N],[12,"XAllowEvents","","",2,N],[12,"XAllPlanes","","",2,N],[12,"XAutoRepeatOff","","",2,N],[12,"XAutoRepeatOn","","",2,N],[12,"XBaseFontNameListOfFontSet","","",2,N],[12,"XBell","","",2,N],[12,"XBitmapBitOrder","","",2,N],[12,"XBitmapPad","","",2,N],[12,"XBitmapUnit","","",2,N],[12,"XBlackPixel","","",2,N],[12,"XBlackPixelOfScreen","","",2,N],[12,"XCellsOfScreen","","",2,N],[12,"XChangeActivePointerGrab","","",2,N],[12,"XChangeGC","","",2,N],[12,"XChangeKeyboardControl","","",2,N],[12,"XChangeKeyboardMapping","","",2,N],[12,"XChangePointerControl","","",2,N],[12,"XChangeProperty","","",2,N],[12,"XChangeSaveSet","","",2,N],[12,"XChangeWindowAttributes","","",2,N],[12,"XCheckIfEvent","","",2,N],[12,"XCheckMaskEvent","","",2,N],[12,"XCheckTypedEvent","","",2,N],[12,"XCheckTypedWindowEvent","","",2,N],[12,"XCheckWindowEvent","","",2,N],[12,"XCirculateSubwindows","","",2,N],[12,"XCirculateSubwindowsDown","","",2,N],[12,"XCirculateSubwindowsUp","","",2,N],[12,"XClearArea","","",2,N],[12,"XClearWindow","","",2,N],[12,"XClipBox","","",2,N],[12,"XCloseDisplay","","",2,N],[12,"XCloseIM","","",2,N],[12,"XCloseOM","","",2,N],[12,"XcmsAddColorSpace","","",2,N],[12,"XcmsAddFunctionSet","","",2,N],[12,"XcmsAllocColor","","",2,N],[12,"XcmsAllocNamedColor","","",2,N],[12,"XcmsCCCOfColormap","","",2,N],[12,"XcmsCIELabClipab","","",2,N],[12,"XcmsCIELabClipL","","",2,N],[12,"XcmsCIELabClipLab","","",2,N],[12,"XcmsCIELabQueryMaxC","","",2,N],[12,"XcmsCIELabQueryMaxL","","",2,N],[12,"XcmsCIELabQueryMaxLC","","",2,N],[12,"XcmsCIELabQueryMinL","","",2,N],[12,"XcmsCIELabToCIEXYZ","","",2,N],[12,"XcmsCIELabWhiteShiftColors","","",2,N],[12,"XcmsCIELuvClipL","","",2,N],[12,"XcmsCIELuvClipLuv","","",2,N],[12,"XcmsCIELuvClipuv","","",2,N],[12,"XcmsCIELuvQueryMaxC","","",2,N],[12,"XcmsCIELuvQueryMaxL","","",2,N],[12,"XcmsCIELuvQueryMaxLC","","",2,N],[12,"XcmsCIELuvQueryMinL","","",2,N],[12,"XcmsCIELuvToCIEuvY","","",2,N],[12,"XcmsCIELuvWhiteShiftColors","","",2,N],[12,"XcmsCIEuvYToCIELuv","","",2,N],[12,"XcmsCIEuvYToCIEXYZ","","",2,N],[12,"XcmsCIEuvYToTekHVC","","",2,N],[12,"XcmsCIExyYToCIEXYZ","","",2,N],[12,"XcmsCIEXYZToCIELab","","",2,N],[12,"XcmsCIEXYZToCIEuvY","","",2,N],[12,"XcmsCIEXYZToCIExyY","","",2,N],[12,"XcmsCIEXYZToRGBi","","",2,N],[12,"XcmsClientWhitePointOfCCC","","",2,N],[12,"XcmsConvertColors","","",2,N],[12,"XcmsCreateCCC","","",2,N],[12,"XcmsDefaultCCC","","",2,N],[12,"XcmsDisplayOfCCC","","",2,N],[12,"XcmsFormatOfPrefix","","",2,N],[12,"XcmsFreeCCC","","",2,N],[12,"XcmsLookupColor","","",2,N],[12,"XcmsPrefixOfFormat","","",2,N],[12,"XcmsQueryBlack","","",2,N],[12,"XcmsQueryBlue","","",2,N],[12,"XcmsQueryColor","","",2,N],[12,"XcmsQueryColors","","",2,N],[12,"XcmsQueryGreen","","",2,N],[12,"XcmsQueryRed","","",2,N],[12,"XcmsQueryWhite","","",2,N],[12,"XcmsRGBiToCIEXYZ","","",2,N],[12,"XcmsRGBiToRGB","","",2,N],[12,"XcmsRGBToRGBi","","",2,N],[12,"XcmsScreenNumberOfCCC","","",2,N],[12,"XcmsScreenWhitePointOfCCC","","",2,N],[12,"XcmsSetCCCOfColormap","","",2,N],[12,"XcmsSetCompressionProc","","",2,N],[12,"XcmsSetWhiteAdjustProc","","",2,N],[12,"XcmsSetWhitePoint","","",2,N],[12,"XcmsStoreColor","","",2,N],[12,"XcmsStoreColors","","",2,N],[12,"XcmsTekHVCClipC","","",2,N],[12,"XcmsTekHVCClipV","","",2,N],[12,"XcmsTekHVCClipVC","","",2,N],[12,"XcmsTekHVCQueryMaxC","","",2,N],[12,"XcmsTekHVCQueryMaxV","","",2,N],[12,"XcmsTekHVCQueryMaxVC","","",2,N],[12,"XcmsTekHVCQueryMaxVSamples","","",2,N],[12,"XcmsTekHVCQueryMinV","","",2,N],[12,"XcmsTekHVCToCIEuvY","","",2,N],[12,"XcmsTekHVCWhiteShiftColors","","",2,N],[12,"XcmsVisualOfCCC","","",2,N],[12,"XConfigureWindow","","",2,N],[12,"XConnectionNumber","","",2,N],[12,"XContextDependentDrawing","","",2,N],[12,"XContextualDrawing","","",2,N],[12,"XConvertCase","","",2,N],[12,"XConvertSelection","","",2,N],[12,"XCopyArea","","",2,N],[12,"XCopyColormapAndFree","","",2,N],[12,"XCopyGC","","",2,N],[12,"XCopyPlane","","",2,N],[12,"XCreateBitmapFromData","","",2,N],[12,"XCreateColormap","","",2,N],[12,"XCreateFontCursor","","",2,N],[12,"XCreateFontSet","","",2,N],[12,"XCreateGC","","",2,N],[12,"XCreateGlyphCursor","","",2,N],[12,"XCreateImage","","",2,N],[12,"XCreatePixmap","","",2,N],[12,"XCreatePixmapCursor","","",2,N],[12,"XCreatePixmapFromBitmapData","","",2,N],[12,"XCreateRegion","","",2,N],[12,"XCreateSimpleWindow","","",2,N],[12,"XCreateWindow","","",2,N],[12,"XDefaultColormap","","",2,N],[12,"XDefaultColormapOfScreen","","",2,N],[12,"XDefaultDepth","","",2,N],[12,"XDefaultDepthOfScreen","","",2,N],[12,"XDefaultGC","","",2,N],[12,"XDefaultGCOfScreen","","",2,N],[12,"XDefaultRootWindow","","",2,N],[12,"XDefaultScreen","","",2,N],[12,"XDefaultScreenOfDisplay","","",2,N],[12,"XDefaultString","","",2,N],[12,"XDefaultVisual","","",2,N],[12,"XDefaultVisualOfScreen","","",2,N],[12,"XDefineCursor","","",2,N],[12,"XDeleteContext","","",2,N],[12,"XDeleteModifiermapEntry","","",2,N],[12,"XDeleteProperty","","",2,N],[12,"XDestroyIC","","",2,N],[12,"XDestroyImage","","",2,N],[12,"XDestroyOC","","",2,N],[12,"XDestroyRegion","","",2,N],[12,"XDestroySubwindows","","",2,N],[12,"XDestroyWindow","","",2,N],[12,"XDirectionalDependentDrawing","","",2,N],[12,"XDisableAccessControl","","",2,N],[12,"XDisplayCells","","",2,N],[12,"XDisplayHeight","","",2,N],[12,"XDisplayHeightMM","","",2,N],[12,"XDisplayKeycodes","","",2,N],[12,"XDisplayMotionBufferSize","","",2,N],[12,"XDisplayName","","",2,N],[12,"XDisplayOfIM","","",2,N],[12,"XDisplayOfOM","","",2,N],[12,"XDisplayOfScreen","","",2,N],[12,"XDisplayPlanes","","",2,N],[12,"XDisplayString","","",2,N],[12,"XDisplayWidth","","",2,N],[12,"XDisplayWidthMM","","",2,N],[12,"XDoesBackingStore","","",2,N],[12,"XDoesSaveUnders","","",2,N],[12,"XDrawArc","","",2,N],[12,"XDrawArcs","","",2,N],[12,"XDrawImageString","","",2,N],[12,"XDrawImageString16","","",2,N],[12,"XDrawLine","","",2,N],[12,"XDrawLines","","",2,N],[12,"XDrawPoint","","",2,N],[12,"XDrawPoints","","",2,N],[12,"XDrawRectangle","","",2,N],[12,"XDrawRectangles","","",2,N],[12,"XDrawSegments","","",2,N],[12,"XDrawString","","",2,N],[12,"XDrawString16","","",2,N],[12,"XDrawText","","",2,N],[12,"XDrawText16","","",2,N],[12,"XEHeadOfExtensionList","","",2,N],[12,"XEmptyRegion","","",2,N],[12,"XEnableAccessControl","","",2,N],[12,"XEqualRegion","","",2,N],[12,"XESetBeforeFlush","","",2,N],[12,"XESetCloseDisplay","","",2,N],[12,"XESetCopyEventCookie","","",2,N],[12,"XESetCopyGC","","",2,N],[12,"XESetCreateFont","","",2,N],[12,"XESetCreateGC","","",2,N],[12,"XESetError","","",2,N],[12,"XESetErrorString","","",2,N],[12,"XESetEventToWire","","",2,N],[12,"XESetFlushGC","","",2,N],[12,"XESetFreeFont","","",2,N],[12,"XESetFreeGC","","",2,N],[12,"XESetPrintErrorValues","","",2,N],[12,"XESetWireToError","","",2,N],[12,"XESetWireToEvent","","",2,N],[12,"XESetWireToEventCookie","","",2,N],[12,"XEventMaskOfScreen","","",2,N],[12,"XEventsQueued","","",2,N],[12,"XExtendedMaxRequestSize","","",2,N],[12,"XExtentsOfFontSet","","",2,N],[12,"XFetchBuffer","","",2,N],[12,"XFetchBytes","","",2,N],[12,"XFetchName","","",2,N],[12,"XFillArc","","",2,N],[12,"XFillArcs","","",2,N],[12,"XFillPolygon","","",2,N],[12,"XFillRectangle","","",2,N],[12,"XFillRectangles","","",2,N],[12,"XFilterEvent","","",2,N],[12,"XFindContext","","",2,N],[12,"XFindOnExtensionList","","",2,N],[12,"XFlush","","",2,N],[12,"XFlushGC","","",2,N],[12,"XFontsOfFontSet","","",2,N],[12,"XForceScreenSaver","","",2,N],[12,"XFree","","",2,N],[12,"XFreeColormap","","",2,N],[12,"XFreeColors","","",2,N],[12,"XFreeCursor","","",2,N],[12,"XFreeEventData","","",2,N],[12,"XFreeExtensionList","","",2,N],[12,"XFreeFont","","",2,N],[12,"XFreeFontInfo","","",2,N],[12,"XFreeFontNames","","",2,N],[12,"XFreeFontPath","","",2,N],[12,"XFreeFontSet","","",2,N],[12,"XFreeGC","","",2,N],[12,"XFreeModifiermap","","",2,N],[12,"XFreePixmap","","",2,N],[12,"XFreeStringList","","",2,N],[12,"XGContextFromGC","","",2,N],[12,"XGeometry","","",2,N],[12,"XGetAtomName","","",2,N],[12,"XGetAtomNames","","",2,N],[12,"XGetClassHint","","",2,N],[12,"XGetCommand","","",2,N],[12,"XGetDefault","","",2,N],[12,"XGetErrorDatabaseText","","",2,N],[12,"XGetErrorText","","",2,N],[12,"XGetEventData","","",2,N],[12,"XGetFontPath","","",2,N],[12,"XGetFontProperty","","",2,N],[12,"XGetGCValues","","",2,N],[12,"XGetGeometry","","",2,N],[12,"XGetIconName","","",2,N],[12,"XGetIconSizes","","",2,N],[12,"XGetImage","","",2,N],[12,"XGetInputFocus","","",2,N],[12,"XGetKeyboardControl","","",2,N],[12,"XGetKeyboardMapping","","",2,N],[12,"XGetModifierMapping","","",2,N],[12,"XGetMotionEvents","","",2,N],[12,"XGetNormalHints","","",2,N],[12,"XGetPixel","","",2,N],[12,"XGetPointerControl","","",2,N],[12,"XGetPointerMapping","","",2,N],[12,"XGetRGBColormaps","","",2,N],[12,"XGetScreenSaver","","",2,N],[12,"XGetSelectionOwner","","",2,N],[12,"XGetSizeHints","","",2,N],[12,"XGetStandardColormap","","",2,N],[12,"XGetSubImage","","",2,N],[12,"XGetTextProperty","","",2,N],[12,"XGetTransientForHint","","",2,N],[12,"XGetVisualInfo","","",2,N],[12,"XGetWindowAttributes","","",2,N],[12,"XGetWindowProperty","","",2,N],[12,"XGetWMClientMachine","","",2,N],[12,"XGetWMColormapWindows","","",2,N],[12,"XGetWMHints","","",2,N],[12,"XGetWMIconName","","",2,N],[12,"XGetWMName","","",2,N],[12,"XGetWMNormalHints","","",2,N],[12,"XGetWMProtocols","","",2,N],[12,"XGetWMSizeHints","","",2,N],[12,"XGetZoomHints","","",2,N],[12,"XGrabButton","","",2,N],[12,"XGrabKey","","",2,N],[12,"XGrabKeyboard","","",2,N],[12,"XGrabPointer","","",2,N],[12,"XGrabServer","","",2,N],[12,"XHeightMMOfScreen","","",2,N],[12,"XHeightOfScreen","","",2,N],[12,"XIconifyWindow","","",2,N],[12,"XIfEvent","","",2,N],[12,"XImageByteOrder","","",2,N],[12,"XIMOfIC","","",2,N],[12,"XInitExtension","","",2,N],[12,"XInitImage","","",2,N],[12,"XInitThreads","","",2,N],[12,"XInsertModifiermapEntry","","",2,N],[12,"XInstallColormap","","",2,N],[12,"XInternalConnectionNumbers","","",2,N],[12,"XInternAtom","","",2,N],[12,"XInternAtoms","","",2,N],[12,"XIntersectRegion","","",2,N],[12,"XkbAddDeviceLedInfo","","",2,N],[12,"XkbAddGeomColor","","",2,N],[12,"XkbAddGeomDoodad","","",2,N],[12,"XkbAddGeomKey","","",2,N],[12,"XkbAddGeomKeyAlias","","",2,N],[12,"XkbAddGeomOutline","","",2,N],[12,"XkbAddGeomOverlay","","",2,N],[12,"XkbAddGeomOverlayKey","","",2,N],[12,"XkbAddGeomOverlayRow","","",2,N],[12,"XkbAddGeomProperty","","",2,N],[12,"XkbAddGeomRow","","",2,N],[12,"XkbAddGeomSection","","",2,N],[12,"XkbAddGeomShape","","",2,N],[12,"XkbAddKeyType","","",2,N],[12,"XkbAllocClientMap","","",2,N],[12,"XkbAllocCompatMap","","",2,N],[12,"XkbAllocControls","","",2,N],[12,"XkbAllocDeviceInfo","","",2,N],[12,"XkbAllocGeomColors","","",2,N],[12,"XkbAllocGeomDoodads","","",2,N],[12,"XkbAllocGeometry","","",2,N],[12,"XkbAllocGeomKeyAliases","","",2,N],[12,"XkbAllocGeomKeys","","",2,N],[12,"XkbAllocGeomOutlines","","",2,N],[12,"XkbAllocGeomOverlayKeys","","",2,N],[12,"XkbAllocGeomOverlayRows","","",2,N],[12,"XkbAllocGeomOverlays","","",2,N],[12,"XkbAllocGeomPoints","","",2,N],[12,"XkbAllocGeomProps","","",2,N],[12,"XkbAllocGeomRows","","",2,N],[12,"XkbAllocGeomSectionDoodads","","",2,N],[12,"XkbAllocGeomSections","","",2,N],[12,"XkbAllocGeomShapes","","",2,N],[12,"XkbAllocIndicatorMaps","","",2,N],[12,"XkbAllocKeyboard","","",2,N],[12,"XkbAllocNames","","",2,N],[12,"XkbAllocServerMap","","",2,N],[12,"XkbApplyCompatMapToKey","","",2,N],[12,"XkbApplyVirtualModChanges","","",2,N],[12,"XkbBell","","",2,N],[12,"XkbBellEvent","","",2,N],[12,"XkbChangeDeviceInfo","","",2,N],[12,"XkbChangeEnabledControls","","",2,N],[12,"XkbChangeKeycodeRange","","",2,N],[12,"XkbChangeMap","","",2,N],[12,"XkbChangeNames","","",2,N],[12,"XkbChangeTypesOfKey","","",2,N],[12,"XkbComputeEffectiveMap","","",2,N],[12,"XkbComputeRowBounds","","",2,N],[12,"XkbComputeSectionBounds","","",2,N],[12,"XkbComputeShapeBounds","","",2,N],[12,"XkbComputeShapeTop","","",2,N],[12,"XkbCopyKeyType","","",2,N],[12,"XkbCopyKeyTypes","","",2,N],[12,"XkbDeviceBell","","",2,N],[12,"XkbDeviceBellEvent","","",2,N],[12,"XkbFindOverlayForKey","","",2,N],[12,"XkbForceBell","","",2,N],[12,"XkbForceDeviceBell","","",2,N],[12,"XkbFreeClientMap","","",2,N],[12,"XkbFreeCompatMap","","",2,N],[12,"XkbFreeComponentList","","",2,N],[12,"XkbFreeControls","","",2,N],[12,"XkbFreeDeviceInfo","","",2,N],[12,"XkbFreeGeomColors","","",2,N],[12,"XkbFreeGeomDoodads","","",2,N],[12,"XkbFreeGeometry","","",2,N],[12,"XkbFreeGeomKeyAliases","","",2,N],[12,"XkbFreeGeomKeys","","",2,N],[12,"XkbFreeGeomOutlines","","",2,N],[12,"XkbFreeGeomOverlayKeys","","",2,N],[12,"XkbFreeGeomOverlayRows","","",2,N],[12,"XkbFreeGeomOverlays","","",2,N],[12,"XkbFreeGeomPoints","","",2,N],[12,"XkbFreeGeomProperties","","",2,N],[12,"XkbFreeGeomRows","","",2,N],[12,"XkbFreeGeomSections","","",2,N],[12,"XkbFreeGeomShapes","","",2,N],[12,"XkbFreeIndicatorMaps","","",2,N],[12,"XkbFreeKeyboard","","",2,N],[12,"XkbFreeNames","","",2,N],[12,"XkbFreeServerMap","","",2,N],[12,"XkbGetAutoRepeatRate","","",2,N],[12,"XkbGetAutoResetControls","","",2,N],[12,"XkbGetCompatMap","","",2,N],[12,"XkbGetControls","","",2,N],[12,"XkbGetDetectableAutoRepeat","","",2,N],[12,"XkbGetDeviceButtonActions","","",2,N],[12,"XkbGetDeviceInfo","","",2,N],[12,"XkbGetDeviceInfoChanges","","",2,N],[12,"XkbGetDeviceLedInfo","","",2,N],[12,"XkbGetGeometry","","",2,N],[12,"XkbGetIndicatorMap","","",2,N],[12,"XkbGetIndicatorState","","",2,N],[12,"XkbGetKeyActions","","",2,N],[12,"XkbGetKeyBehaviors","","",2,N],[12,"XkbGetKeyboard","","",2,N],[12,"XkbGetKeyboardByName","","",2,N],[12,"XkbGetKeyExplicitComponents","","",2,N],[12,"XkbGetKeyModifierMap","","",2,N],[12,"XkbGetKeySyms","","",2,N],[12,"XkbGetKeyTypes","","",2,N],[12,"XkbGetKeyVirtualModMap","","",2,N],[12,"XkbGetMap","","",2,N],[12,"XkbGetMapChanges","","",2,N],[12,"XkbGetNamedDeviceIndicator","","",2,N],[12,"XkbGetNamedGeometry","","",2,N],[12,"XkbGetNamedIndicator","","",2,N],[12,"XkbGetNames","","",2,N],[12,"XkbGetPerClientControls","","",2,N],[12,"XkbGetState","","",2,N],[12,"XkbGetUpdatedMap","","",2,N],[12,"XkbGetVirtualMods","","",2,N],[12,"XkbGetXlibControls","","",2,N],[12,"XkbIgnoreExtension","","",2,N],[12,"XkbInitCanonicalKeyTypes","","",2,N],[12,"XkbKeycodeToKeysym","","",2,N],[12,"XkbKeysymToModifiers","","",2,N],[12,"XkbKeyTypesForCoreSymbols","","",2,N],[12,"XkbLatchGroup","","",2,N],[12,"XkbLatchModifiers","","",2,N],[12,"XkbLibraryVersion","","",2,N],[12,"XkbListComponents","","",2,N],[12,"XkbLockGroup","","",2,N],[12,"XkbLockModifiers","","",2,N],[12,"XkbLookupKeyBinding","","",2,N],[12,"XkbLookupKeySym","","",2,N],[12,"XkbNoteControlsChanges","","",2,N],[12,"XkbNoteDeviceChanges","","",2,N],[12,"XkbNoteMapChanges","","",2,N],[12,"XkbNoteNameChanges","","",2,N],[12,"XkbOpenDisplay","","",2,N],[12,"XkbQueryExtension","","",2,N],[12,"XkbRefreshKeyboardMapping","","",2,N],[12,"XkbResizeDeviceButtonActions","","",2,N],[12,"XkbResizeKeyActions","","",2,N],[12,"XkbResizeKeySyms","","",2,N],[12,"XkbResizeKeyType","","",2,N],[12,"XkbSelectEventDetails","","",2,N],[12,"XkbSelectEvents","","",2,N],[12,"XkbSetAtomFuncs","","",2,N],[12,"XkbSetAutoRepeatRate","","",2,N],[12,"XkbSetAutoResetControls","","",2,N],[12,"XkbSetCompatMap","","",2,N],[12,"XkbSetControls","","",2,N],[12,"XkbSetDebuggingFlags","","",2,N],[12,"XkbSetDetectableAutoRepeat","","",2,N],[12,"XkbSetDeviceButtonActions","","",2,N],[12,"XkbSetDeviceInfo","","",2,N],[12,"XkbSetDeviceLedInfo","","",2,N],[12,"XkbSetGeometry","","",2,N],[12,"XkbSetIgnoreLockMods","","",2,N],[12,"XkbSetIndicatorMap","","",2,N],[12,"XkbSetMap","","",2,N],[12,"XkbSetNamedDeviceIndicator","","",2,N],[12,"XkbSetNamedIndicator","","",2,N],[12,"XkbSetNames","","",2,N],[12,"XkbSetPerClientControls","","",2,N],[12,"XkbSetServerInternalMods","","",2,N],[12,"XkbSetXlibControls","","",2,N],[12,"XkbToControl","","",2,N],[12,"XkbTranslateKeyCode","","",2,N],[12,"XkbTranslateKeySym","","",2,N],[12,"XkbUpdateActionVirtualMods","","",2,N],[12,"XkbUpdateKeyTypeVirtualMods","","",2,N],[12,"XkbUpdateMapFromCore","","",2,N],[12,"XkbUseExtension","","",2,N],[12,"XkbVirtualModsToReal","","",2,N],[12,"XkbXlibControlsImplemented","","",2,N],[12,"XKeycodeToKeysym","","",2,N],[12,"XKeysymToKeycode","","",2,N],[12,"XKeysymToString","","",2,N],[12,"XKillClient","","",2,N],[12,"XLastKnownRequestProcessed","","",2,N],[12,"XListDepths","","",2,N],[12,"XListExtensions","","",2,N],[12,"XListFonts","","",2,N],[12,"XListFontsWithInfo","","",2,N],[12,"XListHosts","","",2,N],[12,"XListInstalledColormaps","","",2,N],[12,"XListPixmapFormats","","",2,N],[12,"XListProperties","","",2,N],[12,"XLoadFont","","",2,N],[12,"XLoadQueryFont","","",2,N],[12,"XLocaleOfFontSet","","",2,N],[12,"XLocaleOfIM","","",2,N],[12,"XLocaleOfOM","","",2,N],[12,"XLockDisplay","","",2,N],[12,"XLookupColor","","",2,N],[12,"XLookupKeysym","","",2,N],[12,"XLookupString","","",2,N],[12,"XLowerWindow","","",2,N],[12,"XMapRaised","","",2,N],[12,"XMapSubwindows","","",2,N],[12,"XMapWindow","","",2,N],[12,"XMaskEvent","","",2,N],[12,"XMatchVisualInfo","","",2,N],[12,"XMaxCmapsOfScreen","","",2,N],[12,"XMaxRequestSize","","",2,N],[12,"XmbDrawImageString","","",2,N],[12,"XmbDrawString","","",2,N],[12,"XmbDrawText","","",2,N],[12,"XmbLookupString","","",2,N],[12,"XmbResetIC","","",2,N],[12,"XmbSetWMProperties","","",2,N],[12,"XmbTextEscapement","","",2,N],[12,"XmbTextExtents","","",2,N],[12,"XmbTextListToTextProperty","","",2,N],[12,"XmbTextPerCharExtents","","",2,N],[12,"XmbTextPropertyToTextList","","",2,N],[12,"XMinCmapsOfScreen","","",2,N],[12,"XMoveResizeWindow","","",2,N],[12,"XMoveWindow","","",2,N],[12,"XNewModifiermap","","",2,N],[12,"XNextEvent","","",2,N],[12,"XNextRequest","","",2,N],[12,"XNoOp","","",2,N],[12,"XOffsetRegion","","",2,N],[12,"XOMOfOC","","",2,N],[12,"XOpenDisplay","","",2,N],[12,"XOpenIM","","",2,N],[12,"XOpenOM","","",2,N],[12,"XParseColor","","",2,N],[12,"XParseGeometry","","",2,N],[12,"XPeekEvent","","",2,N],[12,"XPeekIfEvent","","",2,N],[12,"XPending","","",2,N],[12,"Xpermalloc","","",2,N],[12,"XPlanesOfScreen","","",2,N],[12,"XPointInRegion","","",2,N],[12,"XPolygonRegion","","",2,N],[12,"XProcessInternalConnection","","",2,N],[12,"XProtocolRevision","","",2,N],[12,"XProtocolVersion","","",2,N],[12,"XPutBackEvent","","",2,N],[12,"XPutImage","","",2,N],[12,"XPutPixel","","",2,N],[12,"XQLength","","",2,N],[12,"XQueryBestCursor","","",2,N],[12,"XQueryBestSize","","",2,N],[12,"XQueryBestStipple","","",2,N],[12,"XQueryBestTile","","",2,N],[12,"XQueryColor","","",2,N],[12,"XQueryColors","","",2,N],[12,"XQueryExtension","","",2,N],[12,"XQueryFont","","",2,N],[12,"XQueryKeymap","","",2,N],[12,"XQueryPointer","","",2,N],[12,"XQueryTextExtents","","",2,N],[12,"XQueryTextExtents16","","",2,N],[12,"XQueryTree","","",2,N],[12,"XRaiseWindow","","",2,N],[12,"XReadBitmapFile","","",2,N],[12,"XReadBitmapFileData","","",2,N],[12,"XRebindKeysym","","",2,N],[12,"XRecolorCursor","","",2,N],[12,"XReconfigureWMWindow","","",2,N],[12,"XRectInRegion","","",2,N],[12,"XRefreshKeyboardMapping","","",2,N],[12,"XRegisterIMInstantiateCallback","","",2,N],[12,"XRemoveConnectionWatch","","",2,N],[12,"XRemoveFromSaveSet","","",2,N],[12,"XRemoveHost","","",2,N],[12,"XRemoveHosts","","",2,N],[12,"XReparentWindow","","",2,N],[12,"XResetScreenSaver","","",2,N],[12,"XResizeWindow","","",2,N],[12,"XResourceManagerString","","",2,N],[12,"XRestackWindows","","",2,N],[12,"XrmCombineDatabase","","",2,N],[12,"XrmCombineFileDatabase","","",2,N],[12,"XrmDestroyDatabase","","",2,N],[12,"XrmEnumerateDatabase","","",2,N],[12,"XrmGetDatabase","","",2,N],[12,"XrmGetFileDatabase","","",2,N],[12,"XrmGetResource","","",2,N],[12,"XrmGetStringDatabase","","",2,N],[12,"XrmInitialize","","",2,N],[12,"XrmLocaleOfDatabase","","",2,N],[12,"XrmMergeDatabases","","",2,N],[12,"XrmParseCommand","","",2,N],[12,"XrmPermStringToQuark","","",2,N],[12,"XrmPutFileDatabase","","",2,N],[12,"XrmPutLineResource","","",2,N],[12,"XrmPutResource","","",2,N],[12,"XrmPutStringResource","","",2,N],[12,"XrmQGetResource","","",2,N],[12,"XrmQGetSearchList","","",2,N],[12,"XrmQGetSearchResource","","",2,N],[12,"XrmQPutResource","","",2,N],[12,"XrmQPutStringResource","","",2,N],[12,"XrmQuarkToString","","",2,N],[12,"XrmSetDatabase","","",2,N],[12,"XrmStringToBindingQuarkList","","",2,N],[12,"XrmStringToQuark","","",2,N],[12,"XrmStringToQuarkList","","",2,N],[12,"XrmUniqueQuark","","",2,N],[12,"XRootWindow","","",2,N],[12,"XRootWindowOfScreen","","",2,N],[12,"XRotateBuffers","","",2,N],[12,"XRotateWindowProperties","","",2,N],[12,"XSaveContext","","",2,N],[12,"XScreenCount","","",2,N],[12,"XScreenNumberOfScreen","","",2,N],[12,"XScreenOfDisplay","","",2,N],[12,"XScreenResourceString","","",2,N],[12,"XSelectInput","","",2,N],[12,"XSendEvent","","",2,N],[12,"XServerVendor","","",2,N],[12,"XSetAccessControl","","",2,N],[12,"XSetAfterFunction","","",2,N],[12,"XSetArcMode","","",2,N],[12,"XSetAuthorization","","",2,N],[12,"XSetBackground","","",2,N],[12,"XSetClassHint","","",2,N],[12,"XSetClipMask","","",2,N],[12,"XSetClipOrigin","","",2,N],[12,"XSetClipRectangles","","",2,N],[12,"XSetCloseDownMode","","",2,N],[12,"XSetCommand","","",2,N],[12,"XSetDashes","","",2,N],[12,"XSetErrorHandler","","",2,N],[12,"XSetFillRule","","",2,N],[12,"XSetFillStyle","","",2,N],[12,"XSetFont","","",2,N],[12,"XSetFontPath","","",2,N],[12,"XSetForeground","","",2,N],[12,"XSetFunction","","",2,N],[12,"XSetGraphicsExposures","","",2,N],[12,"XSetICFocus","","",2,N],[12,"XSetIconName","","",2,N],[12,"XSetIconSizes","","",2,N],[12,"XSetInputFocus","","",2,N],[12,"XSetIOErrorHandler","","",2,N],[12,"XSetLineAttributes","","",2,N],[12,"XSetLocaleModifiers","","",2,N],[12,"XSetModifierMapping","","",2,N],[12,"XSetNormalHints","","",2,N],[12,"XSetPlaneMask","","",2,N],[12,"XSetPointerMapping","","",2,N],[12,"XSetRegion","","",2,N],[12,"XSetRGBColormaps","","",2,N],[12,"XSetScreenSaver","","",2,N],[12,"XSetSelectionOwner","","",2,N],[12,"XSetSizeHints","","",2,N],[12,"XSetStandardColormap","","",2,N],[12,"XSetStandardProperties","","",2,N],[12,"XSetState","","",2,N],[12,"XSetStipple","","",2,N],[12,"XSetSubwindowMode","","",2,N],[12,"XSetTextProperty","","",2,N],[12,"XSetTile","","",2,N],[12,"XSetTransientForHint","","",2,N],[12,"XSetTSOrigin","","",2,N],[12,"XSetWindowBackground","","",2,N],[12,"XSetWindowBackgroundPixmap","","",2,N],[12,"XSetWindowBorder","","",2,N],[12,"XSetWindowBorderPixmap","","",2,N],[12,"XSetWindowBorderWidth","","",2,N],[12,"XSetWindowColormap","","",2,N],[12,"XSetWMClientMachine","","",2,N],[12,"XSetWMColormapWindows","","",2,N],[12,"XSetWMHints","","",2,N],[12,"XSetWMIconName","","",2,N],[12,"XSetWMName","","",2,N],[12,"XSetWMNormalHints","","",2,N],[12,"XSetWMProperties","","",2,N],[12,"XSetWMProtocols","","",2,N],[12,"XSetWMSizeHints","","",2,N],[12,"XSetZoomHints","","",2,N],[12,"XShrinkRegion","","",2,N],[12,"XStoreBuffer","","",2,N],[12,"XStoreBytes","","",2,N],[12,"XStoreColor","","",2,N],[12,"XStoreColors","","",2,N],[12,"XStoreName","","",2,N],[12,"XStoreNamedColor","","",2,N],[12,"XStringListToTextProperty","","",2,N],[12,"XStringToKeysym","","",2,N],[12,"XSubImage","","",2,N],[12,"XSubtractRegion","","",2,N],[12,"XSupportsLocale","","",2,N],[12,"XSync","","",2,N],[12,"XSynchronize","","",2,N],[12,"XTextExtents","","",2,N],[12,"XTextExtents16","","",2,N],[12,"XTextPropertyToStringList","","",2,N],[12,"XTextWidth","","",2,N],[12,"XTextWidth16","","",2,N],[12,"XTranslateCoordinates","","",2,N],[12,"XUndefineCursor","","",2,N],[12,"XUngrabButton","","",2,N],[12,"XUngrabKey","","",2,N],[12,"XUngrabKeyboard","","",2,N],[12,"XUngrabPointer","","",2,N],[12,"XUngrabServer","","",2,N],[12,"XUninstallColormap","","",2,N],[12,"XUnionRectWithRegion","","",2,N],[12,"XUnionRegion","","",2,N],[12,"XUnloadFont","","",2,N],[12,"XUnlockDisplay","","",2,N],[12,"XUnmapSubwindows","","",2,N],[12,"XUnmapWindow","","",2,N],[12,"XUnregisterIMInstantiateCallback","","",2,N],[12,"XUnsetICFocus","","",2,N],[12,"Xutf8DrawImageString","","",2,N],[12,"Xutf8DrawString","","",2,N],[12,"Xutf8DrawText","","",2,N],[12,"Xutf8LookupString","","",2,N],[12,"Xutf8ResetIC","","",2,N],[12,"Xutf8SetWMProperties","","",2,N],[12,"Xutf8TextEscapement","","",2,N],[12,"Xutf8TextExtents","","",2,N],[12,"Xutf8TextListToTextProperty","","",2,N],[12,"Xutf8TextPerCharExtents","","",2,N],[12,"Xutf8TextPropertyToTextList","","",2,N],[12,"XVendorRelease","","",2,N],[12,"XVisualIDFromVisual","","",2,N],[12,"XWarpPointer","","",2,N],[12,"XwcDrawImageString","","",2,N],[12,"XwcDrawString","","",2,N],[12,"XwcDrawText","","",2,N],[12,"XwcFreeStringList","","",2,N],[12,"XwcLookupString","","",2,N],[12,"XwcResetIC","","",2,N],[12,"XwcTextEscapement","","",2,N],[12,"XwcTextExtents","","",2,N],[12,"XwcTextListToTextProperty","","",2,N],[12,"XwcTextPerCharExtents","","",2,N],[12,"XwcTextPropertyToTextList","","",2,N],[12,"XWhitePixel","","",2,N],[12,"XWhitePixelOfScreen","","",2,N],[12,"XWidthMMOfScreen","","",2,N],[12,"XWidthOfScreen","","",2,N],[12,"XWindowEvent","","",2,N],[12,"XWithdrawWindow","","",2,N],[12,"XWMGeometry","","",2,N],[12,"XWriteBitmapFile","","",2,N],[12,"XXorRegion","","",2,N],[12,"XCreateIC","","",2,N],[12,"XCreateOC","","",2,N],[12,"XGetICValues","","",2,N],[12,"XGetIMValues","","",2,N],[12,"XGetOCValues","","",2,N],[12,"XGetOMValues","","",2,N],[12,"XSetICValues","","",2,N],[12,"XSetIMValues","","",2,N],[12,"XSetOCValues","","",2,N],[12,"XSetOMValues","","",2,N],[12,"XVaCreateNestedList","","",2,N],[3,"_XcmsCCC","","",N,N],[3,"XcmsColor","","",N,N],[3,"_XcmsColorSpace","","",N,N],[3,"_XcmsFunctionSet","","",N,N],[3,"_XkbAction","","",N,N],[3,"_XkbBounds","","",N,N],[3,"_XkbChanges","","",N,N],[3,"_XkbClientMapRec","","",N,N],[3,"_XkbColor","","",N,N],[3,"_XkbComponentList","","",N,N],[3,"_XkbComponentNames","","",N,N],[3,"_XkbControls","","",N,N],[3,"_XkbControlsChanges","","",N,N],[3,"_XkbControlsNotify","","",N,N],[3,"_XkbDeviceChanges","","",N,N],[3,"_XkbDeviceInfo","","",N,N],[3,"_XkbDeviceLedInfo","","",N,N],[3,"_XkbDoodad","","",N,N],[3,"_XkbExtensionDeviceNotify","","",N,N],[3,"_XkbGeometry","","",N,N],[3,"_XkbGeometrySizes","","",N,N],[3,"_XkbIndicatorMapRec","","",N,N],[3,"_XkbKey","","",N,N],[3,"_XkbKeyType","","",N,N],[3,"_XkbMapChanges","","",N,N],[3,"_XkbMods","","",N,N],[3,"_XkbNameChanges","","",N,N],[3,"_XkbNamesNotify","","",N,N],[3,"_XkbOutline","","",N,N],[3,"_XkbOverlay","","",N,N],[3,"_XkbOverlayKey","","",N,N],[3,"_XkbOverlayRow","","",N,N],[3,"_XkbProperty","","",N,N],[3,"_XkbRow","","",N,N],[3,"_XkbSection","","",N,N],[3,"_XkbServerMapRec","","",N,N],[3,"_XkbShape","","",N,N],[3,"_XkbStateRec","","",N,N],[3,"_XkbSymInterpretRec","","",N,N],[3,"XAnyEvent","","",N,N],[12,"type_","","",3,N],[12,"serial","","",3,N],[12,"send_event","","",3,N],[12,"display","","",3,N],[12,"window","","",3,N],[3,"XButtonEvent","","",N,N],[12,"type_","","",4,N],[12,"serial","","",4,N],[12,"send_event","","",4,N],[12,"display","","",4,N],[12,"window","","",4,N],[12,"root","","",4,N],[12,"subwindow","","",4,N],[12,"time","","",4,N],[12,"x","","",4,N],[12,"y","","",4,N],[12,"x_root","","",4,N],[12,"y_root","","",4,N],[12,"state","","",4,N],[12,"button","","",4,N],[12,"same_screen","","",4,N],[3,"XCirculateEvent","","",N,N],[12,"type_","","",5,N],[12,"serial","","",5,N],[12,"send_event","","",5,N],[12,"display","","",5,N],[12,"event","","",5,N],[12,"window","","",5,N],[12,"place","","",5,N],[3,"XCirculateRequestEvent","","",N,N],[12,"type_","","",6,N],[12,"serial","","",6,N],[12,"send_event","","",6,N],[12,"display","","",6,N],[12,"parent","","",6,N],[12,"window","","",6,N],[12,"place","","",6,N],[3,"XClientMessageEvent","","",N,N],[12,"type_","","",7,N],[12,"serial","","",7,N],[12,"send_event","","",7,N],[12,"display","","",7,N],[12,"window","","",7,N],[12,"message_type","","",7,N],[12,"format","","",7,N],[12,"data","","",7,N],[3,"XColormapEvent","","",N,N],[12,"type_","","",8,N],[12,"serial","","",8,N],[12,"send_event","","",8,N],[12,"display","","",8,N],[12,"window","","",8,N],[12,"colormap","","",8,N],[12,"new","","",8,N],[12,"state","","",8,N],[3,"XConfigureEvent","","",N,N],[12,"type_","","",9,N],[12,"serial","","",9,N],[12,"send_event","","",9,N],[12,"display","","",9,N],[12,"event","","",9,N],[12,"window","","",9,N],[12,"x","","",9,N],[12,"y","","",9,N],[12,"width","","",9,N],[12,"height","","",9,N],[12,"border_width","","",9,N],[12,"above","","",9,N],[12,"override_redirect","","",9,N],[3,"XConfigureRequestEvent","","",N,N],[12,"type_","","",10,N],[12,"serial","","",10,N],[12,"send_event","","",10,N],[12,"display","","",10,N],[12,"parent","","",10,N],[12,"window","","",10,N],[12,"x","","",10,N],[12,"y","","",10,N],[12,"width","","",10,N],[12,"height","","",10,N],[12,"border_width","","",10,N],[12,"above","","",10,N],[12,"detail","","",10,N],[12,"value_mask","","",10,N],[3,"XCreateWindowEvent","","",N,N],[12,"type_","","",11,N],[12,"serial","","",11,N],[12,"send_event","","",11,N],[12,"display","","",11,N],[12,"parent","","",11,N],[12,"window","","",11,N],[12,"x","","",11,N],[12,"y","","",11,N],[12,"width","","",11,N],[12,"height","","",11,N],[12,"border_width","","",11,N],[12,"override_redirect","","",11,N],[3,"XCrossingEvent","","",N,N],[12,"type_","","",12,N],[12,"serial","","",12,N],[12,"send_event","","",12,N],[12,"display","","",12,N],[12,"window","","",12,N],[12,"root","","",12,N],[12,"subwindow","","",12,N],[12,"time","","",12,N],[12,"x","","",12,N],[12,"y","","",12,N],[12,"x_root","","",12,N],[12,"y_root","","",12,N],[12,"mode","","",12,N],[12,"detail","","",12,N],[12,"same_screen","","",12,N],[12,"focus","","",12,N],[12,"state","","",12,N],[3,"XDestroyWindowEvent","","",N,N],[12,"type_","","",13,N],[12,"serial","","",13,N],[12,"send_event","","",13,N],[12,"display","","",13,N],[12,"event","","",13,N],[12,"window","","",13,N],[3,"XErrorEvent","","",N,N],[12,"type_","","",14,N],[12,"display","","",14,N],[12,"resourceid","","",14,N],[12,"serial","","",14,N],[12,"error_code","","",14,N],[12,"request_code","","",14,N],[12,"minor_code","","",14,N],[3,"XExposeEvent","","",N,N],[12,"type_","","",15,N],[12,"serial","","",15,N],[12,"send_event","","",15,N],[12,"display","","",15,N],[12,"window","","",15,N],[12,"x","","",15,N],[12,"y","","",15,N],[12,"width","","",15,N],[12,"height","","",15,N],[12,"count","","",15,N],[3,"XFocusChangeEvent","","",N,N],[12,"type_","","",16,N],[12,"serial","","",16,N],[12,"send_event","","",16,N],[12,"display","","",16,N],[12,"window","","",16,N],[12,"mode","","",16,N],[12,"detail","","",16,N],[3,"XGraphicsExposeEvent","","",N,N],[12,"type_","","",17,N],[12,"serial","","",17,N],[12,"send_event","","",17,N],[12,"display","","",17,N],[12,"drawable","","",17,N],[12,"x","","",17,N],[12,"y","","",17,N],[12,"width","","",17,N],[12,"height","","",17,N],[12,"count","","",17,N],[12,"major_code","","",17,N],[12,"minor_code","","",17,N],[3,"XGravityEvent","","",N,N],[12,"type_","","",18,N],[12,"serial","","",18,N],[12,"send_event","","",18,N],[12,"display","","",18,N],[12,"event","","",18,N],[12,"window","","",18,N],[12,"x","","",18,N],[12,"y","","",18,N],[3,"XKeyEvent","","",N,N],[12,"type_","","",19,N],[12,"serial","","",19,N],[12,"send_event","","",19,N],[12,"display","","",19,N],[12,"window","","",19,N],[12,"root","","",19,N],[12,"subwindow","","",19,N],[12,"time","","",19,N],[12,"x","","",19,N],[12,"y","","",19,N],[12,"x_root","","",19,N],[12,"y_root","","",19,N],[12,"state","","",19,N],[12,"keycode","","",19,N],[12,"same_screen","","",19,N],[3,"XKeymapEvent","","",N,N],[12,"type_","","",20,N],[12,"serial","","",20,N],[12,"send_event","","",20,N],[12,"display","","",20,N],[12,"window","","",20,N],[12,"key_vector","","",20,N],[3,"XMapEvent","","",N,N],[12,"type_","","",21,N],[12,"serial","","",21,N],[12,"send_event","","",21,N],[12,"display","","",21,N],[12,"event","","",21,N],[12,"window","","",21,N],[12,"override_redirect","","",21,N],[3,"XMappingEvent","","",N,N],[12,"type_","","",22,N],[12,"serial","","",22,N],[12,"send_event","","",22,N],[12,"display","","",22,N],[12,"event","","",22,N],[12,"request","","",22,N],[12,"first_keycode","","",22,N],[12,"count","","",22,N],[3,"XMapRequestEvent","","",N,N],[12,"type_","","",23,N],[12,"serial","","",23,N],[12,"send_event","","",23,N],[12,"display","","",23,N],[12,"parent","","",23,N],[12,"window","","",23,N],[3,"XMotionEvent","","",N,N],[12,"type_","","",24,N],[12,"serial","","",24,N],[12,"send_event","","",24,N],[12,"display","","",24,N],[12,"window","","",24,N],[12,"root","","",24,N],[12,"subwindow","","",24,N],[12,"time","","",24,N],[12,"x","","",24,N],[12,"y","","",24,N],[12,"x_root","","",24,N],[12,"y_root","","",24,N],[12,"state","","",24,N],[12,"is_hint","","",24,N],[12,"same_screen","","",24,N],[3,"XNoExposeEvent","","",N,N],[12,"type_","","",25,N],[12,"serial","","",25,N],[12,"send_event","","",25,N],[12,"display","","",25,N],[12,"drawable","","",25,N],[12,"major_code","","",25,N],[12,"minor_code","","",25,N],[3,"XPropertyEvent","","",N,N],[12,"type_","","",26,N],[12,"serial","","",26,N],[12,"send_event","","",26,N],[12,"display","","",26,N],[12,"window","","",26,N],[12,"atom","","",26,N],[12,"time","","",26,N],[12,"state","","",26,N],[3,"XReparentEvent","","",N,N],[12,"type_","","",27,N],[12,"serial","","",27,N],[12,"send_event","","",27,N],[12,"display","","",27,N],[12,"event","","",27,N],[12,"window","","",27,N],[12,"parent","","",27,N],[12,"x","","",27,N],[12,"y","","",27,N],[12,"override_redirect","","",27,N],[3,"XResizeRequestEvent","","",N,N],[12,"type_","","",28,N],[12,"serial","","",28,N],[12,"send_event","","",28,N],[12,"display","","",28,N],[12,"window","","",28,N],[12,"width","","",28,N],[12,"height","","",28,N],[3,"XSelectionClearEvent","","",N,N],[12,"type_","","",29,N],[12,"serial","","",29,N],[12,"send_event","","",29,N],[12,"display","","",29,N],[12,"window","","",29,N],[12,"selection","","",29,N],[12,"time","","",29,N],[3,"XSelectionEvent","","",N,N],[12,"type_","","",30,N],[12,"serial","","",30,N],[12,"send_event","","",30,N],[12,"display","","",30,N],[12,"requestor","","",30,N],[12,"selection","","",30,N],[12,"target","","",30,N],[12,"property","","",30,N],[12,"time","","",30,N],[3,"XSelectionRequestEvent","","",N,N],[12,"type_","","",31,N],[12,"serial","","",31,N],[12,"send_event","","",31,N],[12,"display","","",31,N],[12,"owner","","",31,N],[12,"requestor","","",31,N],[12,"selection","","",31,N],[12,"target","","",31,N],[12,"property","","",31,N],[12,"time","","",31,N],[3,"XUnmapEvent","","",N,N],[12,"type_","","",32,N],[12,"serial","","",32,N],[12,"send_event","","",32,N],[12,"display","","",32,N],[12,"event","","",32,N],[12,"window","","",32,N],[12,"from_configure","","",32,N],[3,"XVisibilityEvent","","",N,N],[12,"type_","","",33,N],[12,"serial","","",33,N],[12,"send_event","","",33,N],[12,"display","","",33,N],[12,"window","","",33,N],[12,"state","","",33,N],[3,"_XkbCompatMapRec","","",N,N],[12,"sym_interpret","","",34,N],[12,"groups","","",34,N],[12,"num_si","","",34,N],[12,"size_si","","",34,N],[3,"_XkbDesc","","",N,N],[12,"dpy","","",35,N],[12,"flags","","",35,N],[12,"device_spec","","",35,N],[12,"min_key_code","","",35,N],[12,"max_key_code","","",35,N],[12,"ctrls","","",35,N],[12,"server","","",35,N],[12,"map","","",35,N],[12,"indicators","","",35,N],[12,"names","","",35,N],[12,"compat","","",35,N],[12,"geom","","",35,N],[3,"_XkbIndicatorRec","","",N,N],[12,"phys_indicators","","",36,N],[12,"maps","","",36,N],[3,"_XkbKeyAliasRec","","",N,N],[12,"real","","",37,N],[12,"alias","","",37,N],[3,"_XkbKeyNameRec","","",N,N],[12,"name","","",38,N],[3,"_XkbNamesRec","","",N,N],[12,"keycodes","","",39,N],[12,"geometry","","",39,N],[12,"symbols","","",39,N],[12,"types","","",39,N],[12,"compat","","",39,N],[12,"vmods","","",39,N],[12,"indicators","","",39,N],[12,"groups","","",39,N],[12,"keys","","",39,N],[12,"key_aliases","","",39,N],[12,"radio_groups","","",39,N],[12,"phys_symbols","","",39,N],[12,"num_keys","","",39,N],[12,"num_key_aliases","","",39,N],[12,"num_rg","","",39,N],[3,"XkbAnyEvent","","",N,N],[12,"type_","","",40,N],[12,"serial","","",40,N],[12,"send_event","","",40,N],[12,"display","","",40,N],[12,"time","","",40,N],[12,"xkb_type","","",40,N],[12,"device","","",40,N],[3,"XkbNewKeyboardNotifyEvent","","",N,N],[12,"type_","","",41,N],[12,"serial","","",41,N],[12,"send_event","","",41,N],[12,"display","","",41,N],[12,"time","","",41,N],[12,"xkb_type","","",41,N],[12,"device","","",41,N],[12,"old_device","","",41,N],[12,"min_key_code","","",41,N],[12,"max_key_code","","",41,N],[12,"old_min_key_code","","",41,N],[12,"old_max_key_code","","",41,N],[12,"changed","","",41,N],[12,"req_major","","",41,N],[12,"req_minor","","",41,N],[3,"_XkbMapNotifyEvent","","",N,N],[12,"type_","","",42,N],[12,"serial","","",42,N],[12,"send_event","","",42,N],[12,"display","","",42,N],[12,"time","","",42,N],[12,"xkb_type","","",42,N],[12,"device","","",42,N],[12,"changed","","",42,N],[12,"flags","","",42,N],[12,"first_type","","",42,N],[12,"num_types","","",42,N],[12,"min_key_code","","",42,N],[12,"max_key_code","","",42,N],[12,"first_key_sym","","",42,N],[12,"first_key_act","","",42,N],[12,"first_key_bahavior","","",42,N],[12,"first_key_explicit","","",42,N],[12,"first_modmap_key","","",42,N],[12,"first_vmodmap_key","","",42,N],[12,"num_key_syms","","",42,N],[12,"num_key_acts","","",42,N],[12,"num_key_behaviors","","",42,N],[12,"num_key_explicit","","",42,N],[12,"num_modmap_keys","","",42,N],[12,"num_vmodmap_keys","","",42,N],[12,"vmods","","",42,N],[3,"XkbStateNotifyEvent","","",N,N],[12,"type_","","",43,N],[12,"serial","","",43,N],[12,"send_event","","",43,N],[12,"display","","",43,N],[12,"time","","",43,N],[12,"xkb_type","","",43,N],[12,"device","","",43,N],[12,"changed","","",43,N],[12,"group","","",43,N],[12,"base_group","","",43,N],[12,"latched_group","","",43,N],[12,"locked_group","","",43,N],[12,"mods","","",43,N],[12,"base_mods","","",43,N],[12,"latched_mods","","",43,N],[12,"locked_mods","","",43,N],[12,"compat_state","","",43,N],[12,"grab_mods","","",43,N],[12,"compat_grab_mods","","",43,N],[12,"lookup_mods","","",43,N],[12,"compat_lookup_mods","","",43,N],[12,"ptr_buttons","","",43,N],[12,"keycode","","",43,N],[12,"event_type","","",43,N],[12,"req_major","","",43,N],[12,"req_minor","","",43,N],[3,"_XkbControlsNotifyEvent","","",N,N],[12,"type_","","",44,N],[12,"serial","","",44,N],[12,"send_event","","",44,N],[12,"display","","",44,N],[12,"time","","",44,N],[12,"xkb_type","","",44,N],[12,"device","","",44,N],[12,"changed_ctrls","","",44,N],[12,"enabled_ctrls","","",44,N],[12,"enabled_ctrl_changes","","",44,N],[12,"num_groups","","",44,N],[12,"keycode","","",44,N],[12,"event_type","","",44,N],[12,"req_major","","",44,N],[12,"req_minor","","",44,N],[3,"XkbIndicatorNotifyEvent","","",N,N],[12,"type_","","",45,N],[12,"serial","","",45,N],[12,"send_event","","",45,N],[12,"display","","",45,N],[12,"time","","",45,N],[12,"xkb_type","","",45,N],[12,"device","","",45,N],[12,"changed","","",45,N],[12,"state","","",45,N],[3,"_XkbNamesNotifyEvent","","",N,N],[12,"type_","","",46,N],[12,"serial","","",46,N],[12,"send_event","","",46,N],[12,"display","","",46,N],[12,"time","","",46,N],[12,"xkb_type","","",46,N],[12,"device","","",46,N],[12,"changed","","",46,N],[12,"first_type","","",46,N],[12,"num_types","","",46,N],[12,"first_lvl","","",46,N],[12,"num_lvls","","",46,N],[12,"num_aliases","","",46,N],[12,"num_radio_groups","","",46,N],[12,"changed_vmods","","",46,N],[12,"changed_groups","","",46,N],[12,"changed_indicators","","",46,N],[12,"first_key","","",46,N],[12,"num_keys","","",46,N],[3,"XkbCompatMapNotifyEvent","","",N,N],[12,"type_","","",47,N],[12,"serial","","",47,N],[12,"send_event","","",47,N],[12,"display","","",47,N],[12,"time","","",47,N],[12,"xkb_type","","",47,N],[12,"device","","",47,N],[12,"changed_groups","","",47,N],[12,"first_si","","",47,N],[12,"num_si","","",47,N],[12,"num_total_si","","",47,N],[3,"XkbBellNotifyEvent","","",N,N],[12,"type_","","",48,N],[12,"serial","","",48,N],[12,"send_event","","",48,N],[12,"display","","",48,N],[12,"time","","",48,N],[12,"xkb_type","","",48,N],[12,"device","","",48,N],[12,"percent","","",48,N],[12,"pitch","","",48,N],[12,"duration","","",48,N],[12,"bell_class","","",48,N],[12,"bell_id","","",48,N],[12,"name","","",48,N],[12,"window","","",48,N],[12,"event_only","","",48,N],[3,"XkbActionMessageEvent","","",N,N],[12,"type_","","",49,N],[12,"serial","","",49,N],[12,"send_event","","",49,N],[12,"display","","",49,N],[12,"time","","",49,N],[12,"xkb_type","","",49,N],[12,"device","","",49,N],[12,"keycode","","",49,N],[12,"press","","",49,N],[12,"key_event_follows","","",49,N],[12,"group","","",49,N],[12,"mods","","",49,N],[12,"message","","",49,N],[3,"XkbAccessXNotifyEvent","","",N,N],[12,"type_","","",50,N],[12,"serial","","",50,N],[12,"send_event","","",50,N],[12,"display","","",50,N],[12,"time","","",50,N],[12,"xkb_type","","",50,N],[12,"device","","",50,N],[12,"detail","","",50,N],[12,"keycode","","",50,N],[12,"sk_delay","","",50,N],[12,"debounce_delay","","",50,N],[3,"_XkbExtensionDeviceNotifyEvent","","",N,N],[12,"type_","","",51,N],[12,"serial","","",51,N],[12,"send_event","","",51,N],[12,"display","","",51,N],[12,"time","","",51,N],[12,"xkb_type","","",51,N],[12,"device","","",51,N],[12,"reason","","",51,N],[12,"supported","","",51,N],[12,"unsupported","","",51,N],[12,"first_btn","","",51,N],[12,"num_btns","","",51,N],[12,"leds_defined","","",51,N],[12,"led_state","","",51,N],[12,"led_class","","",51,N],[12,"led_id","","",51,N],[3,"XkbEvent","","",N,N],[3,"Depth","","",N,N],[12,"depth","","",52,N],[12,"nvisuals","","",52,N],[12,"visuals","","",52,N],[3,"Screen","","",N,N],[12,"ext_data","","",53,N],[12,"display","","",53,N],[12,"root","","",53,N],[12,"width","","",53,N],[12,"height","","",53,N],[12,"mwidth","","",53,N],[12,"mheight","","",53,N],[12,"ndepths","","",53,N],[12,"depths","","",53,N],[12,"root_depth","","",53,N],[12,"root_visual","","",53,N],[12,"default_gc","","",53,N],[12,"cmap","","",53,N],[12,"white_pixel","","",53,N],[12,"black_pixel","","",53,N],[12,"max_maps","","",53,N],[12,"min_maps","","",53,N],[12,"backing_store","","",53,N],[12,"save_unders","","",53,N],[12,"root_input_mask","","",53,N],[3,"ScreenFormat","","",N,N],[12,"ext_data","","",54,N],[12,"depth","","",54,N],[12,"bits_per_pixel","","",54,N],[12,"scanline_pad","","",54,N],[3,"Visual","","",N,N],[12,"ext_data","","",55,N],[12,"visualid","","",55,N],[12,"class","","",55,N],[12,"red_mask","","",55,N],[12,"green_mask","","",55,N],[12,"blue_mask","","",55,N],[12,"bits_per_rgb","","",55,N],[12,"map_entries","","",55,N],[3,"XArc","","",N,N],[12,"x","","",56,N],[12,"y","","",56,N],[12,"width","","",56,N],[12,"height","","",56,N],[12,"angle1","","",56,N],[12,"angle2","","",56,N],[3,"XChar2b","","",N,N],[12,"byte1","","",57,N],[12,"byte2","","",57,N],[3,"XCharStruct","","",N,N],[12,"lbearing","","",58,N],[12,"rbearing","","",58,N],[12,"width","","",58,N],[12,"ascent","","",58,N],[12,"descent","","",58,N],[12,"attributes","","",58,N],[3,"XClassHint","","",N,N],[12,"res_name","","",59,N],[12,"res_class","","",59,N],[3,"XColor","","",N,N],[12,"pixel","","",60,N],[12,"red","","",60,N],[12,"green","","",60,N],[12,"blue","","",60,N],[12,"flags","","",60,N],[12,"pad","","",60,N],[3,"XComposeStatus","","",N,N],[12,"compose_ptr","","",61,N],[12,"chars_matched","","",61,N],[3,"XExtCodes","","",N,N],[12,"extension","","",62,N],[12,"major_opcode","","",62,N],[12,"first_event","","",62,N],[12,"first_error","","",62,N],[3,"XExtData","","",N,N],[12,"number","","",63,N],[12,"next","","",63,N],[12,"free_private","","",63,N],[12,"private_data","","",63,N],[3,"XFontProp","","",N,N],[12,"name","","",64,N],[12,"card32","","",64,N],[3,"XFontSetExtents","","",N,N],[12,"max_ink_extent","","",65,N],[12,"max_logical_extent","","",65,N],[3,"XFontStruct","","",N,N],[12,"ext_data","","",66,N],[12,"fid","","",66,N],[12,"direction","","",66,N],[12,"min_char_or_byte2","","",66,N],[12,"max_char_or_byte2","","",66,N],[12,"min_byte1","","",66,N],[12,"max_byte1","","",66,N],[12,"all_chars_exist","","",66,N],[12,"default_char","","",66,N],[12,"n_properties","","",66,N],[12,"properties","","",66,N],[12,"min_bounds","","",66,N],[12,"max_bounds","","",66,N],[12,"per_char","","",66,N],[12,"ascent","","",66,N],[12,"descent","","",66,N],[3,"XGCValues","","",N,N],[12,"function","","",67,N],[12,"plane_mask","","",67,N],[12,"foreground","","",67,N],[12,"background","","",67,N],[12,"line_width","","",67,N],[12,"line_style","","",67,N],[12,"cap_style","","",67,N],[12,"join_style","","",67,N],[12,"fill_style","","",67,N],[12,"fill_rule","","",67,N],[12,"arc_mode","","",67,N],[12,"tile","","",67,N],[12,"stipple","","",67,N],[12,"ts_x_origin","","",67,N],[12,"ts_y_origin","","",67,N],[12,"font","","",67,N],[12,"subwindow_mode","","",67,N],[12,"graphics_exposures","","",67,N],[12,"clip_x_origin","","",67,N],[12,"clip_y_origin","","",67,N],[12,"clip_mask","","",67,N],[12,"dash_offset","","",67,N],[12,"dashes","","",67,N],[3,"XGenericEventCookie","","",N,N],[12,"type_","","",68,N],[12,"serial","","",68,N],[12,"send_event","","",68,N],[12,"display","","",68,N],[12,"extension","","",68,N],[12,"evtype","","",68,N],[12,"cookie","","",68,N],[12,"data","","",68,N],[3,"XHostAddress","","",N,N],[12,"family","","",69,N],[12,"length","","",69,N],[12,"address","","",69,N],[3,"XIconSize","","",N,N],[12,"min_width","","",70,N],[12,"min_height","","",70,N],[12,"max_width","","",70,N],[12,"max_height","","",70,N],[12,"width_inc","","",70,N],[12,"height_inc","","",70,N],[3,"XImage","","",N,N],[12,"width","","",71,N],[12,"height","","",71,N],[12,"xoffset","","",71,N],[12,"format","","",71,N],[12,"data","","",71,N],[12,"byte_order","","",71,N],[12,"bitmap_unit","","",71,N],[12,"bitmap_bit_order","","",71,N],[12,"bitmap_pad","","",71,N],[12,"depth","","",71,N],[12,"bytes_per_line","","",71,N],[12,"bits_per_pixel","","",71,N],[12,"red_mask","","",71,N],[12,"green_mask","","",71,N],[12,"blue_mask","","",71,N],[12,"obdata","","",71,N],[12,"funcs","","",71,N],[3,"XKeyboardControl","","",N,N],[12,"key_click_percent","","",72,N],[12,"bell_percent","","",72,N],[12,"bell_pitch","","",72,N],[12,"bell_duration","","",72,N],[12,"led","","",72,N],[12,"led_mode","","",72,N],[12,"key","","",72,N],[12,"auto_repeat_mode","","",72,N],[3,"XKeyboardState","","",N,N],[12,"key_click_percent","","",73,N],[12,"bell_percent","","",73,N],[12,"bell_pitch","","",73,N],[12,"bell_duration","","",73,N],[12,"led_mask","","",73,N],[12,"global_auto_repeat","","",73,N],[12,"auto_repeats","","",73,N],[3,"XmbTextItem","","",N,N],[12,"chars","","",74,N],[12,"nchars","","",74,N],[12,"delta","","",74,N],[12,"font_set","","",74,N],[3,"XModifierKeymap","","",N,N],[12,"max_keypermod","","",75,N],[12,"modifiermap","","",75,N],[3,"XOMCharSetList","","",N,N],[12,"charset_count","","",76,N],[12,"charset_list","","",76,N],[3,"XPixmapFormatValues","","",N,N],[12,"depth","","",77,N],[12,"bits_per_pixel","","",77,N],[12,"scanline_pad","","",77,N],[3,"XPoint","","",N,N],[12,"x","","",78,N],[12,"y","","",78,N],[3,"XRectangle","","",N,N],[12,"x","","",79,N],[12,"y","","",79,N],[12,"width","","",79,N],[12,"height","","",79,N],[3,"XrmOptionDescRec","","",N,N],[12,"option","","",80,N],[12,"specifier","","",80,N],[12,"argKind","","",80,N],[12,"value","","",80,N],[3,"XrmValue","","",N,N],[12,"size","","",81,N],[12,"addr","","",81,N],[3,"XSegment","","",N,N],[12,"x1","","",82,N],[12,"y1","","",82,N],[12,"x2","","",82,N],[12,"y2","","",82,N],[3,"XSetWindowAttributes","","",N,N],[12,"background_pixmap","","",83,N],[12,"background_pixel","","",83,N],[12,"border_pixmap","","",83,N],[12,"border_pixel","","",83,N],[12,"bit_gravity","","",83,N],[12,"win_gravity","","",83,N],[12,"backing_store","","",83,N],[12,"backing_planes","","",83,N],[12,"backing_pixel","","",83,N],[12,"save_under","","",83,N],[12,"event_mask","","",83,N],[12,"do_not_propagate_mask","","",83,N],[12,"override_redirect","","",83,N],[12,"colormap","","",83,N],[12,"cursor","","",83,N],[3,"XSizeHints","","",N,N],[12,"flags","","",84,N],[12,"x","","",84,N],[12,"y","","",84,N],[12,"width","","",84,N],[12,"height","","",84,N],[12,"min_width","","",84,N],[12,"min_height","","",84,N],[12,"max_width","","",84,N],[12,"max_height","","",84,N],[12,"width_inc","","",84,N],[12,"height_inc","","",84,N],[12,"min_aspect","","",84,N],[12,"max_aspect","","",84,N],[12,"base_width","","",84,N],[12,"base_height","","",84,N],[12,"win_gravity","","",84,N],[3,"XStandardColormap","","",N,N],[12,"colormap","","",85,N],[12,"red_max","","",85,N],[12,"red_mult","","",85,N],[12,"green_max","","",85,N],[12,"green_mult","","",85,N],[12,"blue_max","","",85,N],[12,"blue_mult","","",85,N],[12,"base_pixel","","",85,N],[12,"visualid","","",85,N],[12,"killid","","",85,N],[3,"XTextItem","","",N,N],[12,"chars","","",86,N],[12,"nchars","","",86,N],[12,"delta","","",86,N],[12,"font","","",86,N],[3,"XTextItem16","","",N,N],[12,"chars","","",87,N],[12,"nchars","","",87,N],[12,"delta","","",87,N],[12,"font","","",87,N],[3,"XTextProperty","","",N,N],[12,"value","","",88,N],[12,"encoding","","",88,N],[12,"format","","",88,N],[12,"nitems","","",88,N],[3,"XTimeCoord","","",N,N],[12,"time","","",89,N],[12,"x","","",89,N],[12,"y","","",89,N],[3,"XVisualInfo","","",N,N],[12,"visual","","",90,N],[12,"visualid","","",90,N],[12,"screen","","",90,N],[12,"depth","","",90,N],[12,"class","","",90,N],[12,"red_mask","","",90,N],[12,"green_mask","","",90,N],[12,"blue_mask","","",90,N],[12,"colormap_size","","",90,N],[12,"bits_per_rgb","","",90,N],[3,"XwcTextItem","","",N,N],[12,"chars","","",91,N],[12,"nchars","","",91,N],[12,"delta","","",91,N],[12,"font_set","","",91,N],[3,"XWindowAttributes","","",N,N],[12,"x","","",92,N],[12,"y","","",92,N],[12,"width","","",92,N],[12,"height","","",92,N],[12,"border_width","","",92,N],[12,"depth","","",92,N],[12,"visual","","",92,N],[12,"root","","",92,N],[12,"class","","",92,N],[12,"bit_gravity","","",92,N],[12,"win_gravity","","",92,N],[12,"backing_store","","",92,N],[12,"backing_planes","","",92,N],[12,"backing_pixel","","",92,N],[12,"save_under","","",92,N],[12,"colormap","","",92,N],[12,"map_installed","","",92,N],[12,"map_state","","",92,N],[12,"all_event_masks","","",92,N],[12,"your_event_mask","","",92,N],[12,"do_not_propagate_mask","","",92,N],[12,"override_redirect","","",92,N],[12,"screen","","",92,N],[3,"XWindowChanges","","",N,N],[12,"x","","",93,N],[12,"y","","",93,N],[12,"width","","",93,N],[12,"height","","",93,N],[12,"border_width","","",93,N],[12,"sibling","","",93,N],[12,"stack_mode","","",93,N],[3,"XWMHints","","",N,N],[12,"flags","","",94,N],[12,"input","","",94,N],[12,"initial_state","","",94,N],[12,"icon_pixmap","","",94,N],[12,"icon_window","","",94,N],[12,"icon_x","","",94,N],[12,"icon_y","","",94,N],[12,"icon_mask","","",94,N],[12,"window_group","","",94,N],[3,"XIMCallback","","",N,N],[12,"client_data","","",95,N],[12,"callback","","",95,N],[3,"XICCallback","","",N,N],[12,"client_data","","",96,N],[12,"callback","","",96,N],[3,"AspectRatio","","",N,N],[12,"x","","",97,N],[12,"y","","",97,N],[3,"ClientMessageData","","",N,N],[3,"ImageFns","","",N,N],[12,"create_image","","",98,N],[12,"destroy_image","","",98,N],[12,"get_pixel","","",98,N],[12,"put_pixel","","",98,N],[12,"sub_image","","",98,N],[12,"add_pixel","","",98,N],[19,"XEvent","","",N,N],[12,"type_","","",99,N],[12,"any","","",99,N],[12,"button","","",99,N],[12,"circulate","","",99,N],[12,"circulate_request","","",99,N],[12,"client_message","","",99,N],[12,"colormap","","",99,N],[12,"configure","","",99,N],[12,"configure_request","","",99,N],[12,"create_window","","",99,N],[12,"crossing","","",99,N],[12,"destroy_window","","",99,N],[12,"error","","",99,N],[12,"expose","","",99,N],[12,"focus_change","","",99,N],[12,"generic_event_cookie","","",99,N],[12,"graphics_expose","","",99,N],[12,"gravity","","",99,N],[12,"key","","",99,N],[12,"keymap","","",99,N],[12,"map","","",99,N],[12,"mapping","","",99,N],[12,"map_request","","",99,N],[12,"motion","","",99,N],[12,"no_expose","","",99,N],[12,"property","","",99,N],[12,"reparent","","",99,N],[12,"resize_request","","",99,N],[12,"selection_clear","","",99,N],[12,"selection","","",99,N],[12,"selection_request","","",99,N],[12,"unmap","","",99,N],[12,"visibility","","",99,N],[12,"pad","","",99,N],[12,"xf86vm_notify","","",99,N],[12,"xrr_screen_change_notify","","",99,N],[12,"xrr_notify","","",99,N],[12,"xrr_output_change_notify","","",99,N],[12,"xrr_crtc_change_notify","","",99,N],[12,"xrr_output_property_notify","","",99,N],[12,"xrr_provider_change_notify","","",99,N],[12,"xrr_provider_property_notify","","",99,N],[12,"xrr_resource_change_notify","","",99,N],[12,"xss_notify","","",99,N],[4,"_XDisplay","","",N,N],[4,"xError","","",N,N],[4,"xEvent","","",N,N],[4,"_XGC","","",N,N],[4,"_XIC","","",N,N],[4,"_XIM","","",N,N],[4,"_XRegion","","",N,N],[4,"_XOC","","",N,N],[4,"_XOM","","",N,N],[4,"_XrmHashBucketRec","","",N,N],[4,"XkbKbdDpyStateRec","","",N,N],[0,"xkb","","",N,N],[6,"Atom","","",N,N],[6,"Bool","","",N,N],[6,"Colormap","","",N,N],[6,"Cursor","","",N,N],[6,"Drawable","","",N,N],[6,"Font","","",N,N],[6,"GContext","","",N,N],[6,"KeyCode","","",N,N],[6,"KeySym","","",N,N],[6,"Mask","","",N,N],[6,"Pixmap","","",N,N],[6,"Status","","",N,N],[6,"Time","","",N,N],[6,"VisualID","","",N,N],[6,"Window","","",N,N],[6,"XID","","",N,N],[6,"XPointer","","",N,N],[6,"XEDataObject","","",N,N],[6,"Display","","",N,N],[6,"GC","","",N,N],[6,"Region","","",N,N],[6,"XcmsCCC","","",N,N],[6,"XcmsColorSpace","","",N,N],[6,"XcmsFunctionSet","","",N,N],[6,"XContext","","",N,N],[6,"XFontSet","","",N,N],[6,"XIC","","",N,N],[6,"XIM","","",N,N],[6,"XkbAction","","",N,N],[6,"XkbBoundsPtr","","",N,N],[6,"XkbChangesPtr","","",N,N],[6,"XkbClientMapPtr","","",N,N],[6,"XkbColorPtr","","",N,N],[6,"XkbCompatMapPtr","","",N,N],[6,"XkbComponentListPtr","","",N,N],[6,"XkbComponentNamesPtr","","",N,N],[6,"XkbControlsChangesPtr","","",N,N],[6,"XkbControlsNotifyEvent","","",N,N],[6,"XkbControlsPtr","","",N,N],[6,"XkbDescPtr","","",N,N],[6,"XkbDeviceChangesPtr","","",N,N],[6,"XkbDeviceInfoPtr","","",N,N],[6,"XkbDeviceLedInfoPtr","","",N,N],[6,"XkbDoodadPtr","","",N,N],[6,"XkbExtensionDeviceNotifyEvent","","",N,N],[6,"XkbGeometryPtr","","",N,N],[6,"XkbGeometrySizesPtr","","",N,N],[6,"XkbIndicatorMapPtr","","",N,N],[6,"XkbIndicatorMapRec","","",N,N],[6,"XkbIndicatorPtr","","",N,N],[6,"XkbKeyTypePtr","","",N,N],[6,"XkbMapChangesPtr","","",N,N],[6,"XkbMapNotifyEvent","","",N,N],[6,"XkbModsPtr","","",N,N],[6,"XkbModsRec","","",N,N],[6,"XkbNameChangesPtr","","",N,N],[6,"XkbNamesNotifyEvent","","",N,N],[6,"XkbNamesPtr","","",N,N],[6,"XkbKeyAliasPtr","","",N,N],[6,"XkbKeyNamePtr","","",N,N],[6,"XkbKeyPtr","","",N,N],[6,"XkbOutlinePtr","","",N,N],[6,"XkbOverlayKeyPtr","","",N,N],[6,"XkbOverlayPtr","","",N,N],[6,"XkbOverlayRowPtr","","",N,N],[6,"XkbPropertyPtr","","",N,N],[6,"XkbRowPtr","","",N,N],[6,"XkbSectionPtr","","",N,N],[6,"XkbServerMapPtr","","",N,N],[6,"XkbShapePtr","","",N,N],[6,"XkbStatePtr","","",N,N],[6,"XkbSymInterpretPtr","","",N,N],[6,"XOM","","",N,N],[6,"XrmDatabase","","",N,N],[6,"XrmOptionDescList","","",N,N],[6,"XConnectionWatchProc","","",N,N],[6,"XIMProc","","",N,N],[6,"XICProc","","",N,N],[6,"XICCEncodingStyle","","",N,N],[6,"XOrientation","","",N,N],[6,"XrmBinding","","",N,N],[6,"XrmOptionKind","","",N,N],[6,"XButtonPressedEvent","","",N,N],[6,"XButtonReleasedEvent","","",N,N],[6,"XEnterWindowEvent","","",N,N],[6,"XLeaveWindowEvent","","",N,N],[6,"XFocusInEvent","","",N,N],[6,"XFocusOutEvent","","",N,N],[6,"XKeyPressedEvent","","",N,N],[6,"XKeyReleasedEvent","","",N,N],[6,"XPointerMovedEvent","","",N,N],[6,"XkbKbdDpyStatePtr","","",N,N],[17,"AllocNone","","",N,N],[17,"AllocAll","","",N,N],[17,"XkbKeyNameLength","","",N,N],[17,"XkbNumIndicators","","",N,N],[17,"XkbNumKbdGroups","","",N,N],[17,"XkbNumVirtualMods","","",N,N],[17,"XA_PRIMARY","","",N,N],[17,"XA_SECONDARY","","",N,N],[17,"XA_ARC","","",N,N],[17,"XA_ATOM","","",N,N],[17,"XA_BITMAP","","",N,N],[17,"XA_CARDINAL","","",N,N],[17,"XA_COLORMAP","","",N,N],[17,"XA_CURSOR","","",N,N],[17,"XA_CUT_BUFFER0","","",N,N],[17,"XA_CUT_BUFFER1","","",N,N],[17,"XA_CUT_BUFFER2","","",N,N],[17,"XA_CUT_BUFFER3","","",N,N],[17,"XA_CUT_BUFFER4","","",N,N],[17,"XA_CUT_BUFFER5","","",N,N],[17,"XA_CUT_BUFFER6","","",N,N],[17,"XA_CUT_BUFFER7","","",N,N],[17,"XA_DRAWABLE","","",N,N],[17,"XA_FONT","","",N,N],[17,"XA_INTEGER","","",N,N],[17,"XA_PIXMAP","","",N,N],[17,"XA_POINT","","",N,N],[17,"XA_RECTANGLE","","",N,N],[17,"XA_RESOURCE_MANAGER","","",N,N],[17,"XA_RGB_COLOR_MAP","","",N,N],[17,"XA_RGB_BEST_MAP","","",N,N],[17,"XA_RGB_BLUE_MAP","","",N,N],[17,"XA_RGB_DEFAULT_MAP","","",N,N],[17,"XA_RGB_GRAY_MAP","","",N,N],[17,"XA_RGB_GREEN_MAP","","",N,N],[17,"XA_RGB_RED_MAP","","",N,N],[17,"XA_STRING","","",N,N],[17,"XA_VISUALID","","",N,N],[17,"XA_WINDOW","","",N,N],[17,"XA_WM_COMMAND","","",N,N],[17,"XA_WM_HINTS","","",N,N],[17,"XA_WM_CLIENT_MACHINE","","",N,N],[17,"XA_WM_ICON_NAME","","",N,N],[17,"XA_WM_ICON_SIZE","","",N,N],[17,"XA_WM_NAME","","",N,N],[17,"XA_WM_NORMAL_HINTS","","",N,N],[17,"XA_WM_SIZE_HINTS","","",N,N],[17,"XA_WM_ZOOM_HINTS","","",N,N],[17,"XA_MIN_SPACE","","",N,N],[17,"XA_NORM_SPACE","","",N,N],[17,"XA_MAX_SPACE","","",N,N],[17,"XA_END_SPACE","","",N,N],[17,"XA_SUPERSCRIPT_X","","",N,N],[17,"XA_SUPERSCRIPT_Y","","",N,N],[17,"XA_SUBSCRIPT_X","","",N,N],[17,"XA_SUBSCRIPT_Y","","",N,N],[17,"XA_UNDERLINE_POSITION","","",N,N],[17,"XA_UNDERLINE_THICKNESS","","",N,N],[17,"XA_STRIKEOUT_ASCENT","","",N,N],[17,"XA_STRIKEOUT_DESCENT","","",N,N],[17,"XA_ITALIC_ANGLE","","",N,N],[17,"XA_X_HEIGHT","","",N,N],[17,"XA_QUAD_WIDTH","","",N,N],[17,"XA_WEIGHT","","",N,N],[17,"XA_POINT_SIZE","","",N,N],[17,"XA_RESOLUTION","","",N,N],[17,"XA_COPYRIGHT","","",N,N],[17,"XA_NOTICE","","",N,N],[17,"XA_FONT_NAME","","",N,N],[17,"XA_FAMILY_NAME","","",N,N],[17,"XA_FULL_NAME","","",N,N],[17,"XA_CAP_HEIGHT","","",N,N],[17,"XA_WM_CLASS","","",N,N],[17,"XA_WM_TRANSIENT_FOR","","",N,N],[17,"False","","",N,N],[17,"True","","",N,N],[17,"Unsorted","","",N,N],[17,"YSorted","","",N,N],[17,"YXSorted","","",N,N],[17,"YXBanded","","",N,N],[17,"DoRed","","",N,N],[17,"DoGreen","","",N,N],[17,"DoBlue","","",N,N],[17,"Success","","",N,N],[17,"BadRequest","","",N,N],[17,"BadValue","","",N,N],[17,"BadWindow","","",N,N],[17,"BadPixmap","","",N,N],[17,"BadAtom","","",N,N],[17,"BadCursor","","",N,N],[17,"BadFont","","",N,N],[17,"BadMatch","","",N,N],[17,"BadDrawable","","",N,N],[17,"BadAccess","","",N,N],[17,"BadAlloc","","",N,N],[17,"BadColor","","",N,N],[17,"BadGC","","",N,N],[17,"BadIDChoice","","",N,N],[17,"BadName","","",N,N],[17,"BadLength","","",N,N],[17,"BadImplementation","","",N,N],[17,"FirstExtensionError","","",N,N],[17,"LastExtensionError","","",N,N],[17,"KeyPress","","",N,N],[17,"KeyRelease","","",N,N],[17,"ButtonPress","","",N,N],[17,"ButtonRelease","","",N,N],[17,"MotionNotify","","",N,N],[17,"EnterNotify","","",N,N],[17,"LeaveNotify","","",N,N],[17,"FocusIn","","",N,N],[17,"FocusOut","","",N,N],[17,"KeymapNotify","","",N,N],[17,"Expose","","",N,N],[17,"GraphicsExpose","","",N,N],[17,"NoExpose","","",N,N],[17,"VisibilityNotify","","",N,N],[17,"CreateNotify","","",N,N],[17,"DestroyNotify","","",N,N],[17,"UnmapNotify","","",N,N],[17,"MapNotify","","",N,N],[17,"MapRequest","","",N,N],[17,"ReparentNotify","","",N,N],[17,"ConfigureNotify","","",N,N],[17,"ConfigureRequest","","",N,N],[17,"GravityNotify","","",N,N],[17,"ResizeRequest","","",N,N],[17,"CirculateNotify","","",N,N],[17,"CirculateRequest","","",N,N],[17,"PropertyNotify","","",N,N],[17,"SelectionClear","","",N,N],[17,"SelectionRequest","","",N,N],[17,"SelectionNotify","","",N,N],[17,"ColormapNotify","","",N,N],[17,"ClientMessage","","",N,N],[17,"MappingNotify","","",N,N],[17,"GenericEvent","","",N,N],[17,"LASTEvent","","",N,N],[17,"NoEventMask","","",N,N],[17,"KeyPressMask","","",N,N],[17,"KeyReleaseMask","","",N,N],[17,"ButtonPressMask","","",N,N],[17,"ButtonReleaseMask","","",N,N],[17,"EnterWindowMask","","",N,N],[17,"LeaveWindowMask","","",N,N],[17,"PointerMotionMask","","",N,N],[17,"PointerMotionHintMask","","",N,N],[17,"Button1MotionMask","","",N,N],[17,"Button2MotionMask","","",N,N],[17,"Button3MotionMask","","",N,N],[17,"Button4MotionMask","","",N,N],[17,"Button5MotionMask","","",N,N],[17,"ButtonMotionMask","","",N,N],[17,"KeymapStateMask","","",N,N],[17,"ExposureMask","","",N,N],[17,"VisibilityChangeMask","","",N,N],[17,"StructureNotifyMask","","",N,N],[17,"ResizeRedirectMask","","",N,N],[17,"SubstructureNotifyMask","","",N,N],[17,"SubstructureRedirectMask","","",N,N],[17,"FocusChangeMask","","",N,N],[17,"PropertyChangeMask","","",N,N],[17,"ColormapChangeMask","","",N,N],[17,"OwnerGrabButtonMask","","",N,N],[17,"PropModeReplace","","",N,N],[17,"PropModePrepend","","",N,N],[17,"PropModeAppend","","",N,N],[17,"ShiftMapIndex","","",N,N],[17,"LockMapIndex","","",N,N],[17,"ControlMapIndex","","",N,N],[17,"Mod1MapIndex","","",N,N],[17,"Mod2MapIndex","","",N,N],[17,"Mod3MapIndex","","",N,N],[17,"Mod4MapIndex","","",N,N],[17,"Mod5MapIndex","","",N,N],[17,"Button1Mask","","",N,N],[17,"Button2Mask","","",N,N],[17,"Button3Mask","","",N,N],[17,"Button4Mask","","",N,N],[17,"Button5Mask","","",N,N],[17,"AnyModifier","","",N,N],[17,"NotifyNormal","","",N,N],[17,"NotifyGrab","","",N,N],[17,"NotifyUngrab","","",N,N],[17,"NotifyWhileGrabbed","","",N,N],[17,"NotifyHint","","",N,N],[17,"NotifyAncestor","","",N,N],[17,"NotifyVirtual","","",N,N],[17,"NotifyInferior","","",N,N],[17,"NotifyNonlinear","","",N,N],[17,"NotifyNonlinearVirtual","","",N,N],[17,"NotifyPointer","","",N,N],[17,"NotifyPointerRoot","","",N,N],[17,"NotifyDetailNone","","",N,N],[17,"VisibilityUnobscured","","",N,N],[17,"VisibilityPartiallyObscured","","",N,N],[17,"VisibilityFullyObscured","","",N,N],[17,"PlaceOnTop","","",N,N],[17,"PlaceOnBottom","","",N,N],[17,"FamilyInternet","","",N,N],[17,"FamilyDECnet","","",N,N],[17,"FamilyChaos","","",N,N],[17,"FamilyInternet6","","",N,N],[17,"FamilyServerInterpreted","","",N,N],[17,"PropertyNewValue","","",N,N],[17,"PropertyDelete","","",N,N],[17,"ColormapUninstalled","","",N,N],[17,"ColormapInstalled","","",N,N],[17,"GrabModeSync","","",N,N],[17,"GrabModeAsync","","",N,N],[17,"GrabSuccess","","",N,N],[17,"AlreadyGrabbed","","",N,N],[17,"GrabInvalidTime","","",N,N],[17,"GrabNotViewable","","",N,N],[17,"GrabFrozen","","",N,N],[17,"AsyncPointer","","",N,N],[17,"SyncPointer","","",N,N],[17,"ReplayPointer","","",N,N],[17,"AsyncKeyboard","","",N,N],[17,"SyncKeyboard","","",N,N],[17,"ReplayKeyboard","","",N,N],[17,"AsyncBoth","","",N,N],[17,"SyncBoth","","",N,N],[17,"RevertToNone","","",N,N],[17,"RevertToPointerRoot","","",N,N],[17,"RevertToParent","","",N,N],[17,"CWX","","",N,N],[17,"CWY","","",N,N],[17,"CWWidth","","",N,N],[17,"CWHeight","","",N,N],[17,"CWBorderWidth","","",N,N],[17,"CWSibling","","",N,N],[17,"CWStackMode","","",N,N],[17,"ForgetGravity","","",N,N],[17,"UnmapGravity","","",N,N],[17,"NorthWestGravity","","",N,N],[17,"NorthGravity","","",N,N],[17,"NorthEastGravity","","",N,N],[17,"WestGravity","","",N,N],[17,"CenterGravity","","",N,N],[17,"EastGravity","","",N,N],[17,"SouthWestGravity","","",N,N],[17,"SouthGravity","","",N,N],[17,"SouthEastGravity","","",N,N],[17,"StaticGravity","","",N,N],[17,"XYBitmap","","",N,N],[17,"XYPixmap","","",N,N],[17,"ZPixmap","","",N,N],[17,"NotUseful","","",N,N],[17,"WhenMapped","","",N,N],[17,"Always","","",N,N],[17,"IsUnmapped","","",N,N],[17,"IsUnviewable","","",N,N],[17,"IsViewable","","",N,N],[17,"ShiftMask","","",N,N],[17,"LockMask","","",N,N],[17,"ControlMask","","",N,N],[17,"Mod1Mask","","",N,N],[17,"Mod2Mask","","",N,N],[17,"Mod3Mask","","",N,N],[17,"Mod4Mask","","",N,N],[17,"Mod5Mask","","",N,N],[17,"Button1","","",N,N],[17,"Button2","","",N,N],[17,"Button3","","",N,N],[17,"Button4","","",N,N],[17,"Button5","","",N,N],[17,"USPosition","","",N,N],[17,"USSize","","",N,N],[17,"PPosition","","",N,N],[17,"PSize","","",N,N],[17,"PMinSize","","",N,N],[17,"PMaxSize","","",N,N],[17,"PResizeInc","","",N,N],[17,"PAspect","","",N,N],[17,"PBaseSize","","",N,N],[17,"PWinGravity","","",N,N],[17,"PAllHints","","",N,N],[17,"SetModeInsert","","",N,N],[17,"SetModeDelete","","",N,N],[17,"DestroyAll","","",N,N],[17,"RetainPermanent","","",N,N],[17,"RetainTemporary","","",N,N],[17,"Above","","",N,N],[17,"Below","","",N,N],[17,"TopIf","","",N,N],[17,"BottomIf","","",N,N],[17,"Opposite","","",N,N],[17,"RaiseLowest","","",N,N],[17,"LowerHighest","","",N,N],[17,"GXclear","","",N,N],[17,"GXand","","",N,N],[17,"GXandReverse","","",N,N],[17,"GXcopy","","",N,N],[17,"GXandInverted","","",N,N],[17,"GXnoop","","",N,N],[17,"GXxor","","",N,N],[17,"GXor","","",N,N],[17,"GXnor","","",N,N],[17,"GXequiv","","",N,N],[17,"GXinvert","","",N,N],[17,"GXorReverse","","",N,N],[17,"GXcopyInverted","","",N,N],[17,"GXorInverted","","",N,N],[17,"GXnand","","",N,N],[17,"GXset","","",N,N],[17,"LineSolid","","",N,N],[17,"LineOnOffDash","","",N,N],[17,"LineDoubleDash","","",N,N],[17,"CapNotLast","","",N,N],[17,"CapButt","","",N,N],[17,"CapRound","","",N,N],[17,"CapProjecting","","",N,N],[17,"JoinMiter","","",N,N],[17,"JoinRound","","",N,N],[17,"JoinBevel","","",N,N],[17,"FillSolid","","",N,N],[17,"FillTiled","","",N,N],[17,"FillStippled","","",N,N],[17,"FillOpaqueStippled","","",N,N],[17,"EvenOddRule","","",N,N],[17,"WindingRule","","",N,N],[17,"ClipByChildren","","",N,N],[17,"IncludeInferiors","","",N,N],[17,"CoordModeOrigin","","",N,N],[17,"CoordModePrevious","","",N,N],[17,"Complex","","",N,N],[17,"Nonconvex","","",N,N],[17,"Convex","","",N,N],[17,"ArcChord","","",N,N],[17,"ArcPieSlice","","",N,N],[17,"GCFunction","","",N,N],[17,"GCPlaneMask","","",N,N],[17,"GCForeground","","",N,N],[17,"GCBackground","","",N,N],[17,"GCLineWidth","","",N,N],[17,"GCLineStyle","","",N,N],[17,"GCCapStyle","","",N,N],[17,"GCJoinStyle","","",N,N],[17,"GCFillStyle","","",N,N],[17,"GCFillRule","","",N,N],[17,"GCTile","","",N,N],[17,"GCStipple","","",N,N],[17,"GCTileStipXOrigin","","",N,N],[17,"GCTileStipYOrigin","","",N,N],[17,"GCFont","","",N,N],[17,"GCSubwindowMode","","",N,N],[17,"GCGraphicsExposures","","",N,N],[17,"GCClipXOrigin","","",N,N],[17,"GCClipYOrigin","","",N,N],[17,"GCClipMask","","",N,N],[17,"GCDashOffset","","",N,N],[17,"GCDashList","","",N,N],[17,"GCArcMode","","",N,N],[17,"GCLastBit","","",N,N],[17,"FontLeftToRight","","",N,N],[17,"FontRightToLeft","","",N,N],[17,"FontChange","","",N,N],[17,"CursorShape","","",N,N],[17,"TileShape","","",N,N],[17,"StippleShape","","",N,N],[17,"AutoRepeatModeOff","","",N,N],[17,"AutoRepeatModeOn","","",N,N],[17,"AutoRepeatModeDefault","","",N,N],[17,"LedModeOff","","",N,N],[17,"LedModeOn","","",N,N],[17,"KBKeyClickPercent","","",N,N],[17,"KBBellPercent","","",N,N],[17,"KBBellPitch","","",N,N],[17,"KBBellDuration","","",N,N],[17,"KBLed","","",N,N],[17,"KBLedMode","","",N,N],[17,"KBKey","","",N,N],[17,"KBAutoRepeatMode","","",N,N],[17,"MappingSuccess","","",N,N],[17,"MappingBusy","","",N,N],[17,"MappingFailed","","",N,N],[17,"MappingModifier","","",N,N],[17,"MappingKeyboard","","",N,N],[17,"MappingPointer","","",N,N],[17,"DontPreferBlanking","","",N,N],[17,"PreferBlanking","","",N,N],[17,"DefaultBlanking","","",N,N],[17,"DisableScreenSaver","","",N,N],[17,"DisableScreenInterval","","",N,N],[17,"DontAllowExposures","","",N,N],[17,"AllowExposures","","",N,N],[17,"DefaultExposures","","",N,N],[17,"ScreenSaverReset","","",N,N],[17,"ScreenSaverActive","","",N,N],[17,"HostInsert","","",N,N],[17,"HostDelete","","",N,N],[17,"EnableAccess","","",N,N],[17,"DisableAccess","","",N,N],[17,"StaticGray","","",N,N],[17,"GrayScale","","",N,N],[17,"StaticColor","","",N,N],[17,"PseudoColor","","",N,N],[17,"TrueColor","","",N,N],[17,"DirectColor","","",N,N],[17,"VisualNoMask","","",N,N],[17,"VisualIDMask","","",N,N],[17,"VisualScreenMask","","",N,N],[17,"VisualDepthMask","","",N,N],[17,"VisualClassMask","","",N,N],[17,"VisualRedMaskMask","","",N,N],[17,"VisualGreenMaskMask","","",N,N],[17,"VisualBlueMaskMask","","",N,N],[17,"VisualColormapSizeMask","","",N,N],[17,"VisualBitsPerRGBMask","","",N,N],[17,"VisualAllMask","","",N,N],[17,"CWBackPixmap","","",N,N],[17,"CWBackPixel","","",N,N],[17,"CWBorderPixmap","","",N,N],[17,"CWBorderPixel","","",N,N],[17,"CWBitGravity","","",N,N],[17,"CWWinGravity","","",N,N],[17,"CWBackingStore","","",N,N],[17,"CWBackingPlanes","","",N,N],[17,"CWBackingPixel","","",N,N],[17,"CWOverrideRedirect","","",N,N],[17,"CWSaveUnder","","",N,N],[17,"CWEventMask","","",N,N],[17,"CWDontPropagate","","",N,N],[17,"CWColormap","","",N,N],[17,"CWCursor","","",N,N],[17,"InputOutput","","",N,N],[17,"InputOnly","","",N,N],[17,"XIMPreeditArea","","",N,N],[17,"XIMPreeditCallbacks","","",N,N],[17,"XIMPreeditPosition","","",N,N],[17,"XIMPreeditNothing","","",N,N],[17,"XIMPreeditNone","","",N,N],[17,"XIMStatusArea","","",N,N],[17,"XIMStatusCallbacks","","",N,N],[17,"XIMStatusNothing","","",N,N],[17,"XIMStatusNone","","",N,N],[17,"LSBFirst","","",N,N],[17,"MSBFirst","","",N,N],[17,"ParentRelative","","",N,N],[17,"CopyFromParent","","",N,N],[17,"PointerWindow","","",N,N],[17,"InputFocus","","",N,N],[17,"PointerRoot","","",N,N],[17,"AnyPropertyType","","",N,N],[17,"AnyKey","","",N,N],[17,"AnyButton","","",N,N],[17,"AllTemporary","","",N,N],[17,"CurrentTime","","",N,N],[17,"NoSymbol","","",N,N],[17,"X_PROTOCOL","","",N,N],[17,"X_PROTOCOL_REVISION","","",N,N],[17,"XNVaNestedList","","",N,N],[17,"XNQueryInputStyle","","",N,N],[17,"XNClientWindow","","",N,N],[17,"XNInputStyle","","",N,N],[17,"XNFocusWindow","","",N,N],[17,"XNResourceName","","",N,N],[17,"XNResourceClass","","",N,N],[17,"XNGeometryCallback","","",N,N],[17,"XNDestroyCallback","","",N,N],[17,"XNFilterEvents","","",N,N],[17,"XNPreeditStartCallback","","",N,N],[17,"XNPreeditDoneCallback","","",N,N],[17,"XNPreeditDrawCallback","","",N,N],[17,"XNPreeditCaretCallback","","",N,N],[17,"XNPreeditStateNotifyCallback","","",N,N],[17,"XNPreeditAttributes","","",N,N],[17,"XNStatusStartCallback","","",N,N],[17,"XNStatusDoneCallback","","",N,N],[17,"XNStatusDrawCallback","","",N,N],[17,"XNStatusAttributes","","",N,N],[17,"XNArea","","",N,N],[17,"XNAreaNeeded","","",N,N],[17,"XNSpotLocation","","",N,N],[17,"XNColormap","","",N,N],[17,"XNStdColormap","","",N,N],[17,"XNForeground","","",N,N],[17,"XNBackground","","",N,N],[17,"XNBackgroundPixmap","","",N,N],[17,"XNFontSet","","",N,N],[17,"XNLineSpace","","",N,N],[17,"XNCursor","","",N,N],[17,"XNVaNestedList_0","","",N,N],[17,"XNQueryInputStyle_0","","",N,N],[17,"XNClientWindow_0","","",N,N],[17,"XNInputStyle_0","","",N,N],[17,"XNFocusWindow_0","","",N,N],[17,"XNResourceName_0","","",N,N],[17,"XNResourceClass_0","","",N,N],[17,"XNGeometryCallback_0","","",N,N],[17,"XNDestroyCallback_0","","",N,N],[17,"XNFilterEvents_0","","",N,N],[17,"XNPreeditStartCallback_0","","",N,N],[17,"XNPreeditDoneCallback_0","","",N,N],[17,"XNPreeditDrawCallback_0","","",N,N],[17,"XNPreeditCaretCallback_0","","",N,N],[17,"XNPreeditStateNotifyCallback_0","","",N,N],[17,"XNPreeditAttributes_0","","",N,N],[17,"XNStatusStartCallback_0","","",N,N],[17,"XNStatusDoneCallback_0","","",N,N],[17,"XNStatusDrawCallback_0","","",N,N],[17,"XNStatusAttributes_0","","",N,N],[17,"XNArea_0","","",N,N],[17,"XNAreaNeeded_0","","",N,N],[17,"XNSpotLocation_0","","",N,N],[17,"XNColormap_0","","",N,N],[17,"XNStdColormap_0","","",N,N],[17,"XNForeground_0","","",N,N],[17,"XNBackground_0","","",N,N],[17,"XNBackgroundPixmap_0","","",N,N],[17,"XNFontSet_0","","",N,N],[17,"XNLineSpace_0","","",N,N],[17,"XNCursor_0","","",N,N],[17,"XNQueryIMValuesList","","",N,N],[17,"XNQueryICValuesList","","",N,N],[17,"XNVisiblePosition","","",N,N],[17,"XNR6PreeditCallback","","",N,N],[17,"XNStringConversionCallback","","",N,N],[17,"XNStringConversion","","",N,N],[17,"XNResetState","","",N,N],[17,"XNHotKey","","",N,N],[17,"XNHotKeyState","","",N,N],[17,"XNPreeditState","","",N,N],[17,"XNSeparatorofNestedList","","",N,N],[17,"XNQueryIMValuesList_0","","",N,N],[17,"XNQueryICValuesList_0","","",N,N],[17,"XNVisiblePosition_0","","",N,N],[17,"XNR6PreeditCallback_0","","",N,N],[17,"XNStringConversionCallback_0","","",N,N],[17,"XNStringConversion_0","","",N,N],[17,"XNResetState_0","","",N,N],[17,"XNHotKey_0","","",N,N],[17,"XNHotKeyState_0","","",N,N],[17,"XNPreeditState_0","","",N,N],[17,"XNSeparatorofNestedList_0","","",N,N],[17,"XBufferOverflow","","",N,N],[17,"XLookupNone","","",N,N],[17,"XLookupChars","","",N,N],[17,"XLookupKeySym","","",N,N],[17,"XLookupBoth","","",N,N],[17,"XkbActionMessageLength","","",N,N],[17,"XkbOD_Success","","",N,N],[17,"XkbOD_BadLibraryVersion","","",N,N],[17,"XkbOD_ConnectionRefused","","",N,N],[17,"XkbOD_NonXkbServer","","",N,N],[17,"XkbOD_BadServerVersion","","",N,N],[17,"XkbLC_ForceLatinLookup","","",N,N],[17,"XkbLC_ConsumeLookupMods","","",N,N],[17,"XkbLC_AlwaysConsumeShiftAndLock","","",N,N],[17,"XkbLC_IgnoreNewKeyboards","","",N,N],[17,"XkbLC_ControlFallback","","",N,N],[17,"XkbLC_ConsumeKeysOnComposeFail","","",N,N],[17,"XkbLC_ComposeLED","","",N,N],[17,"XkbLC_BeepOnComposeFail","","",N,N],[17,"XkbLC_AllComposeControls","","",N,N],[17,"XkbLC_AllControls","","",N,N],[17,"XkbNewKeyboardNotify","","",N,N],[17,"XkbMapNotify","","",N,N],[17,"XkbStateNotify","","",N,N],[17,"XkbControlsNotify","","",N,N],[17,"XkbIndicatorStateNotify","","",N,N],[17,"XkbIndicatorMapNotify","","",N,N],[17,"XkbNamesNotify","","",N,N],[17,"XkbCompatMapNotify","","",N,N],[17,"XkbBellNotify","","",N,N],[17,"XkbActionMessage","","",N,N],[17,"XkbAccessXNotify","","",N,N],[17,"XkbExtensionDeviceNotify","","",N,N],[17,"XkbNewKeyboardNotifyMask","","",N,N],[17,"XkbMapNotifyMask","","",N,N],[17,"XkbStateNotifyMask","","",N,N],[17,"XkbControlsNotifyMask","","",N,N],[17,"XkbIndicatorStateNotifyMask","","",N,N],[17,"XkbIndicatorMapNotifyMask","","",N,N],[17,"XkbNamesNotifyMask","","",N,N],[17,"XkbCompatMapNotifyMask","","",N,N],[17,"XkbBellNotifyMask","","",N,N],[17,"XkbActionMessageMask","","",N,N],[17,"XkbAccessXNotifyMask","","",N,N],[17,"XkbExtensionDeviceNotifyMask","","",N,N],[17,"XkbAllEventsMask","","",N,N],[17,"NoValue","","",N,N],[17,"XValue","","",N,N],[17,"YValue","","",N,N],[17,"WidthValue","","",N,N],[17,"HeightValue","","",N,N],[17,"AllValues","","",N,N],[17,"XNegative","","",N,N],[17,"YNegative","","",N,N],[17,"InputHint","","",N,N],[17,"StateHint","","",N,N],[17,"IconPixmapHint","","",N,N],[17,"IconWindowHint","","",N,N],[17,"IconPositionHint","","",N,N],[17,"IconMaskHint","","",N,N],[17,"WindowGroupHint","","",N,N],[17,"AllHints","","",N,N],[17,"XUrgencyHint","","",N,N],[17,"XStringStyle","","",N,N],[17,"XCompoundTextStyle","","",N,N],[17,"XTextStyle","","",N,N],[17,"XStdICCTextStyle","","",N,N],[17,"XUTF8StringStyle","","",N,N],[11,"open","","",2,[[],["result",["xlib","openerror"]]]],[11,"clone","","",99,[[["self"]],["xevent"]]],[11,"get_type","","",99,[[["self"]],["c_int"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"as_mut","","",99,[[["self"]],["xanyevent"]]],[11,"as_ref","","",99,[[["self"]],["xanyevent"]]],[11,"from","","",99,[[["xanyevent"]],["xevent"]]],[11,"from","","",99,[[["xanyevent"]],["xevent"]]],[11,"from","","",3,[[["xevent"]],["xanyevent"]]],[11,"from","","",3,[[["xevent"]],["xanyevent"]]],[11,"as_mut","","",99,[[["self"]],["xbuttonevent"]]],[11,"as_ref","","",99,[[["self"]],["xbuttonevent"]]],[11,"from","","",99,[[["xbuttonevent"]],["xevent"]]],[11,"from","","",99,[[["xbuttonevent"]],["xevent"]]],[11,"from","","",4,[[["xevent"]],["xbuttonevent"]]],[11,"from","","",4,[[["xevent"]],["xbuttonevent"]]],[11,"as_mut","","",99,[[["self"]],["xcirculateevent"]]],[11,"as_ref","","",99,[[["self"]],["xcirculateevent"]]],[11,"from","","",99,[[["xcirculateevent"]],["xevent"]]],[11,"from","","",99,[[["xcirculateevent"]],["xevent"]]],[11,"from","","",5,[[["xevent"]],["xcirculateevent"]]],[11,"from","","",5,[[["xevent"]],["xcirculateevent"]]],[11,"as_mut","","",99,[[["self"]],["xcirculaterequestevent"]]],[11,"as_ref","","",99,[[["self"]],["xcirculaterequestevent"]]],[11,"from","","",99,[[["xcirculaterequestevent"]],["xevent"]]],[11,"from","","",99,[[["xcirculaterequestevent"]],["xevent"]]],[11,"from","","",6,[[["xevent"]],["xcirculaterequestevent"]]],[11,"from","","",6,[[["xevent"]],["xcirculaterequestevent"]]],[11,"as_mut","","",99,[[["self"]],["xclientmessageevent"]]],[11,"as_ref","","",99,[[["self"]],["xclientmessageevent"]]],[11,"from","","",99,[[["xclientmessageevent"]],["xevent"]]],[11,"from","","",99,[[["xclientmessageevent"]],["xevent"]]],[11,"from","","",7,[[["xevent"]],["xclientmessageevent"]]],[11,"from","","",7,[[["xevent"]],["xclientmessageevent"]]],[11,"as_mut","","",99,[[["self"]],["xcolormapevent"]]],[11,"as_ref","","",99,[[["self"]],["xcolormapevent"]]],[11,"from","","",99,[[["xcolormapevent"]],["xevent"]]],[11,"from","","",99,[[["xcolormapevent"]],["xevent"]]],[11,"from","","",8,[[["xevent"]],["xcolormapevent"]]],[11,"from","","",8,[[["xevent"]],["xcolormapevent"]]],[11,"as_mut","","",99,[[["self"]],["xconfigureevent"]]],[11,"as_ref","","",99,[[["self"]],["xconfigureevent"]]],[11,"from","","",99,[[["xconfigureevent"]],["xevent"]]],[11,"from","","",99,[[["xconfigureevent"]],["xevent"]]],[11,"from","","",9,[[["xevent"]],["xconfigureevent"]]],[11,"from","","",9,[[["xevent"]],["xconfigureevent"]]],[11,"as_mut","","",99,[[["self"]],["xconfigurerequestevent"]]],[11,"as_ref","","",99,[[["self"]],["xconfigurerequestevent"]]],[11,"from","","",99,[[["xconfigurerequestevent"]],["xevent"]]],[11,"from","","",99,[[["xconfigurerequestevent"]],["xevent"]]],[11,"from","","",10,[[["xevent"]],["xconfigurerequestevent"]]],[11,"from","","",10,[[["xevent"]],["xconfigurerequestevent"]]],[11,"as_mut","","",99,[[["self"]],["xcreatewindowevent"]]],[11,"as_ref","","",99,[[["self"]],["xcreatewindowevent"]]],[11,"from","","",99,[[["xcreatewindowevent"]],["xevent"]]],[11,"from","","",99,[[["xcreatewindowevent"]],["xevent"]]],[11,"from","","",11,[[["xevent"]],["xcreatewindowevent"]]],[11,"from","","",11,[[["xevent"]],["xcreatewindowevent"]]],[11,"as_mut","","",99,[[["self"]],["xcrossingevent"]]],[11,"as_ref","","",99,[[["self"]],["xcrossingevent"]]],[11,"from","","",99,[[["xcrossingevent"]],["xevent"]]],[11,"from","","",99,[[["xcrossingevent"]],["xevent"]]],[11,"from","","",12,[[["xevent"]],["xcrossingevent"]]],[11,"from","","",12,[[["xevent"]],["xcrossingevent"]]],[11,"as_mut","","",99,[[["self"]],["xdestroywindowevent"]]],[11,"as_ref","","",99,[[["self"]],["xdestroywindowevent"]]],[11,"from","","",99,[[["xdestroywindowevent"]],["xevent"]]],[11,"from","","",99,[[["xdestroywindowevent"]],["xevent"]]],[11,"from","","",13,[[["xevent"]],["xdestroywindowevent"]]],[11,"from","","",13,[[["xevent"]],["xdestroywindowevent"]]],[11,"as_mut","","",99,[[["self"]],["xerrorevent"]]],[11,"as_ref","","",99,[[["self"]],["xerrorevent"]]],[11,"from","","",99,[[["xerrorevent"]],["xevent"]]],[11,"from","","",99,[[["xerrorevent"]],["xevent"]]],[11,"from","","",14,[[["xevent"]],["xerrorevent"]]],[11,"from","","",14,[[["xevent"]],["xerrorevent"]]],[11,"as_mut","","",99,[[["self"]],["xexposeevent"]]],[11,"as_ref","","",99,[[["self"]],["xexposeevent"]]],[11,"from","","",99,[[["xexposeevent"]],["xevent"]]],[11,"from","","",99,[[["xexposeevent"]],["xevent"]]],[11,"from","","",15,[[["xevent"]],["xexposeevent"]]],[11,"from","","",15,[[["xevent"]],["xexposeevent"]]],[11,"as_mut","","",99,[[["self"]],["xfocuschangeevent"]]],[11,"as_ref","","",99,[[["self"]],["xfocuschangeevent"]]],[11,"from","","",99,[[["xfocuschangeevent"]],["xevent"]]],[11,"from","","",99,[[["xfocuschangeevent"]],["xevent"]]],[11,"from","","",16,[[["xevent"]],["xfocuschangeevent"]]],[11,"from","","",16,[[["xevent"]],["xfocuschangeevent"]]],[11,"as_mut","","",99,[[["self"]],["xgenericeventcookie"]]],[11,"as_ref","","",99,[[["self"]],["xgenericeventcookie"]]],[11,"from","","",99,[[["xgenericeventcookie"]],["xevent"]]],[11,"from","","",99,[[["xgenericeventcookie"]],["xevent"]]],[11,"from","","",68,[[["xevent"]],["xgenericeventcookie"]]],[11,"from","","",68,[[["xevent"]],["xgenericeventcookie"]]],[11,"as_mut","","",99,[[["self"]],["xgraphicsexposeevent"]]],[11,"as_ref","","",99,[[["self"]],["xgraphicsexposeevent"]]],[11,"from","","",99,[[["xgraphicsexposeevent"]],["xevent"]]],[11,"from","","",99,[[["xgraphicsexposeevent"]],["xevent"]]],[11,"from","","",17,[[["xevent"]],["xgraphicsexposeevent"]]],[11,"from","","",17,[[["xevent"]],["xgraphicsexposeevent"]]],[11,"as_mut","","",99,[[["self"]],["xgravityevent"]]],[11,"as_ref","","",99,[[["self"]],["xgravityevent"]]],[11,"from","","",99,[[["xgravityevent"]],["xevent"]]],[11,"from","","",99,[[["xgravityevent"]],["xevent"]]],[11,"from","","",18,[[["xevent"]],["xgravityevent"]]],[11,"from","","",18,[[["xevent"]],["xgravityevent"]]],[11,"as_mut","","",99,[[["self"]],["xkeyevent"]]],[11,"as_ref","","",99,[[["self"]],["xkeyevent"]]],[11,"from","","",99,[[["xkeyevent"]],["xevent"]]],[11,"from","","",99,[[["xkeyevent"]],["xevent"]]],[11,"from","","",19,[[["xevent"]],["xkeyevent"]]],[11,"from","","",19,[[["xevent"]],["xkeyevent"]]],[11,"as_mut","","",99,[[["self"]],["xkeymapevent"]]],[11,"as_ref","","",99,[[["self"]],["xkeymapevent"]]],[11,"from","","",99,[[["xkeymapevent"]],["xevent"]]],[11,"from","","",99,[[["xkeymapevent"]],["xevent"]]],[11,"from","","",20,[[["xevent"]],["xkeymapevent"]]],[11,"from","","",20,[[["xevent"]],["xkeymapevent"]]],[11,"as_mut","","",99,[[["self"]],["xmapevent"]]],[11,"as_ref","","",99,[[["self"]],["xmapevent"]]],[11,"from","","",99,[[["xmapevent"]],["xevent"]]],[11,"from","","",99,[[["xmapevent"]],["xevent"]]],[11,"from","","",21,[[["xevent"]],["xmapevent"]]],[11,"from","","",21,[[["xevent"]],["xmapevent"]]],[11,"as_mut","","",99,[[["self"]],["xmappingevent"]]],[11,"as_ref","","",99,[[["self"]],["xmappingevent"]]],[11,"from","","",99,[[["xmappingevent"]],["xevent"]]],[11,"from","","",99,[[["xmappingevent"]],["xevent"]]],[11,"from","","",22,[[["xevent"]],["xmappingevent"]]],[11,"from","","",22,[[["xevent"]],["xmappingevent"]]],[11,"as_mut","","",99,[[["self"]],["xmaprequestevent"]]],[11,"as_ref","","",99,[[["self"]],["xmaprequestevent"]]],[11,"from","","",99,[[["xmaprequestevent"]],["xevent"]]],[11,"from","","",99,[[["xmaprequestevent"]],["xevent"]]],[11,"from","","",23,[[["xevent"]],["xmaprequestevent"]]],[11,"from","","",23,[[["xevent"]],["xmaprequestevent"]]],[11,"as_mut","","",99,[[["self"]],["xmotionevent"]]],[11,"as_ref","","",99,[[["self"]],["xmotionevent"]]],[11,"from","","",99,[[["xmotionevent"]],["xevent"]]],[11,"from","","",99,[[["xmotionevent"]],["xevent"]]],[11,"from","","",24,[[["xevent"]],["xmotionevent"]]],[11,"from","","",24,[[["xevent"]],["xmotionevent"]]],[11,"as_mut","","",99,[[["self"]],["xnoexposeevent"]]],[11,"as_ref","","",99,[[["self"]],["xnoexposeevent"]]],[11,"from","","",99,[[["xnoexposeevent"]],["xevent"]]],[11,"from","","",99,[[["xnoexposeevent"]],["xevent"]]],[11,"from","","",25,[[["xevent"]],["xnoexposeevent"]]],[11,"from","","",25,[[["xevent"]],["xnoexposeevent"]]],[11,"as_mut","","",99,[[["self"]],["xpropertyevent"]]],[11,"as_ref","","",99,[[["self"]],["xpropertyevent"]]],[11,"from","","",99,[[["xpropertyevent"]],["xevent"]]],[11,"from","","",99,[[["xpropertyevent"]],["xevent"]]],[11,"from","","",26,[[["xevent"]],["xpropertyevent"]]],[11,"from","","",26,[[["xevent"]],["xpropertyevent"]]],[11,"as_mut","","",99,[[["self"]],["xreparentevent"]]],[11,"as_ref","","",99,[[["self"]],["xreparentevent"]]],[11,"from","","",99,[[["xreparentevent"]],["xevent"]]],[11,"from","","",99,[[["xreparentevent"]],["xevent"]]],[11,"from","","",27,[[["xevent"]],["xreparentevent"]]],[11,"from","","",27,[[["xevent"]],["xreparentevent"]]],[11,"as_mut","","",99,[[["self"]],["xresizerequestevent"]]],[11,"as_ref","","",99,[[["self"]],["xresizerequestevent"]]],[11,"from","","",99,[[["xresizerequestevent"]],["xevent"]]],[11,"from","","",99,[[["xresizerequestevent"]],["xevent"]]],[11,"from","","",28,[[["xevent"]],["xresizerequestevent"]]],[11,"from","","",28,[[["xevent"]],["xresizerequestevent"]]],[11,"as_mut","","",99,[[["self"]],["xselectionclearevent"]]],[11,"as_ref","","",99,[[["self"]],["xselectionclearevent"]]],[11,"from","","",99,[[["xselectionclearevent"]],["xevent"]]],[11,"from","","",99,[[["xselectionclearevent"]],["xevent"]]],[11,"from","","",29,[[["xevent"]],["xselectionclearevent"]]],[11,"from","","",29,[[["xevent"]],["xselectionclearevent"]]],[11,"as_mut","","",99,[[["self"]],["xselectionevent"]]],[11,"as_ref","","",99,[[["self"]],["xselectionevent"]]],[11,"from","","",99,[[["xselectionevent"]],["xevent"]]],[11,"from","","",99,[[["xselectionevent"]],["xevent"]]],[11,"from","","",30,[[["xevent"]],["xselectionevent"]]],[11,"from","","",30,[[["xevent"]],["xselectionevent"]]],[11,"as_mut","","",99,[[["self"]],["xselectionrequestevent"]]],[11,"as_ref","","",99,[[["self"]],["xselectionrequestevent"]]],[11,"from","","",99,[[["xselectionrequestevent"]],["xevent"]]],[11,"from","","",99,[[["xselectionrequestevent"]],["xevent"]]],[11,"from","","",31,[[["xevent"]],["xselectionrequestevent"]]],[11,"from","","",31,[[["xevent"]],["xselectionrequestevent"]]],[11,"as_mut","","",99,[[["self"]],["xunmapevent"]]],[11,"as_ref","","",99,[[["self"]],["xunmapevent"]]],[11,"from","","",99,[[["xunmapevent"]],["xevent"]]],[11,"from","","",99,[[["xunmapevent"]],["xevent"]]],[11,"from","","",32,[[["xevent"]],["xunmapevent"]]],[11,"from","","",32,[[["xevent"]],["xunmapevent"]]],[11,"as_mut","","",99,[[["self"]],["xvisibilityevent"]]],[11,"as_ref","","",99,[[["self"]],["xvisibilityevent"]]],[11,"from","","",99,[[["xvisibilityevent"]],["xevent"]]],[11,"from","","",99,[[["xvisibilityevent"]],["xevent"]]],[11,"from","","",33,[[["xevent"]],["xvisibilityevent"]]],[11,"from","","",33,[[["xevent"]],["xvisibilityevent"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"clone","","",3,[[["self"]],["xanyevent"]]],[11,"eq","","",3,[[["self"],["xanyevent"]],["bool"]]],[11,"ne","","",3,[[["self"],["xanyevent"]],["bool"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"clone","","",4,[[["self"]],["xbuttonevent"]]],[11,"eq","","",4,[[["self"],["xbuttonevent"]],["bool"]]],[11,"ne","","",4,[[["self"],["xbuttonevent"]],["bool"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"clone","","",5,[[["self"]],["xcirculateevent"]]],[11,"eq","","",5,[[["self"],["xcirculateevent"]],["bool"]]],[11,"ne","","",5,[[["self"],["xcirculateevent"]],["bool"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"clone","","",6,[[["self"]],["xcirculaterequestevent"]]],[11,"eq","","",6,[[["self"],["xcirculaterequestevent"]],["bool"]]],[11,"ne","","",6,[[["self"],["xcirculaterequestevent"]],["bool"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"clone","","",7,[[["self"]],["xclientmessageevent"]]],[11,"eq","","",7,[[["self"],["xclientmessageevent"]],["bool"]]],[11,"ne","","",7,[[["self"],["xclientmessageevent"]],["bool"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"clone","","",8,[[["self"]],["xcolormapevent"]]],[11,"eq","","",8,[[["self"],["xcolormapevent"]],["bool"]]],[11,"ne","","",8,[[["self"],["xcolormapevent"]],["bool"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"clone","","",9,[[["self"]],["xconfigureevent"]]],[11,"eq","","",9,[[["self"],["xconfigureevent"]],["bool"]]],[11,"ne","","",9,[[["self"],["xconfigureevent"]],["bool"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"clone","","",10,[[["self"]],["xconfigurerequestevent"]]],[11,"eq","","",10,[[["self"],["xconfigurerequestevent"]],["bool"]]],[11,"ne","","",10,[[["self"],["xconfigurerequestevent"]],["bool"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"clone","","",11,[[["self"]],["xcreatewindowevent"]]],[11,"eq","","",11,[[["self"],["xcreatewindowevent"]],["bool"]]],[11,"ne","","",11,[[["self"],["xcreatewindowevent"]],["bool"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"clone","","",12,[[["self"]],["xcrossingevent"]]],[11,"eq","","",12,[[["self"],["xcrossingevent"]],["bool"]]],[11,"ne","","",12,[[["self"],["xcrossingevent"]],["bool"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"clone","","",13,[[["self"]],["xdestroywindowevent"]]],[11,"eq","","",13,[[["self"],["xdestroywindowevent"]],["bool"]]],[11,"ne","","",13,[[["self"],["xdestroywindowevent"]],["bool"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"clone","","",14,[[["self"]],["xerrorevent"]]],[11,"eq","","",14,[[["self"],["xerrorevent"]],["bool"]]],[11,"ne","","",14,[[["self"],["xerrorevent"]],["bool"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"clone","","",15,[[["self"]],["xexposeevent"]]],[11,"eq","","",15,[[["self"],["xexposeevent"]],["bool"]]],[11,"ne","","",15,[[["self"],["xexposeevent"]],["bool"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"clone","","",16,[[["self"]],["xfocuschangeevent"]]],[11,"eq","","",16,[[["self"],["xfocuschangeevent"]],["bool"]]],[11,"ne","","",16,[[["self"],["xfocuschangeevent"]],["bool"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"clone","","",17,[[["self"]],["xgraphicsexposeevent"]]],[11,"eq","","",17,[[["self"],["xgraphicsexposeevent"]],["bool"]]],[11,"ne","","",17,[[["self"],["xgraphicsexposeevent"]],["bool"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"clone","","",18,[[["self"]],["xgravityevent"]]],[11,"eq","","",18,[[["self"],["xgravityevent"]],["bool"]]],[11,"ne","","",18,[[["self"],["xgravityevent"]],["bool"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"clone","","",19,[[["self"]],["xkeyevent"]]],[11,"eq","","",19,[[["self"],["xkeyevent"]],["bool"]]],[11,"ne","","",19,[[["self"],["xkeyevent"]],["bool"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"clone","","",20,[[["self"]],["xkeymapevent"]]],[11,"eq","","",20,[[["self"],["xkeymapevent"]],["bool"]]],[11,"ne","","",20,[[["self"],["xkeymapevent"]],["bool"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"clone","","",21,[[["self"]],["xmapevent"]]],[11,"eq","","",21,[[["self"],["xmapevent"]],["bool"]]],[11,"ne","","",21,[[["self"],["xmapevent"]],["bool"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"clone","","",22,[[["self"]],["xmappingevent"]]],[11,"eq","","",22,[[["self"],["xmappingevent"]],["bool"]]],[11,"ne","","",22,[[["self"],["xmappingevent"]],["bool"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"clone","","",23,[[["self"]],["xmaprequestevent"]]],[11,"eq","","",23,[[["self"],["xmaprequestevent"]],["bool"]]],[11,"ne","","",23,[[["self"],["xmaprequestevent"]],["bool"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"clone","","",24,[[["self"]],["xmotionevent"]]],[11,"eq","","",24,[[["self"],["xmotionevent"]],["bool"]]],[11,"ne","","",24,[[["self"],["xmotionevent"]],["bool"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"clone","","",25,[[["self"]],["xnoexposeevent"]]],[11,"eq","","",25,[[["self"],["xnoexposeevent"]],["bool"]]],[11,"ne","","",25,[[["self"],["xnoexposeevent"]],["bool"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"clone","","",26,[[["self"]],["xpropertyevent"]]],[11,"eq","","",26,[[["self"],["xpropertyevent"]],["bool"]]],[11,"ne","","",26,[[["self"],["xpropertyevent"]],["bool"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"clone","","",27,[[["self"]],["xreparentevent"]]],[11,"eq","","",27,[[["self"],["xreparentevent"]],["bool"]]],[11,"ne","","",27,[[["self"],["xreparentevent"]],["bool"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"clone","","",28,[[["self"]],["xresizerequestevent"]]],[11,"eq","","",28,[[["self"],["xresizerequestevent"]],["bool"]]],[11,"ne","","",28,[[["self"],["xresizerequestevent"]],["bool"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"clone","","",29,[[["self"]],["xselectionclearevent"]]],[11,"eq","","",29,[[["self"],["xselectionclearevent"]],["bool"]]],[11,"ne","","",29,[[["self"],["xselectionclearevent"]],["bool"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"clone","","",30,[[["self"]],["xselectionevent"]]],[11,"eq","","",30,[[["self"],["xselectionevent"]],["bool"]]],[11,"ne","","",30,[[["self"],["xselectionevent"]],["bool"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"clone","","",31,[[["self"]],["xselectionrequestevent"]]],[11,"eq","","",31,[[["self"],["xselectionrequestevent"]],["bool"]]],[11,"ne","","",31,[[["self"],["xselectionrequestevent"]],["bool"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"clone","","",32,[[["self"]],["xunmapevent"]]],[11,"eq","","",32,[[["self"],["xunmapevent"]],["bool"]]],[11,"ne","","",32,[[["self"],["xunmapevent"]],["bool"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"clone","","",33,[[["self"]],["xvisibilityevent"]]],[11,"eq","","",33,[[["self"],["xvisibilityevent"]],["bool"]]],[11,"ne","","",33,[[["self"],["xvisibilityevent"]],["bool"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"clone","","",35,[[["self"]],["_xkbdesc"]]],[11,"eq","","",35,[[["self"],["_xkbdesc"]],["bool"]]],[11,"ne","","",35,[[["self"],["_xkbdesc"]],["bool"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"clone","","",37,[[["self"]],["_xkbkeyaliasrec"]]],[11,"eq","","",37,[[["self"],["_xkbkeyaliasrec"]],["bool"]]],[11,"ne","","",37,[[["self"],["_xkbkeyaliasrec"]],["bool"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"clone","","",38,[[["self"]],["_xkbkeynamerec"]]],[11,"eq","","",38,[[["self"],["_xkbkeynamerec"]],["bool"]]],[11,"ne","","",38,[[["self"],["_xkbkeynamerec"]],["bool"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"clone","","",39,[[["self"]],["_xkbnamesrec"]]],[11,"eq","","",39,[[["self"],["_xkbnamesrec"]],["bool"]]],[11,"ne","","",39,[[["self"],["_xkbnamesrec"]],["bool"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"clone","","",40,[[["self"]],["xkbanyevent"]]],[11,"eq","","",40,[[["self"],["xkbanyevent"]],["bool"]]],[11,"ne","","",40,[[["self"],["xkbanyevent"]],["bool"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"clone","","",41,[[["self"]],["xkbnewkeyboardnotifyevent"]]],[11,"eq","","",41,[[["self"],["xkbnewkeyboardnotifyevent"]],["bool"]]],[11,"ne","","",41,[[["self"],["xkbnewkeyboardnotifyevent"]],["bool"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"clone","","",42,[[["self"]],["_xkbmapnotifyevent"]]],[11,"eq","","",42,[[["self"],["_xkbmapnotifyevent"]],["bool"]]],[11,"ne","","",42,[[["self"],["_xkbmapnotifyevent"]],["bool"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"clone","","",43,[[["self"]],["xkbstatenotifyevent"]]],[11,"eq","","",43,[[["self"],["xkbstatenotifyevent"]],["bool"]]],[11,"ne","","",43,[[["self"],["xkbstatenotifyevent"]],["bool"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"clone","","",44,[[["self"]],["_xkbcontrolsnotifyevent"]]],[11,"eq","","",44,[[["self"],["_xkbcontrolsnotifyevent"]],["bool"]]],[11,"ne","","",44,[[["self"],["_xkbcontrolsnotifyevent"]],["bool"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"clone","","",45,[[["self"]],["xkbindicatornotifyevent"]]],[11,"eq","","",45,[[["self"],["xkbindicatornotifyevent"]],["bool"]]],[11,"ne","","",45,[[["self"],["xkbindicatornotifyevent"]],["bool"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"clone","","",46,[[["self"]],["_xkbnamesnotifyevent"]]],[11,"eq","","",46,[[["self"],["_xkbnamesnotifyevent"]],["bool"]]],[11,"ne","","",46,[[["self"],["_xkbnamesnotifyevent"]],["bool"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"clone","","",47,[[["self"]],["xkbcompatmapnotifyevent"]]],[11,"eq","","",47,[[["self"],["xkbcompatmapnotifyevent"]],["bool"]]],[11,"ne","","",47,[[["self"],["xkbcompatmapnotifyevent"]],["bool"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"clone","","",48,[[["self"]],["xkbbellnotifyevent"]]],[11,"eq","","",48,[[["self"],["xkbbellnotifyevent"]],["bool"]]],[11,"ne","","",48,[[["self"],["xkbbellnotifyevent"]],["bool"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"clone","","",49,[[["self"]],["xkbactionmessageevent"]]],[11,"eq","","",49,[[["self"],["xkbactionmessageevent"]],["bool"]]],[11,"ne","","",49,[[["self"],["xkbactionmessageevent"]],["bool"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"clone","","",50,[[["self"]],["xkbaccessxnotifyevent"]]],[11,"eq","","",50,[[["self"],["xkbaccessxnotifyevent"]],["bool"]]],[11,"ne","","",50,[[["self"],["xkbaccessxnotifyevent"]],["bool"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"clone","","",51,[[["self"]],["_xkbextensiondevicenotifyevent"]]],[11,"eq","","",51,[[["self"],["_xkbextensiondevicenotifyevent"]],["bool"]]],[11,"ne","","",51,[[["self"],["_xkbextensiondevicenotifyevent"]],["bool"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"clone","","",100,[[["self"]],["xkbevent"]]],[11,"eq","","",100,[[["self"],["xkbevent"]],["bool"]]],[11,"ne","","",100,[[["self"],["xkbevent"]],["bool"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"clone","","",52,[[["self"]],["depth"]]],[11,"eq","","",52,[[["self"],["depth"]],["bool"]]],[11,"ne","","",52,[[["self"],["depth"]],["bool"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"clone","","",53,[[["self"]],["screen"]]],[11,"eq","","",53,[[["self"],["screen"]],["bool"]]],[11,"ne","","",53,[[["self"],["screen"]],["bool"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"clone","","",54,[[["self"]],["screenformat"]]],[11,"eq","","",54,[[["self"],["screenformat"]],["bool"]]],[11,"ne","","",54,[[["self"],["screenformat"]],["bool"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"clone","","",55,[[["self"]],["visual"]]],[11,"eq","","",55,[[["self"],["visual"]],["bool"]]],[11,"ne","","",55,[[["self"],["visual"]],["bool"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"clone","","",56,[[["self"]],["xarc"]]],[11,"eq","","",56,[[["self"],["xarc"]],["bool"]]],[11,"ne","","",56,[[["self"],["xarc"]],["bool"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"clone","","",57,[[["self"]],["xchar2b"]]],[11,"eq","","",57,[[["self"],["xchar2b"]],["bool"]]],[11,"ne","","",57,[[["self"],["xchar2b"]],["bool"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"clone","","",58,[[["self"]],["xcharstruct"]]],[11,"eq","","",58,[[["self"],["xcharstruct"]],["bool"]]],[11,"ne","","",58,[[["self"],["xcharstruct"]],["bool"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"clone","","",59,[[["self"]],["xclasshint"]]],[11,"eq","","",59,[[["self"],["xclasshint"]],["bool"]]],[11,"ne","","",59,[[["self"],["xclasshint"]],["bool"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"clone","","",60,[[["self"]],["xcolor"]]],[11,"eq","","",60,[[["self"],["xcolor"]],["bool"]]],[11,"ne","","",60,[[["self"],["xcolor"]],["bool"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"clone","","",61,[[["self"]],["xcomposestatus"]]],[11,"eq","","",61,[[["self"],["xcomposestatus"]],["bool"]]],[11,"ne","","",61,[[["self"],["xcomposestatus"]],["bool"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"clone","","",62,[[["self"]],["xextcodes"]]],[11,"eq","","",62,[[["self"],["xextcodes"]],["bool"]]],[11,"ne","","",62,[[["self"],["xextcodes"]],["bool"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"clone","","",64,[[["self"]],["xfontprop"]]],[11,"eq","","",64,[[["self"],["xfontprop"]],["bool"]]],[11,"ne","","",64,[[["self"],["xfontprop"]],["bool"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"clone","","",65,[[["self"]],["xfontsetextents"]]],[11,"eq","","",65,[[["self"],["xfontsetextents"]],["bool"]]],[11,"ne","","",65,[[["self"],["xfontsetextents"]],["bool"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"clone","","",66,[[["self"]],["xfontstruct"]]],[11,"eq","","",66,[[["self"],["xfontstruct"]],["bool"]]],[11,"ne","","",66,[[["self"],["xfontstruct"]],["bool"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"clone","","",67,[[["self"]],["xgcvalues"]]],[11,"eq","","",67,[[["self"],["xgcvalues"]],["bool"]]],[11,"ne","","",67,[[["self"],["xgcvalues"]],["bool"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"clone","","",68,[[["self"]],["xgenericeventcookie"]]],[11,"eq","","",68,[[["self"],["xgenericeventcookie"]],["bool"]]],[11,"ne","","",68,[[["self"],["xgenericeventcookie"]],["bool"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"clone","","",69,[[["self"]],["xhostaddress"]]],[11,"eq","","",69,[[["self"],["xhostaddress"]],["bool"]]],[11,"ne","","",69,[[["self"],["xhostaddress"]],["bool"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"clone","","",70,[[["self"]],["xiconsize"]]],[11,"eq","","",70,[[["self"],["xiconsize"]],["bool"]]],[11,"ne","","",70,[[["self"],["xiconsize"]],["bool"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"clone","","",71,[[["self"]],["ximage"]]],[11,"eq","","",71,[[["self"],["ximage"]],["bool"]]],[11,"ne","","",71,[[["self"],["ximage"]],["bool"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"clone","","",72,[[["self"]],["xkeyboardcontrol"]]],[11,"eq","","",72,[[["self"],["xkeyboardcontrol"]],["bool"]]],[11,"ne","","",72,[[["self"],["xkeyboardcontrol"]],["bool"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"clone","","",73,[[["self"]],["xkeyboardstate"]]],[11,"eq","","",73,[[["self"],["xkeyboardstate"]],["bool"]]],[11,"ne","","",73,[[["self"],["xkeyboardstate"]],["bool"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"clone","","",74,[[["self"]],["xmbtextitem"]]],[11,"eq","","",74,[[["self"],["xmbtextitem"]],["bool"]]],[11,"ne","","",74,[[["self"],["xmbtextitem"]],["bool"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"clone","","",75,[[["self"]],["xmodifierkeymap"]]],[11,"eq","","",75,[[["self"],["xmodifierkeymap"]],["bool"]]],[11,"ne","","",75,[[["self"],["xmodifierkeymap"]],["bool"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"clone","","",76,[[["self"]],["xomcharsetlist"]]],[11,"eq","","",76,[[["self"],["xomcharsetlist"]],["bool"]]],[11,"ne","","",76,[[["self"],["xomcharsetlist"]],["bool"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"clone","","",77,[[["self"]],["xpixmapformatvalues"]]],[11,"eq","","",77,[[["self"],["xpixmapformatvalues"]],["bool"]]],[11,"ne","","",77,[[["self"],["xpixmapformatvalues"]],["bool"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"clone","","",78,[[["self"]],["xpoint"]]],[11,"eq","","",78,[[["self"],["xpoint"]],["bool"]]],[11,"ne","","",78,[[["self"],["xpoint"]],["bool"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"clone","","",79,[[["self"]],["xrectangle"]]],[11,"eq","","",79,[[["self"],["xrectangle"]],["bool"]]],[11,"ne","","",79,[[["self"],["xrectangle"]],["bool"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"clone","","",80,[[["self"]],["xrmoptiondescrec"]]],[11,"eq","","",80,[[["self"],["xrmoptiondescrec"]],["bool"]]],[11,"ne","","",80,[[["self"],["xrmoptiondescrec"]],["bool"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"clone","","",81,[[["self"]],["xrmvalue"]]],[11,"eq","","",81,[[["self"],["xrmvalue"]],["bool"]]],[11,"ne","","",81,[[["self"],["xrmvalue"]],["bool"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"clone","","",82,[[["self"]],["xsegment"]]],[11,"eq","","",82,[[["self"],["xsegment"]],["bool"]]],[11,"ne","","",82,[[["self"],["xsegment"]],["bool"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"clone","","",83,[[["self"]],["xsetwindowattributes"]]],[11,"eq","","",83,[[["self"],["xsetwindowattributes"]],["bool"]]],[11,"ne","","",83,[[["self"],["xsetwindowattributes"]],["bool"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"clone","","",84,[[["self"]],["xsizehints"]]],[11,"eq","","",84,[[["self"],["xsizehints"]],["bool"]]],[11,"ne","","",84,[[["self"],["xsizehints"]],["bool"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"clone","","",85,[[["self"]],["xstandardcolormap"]]],[11,"eq","","",85,[[["self"],["xstandardcolormap"]],["bool"]]],[11,"ne","","",85,[[["self"],["xstandardcolormap"]],["bool"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"clone","","",86,[[["self"]],["xtextitem"]]],[11,"eq","","",86,[[["self"],["xtextitem"]],["bool"]]],[11,"ne","","",86,[[["self"],["xtextitem"]],["bool"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"clone","","",87,[[["self"]],["xtextitem16"]]],[11,"eq","","",87,[[["self"],["xtextitem16"]],["bool"]]],[11,"ne","","",87,[[["self"],["xtextitem16"]],["bool"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"clone","","",88,[[["self"]],["xtextproperty"]]],[11,"eq","","",88,[[["self"],["xtextproperty"]],["bool"]]],[11,"ne","","",88,[[["self"],["xtextproperty"]],["bool"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"clone","","",89,[[["self"]],["xtimecoord"]]],[11,"eq","","",89,[[["self"],["xtimecoord"]],["bool"]]],[11,"ne","","",89,[[["self"],["xtimecoord"]],["bool"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"clone","","",90,[[["self"]],["xvisualinfo"]]],[11,"eq","","",90,[[["self"],["xvisualinfo"]],["bool"]]],[11,"ne","","",90,[[["self"],["xvisualinfo"]],["bool"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"clone","","",91,[[["self"]],["xwctextitem"]]],[11,"eq","","",91,[[["self"],["xwctextitem"]],["bool"]]],[11,"ne","","",91,[[["self"],["xwctextitem"]],["bool"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"clone","","",92,[[["self"]],["xwindowattributes"]]],[11,"eq","","",92,[[["self"],["xwindowattributes"]],["bool"]]],[11,"ne","","",92,[[["self"],["xwindowattributes"]],["bool"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"clone","","",93,[[["self"]],["xwindowchanges"]]],[11,"eq","","",93,[[["self"],["xwindowchanges"]],["bool"]]],[11,"ne","","",93,[[["self"],["xwindowchanges"]],["bool"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"clone","","",94,[[["self"]],["xwmhints"]]],[11,"eq","","",94,[[["self"],["xwmhints"]],["bool"]]],[11,"ne","","",94,[[["self"],["xwmhints"]],["bool"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"clone","","",97,[[["self"]],["aspectratio"]]],[11,"eq","","",97,[[["self"],["aspectratio"]],["bool"]]],[11,"ne","","",97,[[["self"],["aspectratio"]],["bool"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"clone","","",101,[[["self"]],["clientmessagedata"]]],[11,"default","","",101,[[],["clientmessagedata"]]],[11,"eq","","",101,[[["self"],["clientmessagedata"]],["bool"]]],[11,"ne","","",101,[[["self"],["clientmessagedata"]],["bool"]]],[11,"as_bytes","","",101,N],[11,"as_bytes_mut","","",101,N],[11,"as_longs","","",101,N],[11,"as_longs_mut","","",101,N],[11,"as_shorts","","",101,N],[11,"as_shorts_mut","","",101,N],[11,"get_byte","","",101,[[["self"],["usize"]],["c_char"]]],[11,"get_long","","",101,[[["self"],["usize"]],["c_long"]]],[11,"get_short","","",101,[[["self"],["usize"]],["c_short"]]],[11,"new","","",101,[[],["clientmessagedata"]]],[11,"set_byte","","",101,[[["self"],["usize"],["c_char"]]]],[11,"set_long","","",101,[[["self"],["usize"],["c_long"]]]],[11,"set_short","","",101,[[["self"],["usize"],["c_short"]]]],[11,"as_mut","","",101,N],[11,"as_ref","","",101,N],[11,"from","","",101,N],[11,"as_mut","","",101,N],[11,"as_ref","","",101,N],[11,"from","","",101,N],[11,"as_mut","","",101,N],[11,"as_ref","","",101,N],[11,"from","","",101,N],[11,"as_mut","","",101,N],[11,"as_ref","","",101,N],[11,"from","","",101,N],[11,"as_mut","","",101,N],[11,"as_ref","","",101,N],[11,"from","","",101,N],[11,"as_mut","","",101,N],[11,"as_ref","","",101,N],[11,"from","","",101,N],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"clone","","",98,[[["self"]],["imagefns"]]],[11,"eq","","",98,[[["self"],["imagefns"]],["bool"]]],[0,"dpms","x11_dl","",N,N],[3,"Xext","x11_dl::dpms","",N,N],[12,"DPMSQueryExtension","","",102,N],[12,"DPMSGetVersion","","",102,N],[12,"DPMSCapable","","",102,N],[12,"DPMSSetTimeouts","","",102,N],[12,"DPMSGetTimeouts","","",102,N],[12,"DPMSEnable","","",102,N],[12,"DPMSDisable","","",102,N],[12,"DPMSForceLevel","","",102,N],[12,"DPMSInfo","","",102,N],[17,"DPMSMajorVersion","","",N,N],[17,"DPMSMinorVersion","","",N,N],[17,"DPMSExtensionName","","",N,N],[17,"DPMSModeOn","","",N,N],[17,"DPMSModeStandby","","",N,N],[17,"DPMSModeSuspend","","",N,N],[17,"DPMSModeOff","","",N,N],[11,"open","","",102,[[],["result",["xext","openerror"]]]],[0,"glx","x11_dl","",N,N],[3,"Glx","x11_dl::glx","",N,N],[12,"glXChooseFBConfig","","",103,N],[12,"glXChooseVisual","","",103,N],[12,"glXCopyContext","","",103,N],[12,"glXCreateContext","","",103,N],[12,"glXCreateGLXPixmap","","",103,N],[12,"glXCreateNewContext","","",103,N],[12,"glXCreatePbuffer","","",103,N],[12,"glXCreatePixmap","","",103,N],[12,"glXCreateWindow","","",103,N],[12,"glXDestroyContext","","",103,N],[12,"glXDestroyGLXPixmap","","",103,N],[12,"glXDestroyPbuffer","","",103,N],[12,"glXDestroyPixmap","","",103,N],[12,"glXDestroyWindow","","",103,N],[12,"glXGetClientString","","",103,N],[12,"glXGetConfig","","",103,N],[12,"glXGetCurrentContext","","",103,N],[12,"glXGetCurrentDisplay","","",103,N],[12,"glXGetCurrentDrawable","","",103,N],[12,"glXGetCurrentReadDrawable","","",103,N],[12,"glXGetFBConfigAttrib","","",103,N],[12,"glXGetFBConfigs","","",103,N],[12,"glXGetProcAddress","","",103,N],[12,"glXGetProcAddressARB","","",103,N],[12,"glXGetSelectedEvent","","",103,N],[12,"glXGetVisualFromFBConfig","","",103,N],[12,"glXIsDirect","","",103,N],[12,"glXMakeContextCurrent","","",103,N],[12,"glXMakeCurrent","","",103,N],[12,"glXQueryContext","","",103,N],[12,"glXQueryDrawable","","",103,N],[12,"glXQueryExtension","","",103,N],[12,"glXQueryExtensionsString","","",103,N],[12,"glXQueryServerString","","",103,N],[12,"glXQueryVersion","","",103,N],[12,"glXSelectEvent","","",103,N],[12,"glXSwapBuffers","","",103,N],[12,"glXUseXFont","","",103,N],[12,"glXWaitGL","","",103,N],[12,"glXWaitX","","",103,N],[3,"__GLXcontextRec","","",N,N],[3,"__GLXFBConfigRec","","",N,N],[0,"arb","","",N,N],[17,"GLX_CONTEXT_MAJOR_VERSION_ARB","x11_dl::glx::arb","",N,N],[17,"GLX_CONTEXT_MINOR_VERSION_ARB","","",N,N],[17,"GLX_CONTEXT_FLAGS_ARB","","",N,N],[17,"GLX_CONTEXT_PROFILE_MASK_ARB","","",N,N],[17,"GLX_CONTEXT_DEBUG_BIT_ARB","","",N,N],[17,"GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB","","",N,N],[17,"GLX_CONTEXT_CORE_PROFILE_BIT_ARB","","",N,N],[17,"GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB","","",N,N],[0,"ext","x11_dl::glx","",N,N],[17,"GLX_SWAP_INTERVAL_EXT","x11_dl::glx::ext","",N,N],[17,"GLX_MAX_SWAP_INTERVAL_EXT","","",N,N],[6,"GLXContext","x11_dl::glx","",N,N],[6,"GLXContextID","","",N,N],[6,"GLXDrawable","","",N,N],[6,"GLXFBConfig","","",N,N],[6,"GLXFBConfigID","","",N,N],[6,"GLXPbuffer","","",N,N],[6,"GLXPixmap","","",N,N],[6,"GLXWindow","","",N,N],[17,"GLX_SLOW_CONFIG","","",N,N],[17,"GLX_NON_CONFORMANT_CONFIG","","",N,N],[17,"GLX_WINDOW_BIT","","",N,N],[17,"GLX_PIXMAP_BIT","","",N,N],[17,"GLX_PBUFFER_BIT","","",N,N],[17,"GLX_USE_GL","","",N,N],[17,"GLX_BUFFER_SIZE","","",N,N],[17,"GLX_LEVEL","","",N,N],[17,"GLX_RGBA","","",N,N],[17,"GLX_DOUBLEBUFFER","","",N,N],[17,"GLX_STEREO","","",N,N],[17,"GLX_AUX_BUFFERS","","",N,N],[17,"GLX_RED_SIZE","","",N,N],[17,"GLX_GREEN_SIZE","","",N,N],[17,"GLX_BLUE_SIZE","","",N,N],[17,"GLX_ALPHA_SIZE","","",N,N],[17,"GLX_DEPTH_SIZE","","",N,N],[17,"GLX_STENCIL_SIZE","","",N,N],[17,"GLX_ACCUM_RED_SIZE","","",N,N],[17,"GLX_ACCUM_GREEN_SIZE","","",N,N],[17,"GLX_ACCUM_BLUE_SIZE","","",N,N],[17,"GLX_ACCUM_ALPHA_SIZE","","",N,N],[17,"GLX_CONFIG_CAVEAT","","",N,N],[17,"GLX_X_VISUAL_TYPE","","",N,N],[17,"GLX_TRANSPARENT_TYPE","","",N,N],[17,"GLX_TRANSPARENT_INDEX_VALUE","","",N,N],[17,"GLX_TRANSPARENT_RED_VALUE","","",N,N],[17,"GLX_TRANSPARENT_GREEN_VALUE","","",N,N],[17,"GLX_TRANSPARENT_BLUE_VALUE","","",N,N],[17,"GLX_TRANSPARENT_ALPHA_VALUE","","",N,N],[17,"GLX_VISUAL_ID","","",N,N],[17,"GLX_SCREEN","","",N,N],[17,"GLX_DRAWABLE_TYPE","","",N,N],[17,"GLX_RENDER_TYPE","","",N,N],[17,"GLX_X_RENDERABLE","","",N,N],[17,"GLX_FBCONFIG_ID","","",N,N],[17,"GLX_MAX_PBUFFER_WIDTH","","",N,N],[17,"GLX_MAX_PBUFFER_HEIGHT","","",N,N],[17,"GLX_MAX_PBUFFER_PIXELS","","",N,N],[17,"GLX_SAMPLE_BUFFERS","","",N,N],[17,"GLX_SAMPLES","","",N,N],[17,"GLX_DONT_CARE","","",N,N],[17,"GLX_NONE","","",N,N],[17,"GLX_RGBA_BIT","","",N,N],[17,"GLX_COLOR_INDEX_BIT","","",N,N],[17,"GLX_TRANSPARENT_RGB","","",N,N],[17,"GLX_TRANSPARENT_INDEX","","",N,N],[17,"GLX_TRUE_COLOR","","",N,N],[17,"GLX_DIRECT_COLOR","","",N,N],[17,"GLX_PSEUDO_COLOR","","",N,N],[17,"GLX_STATIC_COLOR","","",N,N],[17,"GLX_GRAY_SCALE","","",N,N],[17,"GLX_STATIC_GRAY","","",N,N],[17,"GLX_BAD_SCREEN","","",N,N],[17,"GLX_BAD_ATTRIBUTE","","",N,N],[17,"GLX_NO_EXTENSION","","",N,N],[17,"GLX_BAD_VISUAL","","",N,N],[17,"GLX_BAD_CONTEXT","","",N,N],[17,"GLX_BAD_VALUE","","",N,N],[17,"GLX_BAD_ENUM","","",N,N],[17,"GLX_VENDOR","","",N,N],[17,"GLX_VERSION","","",N,N],[17,"GLX_EXTENSIONS","","",N,N],[17,"GLX_FRONT_LEFT_BUFFER_BIT","","",N,N],[17,"GLX_FRONT_RIGHT_BUFFER_BIT","","",N,N],[17,"GLX_BACK_LEFT_BUFFER_BIT","","",N,N],[17,"GLX_BACK_RIGHT_BUFFER_BIT","","",N,N],[17,"GLX_AUX_BUFFERS_BIT","","",N,N],[17,"GLX_DEPTH_BUFFER_BIT","","",N,N],[17,"GLX_STENCIL_BUFFER_BIT","","",N,N],[17,"GLX_ACCUM_BUFFER_BIT","","",N,N],[17,"GLX_RGBA_TYPE","","",N,N],[17,"GLX_COLOR_INDEX_TYPE","","",N,N],[17,"GLX_PRESERVED_CONTENTS","","",N,N],[17,"GLX_LARGEST_PBUFFER","","",N,N],[17,"GLX_WIDTH","","",N,N],[17,"GLX_HEIGHT","","",N,N],[17,"GLX_PBUFFER_HEIGHT","","",N,N],[17,"GLX_PBUFFER_WIDTH","","",N,N],[17,"GLX_EVENT_MASK","","",N,N],[17,"GLX_PBUFFER_CLOBBER_MASK","","",N,N],[17,"GLX_DAMAGED","","",N,N],[17,"GLX_SAVED","","",N,N],[17,"GLX_WINDOW","","",N,N],[17,"GLX_PBUFFER","","",N,N],[11,"open","","",103,[[],["result",["glx","openerror"]]]],[0,"keysym","x11_dl","",N,N],[17,"XK_BackSpace","x11_dl::keysym","",N,N],[17,"XK_Tab","","",N,N],[17,"XK_Linefeed","","",N,N],[17,"XK_Clear","","",N,N],[17,"XK_Return","","",N,N],[17,"XK_Pause","","",N,N],[17,"XK_Scroll_Lock","","",N,N],[17,"XK_Sys_Req","","",N,N],[17,"XK_Escape","","",N,N],[17,"XK_Delete","","",N,N],[17,"XK_Multi_key","","",N,N],[17,"XK_Kanji","","",N,N],[17,"XK_Muhenkan","","",N,N],[17,"XK_Henkan_Mode","","",N,N],[17,"XK_Henkan","","",N,N],[17,"XK_Romaji","","",N,N],[17,"XK_Hiragana","","",N,N],[17,"XK_Katakana","","",N,N],[17,"XK_Hiragana_Katakana","","",N,N],[17,"XK_Zenkaku","","",N,N],[17,"XK_Hankaku","","",N,N],[17,"XK_Zenkaku_Hankaku","","",N,N],[17,"XK_Touroku","","",N,N],[17,"XK_Massyo","","",N,N],[17,"XK_Kana_Lock","","",N,N],[17,"XK_Kana_Shift","","",N,N],[17,"XK_Eisu_Shift","","",N,N],[17,"XK_Eisu_toggle","","",N,N],[17,"XK_Home","","",N,N],[17,"XK_Left","","",N,N],[17,"XK_Up","","",N,N],[17,"XK_Right","","",N,N],[17,"XK_Down","","",N,N],[17,"XK_Prior","","",N,N],[17,"XK_Page_Up","","",N,N],[17,"XK_Next","","",N,N],[17,"XK_Page_Down","","",N,N],[17,"XK_End","","",N,N],[17,"XK_Begin","","",N,N],[17,"XK_Win_L","","",N,N],[17,"XK_Win_R","","",N,N],[17,"XK_App","","",N,N],[17,"XK_Select","","",N,N],[17,"XK_Print","","",N,N],[17,"XK_Execute","","",N,N],[17,"XK_Insert","","",N,N],[17,"XK_Undo","","",N,N],[17,"XK_Redo","","",N,N],[17,"XK_Menu","","",N,N],[17,"XK_Find","","",N,N],[17,"XK_Cancel","","",N,N],[17,"XK_Help","","",N,N],[17,"XK_Break","","",N,N],[17,"XK_Mode_switch","","",N,N],[17,"XK_script_switch","","",N,N],[17,"XK_Num_Lock","","",N,N],[17,"XK_KP_Space","","",N,N],[17,"XK_KP_Tab","","",N,N],[17,"XK_KP_Enter","","",N,N],[17,"XK_KP_F1","","",N,N],[17,"XK_KP_F2","","",N,N],[17,"XK_KP_F3","","",N,N],[17,"XK_KP_F4","","",N,N],[17,"XK_KP_Home","","",N,N],[17,"XK_KP_Left","","",N,N],[17,"XK_KP_Up","","",N,N],[17,"XK_KP_Right","","",N,N],[17,"XK_KP_Down","","",N,N],[17,"XK_KP_Prior","","",N,N],[17,"XK_KP_Page_Up","","",N,N],[17,"XK_KP_Next","","",N,N],[17,"XK_KP_Page_Down","","",N,N],[17,"XK_KP_End","","",N,N],[17,"XK_KP_Begin","","",N,N],[17,"XK_KP_Insert","","",N,N],[17,"XK_KP_Delete","","",N,N],[17,"XK_KP_Equal","","",N,N],[17,"XK_KP_Multiply","","",N,N],[17,"XK_KP_Add","","",N,N],[17,"XK_KP_Separator","","",N,N],[17,"XK_KP_Subtract","","",N,N],[17,"XK_KP_Decimal","","",N,N],[17,"XK_KP_Divide","","",N,N],[17,"XK_KP_0","","",N,N],[17,"XK_KP_1","","",N,N],[17,"XK_KP_2","","",N,N],[17,"XK_KP_3","","",N,N],[17,"XK_KP_4","","",N,N],[17,"XK_KP_5","","",N,N],[17,"XK_KP_6","","",N,N],[17,"XK_KP_7","","",N,N],[17,"XK_KP_8","","",N,N],[17,"XK_KP_9","","",N,N],[17,"XK_F1","","",N,N],[17,"XK_F2","","",N,N],[17,"XK_F3","","",N,N],[17,"XK_F4","","",N,N],[17,"XK_F5","","",N,N],[17,"XK_F6","","",N,N],[17,"XK_F7","","",N,N],[17,"XK_F8","","",N,N],[17,"XK_F9","","",N,N],[17,"XK_F10","","",N,N],[17,"XK_F11","","",N,N],[17,"XK_L1","","",N,N],[17,"XK_F12","","",N,N],[17,"XK_L2","","",N,N],[17,"XK_F13","","",N,N],[17,"XK_L3","","",N,N],[17,"XK_F14","","",N,N],[17,"XK_L4","","",N,N],[17,"XK_F15","","",N,N],[17,"XK_L5","","",N,N],[17,"XK_F16","","",N,N],[17,"XK_L6","","",N,N],[17,"XK_F17","","",N,N],[17,"XK_L7","","",N,N],[17,"XK_F18","","",N,N],[17,"XK_L8","","",N,N],[17,"XK_F19","","",N,N],[17,"XK_L9","","",N,N],[17,"XK_F20","","",N,N],[17,"XK_L10","","",N,N],[17,"XK_F21","","",N,N],[17,"XK_R1","","",N,N],[17,"XK_F22","","",N,N],[17,"XK_R2","","",N,N],[17,"XK_F23","","",N,N],[17,"XK_R3","","",N,N],[17,"XK_F24","","",N,N],[17,"XK_R4","","",N,N],[17,"XK_F25","","",N,N],[17,"XK_R5","","",N,N],[17,"XK_F26","","",N,N],[17,"XK_R6","","",N,N],[17,"XK_F27","","",N,N],[17,"XK_R7","","",N,N],[17,"XK_F28","","",N,N],[17,"XK_R8","","",N,N],[17,"XK_F29","","",N,N],[17,"XK_R9","","",N,N],[17,"XK_F30","","",N,N],[17,"XK_R10","","",N,N],[17,"XK_F31","","",N,N],[17,"XK_R11","","",N,N],[17,"XK_F32","","",N,N],[17,"XK_R12","","",N,N],[17,"XK_F33","","",N,N],[17,"XK_R13","","",N,N],[17,"XK_F34","","",N,N],[17,"XK_R14","","",N,N],[17,"XK_F35","","",N,N],[17,"XK_R15","","",N,N],[17,"XK_Shift_L","","",N,N],[17,"XK_Shift_R","","",N,N],[17,"XK_Control_L","","",N,N],[17,"XK_Control_R","","",N,N],[17,"XK_Caps_Lock","","",N,N],[17,"XK_Shift_Lock","","",N,N],[17,"XK_Meta_L","","",N,N],[17,"XK_Meta_R","","",N,N],[17,"XK_Alt_L","","",N,N],[17,"XK_Alt_R","","",N,N],[17,"XK_Super_L","","",N,N],[17,"XK_Super_R","","",N,N],[17,"XK_Hyper_L","","",N,N],[17,"XK_Hyper_R","","",N,N],[17,"XK_space","","",N,N],[17,"XK_exclam","","",N,N],[17,"XK_quotedbl","","",N,N],[17,"XK_numbersign","","",N,N],[17,"XK_dollar","","",N,N],[17,"XK_percent","","",N,N],[17,"XK_ampersand","","",N,N],[17,"XK_apostrophe","","",N,N],[17,"XK_quoteright","","",N,N],[17,"XK_parenleft","","",N,N],[17,"XK_parenright","","",N,N],[17,"XK_asterisk","","",N,N],[17,"XK_plus","","",N,N],[17,"XK_comma","","",N,N],[17,"XK_minus","","",N,N],[17,"XK_period","","",N,N],[17,"XK_slash","","",N,N],[17,"XK_0","","",N,N],[17,"XK_1","","",N,N],[17,"XK_2","","",N,N],[17,"XK_3","","",N,N],[17,"XK_4","","",N,N],[17,"XK_5","","",N,N],[17,"XK_6","","",N,N],[17,"XK_7","","",N,N],[17,"XK_8","","",N,N],[17,"XK_9","","",N,N],[17,"XK_colon","","",N,N],[17,"XK_semicolon","","",N,N],[17,"XK_less","","",N,N],[17,"XK_equal","","",N,N],[17,"XK_greater","","",N,N],[17,"XK_question","","",N,N],[17,"XK_at","","",N,N],[17,"XK_A","","",N,N],[17,"XK_B","","",N,N],[17,"XK_C","","",N,N],[17,"XK_D","","",N,N],[17,"XK_E","","",N,N],[17,"XK_F","","",N,N],[17,"XK_G","","",N,N],[17,"XK_H","","",N,N],[17,"XK_I","","",N,N],[17,"XK_J","","",N,N],[17,"XK_K","","",N,N],[17,"XK_L","","",N,N],[17,"XK_M","","",N,N],[17,"XK_N","","",N,N],[17,"XK_O","","",N,N],[17,"XK_P","","",N,N],[17,"XK_Q","","",N,N],[17,"XK_R","","",N,N],[17,"XK_S","","",N,N],[17,"XK_T","","",N,N],[17,"XK_U","","",N,N],[17,"XK_V","","",N,N],[17,"XK_W","","",N,N],[17,"XK_X","","",N,N],[17,"XK_Y","","",N,N],[17,"XK_Z","","",N,N],[17,"XK_bracketleft","","",N,N],[17,"XK_backslash","","",N,N],[17,"XK_bracketright","","",N,N],[17,"XK_asciicircum","","",N,N],[17,"XK_underscore","","",N,N],[17,"XK_grave","","",N,N],[17,"XK_quoteleft","","",N,N],[17,"XK_a","","",N,N],[17,"XK_b","","",N,N],[17,"XK_c","","",N,N],[17,"XK_d","","",N,N],[17,"XK_e","","",N,N],[17,"XK_f","","",N,N],[17,"XK_g","","",N,N],[17,"XK_h","","",N,N],[17,"XK_i","","",N,N],[17,"XK_j","","",N,N],[17,"XK_k","","",N,N],[17,"XK_l","","",N,N],[17,"XK_m","","",N,N],[17,"XK_n","","",N,N],[17,"XK_o","","",N,N],[17,"XK_p","","",N,N],[17,"XK_q","","",N,N],[17,"XK_r","","",N,N],[17,"XK_s","","",N,N],[17,"XK_t","","",N,N],[17,"XK_u","","",N,N],[17,"XK_v","","",N,N],[17,"XK_w","","",N,N],[17,"XK_x","","",N,N],[17,"XK_y","","",N,N],[17,"XK_z","","",N,N],[17,"XK_braceleft","","",N,N],[17,"XK_bar","","",N,N],[17,"XK_braceright","","",N,N],[17,"XK_asciitilde","","",N,N],[17,"XK_nobreakspace","","",N,N],[17,"XK_exclamdown","","",N,N],[17,"XK_cent","","",N,N],[17,"XK_sterling","","",N,N],[17,"XK_currency","","",N,N],[17,"XK_yen","","",N,N],[17,"XK_brokenbar","","",N,N],[17,"XK_section","","",N,N],[17,"XK_diaeresis","","",N,N],[17,"XK_copyright","","",N,N],[17,"XK_ordfeminine","","",N,N],[17,"XK_guillemotleft","","",N,N],[17,"XK_notsign","","",N,N],[17,"XK_hyphen","","",N,N],[17,"XK_registered","","",N,N],[17,"XK_macron","","",N,N],[17,"XK_degree","","",N,N],[17,"XK_plusminus","","",N,N],[17,"XK_twosuperior","","",N,N],[17,"XK_threesuperior","","",N,N],[17,"XK_acute","","",N,N],[17,"XK_mu","","",N,N],[17,"XK_paragraph","","",N,N],[17,"XK_periodcentered","","",N,N],[17,"XK_cedilla","","",N,N],[17,"XK_onesuperior","","",N,N],[17,"XK_masculine","","",N,N],[17,"XK_guillemotright","","",N,N],[17,"XK_onequarter","","",N,N],[17,"XK_onehalf","","",N,N],[17,"XK_threequarters","","",N,N],[17,"XK_questiondown","","",N,N],[17,"XK_Agrave","","",N,N],[17,"XK_Aacute","","",N,N],[17,"XK_Acircumflex","","",N,N],[17,"XK_Atilde","","",N,N],[17,"XK_Adiaeresis","","",N,N],[17,"XK_Aring","","",N,N],[17,"XK_AE","","",N,N],[17,"XK_Ccedilla","","",N,N],[17,"XK_Egrave","","",N,N],[17,"XK_Eacute","","",N,N],[17,"XK_Ecircumflex","","",N,N],[17,"XK_Ediaeresis","","",N,N],[17,"XK_Igrave","","",N,N],[17,"XK_Iacute","","",N,N],[17,"XK_Icircumflex","","",N,N],[17,"XK_Idiaeresis","","",N,N],[17,"XK_ETH","","",N,N],[17,"XK_Eth","","",N,N],[17,"XK_Ntilde","","",N,N],[17,"XK_Ograve","","",N,N],[17,"XK_Oacute","","",N,N],[17,"XK_Ocircumflex","","",N,N],[17,"XK_Otilde","","",N,N],[17,"XK_Odiaeresis","","",N,N],[17,"XK_multiply","","",N,N],[17,"XK_Ooblique","","",N,N],[17,"XK_Ugrave","","",N,N],[17,"XK_Uacute","","",N,N],[17,"XK_Ucircumflex","","",N,N],[17,"XK_Udiaeresis","","",N,N],[17,"XK_Yacute","","",N,N],[17,"XK_THORN","","",N,N],[17,"XK_Thorn","","",N,N],[17,"XK_ssharp","","",N,N],[17,"XK_agrave","","",N,N],[17,"XK_aacute","","",N,N],[17,"XK_acircumflex","","",N,N],[17,"XK_atilde","","",N,N],[17,"XK_adiaeresis","","",N,N],[17,"XK_aring","","",N,N],[17,"XK_ae","","",N,N],[17,"XK_ccedilla","","",N,N],[17,"XK_egrave","","",N,N],[17,"XK_eacute","","",N,N],[17,"XK_ecircumflex","","",N,N],[17,"XK_ediaeresis","","",N,N],[17,"XK_igrave","","",N,N],[17,"XK_iacute","","",N,N],[17,"XK_icircumflex","","",N,N],[17,"XK_idiaeresis","","",N,N],[17,"XK_eth","","",N,N],[17,"XK_ntilde","","",N,N],[17,"XK_ograve","","",N,N],[17,"XK_oacute","","",N,N],[17,"XK_ocircumflex","","",N,N],[17,"XK_otilde","","",N,N],[17,"XK_odiaeresis","","",N,N],[17,"XK_division","","",N,N],[17,"XK_oslash","","",N,N],[17,"XK_ugrave","","",N,N],[17,"XK_uacute","","",N,N],[17,"XK_ucircumflex","","",N,N],[17,"XK_udiaeresis","","",N,N],[17,"XK_yacute","","",N,N],[17,"XK_thorn","","",N,N],[17,"XK_ydiaeresis","","",N,N],[17,"XK_Aogonek","","",N,N],[17,"XK_breve","","",N,N],[17,"XK_Lstroke","","",N,N],[17,"XK_Lcaron","","",N,N],[17,"XK_Sacute","","",N,N],[17,"XK_Scaron","","",N,N],[17,"XK_Scedilla","","",N,N],[17,"XK_Tcaron","","",N,N],[17,"XK_Zacute","","",N,N],[17,"XK_Zcaron","","",N,N],[17,"XK_Zabovedot","","",N,N],[17,"XK_aogonek","","",N,N],[17,"XK_ogonek","","",N,N],[17,"XK_lstroke","","",N,N],[17,"XK_lcaron","","",N,N],[17,"XK_sacute","","",N,N],[17,"XK_caron","","",N,N],[17,"XK_scaron","","",N,N],[17,"XK_scedilla","","",N,N],[17,"XK_tcaron","","",N,N],[17,"XK_zacute","","",N,N],[17,"XK_doubleacute","","",N,N],[17,"XK_zcaron","","",N,N],[17,"XK_zabovedot","","",N,N],[17,"XK_Racute","","",N,N],[17,"XK_Abreve","","",N,N],[17,"XK_Lacute","","",N,N],[17,"XK_Cacute","","",N,N],[17,"XK_Ccaron","","",N,N],[17,"XK_Eogonek","","",N,N],[17,"XK_Ecaron","","",N,N],[17,"XK_Dcaron","","",N,N],[17,"XK_Dstroke","","",N,N],[17,"XK_Nacute","","",N,N],[17,"XK_Ncaron","","",N,N],[17,"XK_Odoubleacute","","",N,N],[17,"XK_Rcaron","","",N,N],[17,"XK_Uring","","",N,N],[17,"XK_Udoubleacute","","",N,N],[17,"XK_Tcedilla","","",N,N],[17,"XK_racute","","",N,N],[17,"XK_abreve","","",N,N],[17,"XK_lacute","","",N,N],[17,"XK_cacute","","",N,N],[17,"XK_ccaron","","",N,N],[17,"XK_eogonek","","",N,N],[17,"XK_ecaron","","",N,N],[17,"XK_dcaron","","",N,N],[17,"XK_dstroke","","",N,N],[17,"XK_nacute","","",N,N],[17,"XK_ncaron","","",N,N],[17,"XK_odoubleacute","","",N,N],[17,"XK_udoubleacute","","",N,N],[17,"XK_rcaron","","",N,N],[17,"XK_uring","","",N,N],[17,"XK_tcedilla","","",N,N],[17,"XK_abovedot","","",N,N],[17,"XK_Hstroke","","",N,N],[17,"XK_Hcircumflex","","",N,N],[17,"XK_Iabovedot","","",N,N],[17,"XK_Gbreve","","",N,N],[17,"XK_Jcircumflex","","",N,N],[17,"XK_hstroke","","",N,N],[17,"XK_hcircumflex","","",N,N],[17,"XK_idotless","","",N,N],[17,"XK_gbreve","","",N,N],[17,"XK_jcircumflex","","",N,N],[17,"XK_Cabovedot","","",N,N],[17,"XK_Ccircumflex","","",N,N],[17,"XK_Gabovedot","","",N,N],[17,"XK_Gcircumflex","","",N,N],[17,"XK_Ubreve","","",N,N],[17,"XK_Scircumflex","","",N,N],[17,"XK_cabovedot","","",N,N],[17,"XK_ccircumflex","","",N,N],[17,"XK_gabovedot","","",N,N],[17,"XK_gcircumflex","","",N,N],[17,"XK_ubreve","","",N,N],[17,"XK_scircumflex","","",N,N],[17,"XK_kra","","",N,N],[17,"XK_kappa","","",N,N],[17,"XK_Rcedilla","","",N,N],[17,"XK_Itilde","","",N,N],[17,"XK_Lcedilla","","",N,N],[17,"XK_Emacron","","",N,N],[17,"XK_Gcedilla","","",N,N],[17,"XK_Tslash","","",N,N],[17,"XK_rcedilla","","",N,N],[17,"XK_itilde","","",N,N],[17,"XK_lcedilla","","",N,N],[17,"XK_emacron","","",N,N],[17,"XK_gcedilla","","",N,N],[17,"XK_tslash","","",N,N],[17,"XK_ENG","","",N,N],[17,"XK_eng","","",N,N],[17,"XK_Amacron","","",N,N],[17,"XK_Iogonek","","",N,N],[17,"XK_Eabovedot","","",N,N],[17,"XK_Imacron","","",N,N],[17,"XK_Ncedilla","","",N,N],[17,"XK_Omacron","","",N,N],[17,"XK_Kcedilla","","",N,N],[17,"XK_Uogonek","","",N,N],[17,"XK_Utilde","","",N,N],[17,"XK_Umacron","","",N,N],[17,"XK_amacron","","",N,N],[17,"XK_iogonek","","",N,N],[17,"XK_eabovedot","","",N,N],[17,"XK_imacron","","",N,N],[17,"XK_ncedilla","","",N,N],[17,"XK_omacron","","",N,N],[17,"XK_kcedilla","","",N,N],[17,"XK_uogonek","","",N,N],[17,"XK_utilde","","",N,N],[17,"XK_umacron","","",N,N],[17,"XK_overline","","",N,N],[17,"XK_kana_fullstop","","",N,N],[17,"XK_kana_openingbracket","","",N,N],[17,"XK_kana_closingbracket","","",N,N],[17,"XK_kana_comma","","",N,N],[17,"XK_kana_conjunctive","","",N,N],[17,"XK_kana_middledot","","",N,N],[17,"XK_kana_WO","","",N,N],[17,"XK_kana_a","","",N,N],[17,"XK_kana_i","","",N,N],[17,"XK_kana_u","","",N,N],[17,"XK_kana_e","","",N,N],[17,"XK_kana_o","","",N,N],[17,"XK_kana_ya","","",N,N],[17,"XK_kana_yu","","",N,N],[17,"XK_kana_yo","","",N,N],[17,"XK_kana_tsu","","",N,N],[17,"XK_kana_tu","","",N,N],[17,"XK_prolongedsound","","",N,N],[17,"XK_kana_A","","",N,N],[17,"XK_kana_I","","",N,N],[17,"XK_kana_U","","",N,N],[17,"XK_kana_E","","",N,N],[17,"XK_kana_O","","",N,N],[17,"XK_kana_KA","","",N,N],[17,"XK_kana_KI","","",N,N],[17,"XK_kana_KU","","",N,N],[17,"XK_kana_KE","","",N,N],[17,"XK_kana_KO","","",N,N],[17,"XK_kana_SA","","",N,N],[17,"XK_kana_SHI","","",N,N],[17,"XK_kana_SU","","",N,N],[17,"XK_kana_SE","","",N,N],[17,"XK_kana_SO","","",N,N],[17,"XK_kana_TA","","",N,N],[17,"XK_kana_CHI","","",N,N],[17,"XK_kana_TI","","",N,N],[17,"XK_kana_TSU","","",N,N],[17,"XK_kana_TU","","",N,N],[17,"XK_kana_TE","","",N,N],[17,"XK_kana_TO","","",N,N],[17,"XK_kana_NA","","",N,N],[17,"XK_kana_NI","","",N,N],[17,"XK_kana_NU","","",N,N],[17,"XK_kana_NE","","",N,N],[17,"XK_kana_NO","","",N,N],[17,"XK_kana_HA","","",N,N],[17,"XK_kana_HI","","",N,N],[17,"XK_kana_FU","","",N,N],[17,"XK_kana_HU","","",N,N],[17,"XK_kana_HE","","",N,N],[17,"XK_kana_HO","","",N,N],[17,"XK_kana_MA","","",N,N],[17,"XK_kana_MI","","",N,N],[17,"XK_kana_MU","","",N,N],[17,"XK_kana_ME","","",N,N],[17,"XK_kana_MO","","",N,N],[17,"XK_kana_YA","","",N,N],[17,"XK_kana_YU","","",N,N],[17,"XK_kana_YO","","",N,N],[17,"XK_kana_RA","","",N,N],[17,"XK_kana_RI","","",N,N],[17,"XK_kana_RU","","",N,N],[17,"XK_kana_RE","","",N,N],[17,"XK_kana_RO","","",N,N],[17,"XK_kana_WA","","",N,N],[17,"XK_kana_N","","",N,N],[17,"XK_voicedsound","","",N,N],[17,"XK_semivoicedsound","","",N,N],[17,"XK_kana_switch","","",N,N],[17,"XK_Arabic_comma","","",N,N],[17,"XK_Arabic_semicolon","","",N,N],[17,"XK_Arabic_question_mark","","",N,N],[17,"XK_Arabic_hamza","","",N,N],[17,"XK_Arabic_maddaonalef","","",N,N],[17,"XK_Arabic_hamzaonalef","","",N,N],[17,"XK_Arabic_hamzaonwaw","","",N,N],[17,"XK_Arabic_hamzaunderalef","","",N,N],[17,"XK_Arabic_hamzaonyeh","","",N,N],[17,"XK_Arabic_alef","","",N,N],[17,"XK_Arabic_beh","","",N,N],[17,"XK_Arabic_tehmarbuta","","",N,N],[17,"XK_Arabic_teh","","",N,N],[17,"XK_Arabic_theh","","",N,N],[17,"XK_Arabic_jeem","","",N,N],[17,"XK_Arabic_hah","","",N,N],[17,"XK_Arabic_khah","","",N,N],[17,"XK_Arabic_dal","","",N,N],[17,"XK_Arabic_thal","","",N,N],[17,"XK_Arabic_ra","","",N,N],[17,"XK_Arabic_zain","","",N,N],[17,"XK_Arabic_seen","","",N,N],[17,"XK_Arabic_sheen","","",N,N],[17,"XK_Arabic_sad","","",N,N],[17,"XK_Arabic_dad","","",N,N],[17,"XK_Arabic_tah","","",N,N],[17,"XK_Arabic_zah","","",N,N],[17,"XK_Arabic_ain","","",N,N],[17,"XK_Arabic_ghain","","",N,N],[17,"XK_Arabic_tatweel","","",N,N],[17,"XK_Arabic_feh","","",N,N],[17,"XK_Arabic_qaf","","",N,N],[17,"XK_Arabic_kaf","","",N,N],[17,"XK_Arabic_lam","","",N,N],[17,"XK_Arabic_meem","","",N,N],[17,"XK_Arabic_noon","","",N,N],[17,"XK_Arabic_ha","","",N,N],[17,"XK_Arabic_heh","","",N,N],[17,"XK_Arabic_waw","","",N,N],[17,"XK_Arabic_alefmaksura","","",N,N],[17,"XK_Arabic_yeh","","",N,N],[17,"XK_Arabic_fathatan","","",N,N],[17,"XK_Arabic_dammatan","","",N,N],[17,"XK_Arabic_kasratan","","",N,N],[17,"XK_Arabic_fatha","","",N,N],[17,"XK_Arabic_damma","","",N,N],[17,"XK_Arabic_kasra","","",N,N],[17,"XK_Arabic_shadda","","",N,N],[17,"XK_Arabic_sukun","","",N,N],[17,"XK_Arabic_switch","","",N,N],[17,"XK_Serbian_dje","","",N,N],[17,"XK_Macedonia_gje","","",N,N],[17,"XK_Cyrillic_io","","",N,N],[17,"XK_Ukrainian_ie","","",N,N],[17,"XK_Ukranian_je","","",N,N],[17,"XK_Macedonia_dse","","",N,N],[17,"XK_Ukrainian_i","","",N,N],[17,"XK_Ukranian_i","","",N,N],[17,"XK_Ukrainian_yi","","",N,N],[17,"XK_Ukranian_yi","","",N,N],[17,"XK_Cyrillic_je","","",N,N],[17,"XK_Serbian_je","","",N,N],[17,"XK_Cyrillic_lje","","",N,N],[17,"XK_Serbian_lje","","",N,N],[17,"XK_Cyrillic_nje","","",N,N],[17,"XK_Serbian_nje","","",N,N],[17,"XK_Serbian_tshe","","",N,N],[17,"XK_Macedonia_kje","","",N,N],[17,"XK_Byelorussian_shortu","","",N,N],[17,"XK_Cyrillic_dzhe","","",N,N],[17,"XK_Serbian_dze","","",N,N],[17,"XK_numerosign","","",N,N],[17,"XK_Serbian_DJE","","",N,N],[17,"XK_Macedonia_GJE","","",N,N],[17,"XK_Cyrillic_IO","","",N,N],[17,"XK_Ukrainian_IE","","",N,N],[17,"XK_Ukranian_JE","","",N,N],[17,"XK_Macedonia_DSE","","",N,N],[17,"XK_Ukrainian_I","","",N,N],[17,"XK_Ukranian_I","","",N,N],[17,"XK_Ukrainian_YI","","",N,N],[17,"XK_Ukranian_YI","","",N,N],[17,"XK_Cyrillic_JE","","",N,N],[17,"XK_Serbian_JE","","",N,N],[17,"XK_Cyrillic_LJE","","",N,N],[17,"XK_Serbian_LJE","","",N,N],[17,"XK_Cyrillic_NJE","","",N,N],[17,"XK_Serbian_NJE","","",N,N],[17,"XK_Serbian_TSHE","","",N,N],[17,"XK_Macedonia_KJE","","",N,N],[17,"XK_Byelorussian_SHORTU","","",N,N],[17,"XK_Cyrillic_DZHE","","",N,N],[17,"XK_Serbian_DZE","","",N,N],[17,"XK_Cyrillic_yu","","",N,N],[17,"XK_Cyrillic_a","","",N,N],[17,"XK_Cyrillic_be","","",N,N],[17,"XK_Cyrillic_tse","","",N,N],[17,"XK_Cyrillic_de","","",N,N],[17,"XK_Cyrillic_ie","","",N,N],[17,"XK_Cyrillic_ef","","",N,N],[17,"XK_Cyrillic_ghe","","",N,N],[17,"XK_Cyrillic_ha","","",N,N],[17,"XK_Cyrillic_i","","",N,N],[17,"XK_Cyrillic_shorti","","",N,N],[17,"XK_Cyrillic_ka","","",N,N],[17,"XK_Cyrillic_el","","",N,N],[17,"XK_Cyrillic_em","","",N,N],[17,"XK_Cyrillic_en","","",N,N],[17,"XK_Cyrillic_o","","",N,N],[17,"XK_Cyrillic_pe","","",N,N],[17,"XK_Cyrillic_ya","","",N,N],[17,"XK_Cyrillic_er","","",N,N],[17,"XK_Cyrillic_es","","",N,N],[17,"XK_Cyrillic_te","","",N,N],[17,"XK_Cyrillic_u","","",N,N],[17,"XK_Cyrillic_zhe","","",N,N],[17,"XK_Cyrillic_ve","","",N,N],[17,"XK_Cyrillic_softsign","","",N,N],[17,"XK_Cyrillic_yeru","","",N,N],[17,"XK_Cyrillic_ze","","",N,N],[17,"XK_Cyrillic_sha","","",N,N],[17,"XK_Cyrillic_e","","",N,N],[17,"XK_Cyrillic_shcha","","",N,N],[17,"XK_Cyrillic_che","","",N,N],[17,"XK_Cyrillic_hardsign","","",N,N],[17,"XK_Cyrillic_YU","","",N,N],[17,"XK_Cyrillic_A","","",N,N],[17,"XK_Cyrillic_BE","","",N,N],[17,"XK_Cyrillic_TSE","","",N,N],[17,"XK_Cyrillic_DE","","",N,N],[17,"XK_Cyrillic_IE","","",N,N],[17,"XK_Cyrillic_EF","","",N,N],[17,"XK_Cyrillic_GHE","","",N,N],[17,"XK_Cyrillic_HA","","",N,N],[17,"XK_Cyrillic_I","","",N,N],[17,"XK_Cyrillic_SHORTI","","",N,N],[17,"XK_Cyrillic_KA","","",N,N],[17,"XK_Cyrillic_EL","","",N,N],[17,"XK_Cyrillic_EM","","",N,N],[17,"XK_Cyrillic_EN","","",N,N],[17,"XK_Cyrillic_O","","",N,N],[17,"XK_Cyrillic_PE","","",N,N],[17,"XK_Cyrillic_YA","","",N,N],[17,"XK_Cyrillic_ER","","",N,N],[17,"XK_Cyrillic_ES","","",N,N],[17,"XK_Cyrillic_TE","","",N,N],[17,"XK_Cyrillic_U","","",N,N],[17,"XK_Cyrillic_ZHE","","",N,N],[17,"XK_Cyrillic_VE","","",N,N],[17,"XK_Cyrillic_SOFTSIGN","","",N,N],[17,"XK_Cyrillic_YERU","","",N,N],[17,"XK_Cyrillic_ZE","","",N,N],[17,"XK_Cyrillic_SHA","","",N,N],[17,"XK_Cyrillic_E","","",N,N],[17,"XK_Cyrillic_SHCHA","","",N,N],[17,"XK_Cyrillic_CHE","","",N,N],[17,"XK_Cyrillic_HARDSIGN","","",N,N],[17,"XK_Greek_ALPHAaccent","","",N,N],[17,"XK_Greek_EPSILONaccent","","",N,N],[17,"XK_Greek_ETAaccent","","",N,N],[17,"XK_Greek_IOTAaccent","","",N,N],[17,"XK_Greek_IOTAdiaeresis","","",N,N],[17,"XK_Greek_OMICRONaccent","","",N,N],[17,"XK_Greek_UPSILONaccent","","",N,N],[17,"XK_Greek_UPSILONdieresis","","",N,N],[17,"XK_Greek_OMEGAaccent","","",N,N],[17,"XK_Greek_accentdieresis","","",N,N],[17,"XK_Greek_horizbar","","",N,N],[17,"XK_Greek_alphaaccent","","",N,N],[17,"XK_Greek_epsilonaccent","","",N,N],[17,"XK_Greek_etaaccent","","",N,N],[17,"XK_Greek_iotaaccent","","",N,N],[17,"XK_Greek_iotadieresis","","",N,N],[17,"XK_Greek_iotaaccentdieresis","","",N,N],[17,"XK_Greek_omicronaccent","","",N,N],[17,"XK_Greek_upsilonaccent","","",N,N],[17,"XK_Greek_upsilondieresis","","",N,N],[17,"XK_Greek_upsilonaccentdieresis","","",N,N],[17,"XK_Greek_omegaaccent","","",N,N],[17,"XK_Greek_ALPHA","","",N,N],[17,"XK_Greek_BETA","","",N,N],[17,"XK_Greek_GAMMA","","",N,N],[17,"XK_Greek_DELTA","","",N,N],[17,"XK_Greek_EPSILON","","",N,N],[17,"XK_Greek_ZETA","","",N,N],[17,"XK_Greek_ETA","","",N,N],[17,"XK_Greek_THETA","","",N,N],[17,"XK_Greek_IOTA","","",N,N],[17,"XK_Greek_KAPPA","","",N,N],[17,"XK_Greek_LAMDA","","",N,N],[17,"XK_Greek_LAMBDA","","",N,N],[17,"XK_Greek_MU","","",N,N],[17,"XK_Greek_NU","","",N,N],[17,"XK_Greek_XI","","",N,N],[17,"XK_Greek_OMICRON","","",N,N],[17,"XK_Greek_PI","","",N,N],[17,"XK_Greek_RHO","","",N,N],[17,"XK_Greek_SIGMA","","",N,N],[17,"XK_Greek_TAU","","",N,N],[17,"XK_Greek_UPSILON","","",N,N],[17,"XK_Greek_PHI","","",N,N],[17,"XK_Greek_CHI","","",N,N],[17,"XK_Greek_PSI","","",N,N],[17,"XK_Greek_OMEGA","","",N,N],[17,"XK_Greek_alpha","","",N,N],[17,"XK_Greek_beta","","",N,N],[17,"XK_Greek_gamma","","",N,N],[17,"XK_Greek_delta","","",N,N],[17,"XK_Greek_epsilon","","",N,N],[17,"XK_Greek_zeta","","",N,N],[17,"XK_Greek_eta","","",N,N],[17,"XK_Greek_theta","","",N,N],[17,"XK_Greek_iota","","",N,N],[17,"XK_Greek_kappa","","",N,N],[17,"XK_Greek_lamda","","",N,N],[17,"XK_Greek_lambda","","",N,N],[17,"XK_Greek_mu","","",N,N],[17,"XK_Greek_nu","","",N,N],[17,"XK_Greek_xi","","",N,N],[17,"XK_Greek_omicron","","",N,N],[17,"XK_Greek_pi","","",N,N],[17,"XK_Greek_rho","","",N,N],[17,"XK_Greek_sigma","","",N,N],[17,"XK_Greek_finalsmallsigma","","",N,N],[17,"XK_Greek_tau","","",N,N],[17,"XK_Greek_upsilon","","",N,N],[17,"XK_Greek_phi","","",N,N],[17,"XK_Greek_chi","","",N,N],[17,"XK_Greek_psi","","",N,N],[17,"XK_Greek_omega","","",N,N],[17,"XK_Greek_switch","","",N,N],[17,"XK_leftradical","","",N,N],[17,"XK_topleftradical","","",N,N],[17,"XK_horizconnector","","",N,N],[17,"XK_topintegral","","",N,N],[17,"XK_botintegral","","",N,N],[17,"XK_vertconnector","","",N,N],[17,"XK_topleftsqbracket","","",N,N],[17,"XK_botleftsqbracket","","",N,N],[17,"XK_toprightsqbracket","","",N,N],[17,"XK_botrightsqbracket","","",N,N],[17,"XK_topleftparens","","",N,N],[17,"XK_botleftparens","","",N,N],[17,"XK_toprightparens","","",N,N],[17,"XK_botrightparens","","",N,N],[17,"XK_leftmiddlecurlybrace","","",N,N],[17,"XK_rightmiddlecurlybrace","","",N,N],[17,"XK_topleftsummation","","",N,N],[17,"XK_botleftsummation","","",N,N],[17,"XK_topvertsummationconnector","","",N,N],[17,"XK_botvertsummationconnector","","",N,N],[17,"XK_toprightsummation","","",N,N],[17,"XK_botrightsummation","","",N,N],[17,"XK_rightmiddlesummation","","",N,N],[17,"XK_lessthanequal","","",N,N],[17,"XK_notequal","","",N,N],[17,"XK_greaterthanequal","","",N,N],[17,"XK_integral","","",N,N],[17,"XK_therefore","","",N,N],[17,"XK_variation","","",N,N],[17,"XK_infinity","","",N,N],[17,"XK_nabla","","",N,N],[17,"XK_approximate","","",N,N],[17,"XK_similarequal","","",N,N],[17,"XK_ifonlyif","","",N,N],[17,"XK_implies","","",N,N],[17,"XK_identical","","",N,N],[17,"XK_radical","","",N,N],[17,"XK_includedin","","",N,N],[17,"XK_includes","","",N,N],[17,"XK_intersection","","",N,N],[17,"XK_union","","",N,N],[17,"XK_logicaland","","",N,N],[17,"XK_logicalor","","",N,N],[17,"XK_partialderivative","","",N,N],[17,"XK_function","","",N,N],[17,"XK_leftarrow","","",N,N],[17,"XK_uparrow","","",N,N],[17,"XK_rightarrow","","",N,N],[17,"XK_downarrow","","",N,N],[17,"XK_blank","","",N,N],[17,"XK_soliddiamond","","",N,N],[17,"XK_checkerboard","","",N,N],[17,"XK_ht","","",N,N],[17,"XK_ff","","",N,N],[17,"XK_cr","","",N,N],[17,"XK_lf","","",N,N],[17,"XK_nl","","",N,N],[17,"XK_vt","","",N,N],[17,"XK_lowrightcorner","","",N,N],[17,"XK_uprightcorner","","",N,N],[17,"XK_upleftcorner","","",N,N],[17,"XK_lowleftcorner","","",N,N],[17,"XK_crossinglines","","",N,N],[17,"XK_horizlinescan1","","",N,N],[17,"XK_horizlinescan3","","",N,N],[17,"XK_horizlinescan5","","",N,N],[17,"XK_horizlinescan7","","",N,N],[17,"XK_horizlinescan9","","",N,N],[17,"XK_leftt","","",N,N],[17,"XK_rightt","","",N,N],[17,"XK_bott","","",N,N],[17,"XK_topt","","",N,N],[17,"XK_vertbar","","",N,N],[17,"XK_emspace","","",N,N],[17,"XK_enspace","","",N,N],[17,"XK_em3space","","",N,N],[17,"XK_em4space","","",N,N],[17,"XK_digitspace","","",N,N],[17,"XK_punctspace","","",N,N],[17,"XK_thinspace","","",N,N],[17,"XK_hairspace","","",N,N],[17,"XK_emdash","","",N,N],[17,"XK_endash","","",N,N],[17,"XK_signifblank","","",N,N],[17,"XK_ellipsis","","",N,N],[17,"XK_doubbaselinedot","","",N,N],[17,"XK_onethird","","",N,N],[17,"XK_twothirds","","",N,N],[17,"XK_onefifth","","",N,N],[17,"XK_twofifths","","",N,N],[17,"XK_threefifths","","",N,N],[17,"XK_fourfifths","","",N,N],[17,"XK_onesixth","","",N,N],[17,"XK_fivesixths","","",N,N],[17,"XK_careof","","",N,N],[17,"XK_figdash","","",N,N],[17,"XK_leftanglebracket","","",N,N],[17,"XK_decimalpoint","","",N,N],[17,"XK_rightanglebracket","","",N,N],[17,"XK_marker","","",N,N],[17,"XK_oneeighth","","",N,N],[17,"XK_threeeighths","","",N,N],[17,"XK_fiveeighths","","",N,N],[17,"XK_seveneighths","","",N,N],[17,"XK_trademark","","",N,N],[17,"XK_signaturemark","","",N,N],[17,"XK_trademarkincircle","","",N,N],[17,"XK_leftopentriangle","","",N,N],[17,"XK_rightopentriangle","","",N,N],[17,"XK_emopencircle","","",N,N],[17,"XK_emopenrectangle","","",N,N],[17,"XK_leftsinglequotemark","","",N,N],[17,"XK_rightsinglequotemark","","",N,N],[17,"XK_leftdoublequotemark","","",N,N],[17,"XK_rightdoublequotemark","","",N,N],[17,"XK_prescription","","",N,N],[17,"XK_minutes","","",N,N],[17,"XK_seconds","","",N,N],[17,"XK_latincross","","",N,N],[17,"XK_hexagram","","",N,N],[17,"XK_filledrectbullet","","",N,N],[17,"XK_filledlefttribullet","","",N,N],[17,"XK_filledrighttribullet","","",N,N],[17,"XK_emfilledcircle","","",N,N],[17,"XK_emfilledrect","","",N,N],[17,"XK_enopencircbullet","","",N,N],[17,"XK_enopensquarebullet","","",N,N],[17,"XK_openrectbullet","","",N,N],[17,"XK_opentribulletup","","",N,N],[17,"XK_opentribulletdown","","",N,N],[17,"XK_openstar","","",N,N],[17,"XK_enfilledcircbullet","","",N,N],[17,"XK_enfilledsqbullet","","",N,N],[17,"XK_filledtribulletup","","",N,N],[17,"XK_filledtribulletdown","","",N,N],[17,"XK_leftpointer","","",N,N],[17,"XK_rightpointer","","",N,N],[17,"XK_club","","",N,N],[17,"XK_diamond","","",N,N],[17,"XK_heart","","",N,N],[17,"XK_maltesecross","","",N,N],[17,"XK_dagger","","",N,N],[17,"XK_doubledagger","","",N,N],[17,"XK_checkmark","","",N,N],[17,"XK_ballotcross","","",N,N],[17,"XK_musicalsharp","","",N,N],[17,"XK_musicalflat","","",N,N],[17,"XK_malesymbol","","",N,N],[17,"XK_femalesymbol","","",N,N],[17,"XK_telephone","","",N,N],[17,"XK_telephonerecorder","","",N,N],[17,"XK_phonographcopyright","","",N,N],[17,"XK_caret","","",N,N],[17,"XK_singlelowquotemark","","",N,N],[17,"XK_doublelowquotemark","","",N,N],[17,"XK_cursor","","",N,N],[17,"XK_leftcaret","","",N,N],[17,"XK_rightcaret","","",N,N],[17,"XK_downcaret","","",N,N],[17,"XK_upcaret","","",N,N],[17,"XK_overbar","","",N,N],[17,"XK_downtack","","",N,N],[17,"XK_upshoe","","",N,N],[17,"XK_downstile","","",N,N],[17,"XK_underbar","","",N,N],[17,"XK_jot","","",N,N],[17,"XK_quad","","",N,N],[17,"XK_uptack","","",N,N],[17,"XK_circle","","",N,N],[17,"XK_upstile","","",N,N],[17,"XK_downshoe","","",N,N],[17,"XK_rightshoe","","",N,N],[17,"XK_leftshoe","","",N,N],[17,"XK_lefttack","","",N,N],[17,"XK_righttack","","",N,N],[17,"XK_hebrew_doublelowline","","",N,N],[17,"XK_hebrew_aleph","","",N,N],[17,"XK_hebrew_bet","","",N,N],[17,"XK_hebrew_beth","","",N,N],[17,"XK_hebrew_gimel","","",N,N],[17,"XK_hebrew_gimmel","","",N,N],[17,"XK_hebrew_dalet","","",N,N],[17,"XK_hebrew_daleth","","",N,N],[17,"XK_hebrew_he","","",N,N],[17,"XK_hebrew_waw","","",N,N],[17,"XK_hebrew_zain","","",N,N],[17,"XK_hebrew_zayin","","",N,N],[17,"XK_hebrew_chet","","",N,N],[17,"XK_hebrew_het","","",N,N],[17,"XK_hebrew_tet","","",N,N],[17,"XK_hebrew_teth","","",N,N],[17,"XK_hebrew_yod","","",N,N],[17,"XK_hebrew_finalkaph","","",N,N],[17,"XK_hebrew_kaph","","",N,N],[17,"XK_hebrew_lamed","","",N,N],[17,"XK_hebrew_finalmem","","",N,N],[17,"XK_hebrew_mem","","",N,N],[17,"XK_hebrew_finalnun","","",N,N],[17,"XK_hebrew_nun","","",N,N],[17,"XK_hebrew_samech","","",N,N],[17,"XK_hebrew_samekh","","",N,N],[17,"XK_hebrew_ayin","","",N,N],[17,"XK_hebrew_finalpe","","",N,N],[17,"XK_hebrew_pe","","",N,N],[17,"XK_hebrew_finalzade","","",N,N],[17,"XK_hebrew_finalzadi","","",N,N],[17,"XK_hebrew_zade","","",N,N],[17,"XK_hebrew_zadi","","",N,N],[17,"XK_hebrew_qoph","","",N,N],[17,"XK_hebrew_kuf","","",N,N],[17,"XK_hebrew_resh","","",N,N],[17,"XK_hebrew_shin","","",N,N],[17,"XK_hebrew_taw","","",N,N],[17,"XK_hebrew_taf","","",N,N],[17,"XK_Hebrew_switch","","",N,N],[17,"XF86XK_ModeLock","","",N,N],[17,"XF86XK_MonBrightnessUp","","",N,N],[17,"XF86XK_MonBrightnessDown","","",N,N],[17,"XF86XK_KbdLightOnOff","","",N,N],[17,"XF86XK_KbdBrightnessUp","","",N,N],[17,"XF86XK_KbdBrightnessDown","","",N,N],[17,"XF86XK_Standby","","",N,N],[17,"XF86XK_AudioLowerVolume","","",N,N],[17,"XF86XK_AudioMute","","",N,N],[17,"XF86XK_AudioRaiseVolume","","",N,N],[17,"XF86XK_AudioPlay","","",N,N],[17,"XF86XK_AudioStop","","",N,N],[17,"XF86XK_AudioPrev","","",N,N],[17,"XF86XK_AudioNext","","",N,N],[17,"XF86XK_HomePage","","",N,N],[17,"XF86XK_Mail","","",N,N],[17,"XF86XK_Start","","",N,N],[17,"XF86XK_Search","","",N,N],[17,"XF86XK_AudioRecord","","",N,N],[17,"XF86XK_Calculator","","",N,N],[17,"XF86XK_Memo","","",N,N],[17,"XF86XK_ToDoList","","",N,N],[17,"XF86XK_Calendar","","",N,N],[17,"XF86XK_PowerDown","","",N,N],[17,"XF86XK_ContrastAdjust","","",N,N],[17,"XF86XK_RockerUp","","",N,N],[17,"XF86XK_RockerDown","","",N,N],[17,"XF86XK_RockerEnter","","",N,N],[17,"XF86XK_Back","","",N,N],[17,"XF86XK_Forward","","",N,N],[17,"XF86XK_Stop","","",N,N],[17,"XF86XK_Refresh","","",N,N],[17,"XF86XK_PowerOff","","",N,N],[17,"XF86XK_WakeUp","","",N,N],[17,"XF86XK_Eject","","",N,N],[17,"XF86XK_ScreenSaver","","",N,N],[17,"XF86XK_WWW","","",N,N],[17,"XF86XK_Sleep","","",N,N],[17,"XF86XK_Favorites","","",N,N],[17,"XF86XK_AudioPause","","",N,N],[17,"XF86XK_AudioMedia","","",N,N],[17,"XF86XK_MyComputer","","",N,N],[17,"XF86XK_VendorHome","","",N,N],[17,"XF86XK_LightBulb","","",N,N],[17,"XF86XK_Shop","","",N,N],[17,"XF86XK_History","","",N,N],[17,"XF86XK_OpenURL","","",N,N],[17,"XF86XK_AddFavorite","","",N,N],[17,"XF86XK_HotLinks","","",N,N],[17,"XF86XK_BrightnessAdjust","","",N,N],[17,"XF86XK_Finance","","",N,N],[17,"XF86XK_Community","","",N,N],[17,"XF86XK_AudioRewind","","",N,N],[17,"XF86XK_BackForward","","",N,N],[17,"XF86XK_Launch0","","",N,N],[17,"XF86XK_Launch1","","",N,N],[17,"XF86XK_Launch2","","",N,N],[17,"XF86XK_Launch3","","",N,N],[17,"XF86XK_Launch4","","",N,N],[17,"XF86XK_Launch5","","",N,N],[17,"XF86XK_Launch6","","",N,N],[17,"XF86XK_Launch7","","",N,N],[17,"XF86XK_Launch8","","",N,N],[17,"XF86XK_Launch9","","",N,N],[17,"XF86XK_LaunchA","","",N,N],[17,"XF86XK_LaunchB","","",N,N],[17,"XF86XK_LaunchC","","",N,N],[17,"XF86XK_LaunchD","","",N,N],[17,"XF86XK_LaunchE","","",N,N],[17,"XF86XK_LaunchF","","",N,N],[17,"XF86XK_ApplicationLeft","","",N,N],[17,"XF86XK_ApplicationRight","","",N,N],[17,"XF86XK_Book","","",N,N],[17,"XF86XK_CD","","",N,N],[17,"XF86XK_Calculater","","",N,N],[17,"XF86XK_Clear","","",N,N],[17,"XF86XK_Close","","",N,N],[17,"XF86XK_Copy","","",N,N],[17,"XF86XK_Cut","","",N,N],[17,"XF86XK_Display","","",N,N],[17,"XF86XK_DOS","","",N,N],[17,"XF86XK_Documents","","",N,N],[17,"XF86XK_Excel","","",N,N],[17,"XF86XK_Explorer","","",N,N],[17,"XF86XK_Game","","",N,N],[17,"XF86XK_Go","","",N,N],[17,"XF86XK_iTouch","","",N,N],[17,"XF86XK_LogOff","","",N,N],[17,"XF86XK_Market","","",N,N],[17,"XF86XK_Meeting","","",N,N],[17,"XF86XK_MenuKB","","",N,N],[17,"XF86XK_MenuPB","","",N,N],[17,"XF86XK_MySites","","",N,N],[17,"XF86XK_New","","",N,N],[17,"XF86XK_News","","",N,N],[17,"XF86XK_OfficeHome","","",N,N],[17,"XF86XK_Open","","",N,N],[17,"XF86XK_Option","","",N,N],[17,"XF86XK_Paste","","",N,N],[17,"XF86XK_Phone","","",N,N],[17,"XF86XK_Q","","",N,N],[17,"XF86XK_Reply","","",N,N],[17,"XF86XK_Reload","","",N,N],[17,"XF86XK_RotateWindows","","",N,N],[17,"XF86XK_RotationPB","","",N,N],[17,"XF86XK_RotationKB","","",N,N],[17,"XF86XK_Save","","",N,N],[17,"XF86XK_ScrollUp","","",N,N],[17,"XF86XK_ScrollDown","","",N,N],[17,"XF86XK_ScrollClick","","",N,N],[17,"XF86XK_Send","","",N,N],[17,"XF86XK_Spell","","",N,N],[17,"XF86XK_SplitScreen","","",N,N],[17,"XF86XK_Support","","",N,N],[17,"XF86XK_TaskPane","","",N,N],[17,"XF86XK_Terminal","","",N,N],[17,"XF86XK_Tools","","",N,N],[17,"XF86XK_Travel","","",N,N],[17,"XF86XK_UserPB","","",N,N],[17,"XF86XK_User1KB","","",N,N],[17,"XF86XK_User2KB","","",N,N],[17,"XF86XK_Video","","",N,N],[17,"XF86XK_WheelButton","","",N,N],[17,"XF86XK_Word","","",N,N],[17,"XF86XK_Xfer","","",N,N],[17,"XF86XK_ZoomIn","","",N,N],[17,"XF86XK_ZoomOut","","",N,N],[17,"XF86XK_Away","","",N,N],[17,"XF86XK_Messenger","","",N,N],[17,"XF86XK_WebCam","","",N,N],[17,"XF86XK_MailForward","","",N,N],[17,"XF86XK_Pictures","","",N,N],[17,"XF86XK_Music","","",N,N],[17,"XF86XK_Battery","","",N,N],[17,"XF86XK_Bluetooth","","",N,N],[17,"XF86XK_WLAN","","",N,N],[17,"XF86XK_UWB","","",N,N],[17,"XF86XK_AudioForward","","",N,N],[17,"XF86XK_AudioRepeat","","",N,N],[17,"XF86XK_AudioRandomPlay","","",N,N],[17,"XF86XK_Subtitle","","",N,N],[17,"XF86XK_AudioCycleTrack","","",N,N],[17,"XF86XK_CycleAngle","","",N,N],[17,"XF86XK_FrameBack","","",N,N],[17,"XF86XK_FrameForward","","",N,N],[17,"XF86XK_Time","","",N,N],[17,"XF86XK_Select","","",N,N],[17,"XF86XK_View","","",N,N],[17,"XF86XK_TopMenu","","",N,N],[17,"XF86XK_Red","","",N,N],[17,"XF86XK_Green","","",N,N],[17,"XF86XK_Yellow","","",N,N],[17,"XF86XK_Blue","","",N,N],[17,"XF86XK_Suspend","","",N,N],[17,"XF86XK_Hibernate","","",N,N],[17,"XF86XK_TouchpadToggle","","",N,N],[17,"XF86XK_TouchpadOn","","",N,N],[17,"XF86XK_TouchpadOff","","",N,N],[17,"XF86XK_AudioMicMute","","",N,N],[17,"XF86XK_Switch_VT_1","","",N,N],[17,"XF86XK_Switch_VT_2","","",N,N],[17,"XF86XK_Switch_VT_3","","",N,N],[17,"XF86XK_Switch_VT_4","","",N,N],[17,"XF86XK_Switch_VT_5","","",N,N],[17,"XF86XK_Switch_VT_6","","",N,N],[17,"XF86XK_Switch_VT_7","","",N,N],[17,"XF86XK_Switch_VT_8","","",N,N],[17,"XF86XK_Switch_VT_9","","",N,N],[17,"XF86XK_Switch_VT_10","","",N,N],[17,"XF86XK_Switch_VT_11","","",N,N],[17,"XF86XK_Switch_VT_12","","",N,N],[17,"XF86XK_Ungrab","","",N,N],[17,"XF86XK_ClearGrab","","",N,N],[17,"XF86XK_Next_VMode","","",N,N],[17,"XF86XK_Prev_VMode","","",N,N],[17,"XF86XK_LogWindowTree","","",N,N],[17,"XF86XK_LogGrabInfo","","",N,N],[17,"XK_ISO_Lock","","",N,N],[17,"XK_ISO_Level2_Latch","","",N,N],[17,"XK_ISO_Level3_Shift","","",N,N],[17,"XK_ISO_Level3_Latch","","",N,N],[17,"XK_ISO_Level3_Lock","","",N,N],[17,"XK_ISO_Level5_Shift","","",N,N],[17,"XK_ISO_Level5_Latch","","",N,N],[17,"XK_ISO_Level5_Lock","","",N,N],[17,"XK_ISO_Group_Shift","","",N,N],[17,"XK_ISO_Group_Latch","","",N,N],[17,"XK_ISO_Group_Lock","","",N,N],[17,"XK_ISO_Next_Group","","",N,N],[17,"XK_ISO_Next_Group_Lock","","",N,N],[17,"XK_ISO_Prev_Group","","",N,N],[17,"XK_ISO_Prev_Group_Lock","","",N,N],[17,"XK_ISO_First_Group","","",N,N],[17,"XK_ISO_First_Group_Lock","","",N,N],[17,"XK_ISO_Last_Group","","",N,N],[17,"XK_ISO_Last_Group_Lock","","",N,N],[17,"XK_ISO_Left_Tab","","",N,N],[17,"XK_ISO_Move_Line_Up","","",N,N],[17,"XK_ISO_Move_Line_Down","","",N,N],[17,"XK_ISO_Partial_Line_Up","","",N,N],[17,"XK_ISO_Partial_Line_Down","","",N,N],[17,"XK_ISO_Partial_Space_Left","","",N,N],[17,"XK_ISO_Partial_Space_Right","","",N,N],[17,"XK_ISO_Set_Margin_Left","","",N,N],[17,"XK_ISO_Set_Margin_Right","","",N,N],[17,"XK_ISO_Release_Margin_Left","","",N,N],[17,"XK_ISO_Release_Margin_Right","","",N,N],[17,"XK_ISO_Release_Both_Margins","","",N,N],[17,"XK_ISO_Fast_Cursor_Left","","",N,N],[17,"XK_ISO_Fast_Cursor_Right","","",N,N],[17,"XK_ISO_Fast_Cursor_Up","","",N,N],[17,"XK_ISO_Fast_Cursor_Down","","",N,N],[17,"XK_ISO_Continuous_Underline","","",N,N],[17,"XK_ISO_Discontinuous_Underline","","",N,N],[17,"XK_ISO_Emphasize","","",N,N],[17,"XK_ISO_Center_Object","","",N,N],[17,"XK_ISO_Enter","","",N,N],[17,"XK_dead_grave","","",N,N],[17,"XK_dead_acute","","",N,N],[17,"XK_dead_circumflex","","",N,N],[17,"XK_dead_tilde","","",N,N],[17,"XK_dead_perispomeni","","",N,N],[17,"XK_dead_macron","","",N,N],[17,"XK_dead_breve","","",N,N],[17,"XK_dead_abovedot","","",N,N],[17,"XK_dead_diaeresis","","",N,N],[17,"XK_dead_abovering","","",N,N],[17,"XK_dead_doubleacute","","",N,N],[17,"XK_dead_caron","","",N,N],[17,"XK_dead_cedilla","","",N,N],[17,"XK_dead_ogonek","","",N,N],[17,"XK_dead_iota","","",N,N],[17,"XK_dead_voiced_sound","","",N,N],[17,"XK_dead_semivoiced_sound","","",N,N],[17,"XK_dead_belowdot","","",N,N],[17,"XK_dead_hook","","",N,N],[17,"XK_dead_horn","","",N,N],[17,"XK_dead_stroke","","",N,N],[17,"XK_dead_abovecomma","","",N,N],[17,"XK_dead_psili","","",N,N],[17,"XK_dead_abovereversedcomma","","",N,N],[17,"XK_dead_dasia","","",N,N],[17,"XK_dead_doublegrave","","",N,N],[17,"XK_dead_belowring","","",N,N],[17,"XK_dead_belowmacron","","",N,N],[17,"XK_dead_belowcircumflex","","",N,N],[17,"XK_dead_belowtilde","","",N,N],[17,"XK_dead_belowbreve","","",N,N],[17,"XK_dead_belowdiaeresis","","",N,N],[17,"XK_dead_invertedbreve","","",N,N],[17,"XK_dead_belowcomma","","",N,N],[17,"XK_dead_currency","","",N,N],[17,"XK_dead_lowline","","",N,N],[17,"XK_dead_aboveverticalline","","",N,N],[17,"XK_dead_belowverticalline","","",N,N],[17,"XK_dead_longsolidusoverlay","","",N,N],[17,"XK_dead_a","","",N,N],[17,"XK_dead_A","","",N,N],[17,"XK_dead_e","","",N,N],[17,"XK_dead_E","","",N,N],[17,"XK_dead_i","","",N,N],[17,"XK_dead_I","","",N,N],[17,"XK_dead_o","","",N,N],[17,"XK_dead_O","","",N,N],[17,"XK_dead_u","","",N,N],[17,"XK_dead_U","","",N,N],[17,"XK_dead_small_schwa","","",N,N],[17,"XK_dead_capital_schwa","","",N,N],[17,"XK_dead_greek","","",N,N],[17,"XK_First_Virtual_Screen","","",N,N],[17,"XK_Prev_Virtual_Screen","","",N,N],[17,"XK_Next_Virtual_Screen","","",N,N],[17,"XK_Last_Virtual_Screen","","",N,N],[17,"XK_Terminate_Server","","",N,N],[17,"XK_AccessX_Enable","","",N,N],[17,"XK_AccessX_Feedback_Enable","","",N,N],[17,"XK_RepeatKeys_Enable","","",N,N],[17,"XK_SlowKeys_Enable","","",N,N],[17,"XK_BounceKeys_Enable","","",N,N],[17,"XK_StickyKeys_Enable","","",N,N],[17,"XK_MouseKeys_Enable","","",N,N],[17,"XK_MouseKeys_Accel_Enable","","",N,N],[17,"XK_Overlay1_Enable","","",N,N],[17,"XK_Overlay2_Enable","","",N,N],[17,"XK_AudibleBell_Enable","","",N,N],[17,"XK_Pointer_Left","","",N,N],[17,"XK_Pointer_Right","","",N,N],[17,"XK_Pointer_Up","","",N,N],[17,"XK_Pointer_Down","","",N,N],[17,"XK_Pointer_UpLeft","","",N,N],[17,"XK_Pointer_UpRight","","",N,N],[17,"XK_Pointer_DownLeft","","",N,N],[17,"XK_Pointer_DownRight","","",N,N],[17,"XK_Pointer_Button_Dflt","","",N,N],[17,"XK_Pointer_Button1","","",N,N],[17,"XK_Pointer_Button2","","",N,N],[17,"XK_Pointer_Button3","","",N,N],[17,"XK_Pointer_Button4","","",N,N],[17,"XK_Pointer_Button5","","",N,N],[17,"XK_Pointer_DblClick_Dflt","","",N,N],[17,"XK_Pointer_DblClick1","","",N,N],[17,"XK_Pointer_DblClick2","","",N,N],[17,"XK_Pointer_DblClick3","","",N,N],[17,"XK_Pointer_DblClick4","","",N,N],[17,"XK_Pointer_DblClick5","","",N,N],[17,"XK_Pointer_Drag_Dflt","","",N,N],[17,"XK_Pointer_Drag1","","",N,N],[17,"XK_Pointer_Drag2","","",N,N],[17,"XK_Pointer_Drag3","","",N,N],[17,"XK_Pointer_Drag4","","",N,N],[17,"XK_Pointer_Drag5","","",N,N],[17,"XK_Pointer_EnableKeys","","",N,N],[17,"XK_Pointer_Accelerate","","",N,N],[17,"XK_Pointer_DfltBtnNext","","",N,N],[17,"XK_Pointer_DfltBtnPrev","","",N,N],[17,"XK_ch","","",N,N],[17,"XK_Ch","","",N,N],[17,"XK_CH","","",N,N],[17,"XK_c_h","","",N,N],[17,"XK_C_h","","",N,N],[17,"XK_C_H","","",N,N],[0,"xcursor","x11_dl","",N,N],[3,"Xcursor","x11_dl::xcursor","",N,N],[12,"XcursorAnimateCreate","","",104,N],[12,"XcursorAnimateDestroy","","",104,N],[12,"XcursorAnimateNext","","",104,N],[12,"XcursorCommentCreate","","",104,N],[12,"XcursorCommentDestroy","","",104,N],[12,"XcursorCommentsCreate","","",104,N],[12,"XcursorCommentsDestroy","","",104,N],[12,"XcursorCursorsCreate","","",104,N],[12,"XcursorCursorsDestroy","","",104,N],[12,"XcursorFileLoad","","",104,N],[12,"XcursorFileLoadAllImages","","",104,N],[12,"XcursorFileLoadImage","","",104,N],[12,"XcursorFileLoadImages","","",104,N],[12,"XcursorFilenameLoad","","",104,N],[12,"XcursorFilenameLoadAllImages","","",104,N],[12,"XcursorFilenameLoadCursor","","",104,N],[12,"XcursorFilenameLoadCursors","","",104,N],[12,"XcursorFilenameLoadImage","","",104,N],[12,"XcursorFilenameLoadImages","","",104,N],[12,"XcursorFilenameSave","","",104,N],[12,"XcursorFilenameSaveImages","","",104,N],[12,"XcursorFileSave","","",104,N],[12,"XcursorFileSaveImages","","",104,N],[12,"XcursorGetDefaultSize","","",104,N],[12,"XcursorGetTheme","","",104,N],[12,"XcursorGetThemeCore","","",104,N],[12,"XcursorImageCreate","","",104,N],[12,"XcursorImageDestroy","","",104,N],[12,"XcursorImageHash","","",104,N],[12,"XcursorImageLoadCursor","","",104,N],[12,"XcursorImagesCreate","","",104,N],[12,"XcursorImagesDestroy","","",104,N],[12,"XcursorImagesLoadCursor","","",104,N],[12,"XcursorImagesLoadCursors","","",104,N],[12,"XcursorImagesSetName","","",104,N],[12,"XcursorLibraryLoadCursor","","",104,N],[12,"XcursorLibraryLoadCursors","","",104,N],[12,"XcursorLibraryLoadImage","","",104,N],[12,"XcursorLibraryLoadImages","","",104,N],[12,"XcursorLibraryPath","","",104,N],[12,"XcursorLibraryShape","","",104,N],[12,"XcursorNoticeCreateBitmap","","",104,N],[12,"XcursorNoticePutBitmap","","",104,N],[12,"XcursorSetDefaultSize","","",104,N],[12,"XcursorSetTheme","","",104,N],[12,"XcursorSetThemeCore","","",104,N],[12,"XcursorShapeLoadCursor","","",104,N],[12,"XcursorShapeLoadCursors","","",104,N],[12,"XcursorShapeLoadImage","","",104,N],[12,"XcursorShapeLoadImages","","",104,N],[12,"XcursorSupportsAnim","","",104,N],[12,"XcursorSupportsARGB","","",104,N],[12,"XcursorTryShapeBitmapCursor","","",104,N],[12,"XcursorTryShapeCursor","","",104,N],[12,"XcursorXcFileLoad","","",104,N],[12,"XcursorXcFileLoadAllImages","","",104,N],[12,"XcursorXcFileLoadImage","","",104,N],[12,"XcursorXcFileLoadImages","","",104,N],[12,"XcursorXcFileSave","","",104,N],[3,"_XcursorAnimate","","",N,N],[12,"cursors","","",105,N],[12,"sequence","","",105,N],[3,"_XcursorChunkHeader","","",N,N],[12,"header","","",106,N],[12,"type_","","",106,N],[12,"subtype","","",106,N],[12,"version","","",106,N],[3,"_XcursorComment","","",N,N],[12,"version","","",107,N],[12,"comment_type","","",107,N],[12,"comment","","",107,N],[3,"_XcursorComments","","",N,N],[12,"ncomment","","",108,N],[12,"comments","","",108,N],[3,"_XcursorCursors","","",N,N],[12,"dpy","","",109,N],[12,"ref_","","",109,N],[12,"ncursor","","",109,N],[12,"cursors","","",109,N],[3,"_XcursorFile","","",N,N],[12,"closure","","",110,N],[12,"read","","",110,N],[12,"write","","",110,N],[12,"seek","","",110,N],[3,"_XcursorFileHeader","","",N,N],[12,"magic","","",111,N],[12,"header","","",111,N],[12,"version","","",111,N],[12,"ntoc","","",111,N],[12,"tocs","","",111,N],[3,"_XcursorFileToc","","",N,N],[12,"type_","","",112,N],[12,"subtype","","",112,N],[12,"position","","",112,N],[3,"_XcursorImage","","",N,N],[12,"version","","",113,N],[12,"size","","",113,N],[12,"width","","",113,N],[12,"height","","",113,N],[12,"xhot","","",113,N],[12,"yhot","","",113,N],[12,"delay","","",113,N],[12,"pixels","","",113,N],[3,"_XcursorImages","","",N,N],[12,"nimage","","",114,N],[12,"images","","",114,N],[12,"name","","",114,N],[6,"XcursorBool","","",N,N],[6,"XcursorDim","","",N,N],[6,"XcursorPixel","","",N,N],[6,"XcursorUInt","","",N,N],[6,"XcursorAnimate","","",N,N],[6,"XcursorChunkHeader","","",N,N],[6,"XcursorComment","","",N,N],[6,"XcursorComments","","",N,N],[6,"XcursorCursors","","",N,N],[6,"XcursorFile","","",N,N],[6,"XcursorFileHeader","","",N,N],[6,"XcursorFileToc","","",N,N],[6,"XcursorImage","","",N,N],[6,"XcursorImages","","",N,N],[11,"open","","",104,[[],["result",["xcursor","openerror"]]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"clone","","",105,[[["self"]],["_xcursoranimate"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"clone","","",106,[[["self"]],["_xcursorchunkheader"]]],[11,"fmt","","",107,[[["self"],["formatter"]],["result"]]],[11,"clone","","",107,[[["self"]],["_xcursorcomment"]]],[11,"fmt","","",108,[[["self"],["formatter"]],["result"]]],[11,"clone","","",108,[[["self"]],["_xcursorcomments"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"clone","","",109,[[["self"]],["_xcursorcursors"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"clone","","",110,[[["self"]],["_xcursorfile"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"clone","","",111,[[["self"]],["_xcursorfileheader"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"clone","","",112,[[["self"]],["_xcursorfiletoc"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"clone","","",113,[[["self"]],["_xcursorimage"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"clone","","",114,[[["self"]],["_xcursorimages"]]],[0,"xf86vmode","x11_dl","",N,N],[3,"Xf86vmode","x11_dl::xf86vmode","",N,N],[12,"XF86VidModeAddModeLine","","",115,N],[12,"XF86VidModeDeleteModeLine","","",115,N],[12,"XF86VidModeGetAllModeLines","","",115,N],[12,"XF86VidModeGetDotClocks","","",115,N],[12,"XF86VidModeGetGamma","","",115,N],[12,"XF86VidModeGetGammaRamp","","",115,N],[12,"XF86VidModeGetGammaRampSize","","",115,N],[12,"XF86VidModeGetModeLine","","",115,N],[12,"XF86VidModeGetMonitor","","",115,N],[12,"XF86VidModeGetPermissions","","",115,N],[12,"XF86VidModeGetViewPort","","",115,N],[12,"XF86VidModeLockModeSwitch","","",115,N],[12,"XF86VidModeModModeLine","","",115,N],[12,"XF86VidModeQueryExtension","","",115,N],[12,"XF86VidModeQueryVersion","","",115,N],[12,"XF86VidModeSetClientVersion","","",115,N],[12,"XF86VidModeSetGamma","","",115,N],[12,"XF86VidModeSetGammaRamp","","",115,N],[12,"XF86VidModeSetViewPort","","",115,N],[12,"XF86VidModeSwitchMode","","",115,N],[12,"XF86VidModeSwitchToMode","","",115,N],[12,"XF86VidModeValidateModeLine","","",115,N],[3,"XF86VidModeGamma","","",N,N],[12,"red","","",116,N],[12,"green","","",116,N],[12,"blue","","",116,N],[3,"XF86VidModeModeInfo","","",N,N],[12,"dotclock","","",117,N],[12,"hdisplay","","",117,N],[12,"hsyncstart","","",117,N],[12,"hsyncend","","",117,N],[12,"htotal","","",117,N],[12,"hskew","","",117,N],[12,"vdisplay","","",117,N],[12,"vsyncstart","","",117,N],[12,"vsyncend","","",117,N],[12,"vtotal","","",117,N],[12,"flags","","",117,N],[12,"privsize","","",117,N],[12,"private","","",117,N],[3,"XF86VidModeModeLine","","",N,N],[12,"hdisplay","","",118,N],[12,"hsyncstart","","",118,N],[12,"hsyncend","","",118,N],[12,"htotal","","",118,N],[12,"hskew","","",118,N],[12,"vdisplay","","",118,N],[12,"vsyncstart","","",118,N],[12,"vsyncend","","",118,N],[12,"vtotal","","",118,N],[12,"flags","","",118,N],[12,"privsize","","",118,N],[12,"private","","",118,N],[3,"XF86VidModeMonitor","","",N,N],[12,"vendor","","",119,N],[12,"model","","",119,N],[12,"EMPTY","","",119,N],[12,"nhsync","","",119,N],[12,"hsync","","",119,N],[12,"nvsync","","",119,N],[12,"vsync","","",119,N],[3,"XF86VidModeSyncRange","","",N,N],[12,"hi","","",120,N],[12,"lo","","",120,N],[3,"XF86VidModeNotifyEvent","","",N,N],[12,"type_","","",121,N],[12,"serial","","",121,N],[12,"send_event","","",121,N],[12,"display","","",121,N],[12,"root","","",121,N],[12,"state","","",121,N],[12,"kind","","",121,N],[12,"forced","","",121,N],[12,"time","","",121,N],[11,"open","","",115,[[],["result",["xf86vmode","openerror"]]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"clone","","",116,[[["self"]],["xf86vidmodegamma"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"clone","","",117,[[["self"]],["xf86vidmodemodeinfo"]]],[11,"eq","","",117,[[["self"],["xf86vidmodemodeinfo"]],["bool"]]],[11,"ne","","",117,[[["self"],["xf86vidmodemodeinfo"]],["bool"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"clone","","",118,[[["self"]],["xf86vidmodemodeline"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"clone","","",119,[[["self"]],["xf86vidmodemonitor"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"clone","","",120,[[["self"]],["xf86vidmodesyncrange"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"clone","","",121,[[["self"]],["xf86vidmodenotifyevent"]]],[11,"as_mut","x11_dl::xlib","",99,[[["self"]],["xf86vidmodenotifyevent"]]],[11,"as_ref","","",99,[[["self"]],["xf86vidmodenotifyevent"]]],[11,"from","","",99,[[["xf86vidmodenotifyevent"]],["xevent"]]],[11,"from","","",99,[[["xf86vidmodenotifyevent"]],["xevent"]]],[11,"from","x11_dl::xf86vmode","",121,[[["xevent"]],["xf86vidmodenotifyevent"]]],[11,"from","","",121,[[["xevent"]],["xf86vidmodenotifyevent"]]],[0,"xfixes","x11_dl","",N,N],[6,"PointerBarrier","x11_dl::xfixes","",N,N],[0,"xft","x11_dl","",N,N],[3,"Xft","x11_dl::xft","",N,N],[12,"XftCharExists","","",122,N],[12,"XftCharFontSpecRender","","",122,N],[12,"XftCharIndex","","",122,N],[12,"XftCharSpecRender","","",122,N],[12,"XftColorAllocName","","",122,N],[12,"XftColorAllocValue","","",122,N],[12,"XftColorFree","","",122,N],[12,"XftDefaultHasRender","","",122,N],[12,"XftDefaultSet","","",122,N],[12,"XftDefaultSubstitute","","",122,N],[12,"XftDrawChange","","",122,N],[12,"XftDrawCharFontSpec","","",122,N],[12,"XftDrawCharSpec","","",122,N],[12,"XftDrawColormap","","",122,N],[12,"XftDrawCreate","","",122,N],[12,"XftDrawCreateAlpha","","",122,N],[12,"XftDrawCreateBitmap","","",122,N],[12,"XftDrawDestroy","","",122,N],[12,"XftDrawDisplay","","",122,N],[12,"XftDrawDrawable","","",122,N],[12,"XftDrawGlyphFontSpec","","",122,N],[12,"XftDrawGlyphs","","",122,N],[12,"XftDrawGlyphSpec","","",122,N],[12,"XftDrawPicture","","",122,N],[12,"XftDrawRect","","",122,N],[12,"XftDrawSetClip","","",122,N],[12,"XftDrawSetClipRectangles","","",122,N],[12,"XftDrawSetSubwindowMode","","",122,N],[12,"XftDrawSrcPicture","","",122,N],[12,"XftDrawString16","","",122,N],[12,"XftDrawString32","","",122,N],[12,"XftDrawString8","","",122,N],[12,"XftDrawStringUtf16","","",122,N],[12,"XftDrawStringUtf8","","",122,N],[12,"XftDrawVisual","","",122,N],[12,"XftFontCheckGlyph","","",122,N],[12,"XftFontClose","","",122,N],[12,"XftFontCopy","","",122,N],[12,"XftFontInfoCreate","","",122,N],[12,"XftFontInfoDestroy","","",122,N],[12,"XftFontInfoEqual","","",122,N],[12,"XftFontInfoHash","","",122,N],[12,"XftFontLoadGlyphs","","",122,N],[12,"XftFontMatch","","",122,N],[12,"XftFontOpenInfo","","",122,N],[12,"XftFontOpenName","","",122,N],[12,"XftFontOpenPattern","","",122,N],[12,"XftFontOpenXlfd","","",122,N],[12,"XftFontUnloadGlyphs","","",122,N],[12,"XftGetVersion","","",122,N],[12,"XftGlyphExtents","","",122,N],[12,"XftGlyphFontSpecRender","","",122,N],[12,"XftGlyphRender","","",122,N],[12,"XftGlyphSpecRender","","",122,N],[12,"XftInit","","",122,N],[12,"XftInitFtLibrary","","",122,N],[12,"XftLockFace","","",122,N],[12,"XftNameParse","","",122,N],[12,"XftNameUnparse","","",122,N],[12,"XftTextExtents16","","",122,N],[12,"XftTextExtents32","","",122,N],[12,"XftTextExtents8","","",122,N],[12,"XftTextExtentsUtf16","","",122,N],[12,"XftTextExtentsUtf8","","",122,N],[12,"XftTextRender16","","",122,N],[12,"XftTextRender16BE","","",122,N],[12,"XftTextRender16LE","","",122,N],[12,"XftTextRender32","","",122,N],[12,"XftTextRender32BE","","",122,N],[12,"XftTextRender32LE","","",122,N],[12,"XftTextRender8","","",122,N],[12,"XftTextRenderUtf16","","",122,N],[12,"XftTextRenderUtf8","","",122,N],[12,"XftUnlockFace","","",122,N],[12,"XftXlfdParse","","",122,N],[12,"XftFontOpen","","",122,N],[12,"XftListFonts","","",122,N],[3,"XftFont","","",N,N],[12,"ascent","","",123,N],[12,"descent","","",123,N],[12,"height","","",123,N],[12,"max_advance_width","","",123,N],[12,"charset","","",123,N],[12,"pattern","","",123,N],[3,"XftColor","","",N,N],[12,"pixel","","",124,N],[12,"color","","",124,N],[3,"XftCharSpec","","",N,N],[12,"ucs4","","",125,N],[12,"x","","",125,N],[12,"y","","",125,N],[3,"XftCharFontSpec","","",N,N],[12,"font","","",126,N],[12,"ucs4","","",126,N],[12,"x","","",126,N],[12,"y","","",126,N],[3,"XftFontSet","","",N,N],[12,"nfont","","",127,N],[12,"sfont","","",127,N],[12,"fonts","","",127,N],[3,"XftGlyphSpec","","",N,N],[12,"glyph","","",128,N],[12,"x","","",128,N],[12,"y","","",128,N],[3,"XftGlyphFontSpec","","",N,N],[12,"font","","",129,N],[12,"glyph","","",129,N],[12,"x","","",129,N],[12,"y","","",129,N],[4,"FT_FaceRec","","",N,N],[4,"FcCharSet","","",N,N],[4,"FcPattern","","",N,N],[4,"FcEndian","","",N,N],[13,"Big","","",130,N],[13,"Little","","",130,N],[4,"FcResult","","",N,N],[13,"Match","","",131,N],[13,"NoMatch","","",131,N],[13,"TypeMismatch","","",131,N],[13,"NoId","","",131,N],[13,"OutOfMemory","","",131,N],[4,"XftFontInfo","","",N,N],[4,"XftDraw","","",N,N],[4,"XftPattern","","",N,N],[6,"FT_UInt","","",N,N],[6,"FcChar32","","",N,N],[17,"XFT_FAMILY","","",N,N],[17,"XFT_STYLE","","",N,N],[17,"XFT_SLANT","","",N,N],[17,"XFT_WEIGHT","","",N,N],[17,"XFT_SIZE","","",N,N],[17,"XFT_PIXEL_SIZE","","",N,N],[17,"XFT_SPACING","","",N,N],[17,"XFT_FOUNDRY","","",N,N],[17,"XFT_ANTIALIAS","","",N,N],[17,"XFT_SLANT_ROMAN","","",N,N],[17,"XFT_SLANT_ITALIC","","",N,N],[17,"XFT_SLANT_OBLIQUE","","",N,N],[17,"XftTypeVoid","","",N,N],[17,"XftTypeInteger","","",N,N],[17,"XftTypeDouble","","",N,N],[17,"XftTypeString","","",N,N],[17,"XftTypeBool","","",N,N],[17,"XftTypeMatrix","","",N,N],[11,"open","","",122,[[],["result",["xft","openerror"]]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"clone","","",123,[[["self"]],["xftfont"]]],[11,"eq","","",123,[[["self"],["xftfont"]],["bool"]]],[11,"ne","","",123,[[["self"],["xftfont"]],["bool"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"clone","","",124,[[["self"]],["xftcolor"]]],[11,"eq","","",124,[[["self"],["xftcolor"]],["bool"]]],[11,"ne","","",124,[[["self"],["xftcolor"]],["bool"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"clone","","",125,[[["self"]],["xftcharspec"]]],[11,"eq","","",125,[[["self"],["xftcharspec"]],["bool"]]],[11,"ne","","",125,[[["self"],["xftcharspec"]],["bool"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"clone","","",126,[[["self"]],["xftcharfontspec"]]],[11,"eq","","",126,[[["self"],["xftcharfontspec"]],["bool"]]],[11,"ne","","",126,[[["self"],["xftcharfontspec"]],["bool"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"clone","","",127,[[["self"]],["xftfontset"]]],[11,"eq","","",127,[[["self"],["xftfontset"]],["bool"]]],[11,"ne","","",127,[[["self"],["xftfontset"]],["bool"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"clone","","",128,[[["self"]],["xftglyphspec"]]],[11,"eq","","",128,[[["self"],["xftglyphspec"]],["bool"]]],[11,"ne","","",128,[[["self"],["xftglyphspec"]],["bool"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"clone","","",129,[[["self"]],["xftglyphfontspec"]]],[11,"eq","","",129,[[["self"],["xftglyphfontspec"]],["bool"]]],[11,"ne","","",129,[[["self"],["xftglyphfontspec"]],["bool"]]],[0,"xinerama","x11_dl","",N,N],[3,"Xlib","x11_dl::xinerama","",N,N],[12,"XineramaIsActive","","",132,N],[12,"XineramaQueryExtension","","",132,N],[12,"XineramaQueryScreens","","",132,N],[12,"XineramaQueryVersion","","",132,N],[12,"XPanoramiXAllocInfo","","",132,N],[12,"XPanoramiXGetScreenCount","","",132,N],[12,"XPanoramiXGetScreenSize","","",132,N],[12,"XPanoramiXGetState","","",132,N],[12,"XPanoramiXQueryExtension","","",132,N],[12,"XPanoramiXQueryVersion","","",132,N],[3,"XineramaScreenInfo","","",N,N],[12,"screen_number","","",133,N],[12,"x_org","","",133,N],[12,"y_org","","",133,N],[12,"width","","",133,N],[12,"height","","",133,N],[3,"XPanoramiXInfo","","",N,N],[12,"window","","",134,N],[12,"screen","","",134,N],[12,"State","","",134,N],[12,"width","","",134,N],[12,"height","","",134,N],[12,"ScreenCount","","",134,N],[12,"eventMask","","",134,N],[11,"open","","",132,[[],["result",["xlib","openerror"]]]],[11,"fmt","","",133,[[["self"],["formatter"]],["result"]]],[11,"clone","","",133,[[["self"]],["xineramascreeninfo"]]],[11,"eq","","",133,[[["self"],["xineramascreeninfo"]],["bool"]]],[11,"ne","","",133,[[["self"],["xineramascreeninfo"]],["bool"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"clone","","",134,[[["self"]],["xpanoramixinfo"]]],[11,"eq","","",134,[[["self"],["xpanoramixinfo"]],["bool"]]],[11,"ne","","",134,[[["self"],["xpanoramixinfo"]],["bool"]]],[0,"xinput","x11_dl","",N,N],[3,"XInput","x11_dl::xinput","",N,N],[12,"XAllowDeviceEvents","","",135,N],[12,"XChangeDeviceControl","","",135,N],[12,"XChangeDeviceDontPropagateList","","",135,N],[12,"XChangeDeviceKeyMapping","","",135,N],[12,"XChangeDeviceProperty","","",135,N],[12,"XChangeFeedbackControl","","",135,N],[12,"XChangeKeyboardDevice","","",135,N],[12,"XChangePointerDevice","","",135,N],[12,"XCloseDevice","","",135,N],[12,"XDeleteDeviceProperty","","",135,N],[12,"XDeviceBell","","",135,N],[12,"XFreeDeviceControl","","",135,N],[12,"XFreeDeviceList","","",135,N],[12,"XFreeDeviceMotionEvents","","",135,N],[12,"XFreeDeviceState","","",135,N],[12,"XFreeFeedbackList","","",135,N],[12,"XGetDeviceButtonMapping","","",135,N],[12,"XGetDeviceControl","","",135,N],[12,"XGetDeviceDontPropagateList","","",135,N],[12,"XGetDeviceFocus","","",135,N],[12,"XGetDeviceKeyMapping","","",135,N],[12,"XGetDeviceModifierMapping","","",135,N],[12,"XGetDeviceMotionEvents","","",135,N],[12,"XGetDeviceProperty","","",135,N],[12,"XGetExtensionVersion","","",135,N],[12,"XGetFeedbackControl","","",135,N],[12,"XGetSelectedExtensionEvents","","",135,N],[12,"XGrabDevice","","",135,N],[12,"XGrabDeviceButton","","",135,N],[12,"XGrabDeviceKey","","",135,N],[12,"XListDeviceProperties","","",135,N],[12,"XListInputDevices","","",135,N],[12,"XOpenDevice","","",135,N],[12,"XQueryDeviceState","","",135,N],[12,"XSelectExtensionEvent","","",135,N],[12,"XSendExtensionEvent","","",135,N],[12,"XSetDeviceButtonMapping","","",135,N],[12,"XSetDeviceFocus","","",135,N],[12,"XSetDeviceMode","","",135,N],[12,"XSetDeviceModifierMapping","","",135,N],[12,"XSetDeviceValuators","","",135,N],[12,"XUngrabDevice","","",135,N],[12,"XUngrabDeviceButton","","",135,N],[12,"XUngrabDeviceKey","","",135,N],[3,"XDevice","","",N,N],[12,"device_id","","",136,N],[12,"num_classes","","",136,N],[12,"classes","","",136,N],[3,"XDeviceControl","","",N,N],[12,"control","","",137,N],[12,"length","","",137,N],[3,"XDeviceInfo","","",N,N],[12,"id","","",138,N],[12,"type_","","",138,N],[12,"name","","",138,N],[12,"num_classes","","",138,N],[12,"use_","","",138,N],[12,"inputclassinfo","","",138,N],[3,"XDeviceState","","",N,N],[12,"device_id","","",139,N],[12,"num_classes","","",139,N],[12,"data","","",139,N],[3,"XDeviceTimeCoord","","",N,N],[12,"time","","",140,N],[12,"data","","",140,N],[3,"XExtensionVersion","","",N,N],[12,"present","","",141,N],[12,"major_version","","",141,N],[12,"minor_version","","",141,N],[3,"XFeedbackControl","","",N,N],[12,"class","","",142,N],[12,"length","","",142,N],[12,"id","","",142,N],[3,"XFeedbackState","","",N,N],[12,"class","","",143,N],[12,"length","","",143,N],[12,"id","","",143,N],[3,"XInputClass","","",N,N],[12,"class","","",144,N],[12,"length","","",144,N],[3,"XInputClassInfo","","",N,N],[12,"input_class","","",145,N],[12,"event_type_base","","",145,N],[4,"_XAnyClassinfo","","",N,N],[6,"XAnyClassPtr","","",N,N],[11,"open","","",135,[[],["result",["xinput","openerror"]]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"clone","","",136,[[["self"]],["xdevice"]]],[11,"eq","","",136,[[["self"],["xdevice"]],["bool"]]],[11,"ne","","",136,[[["self"],["xdevice"]],["bool"]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[11,"clone","","",137,[[["self"]],["xdevicecontrol"]]],[11,"eq","","",137,[[["self"],["xdevicecontrol"]],["bool"]]],[11,"ne","","",137,[[["self"],["xdevicecontrol"]],["bool"]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result"]]],[11,"clone","","",138,[[["self"]],["xdeviceinfo"]]],[11,"eq","","",138,[[["self"],["xdeviceinfo"]],["bool"]]],[11,"ne","","",138,[[["self"],["xdeviceinfo"]],["bool"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"clone","","",139,[[["self"]],["xdevicestate"]]],[11,"eq","","",139,[[["self"],["xdevicestate"]],["bool"]]],[11,"ne","","",139,[[["self"],["xdevicestate"]],["bool"]]],[11,"fmt","","",140,[[["self"],["formatter"]],["result"]]],[11,"clone","","",140,[[["self"]],["xdevicetimecoord"]]],[11,"eq","","",140,[[["self"],["xdevicetimecoord"]],["bool"]]],[11,"ne","","",140,[[["self"],["xdevicetimecoord"]],["bool"]]],[11,"fmt","","",141,[[["self"],["formatter"]],["result"]]],[11,"clone","","",141,[[["self"]],["xextensionversion"]]],[11,"eq","","",141,[[["self"],["xextensionversion"]],["bool"]]],[11,"ne","","",141,[[["self"],["xextensionversion"]],["bool"]]],[11,"fmt","","",142,[[["self"],["formatter"]],["result"]]],[11,"clone","","",142,[[["self"]],["xfeedbackcontrol"]]],[11,"eq","","",142,[[["self"],["xfeedbackcontrol"]],["bool"]]],[11,"ne","","",142,[[["self"],["xfeedbackcontrol"]],["bool"]]],[11,"fmt","","",143,[[["self"],["formatter"]],["result"]]],[11,"clone","","",143,[[["self"]],["xfeedbackstate"]]],[11,"eq","","",143,[[["self"],["xfeedbackstate"]],["bool"]]],[11,"ne","","",143,[[["self"],["xfeedbackstate"]],["bool"]]],[11,"fmt","","",144,[[["self"],["formatter"]],["result"]]],[11,"clone","","",144,[[["self"]],["xinputclass"]]],[11,"eq","","",144,[[["self"],["xinputclass"]],["bool"]]],[11,"ne","","",144,[[["self"],["xinputclass"]],["bool"]]],[11,"fmt","","",145,[[["self"],["formatter"]],["result"]]],[11,"clone","","",145,[[["self"]],["xinputclassinfo"]]],[11,"eq","","",145,[[["self"],["xinputclassinfo"]],["bool"]]],[11,"ne","","",145,[[["self"],["xinputclassinfo"]],["bool"]]],[0,"xinput2","x11_dl","",N,N],[3,"XInput2","x11_dl::xinput2","",N,N],[12,"XIAllowEvents","","",146,N],[12,"XIAllowTouchEvents","","",146,N],[12,"XIBarrierReleasePointer","","",146,N],[12,"XIBarrierReleasePointers","","",146,N],[12,"XIChangeHierarchy","","",146,N],[12,"XIChangeProperty","","",146,N],[12,"XIDefineCursor","","",146,N],[12,"XIDeleteProperty","","",146,N],[12,"XIFreeDeviceInfo","","",146,N],[12,"XIGetClientPointer","","",146,N],[12,"XIGetFocus","","",146,N],[12,"XIGetProperty","","",146,N],[12,"XIGetSelectedEvents","","",146,N],[12,"XIGrabButton","","",146,N],[12,"XIGrabDevice","","",146,N],[12,"XIGrabEnter","","",146,N],[12,"XIGrabFocusIn","","",146,N],[12,"XIGrabKeycode","","",146,N],[12,"XIGrabTouchBegin","","",146,N],[12,"XIListProperties","","",146,N],[12,"XIQueryDevice","","",146,N],[12,"XIQueryPointer","","",146,N],[12,"XIQueryVersion","","",146,N],[12,"XISelectEvents","","",146,N],[12,"XISetClientPointer","","",146,N],[12,"XISetFocus","","",146,N],[12,"XIUndefineCursor","","",146,N],[12,"XIUngrabButton","","",146,N],[12,"XIUngrabDevice","","",146,N],[12,"XIUngrabEnter","","",146,N],[12,"XIUngrabFocusIn","","",146,N],[12,"XIUngrabKeycode","","",146,N],[12,"XIUngrabTouchBegin","","",146,N],[12,"XIWarpPointer","","",146,N],[3,"XIAddMasterInfo","","",N,N],[12,"_type","","",147,N],[12,"name","","",147,N],[12,"send_core","","",147,N],[12,"enable","","",147,N],[3,"XIRemoveMasterInfo","","",N,N],[12,"_type","","",148,N],[12,"deviceid","","",148,N],[12,"return_mode","","",148,N],[12,"return_pointer","","",148,N],[12,"return_keyboard","","",148,N],[3,"XIAttachSlaveInfo","","",N,N],[12,"_type","","",149,N],[12,"deviceid","","",149,N],[12,"new_master","","",149,N],[3,"XIDetachSlaveInfo","","",N,N],[12,"_type","","",150,N],[12,"deviceid","","",150,N],[3,"XIAnyHierarchyChangeInfo","","",N,N],[12,"_bindgen_data_","","",151,N],[3,"XIModifierState","","",N,N],[12,"base","","",152,N],[12,"latched","","",152,N],[12,"locked","","",152,N],[12,"effective","","",152,N],[3,"XIButtonState","","",N,N],[12,"mask_len","","",153,N],[12,"mask","","",153,N],[3,"XIValuatorState","","",N,N],[12,"mask_len","","",154,N],[12,"mask","","",154,N],[12,"values","","",154,N],[3,"XIEventMask","","",N,N],[12,"deviceid","","",155,N],[12,"mask_len","","",155,N],[12,"mask","","",155,N],[3,"XIAnyClassInfo","","",N,N],[12,"_type","","",156,N],[12,"sourceid","","",156,N],[3,"XIButtonClassInfo","","",N,N],[12,"_type","","",157,N],[12,"sourceid","","",157,N],[12,"num_buttons","","",157,N],[12,"labels","","",157,N],[12,"state","","",157,N],[3,"XIKeyClassInfo","","",N,N],[12,"_type","","",158,N],[12,"sourceid","","",158,N],[12,"num_keycodes","","",158,N],[12,"keycodes","","",158,N],[3,"XIValuatorClassInfo","","",N,N],[12,"_type","","",159,N],[12,"sourceid","","",159,N],[12,"number","","",159,N],[12,"label","","",159,N],[12,"min","","",159,N],[12,"max","","",159,N],[12,"value","","",159,N],[12,"resolution","","",159,N],[12,"mode","","",159,N],[3,"XIScrollClassInfo","","",N,N],[12,"_type","","",160,N],[12,"sourceid","","",160,N],[12,"number","","",160,N],[12,"scroll_type","","",160,N],[12,"increment","","",160,N],[12,"flags","","",160,N],[3,"XITouchClassInfo","","",N,N],[12,"_type","","",161,N],[12,"sourceid","","",161,N],[12,"mode","","",161,N],[12,"num_touches","","",161,N],[3,"XIDeviceInfo","","",N,N],[12,"deviceid","","",162,N],[12,"name","","",162,N],[12,"_use","","",162,N],[12,"attachment","","",162,N],[12,"enabled","","",162,N],[12,"num_classes","","",162,N],[12,"classes","","",162,N],[3,"XIGrabModifiers","","",N,N],[12,"modifiers","","",163,N],[12,"status","","",163,N],[3,"XIBarrierReleasePointerInfo","","",N,N],[12,"deviceid","","",164,N],[12,"barrier","","",164,N],[12,"eventid","","",164,N],[3,"XIEvent","","",N,N],[12,"_type","","",165,N],[12,"serial","","",165,N],[12,"send_event","","",165,N],[12,"display","","",165,N],[12,"extension","","",165,N],[12,"evtype","","",165,N],[12,"time","","",165,N],[3,"XIHierarchyInfo","","",N,N],[12,"deviceid","","",166,N],[12,"attachment","","",166,N],[12,"_use","","",166,N],[12,"enabled","","",166,N],[12,"flags","","",166,N],[3,"XIHierarchyEvent","","",N,N],[12,"_type","","",167,N],[12,"serial","","",167,N],[12,"send_event","","",167,N],[12,"display","","",167,N],[12,"extension","","",167,N],[12,"evtype","","",167,N],[12,"time","","",167,N],[12,"flags","","",167,N],[12,"num_info","","",167,N],[12,"info","","",167,N],[3,"XIDeviceChangedEvent","","",N,N],[12,"_type","","",168,N],[12,"serial","","",168,N],[12,"send_event","","",168,N],[12,"display","","",168,N],[12,"extension","","",168,N],[12,"evtype","","",168,N],[12,"time","","",168,N],[12,"deviceid","","",168,N],[12,"sourceid","","",168,N],[12,"reason","","",168,N],[12,"num_classes","","",168,N],[12,"classes","","",168,N],[3,"XIDeviceEvent","","",N,N],[12,"_type","","",169,N],[12,"serial","","",169,N],[12,"send_event","","",169,N],[12,"display","","",169,N],[12,"extension","","",169,N],[12,"evtype","","",169,N],[12,"time","","",169,N],[12,"deviceid","","",169,N],[12,"sourceid","","",169,N],[12,"detail","","",169,N],[12,"root","","",169,N],[12,"event","","",169,N],[12,"child","","",169,N],[12,"root_x","","",169,N],[12,"root_y","","",169,N],[12,"event_x","","",169,N],[12,"event_y","","",169,N],[12,"flags","","",169,N],[12,"buttons","","",169,N],[12,"valuators","","",169,N],[12,"mods","","",169,N],[12,"group","","",169,N],[3,"XIRawEvent","","",N,N],[12,"_type","","",170,N],[12,"serial","","",170,N],[12,"send_event","","",170,N],[12,"display","","",170,N],[12,"extension","","",170,N],[12,"evtype","","",170,N],[12,"time","","",170,N],[12,"deviceid","","",170,N],[12,"sourceid","","",170,N],[12,"detail","","",170,N],[12,"flags","","",170,N],[12,"valuators","","",170,N],[12,"raw_values","","",170,N],[3,"XIEnterEvent","","",N,N],[12,"_type","","",171,N],[12,"serial","","",171,N],[12,"send_event","","",171,N],[12,"display","","",171,N],[12,"extension","","",171,N],[12,"evtype","","",171,N],[12,"time","","",171,N],[12,"deviceid","","",171,N],[12,"sourceid","","",171,N],[12,"detail","","",171,N],[12,"root","","",171,N],[12,"event","","",171,N],[12,"child","","",171,N],[12,"root_x","","",171,N],[12,"root_y","","",171,N],[12,"event_x","","",171,N],[12,"event_y","","",171,N],[12,"mode","","",171,N],[12,"focus","","",171,N],[12,"same_screen","","",171,N],[12,"buttons","","",171,N],[12,"mods","","",171,N],[12,"group","","",171,N],[3,"XIPropertyEvent","","",N,N],[12,"_type","","",172,N],[12,"serial","","",172,N],[12,"send_event","","",172,N],[12,"display","","",172,N],[12,"extension","","",172,N],[12,"evtype","","",172,N],[12,"time","","",172,N],[12,"deviceid","","",172,N],[12,"property","","",172,N],[12,"what","","",172,N],[3,"XITouchOwnershipEvent","","",N,N],[12,"_type","","",173,N],[12,"serial","","",173,N],[12,"send_event","","",173,N],[12,"display","","",173,N],[12,"extension","","",173,N],[12,"evtype","","",173,N],[12,"time","","",173,N],[12,"deviceid","","",173,N],[12,"sourceid","","",173,N],[12,"touchid","","",173,N],[12,"root","","",173,N],[12,"event","","",173,N],[12,"child","","",173,N],[12,"flags","","",173,N],[3,"XIBarrierEvent","","",N,N],[12,"_type","","",174,N],[12,"serial","","",174,N],[12,"send_event","","",174,N],[12,"display","","",174,N],[12,"extension","","",174,N],[12,"evtype","","",174,N],[12,"time","","",174,N],[12,"deviceid","","",174,N],[12,"sourceid","","",174,N],[12,"event","","",174,N],[12,"root","","",174,N],[12,"root_x","","",174,N],[12,"root_y","","",174,N],[12,"dx","","",174,N],[12,"dy","","",174,N],[12,"dtime","","",174,N],[12,"flags","","",174,N],[12,"barrier","","",174,N],[12,"eventid","","",174,N],[5,"XISetMask","","",N,N],[5,"XIClearMask","","",N,N],[5,"XIMaskIsSet","","",N,N],[6,"XIGroupState","","",N,N],[6,"BarrierEventID","","",N,N],[6,"XILeaveEvent","","",N,N],[6,"XIFocusInEvent","","",N,N],[6,"XIFocusOutEvent","","",N,N],[17,"XInput_2_0","","",N,N],[17,"XI_2_Major","","",N,N],[17,"XI_2_Minor","","",N,N],[17,"XIPropertyDeleted","","",N,N],[17,"XIPropertyCreated","","",N,N],[17,"XIPropertyModified","","",N,N],[17,"XIPropModeReplace","","",N,N],[17,"XIPropModePrepend","","",N,N],[17,"XIPropModeAppend","","",N,N],[17,"XINotifyNormal","","",N,N],[17,"XINotifyGrab","","",N,N],[17,"XINotifyUngrab","","",N,N],[17,"XINotifyWhileGrabbed","","",N,N],[17,"XINotifyPassiveGrab","","",N,N],[17,"XINotifyPassiveUngrab","","",N,N],[17,"XINotifyAncestor","","",N,N],[17,"XINotifyVirtual","","",N,N],[17,"XINotifyInferior","","",N,N],[17,"XINotifyNonlinear","","",N,N],[17,"XINotifyNonlinearVirtual","","",N,N],[17,"XINotifyPointer","","",N,N],[17,"XINotifyPointerRoot","","",N,N],[17,"XINotifyDetailNone","","",N,N],[17,"XIGrabModeSync","","",N,N],[17,"XIGrabModeAsync","","",N,N],[17,"XIGrabModeTouch","","",N,N],[17,"XIGrabSuccess","","",N,N],[17,"XIAlreadyGrabbed","","",N,N],[17,"XIGrabInvalidTime","","",N,N],[17,"XIGrabNotViewable","","",N,N],[17,"XIGrabFrozen","","",N,N],[17,"XIGrabtypeButton","","",N,N],[17,"XIGrabtypeKeycode","","",N,N],[17,"XIGrabtypeEnter","","",N,N],[17,"XIGrabtypeFocusIn","","",N,N],[17,"XIGrabtypeTouchBegin","","",N,N],[17,"XIAnyButton","","",N,N],[17,"XIAnyKeycode","","",N,N],[17,"XIAsyncDevice","","",N,N],[17,"XISyncDevice","","",N,N],[17,"XIReplayDevice","","",N,N],[17,"XIAsyncPairedDevice","","",N,N],[17,"XIAsyncPair","","",N,N],[17,"XISyncPair","","",N,N],[17,"XIAcceptTouch","","",N,N],[17,"XIRejectTouch","","",N,N],[17,"XISlaveSwitch","","",N,N],[17,"XIDeviceChange","","",N,N],[17,"XIMasterAdded","","",N,N],[17,"XIMasterRemoved","","",N,N],[17,"XISlaveAdded","","",N,N],[17,"XISlaveRemoved","","",N,N],[17,"XISlaveAttached","","",N,N],[17,"XISlaveDetached","","",N,N],[17,"XIDeviceEnabled","","",N,N],[17,"XIDeviceDisabled","","",N,N],[17,"XIAddMaster","","",N,N],[17,"XIRemoveMaster","","",N,N],[17,"XIAttachSlave","","",N,N],[17,"XIDetachSlave","","",N,N],[17,"XIAttachToMaster","","",N,N],[17,"XIFloating","","",N,N],[17,"XIModeRelative","","",N,N],[17,"XIModeAbsolute","","",N,N],[17,"XIMasterPointer","","",N,N],[17,"XIMasterKeyboard","","",N,N],[17,"XISlavePointer","","",N,N],[17,"XISlaveKeyboard","","",N,N],[17,"XIFloatingSlave","","",N,N],[17,"XIKeyClass","","",N,N],[17,"XIButtonClass","","",N,N],[17,"XIValuatorClass","","",N,N],[17,"XIScrollClass","","",N,N],[17,"XITouchClass","","",N,N],[17,"XIScrollTypeVertical","","",N,N],[17,"XIScrollTypeHorizontal","","",N,N],[17,"XIScrollFlagNoEmulation","","",N,N],[17,"XIScrollFlagPreferred","","",N,N],[17,"XIKeyRepeat","","",N,N],[17,"XIPointerEmulated","","",N,N],[17,"XITouchPendingEnd","","",N,N],[17,"XITouchEmulatingPointer","","",N,N],[17,"XIBarrierPointerReleased","","",N,N],[17,"XIBarrierDeviceIsGrabbed","","",N,N],[17,"XIDirectTouch","","",N,N],[17,"XIDependentTouch","","",N,N],[17,"XIAllDevices","","",N,N],[17,"XIAllMasterDevices","","",N,N],[17,"XI_DeviceChanged","","",N,N],[17,"XI_KeyPress","","",N,N],[17,"XI_KeyRelease","","",N,N],[17,"XI_ButtonPress","","",N,N],[17,"XI_ButtonRelease","","",N,N],[17,"XI_Motion","","",N,N],[17,"XI_Enter","","",N,N],[17,"XI_Leave","","",N,N],[17,"XI_FocusIn","","",N,N],[17,"XI_FocusOut","","",N,N],[17,"XI_HierarchyChanged","","",N,N],[17,"XI_PropertyEvent","","",N,N],[17,"XI_RawKeyPress","","",N,N],[17,"XI_RawKeyRelease","","",N,N],[17,"XI_RawButtonPress","","",N,N],[17,"XI_RawButtonRelease","","",N,N],[17,"XI_RawMotion","","",N,N],[17,"XI_TouchBegin","","",N,N],[17,"XI_TouchUpdate","","",N,N],[17,"XI_TouchEnd","","",N,N],[17,"XI_TouchOwnership","","",N,N],[17,"XI_RawTouchBegin","","",N,N],[17,"XI_RawTouchUpdate","","",N,N],[17,"XI_RawTouchEnd","","",N,N],[17,"XI_BarrierHit","","",N,N],[17,"XI_BarrierLeave","","",N,N],[17,"XI_LASTEVENT","","",N,N],[17,"XI_DeviceChangedMask","","",N,N],[17,"XI_KeyPressMask","","",N,N],[17,"XI_KeyReleaseMask","","",N,N],[17,"XI_ButtonPressMask","","",N,N],[17,"XI_ButtonReleaseMask","","",N,N],[17,"XI_MotionMask","","",N,N],[17,"XI_EnterMask","","",N,N],[17,"XI_LeaveMask","","",N,N],[17,"XI_FocusInMask","","",N,N],[17,"XI_FocusOutMask","","",N,N],[17,"XI_HierarchyChangedMask","","",N,N],[17,"XI_PropertyEventMask","","",N,N],[17,"XI_RawKeyPressMask","","",N,N],[17,"XI_RawKeyReleaseMask","","",N,N],[17,"XI_RawButtonPressMask","","",N,N],[17,"XI_RawButtonReleaseMask","","",N,N],[17,"XI_RawMotionMask","","",N,N],[17,"XI_TouchBeginMask","","",N,N],[17,"XI_TouchEndMask","","",N,N],[17,"XI_TouchOwnershipChangedMask","","",N,N],[17,"XI_TouchUpdateMask","","",N,N],[17,"XI_RawTouchBeginMask","","",N,N],[17,"XI_RawTouchEndMask","","",N,N],[17,"XI_RawTouchUpdateMask","","",N,N],[17,"XI_BarrierHitMask","","",N,N],[17,"XI_BarrierLeaveMask","","",N,N],[11,"open","","",146,[[],["result",["xinput2","openerror"]]]],[11,"fmt","","",147,[[["self"],["formatter"]],["result"]]],[11,"clone","","",147,[[["self"]],["self"]]],[11,"default","","",147,[[],["self"]]],[11,"fmt","","",148,[[["self"],["formatter"]],["result"]]],[11,"clone","","",148,[[["self"]],["self"]]],[11,"default","","",148,[[],["self"]]],[11,"fmt","","",149,[[["self"],["formatter"]],["result"]]],[11,"clone","","",149,[[["self"]],["self"]]],[11,"default","","",149,[[],["self"]]],[11,"fmt","","",150,[[["self"],["formatter"]],["result"]]],[11,"clone","","",150,[[["self"]],["self"]]],[11,"default","","",150,[[],["self"]]],[11,"fmt","","",151,[[["self"],["formatter"]],["result"]]],[11,"_type","","",151,N],[11,"add","","",151,N],[11,"remove","","",151,N],[11,"attach","","",151,N],[11,"detach","","",151,N],[11,"clone","","",151,[[["self"]],["self"]]],[11,"default","","",151,[[],["self"]]],[11,"fmt","","",152,[[["self"],["formatter"]],["result"]]],[11,"clone","","",152,[[["self"]],["self"]]],[11,"default","","",152,[[],["self"]]],[11,"fmt","","",153,[[["self"],["formatter"]],["result"]]],[11,"clone","","",153,[[["self"]],["self"]]],[11,"default","","",153,[[],["self"]]],[11,"fmt","","",154,[[["self"],["formatter"]],["result"]]],[11,"clone","","",154,[[["self"]],["self"]]],[11,"default","","",154,[[],["self"]]],[11,"fmt","","",155,[[["self"],["formatter"]],["result"]]],[11,"clone","","",155,[[["self"]],["self"]]],[11,"default","","",155,[[],["self"]]],[11,"fmt","","",156,[[["self"],["formatter"]],["result"]]],[11,"clone","","",156,[[["self"]],["self"]]],[11,"default","","",156,[[],["self"]]],[11,"fmt","","",157,[[["self"],["formatter"]],["result"]]],[11,"clone","","",157,[[["self"]],["self"]]],[11,"default","","",157,[[],["self"]]],[11,"fmt","","",158,[[["self"],["formatter"]],["result"]]],[11,"clone","","",158,[[["self"]],["self"]]],[11,"default","","",158,[[],["self"]]],[11,"fmt","","",159,[[["self"],["formatter"]],["result"]]],[11,"clone","","",159,[[["self"]],["self"]]],[11,"default","","",159,[[],["self"]]],[11,"fmt","","",160,[[["self"],["formatter"]],["result"]]],[11,"clone","","",160,[[["self"]],["self"]]],[11,"default","","",160,[[],["self"]]],[11,"fmt","","",161,[[["self"],["formatter"]],["result"]]],[11,"clone","","",161,[[["self"]],["self"]]],[11,"default","","",161,[[],["self"]]],[11,"fmt","","",162,[[["self"],["formatter"]],["result"]]],[11,"clone","","",162,[[["self"]],["self"]]],[11,"default","","",162,[[],["self"]]],[11,"fmt","","",163,[[["self"],["formatter"]],["result"]]],[11,"clone","","",163,[[["self"]],["self"]]],[11,"default","","",163,[[],["self"]]],[11,"fmt","","",164,[[["self"],["formatter"]],["result"]]],[11,"clone","","",164,[[["self"]],["self"]]],[11,"default","","",164,[[],["self"]]],[11,"fmt","","",165,[[["self"],["formatter"]],["result"]]],[11,"clone","","",165,[[["self"]],["self"]]],[11,"default","","",165,[[],["self"]]],[11,"fmt","","",166,[[["self"],["formatter"]],["result"]]],[11,"clone","","",166,[[["self"]],["self"]]],[11,"default","","",166,[[],["self"]]],[11,"fmt","","",167,[[["self"],["formatter"]],["result"]]],[11,"clone","","",167,[[["self"]],["self"]]],[11,"default","","",167,[[],["self"]]],[11,"fmt","","",168,[[["self"],["formatter"]],["result"]]],[11,"clone","","",168,[[["self"]],["self"]]],[11,"default","","",168,[[],["self"]]],[11,"fmt","","",169,[[["self"],["formatter"]],["result"]]],[11,"clone","","",169,[[["self"]],["self"]]],[11,"default","","",169,[[],["self"]]],[11,"fmt","","",170,[[["self"],["formatter"]],["result"]]],[11,"clone","","",170,[[["self"]],["self"]]],[11,"default","","",170,[[],["self"]]],[11,"fmt","","",171,[[["self"],["formatter"]],["result"]]],[11,"clone","","",171,[[["self"]],["self"]]],[11,"default","","",171,[[],["self"]]],[11,"fmt","","",172,[[["self"],["formatter"]],["result"]]],[11,"clone","","",172,[[["self"]],["self"]]],[11,"default","","",172,[[],["self"]]],[11,"fmt","","",173,[[["self"],["formatter"]],["result"]]],[11,"clone","","",173,[[["self"]],["self"]]],[11,"default","","",173,[[],["self"]]],[11,"fmt","","",174,[[["self"],["formatter"]],["result"]]],[11,"clone","","",174,[[["self"]],["self"]]],[11,"default","","",174,[[],["self"]]],[0,"xmd","x11_dl","",N,N],[6,"INT8","x11_dl::xmd","",N,N],[6,"INT16","","",N,N],[6,"INT32","","",N,N],[6,"INT64","","",N,N],[6,"CARD8","","",N,N],[6,"CARD16","","",N,N],[6,"CARD32","","",N,N],[6,"CARD64","","",N,N],[6,"BYTE","","",N,N],[6,"BOOL","","",N,N],[0,"xmu","x11_dl","",N,N],[3,"Xmu","x11_dl::xmu","",N,N],[12,"XmuAddCloseDisplayHook","","",175,N],[12,"XmuAddInitializer","","",175,N],[12,"XmuAllStandardColormaps","","",175,N],[12,"XmuAppendSegment","","",175,N],[12,"XmuAreaAnd","","",175,N],[12,"XmuAreaCopy","","",175,N],[12,"XmuAreaDup","","",175,N],[12,"XmuAreaNot","","",175,N],[12,"XmuAreaOrXor","","",175,N],[12,"XmuCallInitializers","","",175,N],[12,"XmuClientWindow","","",175,N],[12,"XmuCompareISOLatin1","","",175,N],[12,"XmuConvertStandardSelection","","",175,N],[12,"XmuCopyISOLatin1Lowered","","",175,N],[12,"XmuCopyISOLatin1Uppered","","",175,N],[12,"XmuCreateColormap","","",175,N],[12,"XmuCreatePixmapFromBitmap","","",175,N],[12,"XmuCreateStippledPixmap","","",175,N],[12,"XmuCursorNameToIndex","","",175,N],[12,"XmuCvtBackingStoreToString","","",175,N],[12,"XmuCvtFunctionToCallback","","",175,N],[12,"XmuCvtGravityToString","","",175,N],[12,"XmuCvtJustifyToString","","",175,N],[12,"XmuCvtLongToString","","",175,N],[12,"XmuCvtOrientationToString","","",175,N],[12,"XmuCvtShapeStyleToString","","",175,N],[12,"XmuCvtStringToBackingStore","","",175,N],[12,"XmuCvtStringToBitmap","","",175,N],[12,"XmuCvtStringToColorCursor","","",175,N],[12,"XmuCvtStringToCursor","","",175,N],[12,"XmuCvtStringToGravity","","",175,N],[12,"XmuCvtStringToJustify","","",175,N],[12,"XmuCvtStringToLong","","",175,N],[12,"XmuCvtStringToOrientation","","",175,N],[12,"XmuCvtStringToShapeStyle","","",175,N],[12,"XmuCvtStringToWidget","","",175,N],[12,"XmuCvtWidgetToString","","",175,N],[12,"XmuDeleteStandardColormap","","",175,N],[12,"XmuDestroyScanlineList","","",175,N],[12,"XmuDestroySegmentList","","",175,N],[12,"XmuDistinguishableColors","","",175,N],[12,"XmuDistinguishablePixels","","",175,N],[12,"XmuDQAddDisplay","","",175,N],[12,"XmuDQCreate","","",175,N],[12,"XmuDQDestroy","","",175,N],[12,"XmuDQLookupDisplay","","",175,N],[12,"XmuDQRemoveDisplay","","",175,N],[12,"XmuDrawLogo","","",175,N],[12,"XmuDrawRoundedRectangle","","",175,N],[12,"XmuFillRoundedRectangle","","",175,N],[12,"XmuGetAtomName","","",175,N],[12,"XmuGetColormapAllocation","","",175,N],[12,"XmuGetHostname","","",175,N],[12,"XmuInternAtom","","",175,N],[12,"XmuInternStrings","","",175,N],[12,"XmuLocateBitmapFile","","",175,N],[12,"XmuLocatePixmapFile","","",175,N],[12,"XmuLookupAPL","","",175,N],[12,"XmuLookupArabic","","",175,N],[12,"XmuLookupCloseDisplayHook","","",175,N],[12,"XmuLookupCyrillic","","",175,N],[12,"XmuLookupGreek","","",175,N],[12,"XmuLookupHebrew","","",175,N],[12,"XmuLookupJISX0201","","",175,N],[12,"XmuLookupKana","","",175,N],[12,"XmuLookupLatin1","","",175,N],[12,"XmuLookupLatin2","","",175,N],[12,"XmuLookupLatin3","","",175,N],[12,"XmuLookupLatin4","","",175,N],[12,"XmuLookupStandardColormap","","",175,N],[12,"XmuLookupString","","",175,N],[12,"XmuMakeAtom","","",175,N],[12,"XmuNameOfAtom","","",175,N],[12,"XmuNCopyISOLatin1Lowered","","",175,N],[12,"XmuNCopyISOLatin1Uppered","","",175,N],[12,"XmuNewArea","","",175,N],[12,"XmuNewCvtStringToWidget","","",175,N],[12,"XmuNewScanline","","",175,N],[12,"XmuNewSegment","","",175,N],[12,"XmuOptimizeArea","","",175,N],[12,"XmuOptimizeScanline","","",175,N],[12,"XmuPrintDefaultErrorMessage","","",175,N],[12,"XmuReadBitmapData","","",175,N],[12,"XmuReadBitmapDataFromFile","","",175,N],[12,"XmuRegisterExternalAgent","","",175,N],[12,"XmuReleaseStippledPixmap","","",175,N],[12,"XmuRemoveCloseDisplayHook","","",175,N],[12,"XmuReshapeWidget","","",175,N],[12,"XmuScanlineAnd","","",175,N],[12,"XmuScanlineAndSegment","","",175,N],[12,"XmuScanlineCopy","","",175,N],[12,"XmuScanlineEqu","","",175,N],[12,"XmuScanlineNot","","",175,N],[12,"XmuScanlineOr","","",175,N],[12,"XmuScanlineOrSegment","","",175,N],[12,"XmuScanlineXor","","",175,N],[12,"XmuScanlineXorSegment","","",175,N],[12,"XmuScreenOfWindow","","",175,N],[12,"XmuSimpleErrorHandler","","",175,N],[12,"XmuStandardColormap","","",175,N],[12,"XmuUpdateMapHints","","",175,N],[12,"XmuValidArea","","",175,N],[12,"XmuValidScanline","","",175,N],[12,"XmuVisualStandardColormaps","","",175,N],[12,"XmuWnCountOwnedResources","","",175,N],[12,"XmuWnFetchResources","","",175,N],[12,"XmuWnInitializeNodes","","",175,N],[12,"XmuWnNameToNode","","",175,N],[12,"XmuSnprintf","","",175,N],[12,"_XA_ATOM_PAIR","","",175,N],[12,"_XA_CHARACTER_POSITION","","",175,N],[12,"_XA_CLASS","","",175,N],[12,"_XA_CLIENT_WINDOW","","",175,N],[12,"_XA_CLIPBOARD","","",175,N],[12,"_XA_COMPOUND_TEXT","","",175,N],[12,"_XA_DECNET_ADDRESS","","",175,N],[12,"_XA_DELETE","","",175,N],[12,"_XA_FILENAME","","",175,N],[12,"_XA_HOSTNAME","","",175,N],[12,"_XA_IP_ADDRESS","","",175,N],[12,"_XA_LENGTH","","",175,N],[12,"_XA_LIST_LENGTH","","",175,N],[12,"_XA_NAME","","",175,N],[12,"_XA_NET_ADDRESS","","",175,N],[12,"_XA_NULL","","",175,N],[12,"_XA_OWNER_OS","","",175,N],[12,"_XA_SPAN","","",175,N],[12,"_XA_TARGETS","","",175,N],[12,"_XA_TEXT","","",175,N],[12,"_XA_TIMESTAMP","","",175,N],[12,"_XA_USER","","",175,N],[12,"_XA_UTF8_STRING","","",175,N],[3,"_AtomRec","","",N,N],[3,"_XmuArea","","",N,N],[3,"_XmuDisplayQueue","","",N,N],[3,"_XmuDisplayQueueEntry","","",N,N],[3,"_XmuScanline","","",N,N],[3,"_XmuSegment","","",N,N],[3,"_XmuWidgetNode","","",N,N],[6,"AtomPtr","","",N,N],[6,"XmuArea","","",N,N],[6,"XmuDisplayQueue","","",N,N],[6,"XmuDisplayQueueEntry","","",N,N],[6,"XmuScanline","","",N,N],[6,"XmuSegment","","",N,N],[6,"XmuWidgetNode","","",N,N],[11,"open","","",175,[[],["result",["xmu","openerror"]]]],[0,"xrecord","x11_dl","",N,N],[3,"Xf86vmode","x11_dl::xrecord","",N,N],[12,"XRecordAllocRange","","",176,N],[12,"XRecordCreateContext","","",176,N],[12,"XRecordDisableContext","","",176,N],[12,"XRecordEnableContext","","",176,N],[12,"XRecordEnableContextAsync","","",176,N],[12,"XRecordFreeContext","","",176,N],[12,"XRecordFreeData","","",176,N],[12,"XRecordFreeState","","",176,N],[12,"XRecordGetContext","","",176,N],[12,"XRecordIdBaseMask","","",176,N],[12,"XRecordProcessReplies","","",176,N],[12,"XRecordQueryVersion","","",176,N],[12,"XRecordRegisterClients","","",176,N],[12,"XRecordUnregisterClients","","",176,N],[3,"XRecordClientInfo","","",N,N],[12,"client","","",177,N],[12,"nranges","","",177,N],[12,"ranges","","",177,N],[3,"XRecordExtRange","","",N,N],[12,"ext_major","","",178,N],[12,"ext_minor","","",178,N],[3,"XRecordInterceptData","","",N,N],[12,"id_base","","",179,N],[12,"server_time","","",179,N],[12,"client_seq","","",179,N],[12,"category","","",179,N],[12,"client_swapped","","",179,N],[12,"data","","",179,N],[12,"data_len","","",179,N],[3,"XRecordRange","","",N,N],[12,"core_requests","","",180,N],[12,"core_replies","","",180,N],[12,"ext_requests","","",180,N],[12,"ext_replies","","",180,N],[12,"delivered_events","","",180,N],[12,"device_events","","",180,N],[12,"errors","","",180,N],[12,"client_started","","",180,N],[12,"client_died","","",180,N],[3,"XRecordRange8","","",N,N],[12,"first","","",181,N],[12,"last","","",181,N],[3,"XRecordRange16","","",N,N],[12,"first","","",182,N],[12,"last","","",182,N],[3,"XRecordState","","",N,N],[12,"enabled","","",183,N],[12,"datum_flags","","",183,N],[12,"nclients","","",183,N],[12,"client_info","","",183,N],[6,"XRecordClientSpec","","",N,N],[6,"XRecordContext","","",N,N],[17,"XRecordFromServerTime","","",N,N],[17,"XRecordFromClientTime","","",N,N],[17,"XRecordFromClientSequence","","",N,N],[17,"XRecordCurrentClients","","",N,N],[17,"XRecordFutureClients","","",N,N],[17,"XRecordAllClients","","",N,N],[17,"XRecordFromServer","","",N,N],[17,"XRecordFromClient","","",N,N],[17,"XRecordClientStarted","","",N,N],[17,"XRecordClientDied","","",N,N],[17,"XRecordStartOfData","","",N,N],[17,"XRecordEndOfData","","",N,N],[11,"open","","",176,[[],["result",["xf86vmode","openerror"]]]],[11,"fmt","","",177,[[["self"],["formatter"]],["result"]]],[11,"clone","","",177,[[["self"]],["xrecordclientinfo"]]],[11,"eq","","",177,[[["self"],["xrecordclientinfo"]],["bool"]]],[11,"ne","","",177,[[["self"],["xrecordclientinfo"]],["bool"]]],[11,"fmt","","",178,[[["self"],["formatter"]],["result"]]],[11,"clone","","",178,[[["self"]],["xrecordextrange"]]],[11,"eq","","",178,[[["self"],["xrecordextrange"]],["bool"]]],[11,"ne","","",178,[[["self"],["xrecordextrange"]],["bool"]]],[11,"fmt","","",179,[[["self"],["formatter"]],["result"]]],[11,"clone","","",179,[[["self"]],["xrecordinterceptdata"]]],[11,"eq","","",179,[[["self"],["xrecordinterceptdata"]],["bool"]]],[11,"ne","","",179,[[["self"],["xrecordinterceptdata"]],["bool"]]],[11,"fmt","","",180,[[["self"],["formatter"]],["result"]]],[11,"clone","","",180,[[["self"]],["xrecordrange"]]],[11,"eq","","",180,[[["self"],["xrecordrange"]],["bool"]]],[11,"ne","","",180,[[["self"],["xrecordrange"]],["bool"]]],[11,"fmt","","",181,[[["self"],["formatter"]],["result"]]],[11,"clone","","",181,[[["self"]],["xrecordrange8"]]],[11,"eq","","",181,[[["self"],["xrecordrange8"]],["bool"]]],[11,"ne","","",181,[[["self"],["xrecordrange8"]],["bool"]]],[11,"fmt","","",182,[[["self"],["formatter"]],["result"]]],[11,"clone","","",182,[[["self"]],["xrecordrange16"]]],[11,"eq","","",182,[[["self"],["xrecordrange16"]],["bool"]]],[11,"ne","","",182,[[["self"],["xrecordrange16"]],["bool"]]],[11,"fmt","","",183,[[["self"],["formatter"]],["result"]]],[11,"clone","","",183,[[["self"]],["xrecordstate"]]],[11,"eq","","",183,[[["self"],["xrecordstate"]],["bool"]]],[11,"ne","","",183,[[["self"],["xrecordstate"]],["bool"]]],[0,"xrender","x11_dl","",N,N],[3,"Xrender","x11_dl::xrender","",N,N],[12,"XRenderAddGlyphs","","",184,N],[12,"XRenderAddTraps","","",184,N],[12,"XRenderChangePicture","","",184,N],[12,"XRenderComposite","","",184,N],[12,"XRenderCompositeDoublePoly","","",184,N],[12,"XRenderCompositeString16","","",184,N],[12,"XRenderCompositeString32","","",184,N],[12,"XRenderCompositeString8","","",184,N],[12,"XRenderCompositeText16","","",184,N],[12,"XRenderCompositeText32","","",184,N],[12,"XRenderCompositeText8","","",184,N],[12,"XRenderCompositeTrapezoids","","",184,N],[12,"XRenderCompositeTriangles","","",184,N],[12,"XRenderCompositeTriFan","","",184,N],[12,"XRenderCompositeTriStrip","","",184,N],[12,"XRenderCreateAnimCursor","","",184,N],[12,"XRenderCreateConicalGradient","","",184,N],[12,"XRenderCreateCursor","","",184,N],[12,"XRenderCreateGlyphSet","","",184,N],[12,"XRenderCreateLinearGradient","","",184,N],[12,"XRenderCreatePicture","","",184,N],[12,"XRenderCreateRadialGradient","","",184,N],[12,"XRenderCreateSolidFill","","",184,N],[12,"XRenderFillRectangle","","",184,N],[12,"XRenderFillRectangles","","",184,N],[12,"XRenderFindFormat","","",184,N],[12,"XRenderFindStandardFormat","","",184,N],[12,"XRenderFindVisualFormat","","",184,N],[12,"XRenderFreeGlyphs","","",184,N],[12,"XRenderFreeGlyphSet","","",184,N],[12,"XRenderFreePicture","","",184,N],[12,"XRenderParseColor","","",184,N],[12,"XRenderQueryExtension","","",184,N],[12,"XRenderQueryFilters","","",184,N],[12,"XRenderQueryFormats","","",184,N],[12,"XRenderQueryPictIndexValues","","",184,N],[12,"XRenderQuerySubpixelOrder","","",184,N],[12,"XRenderQueryVersion","","",184,N],[12,"XRenderReferenceGlyphSet","","",184,N],[12,"XRenderSetPictureClipRectangles","","",184,N],[12,"XRenderSetPictureClipRegion","","",184,N],[12,"XRenderSetPictureFilter","","",184,N],[12,"XRenderSetPictureTransform","","",184,N],[12,"XRenderSetSubpixelOrder","","",184,N],[3,"_XAnimCursor","","",N,N],[12,"cursor","","",185,N],[12,"delay","","",185,N],[3,"_XCircle","","",N,N],[12,"x","","",186,N],[12,"y","","",186,N],[12,"radius","","",186,N],[3,"_XConicalGradient","","",N,N],[12,"center","","",187,N],[12,"angle","","",187,N],[3,"_XFilters","","",N,N],[12,"nfilter","","",188,N],[12,"filter","","",188,N],[12,"nalias","","",188,N],[12,"alias","","",188,N],[3,"_XGlyphElt8","","",N,N],[12,"glyphset","","",189,N],[12,"chars","","",189,N],[12,"nchars","","",189,N],[12,"xOff","","",189,N],[12,"yOff","","",189,N],[3,"_XGlyphElt16","","",N,N],[12,"glyphset","","",190,N],[12,"chars","","",190,N],[12,"nchars","","",190,N],[12,"xOff","","",190,N],[12,"yOff","","",190,N],[3,"_XGlyphElt32","","",N,N],[12,"glyphset","","",191,N],[12,"chars","","",191,N],[12,"nchars","","",191,N],[12,"xOff","","",191,N],[12,"yOff","","",191,N],[3,"_XGlyphInfo","","",N,N],[12,"width","","",192,N],[12,"height","","",192,N],[12,"x","","",192,N],[12,"y","","",192,N],[12,"xOff","","",192,N],[12,"yOff","","",192,N],[3,"_XIndexValue","","",N,N],[12,"pixel","","",193,N],[12,"red","","",193,N],[12,"green","","",193,N],[12,"blue","","",193,N],[12,"alpha","","",193,N],[3,"_XLinearGradient","","",N,N],[12,"p1","","",194,N],[12,"p2","","",194,N],[3,"_XLineFixed","","",N,N],[12,"p1","","",195,N],[12,"p2","","",195,N],[3,"_XPointDouble","","",N,N],[12,"x","","",196,N],[12,"y","","",196,N],[3,"_XPointFixed","","",N,N],[12,"x","","",197,N],[12,"y","","",197,N],[3,"_XRadialGradient","","",N,N],[12,"inner","","",198,N],[12,"outer","","",198,N],[3,"XRenderColor","","",N,N],[12,"red","","",199,N],[12,"green","","",199,N],[12,"blue","","",199,N],[12,"alpha","","",199,N],[3,"XRenderDirectFormat","","",N,N],[12,"red","","",200,N],[12,"redMask","","",200,N],[12,"green","","",200,N],[12,"greenMask","","",200,N],[12,"blue","","",200,N],[12,"blueMask","","",200,N],[12,"alpha","","",200,N],[12,"alphaMask","","",200,N],[3,"XRenderPictFormat","","",N,N],[12,"id","","",201,N],[12,"type_","","",201,N],[12,"depth","","",201,N],[12,"direct","","",201,N],[12,"colormap","","",201,N],[3,"_XRenderPictureAttributes","","",N,N],[12,"repeat","","",202,N],[12,"alpha_map","","",202,N],[12,"alpha_x_origin","","",202,N],[12,"alpha_y_origin","","",202,N],[12,"clip_x_origin","","",202,N],[12,"clip_y_origin","","",202,N],[12,"clip_mask","","",202,N],[12,"graphics_exposures","","",202,N],[12,"subwindow_mode","","",202,N],[12,"poly_edge","","",202,N],[12,"poly_mode","","",202,N],[12,"dither","","",202,N],[12,"component_alpha","","",202,N],[3,"_XSpanFix","","",N,N],[12,"left","","",203,N],[12,"right","","",203,N],[12,"y","","",203,N],[3,"_XTrap","","",N,N],[12,"top","","",204,N],[12,"bottom","","",204,N],[3,"_XTrapezoid","","",N,N],[12,"top","","",205,N],[12,"bottom","","",205,N],[12,"left","","",205,N],[12,"right","","",205,N],[3,"_XTriangle","","",N,N],[12,"p1","","",206,N],[12,"p2","","",206,N],[12,"p3","","",206,N],[3,"_XTransform","","",N,N],[12,"matrix","","",207,N],[6,"Glyph","","",N,N],[6,"GlyphSet","","",N,N],[6,"PictFormat","","",N,N],[6,"Picture","","",N,N],[6,"XDouble","","",N,N],[6,"XFixed","","",N,N],[6,"XAnimCursor","","",N,N],[6,"XCircle","","",N,N],[6,"XConicalGradient","","",N,N],[6,"XFilters","","",N,N],[6,"XGlyphElt8","","",N,N],[6,"XGlyphElt16","","",N,N],[6,"XGlyphElt32","","",N,N],[6,"XGlyphInfo","","",N,N],[6,"XIndexValue","","",N,N],[6,"XLinearGradient","","",N,N],[6,"XLineFixed","","",N,N],[6,"XPointDouble","","",N,N],[6,"XPointFixed","","",N,N],[6,"XRadialGradient","","",N,N],[6,"XRenderPictureAttributes","","",N,N],[6,"XSpanFix","","",N,N],[6,"XTrap","","",N,N],[6,"XTrapezoid","","",N,N],[6,"XTriangle","","",N,N],[6,"XTransform","","",N,N],[17,"PictFormatID","","",N,N],[17,"PictFormatType","","",N,N],[17,"PictFormatDepth","","",N,N],[17,"PictFormatRed","","",N,N],[17,"PictFormatRedMask","","",N,N],[17,"PictFormatGreen","","",N,N],[17,"PictFormatGreenMask","","",N,N],[17,"PictFormatBlue","","",N,N],[17,"PictFormatBlueMask","","",N,N],[17,"PictFormatAlpha","","",N,N],[17,"PictFormatAlphaMask","","",N,N],[17,"PictFormatColormap","","",N,N],[17,"BadPictFormat","","",N,N],[17,"BadPicture","","",N,N],[17,"BadPictOp","","",N,N],[17,"BadGlyphSet","","",N,N],[17,"BadGlyph","","",N,N],[17,"RenderNumberErrors","","",N,N],[17,"PictTypeIndexed","","",N,N],[17,"PictTypeDirect","","",N,N],[17,"PictOpMinimum","","",N,N],[17,"PictOpClear","","",N,N],[17,"PictOpSrc","","",N,N],[17,"PictOpDst","","",N,N],[17,"PictOpOver","","",N,N],[17,"PictOpOverReverse","","",N,N],[17,"PictOpIn","","",N,N],[17,"PictOpInReverse","","",N,N],[17,"PictOpOut","","",N,N],[17,"PictOpOutReverse","","",N,N],[17,"PictOpAtop","","",N,N],[17,"PictOpAtopReverse","","",N,N],[17,"PictOpXor","","",N,N],[17,"PictOpAdd","","",N,N],[17,"PictOpSaturate","","",N,N],[17,"PictOpMaximum","","",N,N],[17,"PictOpDisjointMinimum","","",N,N],[17,"PictOpDisjointClear","","",N,N],[17,"PictOpDisjointSrc","","",N,N],[17,"PictOpDisjointDst","","",N,N],[17,"PictOpDisjointOver","","",N,N],[17,"PictOpDisjointOverReverse","","",N,N],[17,"PictOpDisjointIn","","",N,N],[17,"PictOpDisjointInReverse","","",N,N],[17,"PictOpDisjointOut","","",N,N],[17,"PictOpDisjointOutReverse","","",N,N],[17,"PictOpDisjointAtop","","",N,N],[17,"PictOpDisjointAtopReverse","","",N,N],[17,"PictOpDisjointXor","","",N,N],[17,"PictOpDisjointMaximum","","",N,N],[17,"PictOpConjointMinimum","","",N,N],[17,"PictOpConjointClear","","",N,N],[17,"PictOpConjointSrc","","",N,N],[17,"PictOpConjointDst","","",N,N],[17,"PictOpConjointOver","","",N,N],[17,"PictOpConjointOverReverse","","",N,N],[17,"PictOpConjointIn","","",N,N],[17,"PictOpConjointInReverse","","",N,N],[17,"PictOpConjointOut","","",N,N],[17,"PictOpConjointOutReverse","","",N,N],[17,"PictOpConjointAtop","","",N,N],[17,"PictOpConjointAtopReverse","","",N,N],[17,"PictOpConjointXor","","",N,N],[17,"PictOpConjointMaximum","","",N,N],[17,"PictOpBlendMinimum","","",N,N],[17,"PictOpMultiply","","",N,N],[17,"PictOpScreen","","",N,N],[17,"PictOpOverlay","","",N,N],[17,"PictOpDarken","","",N,N],[17,"PictOpLighten","","",N,N],[17,"PictOpColorDodge","","",N,N],[17,"PictOpColorBurn","","",N,N],[17,"PictOpHardLight","","",N,N],[17,"PictOpSoftLight","","",N,N],[17,"PictOpDifference","","",N,N],[17,"PictOpExclusion","","",N,N],[17,"PictOpHSLHue","","",N,N],[17,"PictOpHSLSaturation","","",N,N],[17,"PictOpHSLColor","","",N,N],[17,"PictOpHSLLuminosity","","",N,N],[17,"PictOpBlendMaximum","","",N,N],[17,"PolyEdgeSharp","","",N,N],[17,"PolyEdgeSmooth","","",N,N],[17,"PolyModePrecise","","",N,N],[17,"PolyModeImprecise","","",N,N],[17,"CPRepeat","","",N,N],[17,"CPAlphaMap","","",N,N],[17,"CPAlphaXOrigin","","",N,N],[17,"CPAlphaYOrigin","","",N,N],[17,"CPClipXOrigin","","",N,N],[17,"CPClipYOrigin","","",N,N],[17,"CPClipMask","","",N,N],[17,"CPGraphicsExposure","","",N,N],[17,"CPSubwindowMode","","",N,N],[17,"CPPolyEdge","","",N,N],[17,"CPPolyMode","","",N,N],[17,"CPDither","","",N,N],[17,"CPComponentAlpha","","",N,N],[17,"CPLastBit","","",N,N],[17,"FilterNearest","","",N,N],[17,"FilterBilinear","","",N,N],[17,"FilterConvolution","","",N,N],[17,"FilterFast","","",N,N],[17,"FilterGood","","",N,N],[17,"FilterBest","","",N,N],[17,"SubPixelUnknown","","",N,N],[17,"SubPixelHorizontalRGB","","",N,N],[17,"SubPixelHorizontalBGR","","",N,N],[17,"SubPixelVerticalRGB","","",N,N],[17,"SubPixelVerticalBGR","","",N,N],[17,"SubPixelNone","","",N,N],[17,"RepeatNone","","",N,N],[17,"RepeatNormal","","",N,N],[17,"RepeatPad","","",N,N],[17,"RepeatReflect","","",N,N],[11,"open","","",184,[[],["result",["xrender","openerror"]]]],[11,"fmt","","",185,[[["self"],["formatter"]],["result"]]],[11,"clone","","",185,[[["self"]],["_xanimcursor"]]],[11,"eq","","",185,[[["self"],["_xanimcursor"]],["bool"]]],[11,"ne","","",185,[[["self"],["_xanimcursor"]],["bool"]]],[11,"fmt","","",186,[[["self"],["formatter"]],["result"]]],[11,"clone","","",186,[[["self"]],["_xcircle"]]],[11,"eq","","",186,[[["self"],["_xcircle"]],["bool"]]],[11,"ne","","",186,[[["self"],["_xcircle"]],["bool"]]],[11,"fmt","","",187,[[["self"],["formatter"]],["result"]]],[11,"clone","","",187,[[["self"]],["_xconicalgradient"]]],[11,"eq","","",187,[[["self"],["_xconicalgradient"]],["bool"]]],[11,"ne","","",187,[[["self"],["_xconicalgradient"]],["bool"]]],[11,"fmt","","",188,[[["self"],["formatter"]],["result"]]],[11,"clone","","",188,[[["self"]],["_xfilters"]]],[11,"eq","","",188,[[["self"],["_xfilters"]],["bool"]]],[11,"ne","","",188,[[["self"],["_xfilters"]],["bool"]]],[11,"fmt","","",189,[[["self"],["formatter"]],["result"]]],[11,"clone","","",189,[[["self"]],["_xglyphelt8"]]],[11,"eq","","",189,[[["self"],["_xglyphelt8"]],["bool"]]],[11,"ne","","",189,[[["self"],["_xglyphelt8"]],["bool"]]],[11,"fmt","","",190,[[["self"],["formatter"]],["result"]]],[11,"clone","","",190,[[["self"]],["_xglyphelt16"]]],[11,"eq","","",190,[[["self"],["_xglyphelt16"]],["bool"]]],[11,"ne","","",190,[[["self"],["_xglyphelt16"]],["bool"]]],[11,"fmt","","",191,[[["self"],["formatter"]],["result"]]],[11,"clone","","",191,[[["self"]],["_xglyphelt32"]]],[11,"eq","","",191,[[["self"],["_xglyphelt32"]],["bool"]]],[11,"ne","","",191,[[["self"],["_xglyphelt32"]],["bool"]]],[11,"fmt","","",192,[[["self"],["formatter"]],["result"]]],[11,"clone","","",192,[[["self"]],["_xglyphinfo"]]],[11,"eq","","",192,[[["self"],["_xglyphinfo"]],["bool"]]],[11,"ne","","",192,[[["self"],["_xglyphinfo"]],["bool"]]],[11,"fmt","","",193,[[["self"],["formatter"]],["result"]]],[11,"clone","","",193,[[["self"]],["_xindexvalue"]]],[11,"eq","","",193,[[["self"],["_xindexvalue"]],["bool"]]],[11,"ne","","",193,[[["self"],["_xindexvalue"]],["bool"]]],[11,"fmt","","",194,[[["self"],["formatter"]],["result"]]],[11,"clone","","",194,[[["self"]],["_xlineargradient"]]],[11,"eq","","",194,[[["self"],["_xlineargradient"]],["bool"]]],[11,"ne","","",194,[[["self"],["_xlineargradient"]],["bool"]]],[11,"fmt","","",195,[[["self"],["formatter"]],["result"]]],[11,"clone","","",195,[[["self"]],["_xlinefixed"]]],[11,"eq","","",195,[[["self"],["_xlinefixed"]],["bool"]]],[11,"ne","","",195,[[["self"],["_xlinefixed"]],["bool"]]],[11,"fmt","","",196,[[["self"],["formatter"]],["result"]]],[11,"clone","","",196,[[["self"]],["_xpointdouble"]]],[11,"eq","","",196,[[["self"],["_xpointdouble"]],["bool"]]],[11,"ne","","",196,[[["self"],["_xpointdouble"]],["bool"]]],[11,"fmt","","",197,[[["self"],["formatter"]],["result"]]],[11,"clone","","",197,[[["self"]],["_xpointfixed"]]],[11,"eq","","",197,[[["self"],["_xpointfixed"]],["bool"]]],[11,"ne","","",197,[[["self"],["_xpointfixed"]],["bool"]]],[11,"fmt","","",198,[[["self"],["formatter"]],["result"]]],[11,"clone","","",198,[[["self"]],["_xradialgradient"]]],[11,"eq","","",198,[[["self"],["_xradialgradient"]],["bool"]]],[11,"ne","","",198,[[["self"],["_xradialgradient"]],["bool"]]],[11,"fmt","","",199,[[["self"],["formatter"]],["result"]]],[11,"clone","","",199,[[["self"]],["xrendercolor"]]],[11,"eq","","",199,[[["self"],["xrendercolor"]],["bool"]]],[11,"ne","","",199,[[["self"],["xrendercolor"]],["bool"]]],[11,"fmt","","",200,[[["self"],["formatter"]],["result"]]],[11,"clone","","",200,[[["self"]],["xrenderdirectformat"]]],[11,"eq","","",200,[[["self"],["xrenderdirectformat"]],["bool"]]],[11,"ne","","",200,[[["self"],["xrenderdirectformat"]],["bool"]]],[11,"fmt","","",201,[[["self"],["formatter"]],["result"]]],[11,"clone","","",201,[[["self"]],["xrenderpictformat"]]],[11,"eq","","",201,[[["self"],["xrenderpictformat"]],["bool"]]],[11,"ne","","",201,[[["self"],["xrenderpictformat"]],["bool"]]],[11,"fmt","","",202,[[["self"],["formatter"]],["result"]]],[11,"clone","","",202,[[["self"]],["_xrenderpictureattributes"]]],[11,"eq","","",202,[[["self"],["_xrenderpictureattributes"]],["bool"]]],[11,"ne","","",202,[[["self"],["_xrenderpictureattributes"]],["bool"]]],[11,"fmt","","",203,[[["self"],["formatter"]],["result"]]],[11,"clone","","",203,[[["self"]],["_xspanfix"]]],[11,"eq","","",203,[[["self"],["_xspanfix"]],["bool"]]],[11,"ne","","",203,[[["self"],["_xspanfix"]],["bool"]]],[11,"fmt","","",204,[[["self"],["formatter"]],["result"]]],[11,"clone","","",204,[[["self"]],["_xtrap"]]],[11,"eq","","",204,[[["self"],["_xtrap"]],["bool"]]],[11,"ne","","",204,[[["self"],["_xtrap"]],["bool"]]],[11,"fmt","","",205,[[["self"],["formatter"]],["result"]]],[11,"clone","","",205,[[["self"]],["_xtrapezoid"]]],[11,"eq","","",205,[[["self"],["_xtrapezoid"]],["bool"]]],[11,"ne","","",205,[[["self"],["_xtrapezoid"]],["bool"]]],[11,"fmt","","",206,[[["self"],["formatter"]],["result"]]],[11,"clone","","",206,[[["self"]],["_xtriangle"]]],[11,"eq","","",206,[[["self"],["_xtriangle"]],["bool"]]],[11,"ne","","",206,[[["self"],["_xtriangle"]],["bool"]]],[11,"fmt","","",207,[[["self"],["formatter"]],["result"]]],[11,"clone","","",207,[[["self"]],["_xtransform"]]],[11,"eq","","",207,[[["self"],["_xtransform"]],["bool"]]],[11,"ne","","",207,[[["self"],["_xtransform"]],["bool"]]],[0,"xss","x11_dl","",N,N],[3,"Xss","x11_dl::xss","",N,N],[12,"XScreenSaverQueryExtension","","",208,N],[12,"XScreenSaverQueryVersion","","",208,N],[12,"XScreenSaverAllocInfo","","",208,N],[12,"XScreenSaverQueryInfo","","",208,N],[12,"XScreenSaverSelectInput","","",208,N],[12,"XScreenSaverSetAttributes","","",208,N],[12,"XScreenSaverUnsetAttributes","","",208,N],[12,"XScreenSaverRegister","","",208,N],[12,"XScreenSaverUnregister","","",208,N],[12,"XScreenSaverGetRegistered","","",208,N],[12,"XScreenSaverSuspend","","",208,N],[3,"XScreenSaverInfo","","",N,N],[12,"window","","",209,N],[12,"state","","",209,N],[12,"kind","","",209,N],[12,"til_or_since","","",209,N],[12,"idle","","",209,N],[12,"eventMask","","",209,N],[3,"XScreenSaverNotifyEvent","","",N,N],[12,"type_","","",210,N],[12,"serial","","",210,N],[12,"send_event","","",210,N],[12,"display","","",210,N],[12,"window","","",210,N],[12,"root","","",210,N],[12,"state","","",210,N],[12,"kind","","",210,N],[12,"forced","","",210,N],[12,"time","","",210,N],[17,"ScreenSaverName","","",N,N],[17,"ScreenSaverPropertyName","","",N,N],[17,"ScreenSaverNotifyMask","","",N,N],[17,"ScreenSaverCycleMask","","",N,N],[17,"ScreenSaverMajorVersion","","",N,N],[17,"ScreenSaverMinorVersion","","",N,N],[17,"ScreenSaverOff","","",N,N],[17,"ScreenSaverOn","","",N,N],[17,"ScreenSaverCycle","","",N,N],[17,"ScreenSaverDisabled","","",N,N],[17,"ScreenSaverBlanked","","",N,N],[17,"ScreenSaverInternal","","",N,N],[17,"ScreenSaverExternal","","",N,N],[17,"ScreenSaverNotify","","",N,N],[17,"ScreenSaverNumberEvents","","",N,N],[11,"open","","",208,[[],["result",["xss","openerror"]]]],[11,"fmt","","",209,[[["self"],["formatter"]],["result"]]],[11,"clone","","",209,[[["self"]],["xscreensaverinfo"]]],[11,"eq","","",209,[[["self"],["xscreensaverinfo"]],["bool"]]],[11,"ne","","",209,[[["self"],["xscreensaverinfo"]],["bool"]]],[11,"fmt","","",210,[[["self"],["formatter"]],["result"]]],[11,"clone","","",210,[[["self"]],["xscreensavernotifyevent"]]],[11,"eq","","",210,[[["self"],["xscreensavernotifyevent"]],["bool"]]],[11,"ne","","",210,[[["self"],["xscreensavernotifyevent"]],["bool"]]],[11,"as_mut","x11_dl::xlib","",99,[[["self"]],["xscreensavernotifyevent"]]],[11,"as_ref","","",99,[[["self"]],["xscreensavernotifyevent"]]],[11,"from","","",99,[[["xscreensavernotifyevent"]],["xevent"]]],[11,"from","","",99,[[["xscreensavernotifyevent"]],["xevent"]]],[11,"from","x11_dl::xss","",210,[[["xevent"]],["xscreensavernotifyevent"]]],[11,"from","","",210,[[["xevent"]],["xscreensavernotifyevent"]]],[0,"xt","x11_dl","",N,N],[3,"Xt","x11_dl::xt","",N,N],[12,"XtAddActions","","",211,N],[12,"XtAddCallback","","",211,N],[12,"XtAddCallbacks","","",211,N],[12,"XtAddConverter","","",211,N],[12,"XtAddEventHandler","","",211,N],[12,"XtAddExposureToRegion","","",211,N],[12,"XtAddGrab","","",211,N],[12,"XtAddInput","","",211,N],[12,"XtAddRawEventHandler","","",211,N],[12,"XtAddSignal","","",211,N],[12,"XtAddTimeOut","","",211,N],[12,"XtAddWorkProc","","",211,N],[12,"XtAllocateGC","","",211,N],[12,"XtAppAddActionHook","","",211,N],[12,"XtAppAddActions","","",211,N],[12,"XtAppAddBlockHook","","",211,N],[12,"XtAppAddConverter","","",211,N],[12,"XtAppAddInput","","",211,N],[12,"XtAppAddSignal","","",211,N],[12,"XtAppAddTimeOut","","",211,N],[12,"XtAppAddWorkProc","","",211,N],[12,"XtAppCreateShell","","",211,N],[12,"XtAppError","","",211,N],[12,"XtAppErrorMsg","","",211,N],[12,"XtAppGetErrorDatabase","","",211,N],[12,"XtAppGetErrorDatabaseText","","",211,N],[12,"XtAppGetExitFlag","","",211,N],[12,"XtAppGetSelectionTimeout","","",211,N],[12,"XtAppInitialize","","",211,N],[12,"XtAppLock","","",211,N],[12,"XtAppMainLoop","","",211,N],[12,"XtAppNextEvent","","",211,N],[12,"XtAppPeekEvent","","",211,N],[12,"XtAppPending","","",211,N],[12,"XtAppProcessEvent","","",211,N],[12,"XtAppReleaseCacheRefs","","",211,N],[12,"XtAppSetErrorHandler","","",211,N],[12,"XtAppSetErrorMsgHandler","","",211,N],[12,"XtAppSetExitFlag","","",211,N],[12,"XtAppSetFallbackResources","","",211,N],[12,"XtAppSetSelectionTimeout","","",211,N],[12,"XtAppSetTypeConverter","","",211,N],[12,"XtAppSetWarningHandler","","",211,N],[12,"XtAppSetWarningMsgHandler","","",211,N],[12,"XtAppUnlock","","",211,N],[12,"XtAppWarning","","",211,N],[12,"XtAppWarningMsg","","",211,N],[12,"XtAugmentTranslations","","",211,N],[12,"XtBuildEventMask","","",211,N],[12,"XtCallAcceptFocus","","",211,N],[12,"XtCallActionProc","","",211,N],[12,"XtCallbackExclusive","","",211,N],[12,"XtCallbackNone","","",211,N],[12,"XtCallbackNonexclusive","","",211,N],[12,"XtCallbackPopdown","","",211,N],[12,"XtCallbackReleaseCacheRef","","",211,N],[12,"XtCallbackReleaseCacheRefList","","",211,N],[12,"XtCallCallbackList","","",211,N],[12,"XtCallCallbacks","","",211,N],[12,"XtCallConverter","","",211,N],[12,"XtCalloc","","",211,N],[12,"XtCancelSelectionRequest","","",211,N],[12,"XtChangeManagedSet","","",211,N],[12,"XtClass","","",211,N],[12,"XtCloseDisplay","","",211,N],[12,"XtConfigureWidget","","",211,N],[12,"XtConvert","","",211,N],[12,"XtConvertAndStore","","",211,N],[12,"XtConvertCase","","",211,N],[12,"XtCreateApplicationContext","","",211,N],[12,"XtCreateApplicationShell","","",211,N],[12,"XtCreateManagedWidget","","",211,N],[12,"XtCreatePopupShell","","",211,N],[12,"XtCreateSelectionRequest","","",211,N],[12,"XtCreateWidget","","",211,N],[12,"XtCreateWindow","","",211,N],[12,"XtCvtColorToPixel","","",211,N],[12,"XtCvtIntToBool","","",211,N],[12,"XtCvtIntToBoolean","","",211,N],[12,"XtCvtIntToColor","","",211,N],[12,"XtCvtIntToFloat","","",211,N],[12,"XtCvtIntToFont","","",211,N],[12,"XtCvtIntToPixel","","",211,N],[12,"XtCvtIntToPixmap","","",211,N],[12,"XtCvtIntToShort","","",211,N],[12,"XtCvtIntToUnsignedChar","","",211,N],[12,"XtCvtStringToAcceleratorTable","","",211,N],[12,"XtCvtStringToAtom","","",211,N],[12,"XtCvtStringToBool","","",211,N],[12,"XtCvtStringToBoolean","","",211,N],[12,"XtCvtStringToCommandArgArray","","",211,N],[12,"XtCvtStringToCursor","","",211,N],[12,"XtCvtStringToDimension","","",211,N],[12,"XtCvtStringToDirectoryString","","",211,N],[12,"XtCvtStringToDisplay","","",211,N],[12,"XtCvtStringToFile","","",211,N],[12,"XtCvtStringToFloat","","",211,N],[12,"XtCvtStringToFont","","",211,N],[12,"XtCvtStringToFontSet","","",211,N],[12,"XtCvtStringToFontStruct","","",211,N],[12,"XtCvtStringToGravity","","",211,N],[12,"XtCvtStringToInitialState","","",211,N],[12,"XtCvtStringToInt","","",211,N],[12,"XtCvtStringToPixel","","",211,N],[12,"XtCvtStringToRestartStyle","","",211,N],[12,"XtCvtStringToShort","","",211,N],[12,"XtCvtStringToTranslationTable","","",211,N],[12,"XtCvtStringToUnsignedChar","","",211,N],[12,"XtCvtStringToVisual","","",211,N],[12,"XtDatabase","","",211,N],[12,"XtDestroyApplicationContext","","",211,N],[12,"XtDestroyGC","","",211,N],[12,"XtDestroyWidget","","",211,N],[12,"XtDirectConvert","","",211,N],[12,"XtDisownSelection","","",211,N],[12,"XtDispatchEvent","","",211,N],[12,"XtDispatchEventToWidget","","",211,N],[12,"XtDisplay","","",211,N],[12,"XtDisplayInitialize","","",211,N],[12,"XtDisplayOfObject","","",211,N],[12,"XtDisplayStringConversionWarning","","",211,N],[12,"XtDisplayToApplicationContext","","",211,N],[12,"XtError","","",211,N],[12,"XtErrorMsg","","",211,N],[12,"XtFindFile","","",211,N],[12,"XtFree","","",211,N],[12,"XtGetActionKeysym","","",211,N],[12,"XtGetActionList","","",211,N],[12,"XtGetApplicationNameAndClass","","",211,N],[12,"XtGetApplicationResources","","",211,N],[12,"XtGetClassExtension","","",211,N],[12,"XtGetConstraintResourceList","","",211,N],[12,"XtGetDisplays","","",211,N],[12,"XtGetErrorDatabase","","",211,N],[12,"XtGetErrorDatabaseText","","",211,N],[12,"XtGetGC","","",211,N],[12,"XtGetKeyboardFocusWidget","","",211,N],[12,"XtGetKeysymTable","","",211,N],[12,"XtGetMultiClickTime","","",211,N],[12,"XtGetResourceList","","",211,N],[12,"XtGetSelectionParameters","","",211,N],[12,"XtGetSelectionRequest","","",211,N],[12,"XtGetSelectionTimeout","","",211,N],[12,"XtGetSelectionValue","","",211,N],[12,"XtGetSelectionValueIncremental","","",211,N],[12,"XtGetSelectionValues","","",211,N],[12,"XtGetSelectionValuesIncremental","","",211,N],[12,"XtGetSubresources","","",211,N],[12,"XtGetSubvalues","","",211,N],[12,"XtGetValues","","",211,N],[12,"XtGrabButton","","",211,N],[12,"XtGrabKey","","",211,N],[12,"XtGrabKeyboard","","",211,N],[12,"XtGrabPointer","","",211,N],[12,"XtHasCallbacks","","",211,N],[12,"XtHooksOfDisplay","","",211,N],[12,"XtInitialize","","",211,N],[12,"XtInitializeWidgetClass","","",211,N],[12,"XtInsertEventHandler","","",211,N],[12,"XtInsertEventTypeHandler","","",211,N],[12,"XtInsertRawEventHandler","","",211,N],[12,"XtInstallAccelerators","","",211,N],[12,"XtInstallAllAccelerators","","",211,N],[12,"XtIsApplicationShell","","",211,N],[12,"XtIsComposite","","",211,N],[12,"XtIsConstraint","","",211,N],[12,"XtIsManaged","","",211,N],[12,"XtIsObject","","",211,N],[12,"XtIsOverrideShell","","",211,N],[12,"XtIsRealized","","",211,N],[12,"XtIsRectObj","","",211,N],[12,"XtIsSensitive","","",211,N],[12,"XtIsSessionShell","","",211,N],[12,"XtIsShell","","",211,N],[12,"XtIsSubclass","","",211,N],[12,"XtIsTopLevelShell","","",211,N],[12,"XtIsTransientShell","","",211,N],[12,"XtIsVendorShell","","",211,N],[12,"XtIsWidget","","",211,N],[12,"XtIsWMShell","","",211,N],[12,"XtKeysymToKeycodeList","","",211,N],[12,"XtLastEventProcessed","","",211,N],[12,"XtLastTimestampProcessed","","",211,N],[12,"XtMainLoop","","",211,N],[12,"XtMakeGeometryRequest","","",211,N],[12,"XtMakeResizeRequest","","",211,N],[12,"XtMalloc","","",211,N],[12,"XtManageChild","","",211,N],[12,"XtManageChildren","","",211,N],[12,"XtMapWidget","","",211,N],[12,"XtMenuPopupAction","","",211,N],[12,"XtMergeArgLists","","",211,N],[12,"XtMoveWidget","","",211,N],[12,"XtName","","",211,N],[12,"XtNameToWidget","","",211,N],[12,"XtNewString","","",211,N],[12,"XtNextEvent","","",211,N],[12,"XtNoticeSignal","","",211,N],[12,"XtOpenApplication","","",211,N],[12,"XtOpenDisplay","","",211,N],[12,"XtOverrideTranslations","","",211,N],[12,"XtOwnSelection","","",211,N],[12,"XtOwnSelectionIncremental","","",211,N],[12,"XtParent","","",211,N],[12,"XtParseAcceleratorTable","","",211,N],[12,"XtParseTranslationTable","","",211,N],[12,"XtPeekEvent","","",211,N],[12,"XtPending","","",211,N],[12,"XtPopdown","","",211,N],[12,"XtPopup","","",211,N],[12,"XtPopupSpringLoaded","","",211,N],[12,"XtProcessEvent","","",211,N],[12,"XtProcessLock","","",211,N],[12,"XtProcessUnlock","","",211,N],[12,"XtQueryGeometry","","",211,N],[12,"XtRealizeWidget","","",211,N],[12,"XtRealloc","","",211,N],[12,"XtRegisterCaseConverter","","",211,N],[12,"XtRegisterDrawable","","",211,N],[12,"XtRegisterExtensionSelector","","",211,N],[12,"XtRegisterGrabAction","","",211,N],[12,"XtReleaseGC","","",211,N],[12,"XtReleasePropertyAtom","","",211,N],[12,"XtRemoveActionHook","","",211,N],[12,"XtRemoveAllCallbacks","","",211,N],[12,"XtRemoveBlockHook","","",211,N],[12,"XtRemoveCallback","","",211,N],[12,"XtRemoveCallbacks","","",211,N],[12,"XtRemoveEventHandler","","",211,N],[12,"XtRemoveEventTypeHandler","","",211,N],[12,"XtRemoveGrab","","",211,N],[12,"XtRemoveInput","","",211,N],[12,"XtRemoveRawEventHandler","","",211,N],[12,"XtRemoveSignal","","",211,N],[12,"XtRemoveTimeOut","","",211,N],[12,"XtRemoveWorkProc","","",211,N],[12,"XtReservePropertyAtom","","",211,N],[12,"XtResizeWidget","","",211,N],[12,"XtResizeWindow","","",211,N],[12,"XtResolvePathname","","",211,N],[12,"XtScreen","","",211,N],[12,"XtScreenDatabase","","",211,N],[12,"XtScreenOfObject","","",211,N],[12,"XtSendSelectionRequest","","",211,N],[12,"XtSessionGetToken","","",211,N],[12,"XtSessionReturnToken","","",211,N],[12,"XtSetErrorHandler","","",211,N],[12,"XtSetErrorMsgHandler","","",211,N],[12,"XtSetEventDispatcher","","",211,N],[12,"XtSetKeyboardFocus","","",211,N],[12,"XtSetKeyTranslator","","",211,N],[12,"XtSetLanguageProc","","",211,N],[12,"XtSetMappedWhenManaged","","",211,N],[12,"XtSetMultiClickTime","","",211,N],[12,"XtSetSelectionParameters","","",211,N],[12,"XtSetSelectionTimeout","","",211,N],[12,"XtSetSensitive","","",211,N],[12,"XtSetSubvalues","","",211,N],[12,"XtSetTypeConverter","","",211,N],[12,"XtSetValues","","",211,N],[12,"XtSetWarningHandler","","",211,N],[12,"XtSetWarningMsgHandler","","",211,N],[12,"XtSetWMColormapWindows","","",211,N],[12,"XtStringConversionWarning","","",211,N],[12,"XtSuperclass","","",211,N],[12,"XtToolkitInitialize","","",211,N],[12,"XtToolkitThreadInitialize","","",211,N],[12,"XtTranslateCoords","","",211,N],[12,"XtTranslateKey","","",211,N],[12,"XtTranslateKeycode","","",211,N],[12,"XtUngrabButton","","",211,N],[12,"XtUngrabKey","","",211,N],[12,"XtUngrabKeyboard","","",211,N],[12,"XtUngrabPointer","","",211,N],[12,"XtUninstallTranslations","","",211,N],[12,"XtUnmanageChild","","",211,N],[12,"XtUnmanageChildren","","",211,N],[12,"XtUnmapWidget","","",211,N],[12,"XtUnrealizeWidget","","",211,N],[12,"XtUnregisterDrawable","","",211,N],[12,"XtWarning","","",211,N],[12,"XtWarningMsg","","",211,N],[12,"XtWidgetToApplicationContext","","",211,N],[12,"XtWindow","","",211,N],[12,"XtWindowOfObject","","",211,N],[12,"XtWindowToWidget","","",211,N],[12,"XtAsprintf","","",211,N],[12,"XtVaAppCreateShell","","",211,N],[12,"XtVaAppInitialize","","",211,N],[12,"XtVaCreateArgsList","","",211,N],[12,"XtVaCreateManagedWidget","","",211,N],[12,"XtVaCreatePopupShell","","",211,N],[12,"XtVaCreateWidget","","",211,N],[12,"XtVaGetApplicationResources","","",211,N],[12,"XtVaGetSubresources","","",211,N],[12,"XtVaGetSubvalues","","",211,N],[12,"XtVaGetValues","","",211,N],[12,"XtVaOpenApplication","","",211,N],[12,"XtVaSetSubvalues","","",211,N],[12,"XtVaSetValues","","",211,N],[3,"Arg","","",N,N],[3,"SubstitutionRec","","",N,N],[3,"_TranslationData","","",N,N],[3,"_WidgetClassRec","","",N,N],[3,"_WidgetRec","","",N,N],[3,"_XtActionsRec","","",N,N],[3,"_XtAppStruct","","",N,N],[3,"_XtCallbackRec","","",N,N],[3,"_XtCheckpointTokenRec","","",N,N],[3,"XtConvertArgRec","","",N,N],[3,"_XtResource","","",N,N],[3,"XtWidgetGeometry","","",N,N],[6,"XtCallbackStatus","","",N,N],[6,"XtGeometryResult","","",N,N],[6,"XtGrabKind","","",N,N],[6,"XtListPosition","","",N,N],[6,"ArgList","","",N,N],[6,"Substitution","","",N,N],[6,"Widget","","",N,N],[6,"WidgetClass","","",N,N],[6,"XtAccelerators","","",N,N],[6,"XtActionList","","",N,N],[6,"XtActionsRec","","",N,N],[6,"XtAppContext","","",N,N],[6,"XtCallbackList","","",N,N],[6,"XtCallbackRec","","",N,N],[6,"XtCheckpointToken","","",N,N],[6,"XtCheckpointTokenRec","","",N,N],[6,"XtConvertArgList","","",N,N],[6,"XtResource","","",N,N],[6,"XtResourceList","","",N,N],[6,"XtTranslations","","",N,N],[11,"open","","",211,[[],["result",["xt","openerror"]]]],[0,"xtest","x11_dl","",N,N],[3,"Xf86vmode","x11_dl::xtest","",N,N],[12,"XTestCompareCurrentCursorWithWindow","","",212,N],[12,"XTestCompareCursorWithWindow","","",212,N],[12,"XTestDiscard","","",212,N],[12,"XTestFakeButtonEvent","","",212,N],[12,"XTestFakeDeviceButtonEvent","","",212,N],[12,"XTestFakeDeviceKeyEvent","","",212,N],[12,"XTestFakeDeviceMotionEvent","","",212,N],[12,"XTestFakeKeyEvent","","",212,N],[12,"XTestFakeMotionEvent","","",212,N],[12,"XTestFakeProximityEvent","","",212,N],[12,"XTestFakeRelativeMotionEvent","","",212,N],[12,"XTestGrabControl","","",212,N],[12,"XTestQueryExtension","","",212,N],[12,"XTestSetGContextOfGC","","",212,N],[12,"XTestSetVisualIDOfVisual","","",212,N],[11,"open","","",212,[[],["result",["xf86vmode","openerror"]]]],[0,"xlib_xcb","x11_dl","",N,N],[3,"Xlib_xcb","x11_dl::xlib_xcb","",N,N],[12,"XGetXCBConnection","","",213,N],[6,"xcb_connection_t","","",N,N],[11,"open","","",213,[[],["result",["xlib_xcb","openerror"]]]],[0,"xrandr","x11_dl","",N,N],[3,"Xrandr","x11_dl::xrandr","",N,N],[12,"XRRAddOutputMode","","",214,N],[12,"XRRAllocGamma","","",214,N],[12,"XRRAllocModeInfo","","",214,N],[12,"XRRAllocateMonitor","","",214,N],[12,"XRRChangeOutputProperty","","",214,N],[12,"XRRChangeProviderProperty","","",214,N],[12,"XRRConfigCurrentConfiguration","","",214,N],[12,"XRRConfigCurrentRate","","",214,N],[12,"XRRConfigRates","","",214,N],[12,"XRRConfigRotations","","",214,N],[12,"XRRConfigSizes","","",214,N],[12,"XRRConfigTimes","","",214,N],[12,"XRRConfigureOutputProperty","","",214,N],[12,"XRRConfigureProviderProperty","","",214,N],[12,"XRRCreateMode","","",214,N],[12,"XRRDeleteMonitor","","",214,N],[12,"XRRDeleteOutputMode","","",214,N],[12,"XRRDeleteOutputProperty","","",214,N],[12,"XRRDeleteProviderProperty","","",214,N],[12,"XRRDestroyMode","","",214,N],[12,"XRRFreeCrtcInfo","","",214,N],[12,"XRRFreeGamma","","",214,N],[12,"XRRFreeModeInfo","","",214,N],[12,"XRRFreeMonitors","","",214,N],[12,"XRRFreeOutputInfo","","",214,N],[12,"XRRFreePanning","","",214,N],[12,"XRRFreeProviderInfo","","",214,N],[12,"XRRFreeProviderResources","","",214,N],[12,"XRRFreeScreenConfigInfo","","",214,N],[12,"XRRFreeScreenResources","","",214,N],[12,"XRRGetCrtcGamma","","",214,N],[12,"XRRGetCrtcGammaSize","","",214,N],[12,"XRRGetCrtcInfo","","",214,N],[12,"XRRGetCrtcTransform","","",214,N],[12,"XRRGetMonitors","","",214,N],[12,"XRRGetOutputInfo","","",214,N],[12,"XRRGetOutputPrimary","","",214,N],[12,"XRRGetOutputProperty","","",214,N],[12,"XRRGetPanning","","",214,N],[12,"XRRGetProviderInfo","","",214,N],[12,"XRRGetProviderProperty","","",214,N],[12,"XRRGetProviderResources","","",214,N],[12,"XRRGetScreenInfo","","",214,N],[12,"XRRGetScreenResources","","",214,N],[12,"XRRGetScreenResourcesCurrent","","",214,N],[12,"XRRGetScreenSizeRange","","",214,N],[12,"XRRListOutputProperties","","",214,N],[12,"XRRListProviderProperties","","",214,N],[12,"XRRQueryExtension","","",214,N],[12,"XRRQueryOutputProperty","","",214,N],[12,"XRRQueryProviderProperty","","",214,N],[12,"XRRQueryVersion","","",214,N],[12,"XRRRates","","",214,N],[12,"XRRRootToScreen","","",214,N],[12,"XRRRotations","","",214,N],[12,"XRRSelectInput","","",214,N],[12,"XRRSetCrtcConfig","","",214,N],[12,"XRRSetCrtcGamma","","",214,N],[12,"XRRSetCrtcTransform","","",214,N],[12,"XRRSetMonitor","","",214,N],[12,"XRRSetOutputPrimary","","",214,N],[12,"XRRSetPanning","","",214,N],[12,"XRRSetProviderOffloadSink","","",214,N],[12,"XRRSetProviderOutputSource","","",214,N],[12,"XRRSetScreenConfig","","",214,N],[12,"XRRSetScreenConfigAndRate","","",214,N],[12,"XRRSetScreenSize","","",214,N],[12,"XRRSizes","","",214,N],[12,"XRRTimes","","",214,N],[12,"XRRUpdateConfiguration","","",214,N],[3,"XRRScreenSize","","",N,N],[12,"width","","",215,N],[12,"height","","",215,N],[12,"mwidth","","",215,N],[12,"mheight","","",215,N],[3,"XRRScreenConfiguration","","",N,N],[3,"XRRModeInfo","","",N,N],[12,"id","","",216,N],[12,"width","","",216,N],[12,"height","","",216,N],[12,"dotClock","","",216,N],[12,"hSyncStart","","",216,N],[12,"hSyncEnd","","",216,N],[12,"hTotal","","",216,N],[12,"hSkew","","",216,N],[12,"vSyncStart","","",216,N],[12,"vSyncEnd","","",216,N],[12,"vTotal","","",216,N],[12,"name","","",216,N],[12,"nameLength","","",216,N],[12,"modeFlags","","",216,N],[3,"XRRScreenResources","","",N,N],[12,"timestamp","","",217,N],[12,"configTimestamp","","",217,N],[12,"ncrtc","","",217,N],[12,"crtcs","","",217,N],[12,"noutput","","",217,N],[12,"outputs","","",217,N],[12,"nmode","","",217,N],[12,"modes","","",217,N],[3,"XRROutputInfo","","",N,N],[12,"timestamp","","",218,N],[12,"crtc","","",218,N],[12,"name","","",218,N],[12,"nameLen","","",218,N],[12,"mm_width","","",218,N],[12,"mm_height","","",218,N],[12,"connection","","",218,N],[12,"subpixel_order","","",218,N],[12,"ncrtc","","",218,N],[12,"crtcs","","",218,N],[12,"nclone","","",218,N],[12,"clones","","",218,N],[12,"nmode","","",218,N],[12,"npreferred","","",218,N],[12,"modes","","",218,N],[3,"XRRPropertyInfo","","",N,N],[12,"pending","","",219,N],[12,"range","","",219,N],[12,"immutable","","",219,N],[12,"num_values","","",219,N],[12,"values","","",219,N],[3,"XRRCrtcInfo","","",N,N],[12,"timestamp","","",220,N],[12,"x","","",220,N],[12,"y","","",220,N],[12,"width","","",220,N],[12,"height","","",220,N],[12,"mode","","",220,N],[12,"rotation","","",220,N],[12,"noutput","","",220,N],[12,"outputs","","",220,N],[12,"rotations","","",220,N],[12,"npossible","","",220,N],[12,"possible","","",220,N],[3,"XRRCrtcGamma","","",N,N],[12,"size","","",221,N],[12,"red","","",221,N],[12,"green","","",221,N],[12,"blue","","",221,N],[3,"XRRCrtcTransformAttributes","","",N,N],[12,"pendingTransform","","",222,N],[12,"pendingFilter","","",222,N],[12,"pendingNparams","","",222,N],[12,"pendingParams","","",222,N],[12,"currentTransform","","",222,N],[12,"currentFilter","","",222,N],[12,"currentNparams","","",222,N],[12,"currentParams","","",222,N],[3,"XRRPanning","","",N,N],[12,"timestamp","","",223,N],[12,"left","","",223,N],[12,"top","","",223,N],[12,"width","","",223,N],[12,"height","","",223,N],[12,"track_left","","",223,N],[12,"track_top","","",223,N],[12,"track_width","","",223,N],[12,"track_height","","",223,N],[12,"border_left","","",223,N],[12,"border_top","","",223,N],[12,"border_right","","",223,N],[12,"border_bottom","","",223,N],[3,"XRRProviderResources","","",N,N],[12,"timestamp","","",224,N],[12,"nproviders","","",224,N],[12,"providers","","",224,N],[3,"XRRProviderInfo","","",N,N],[12,"capabilities","","",225,N],[12,"ncrtcs","","",225,N],[12,"crtcs","","",225,N],[12,"noutputs","","",225,N],[12,"outputs","","",225,N],[12,"name","","",225,N],[12,"nassociatedproviders","","",225,N],[12,"associated_providers","","",225,N],[12,"associated_capability","","",225,N],[12,"nameLen","","",225,N],[3,"XRRMonitorInfo","","",N,N],[12,"name","","",226,N],[12,"primary","","",226,N],[12,"automatic","","",226,N],[12,"noutput","","",226,N],[12,"x","","",226,N],[12,"y","","",226,N],[12,"width","","",226,N],[12,"height","","",226,N],[12,"mwidth","","",226,N],[12,"mheight","","",226,N],[12,"outputs","","",226,N],[3,"XRRScreenChangeNotifyEvent","","",N,N],[12,"type_","","",227,N],[12,"serial","","",227,N],[12,"send_event","","",227,N],[12,"display","","",227,N],[12,"window","","",227,N],[12,"root","","",227,N],[12,"timestamp","","",227,N],[12,"config_timestamp","","",227,N],[12,"size_index","","",227,N],[12,"subpixel_order","","",227,N],[12,"rotation","","",227,N],[12,"width","","",227,N],[12,"height","","",227,N],[12,"mwidth","","",227,N],[12,"mheight","","",227,N],[3,"XRRNotifyEvent","","",N,N],[12,"type_","","",228,N],[12,"serial","","",228,N],[12,"send_event","","",228,N],[12,"display","","",228,N],[12,"window","","",228,N],[12,"subtype","","",228,N],[3,"XRROutputChangeNotifyEvent","","",N,N],[12,"type_","","",229,N],[12,"serial","","",229,N],[12,"send_event","","",229,N],[12,"display","","",229,N],[12,"window","","",229,N],[12,"subtype","","",229,N],[12,"output","","",229,N],[12,"crtc","","",229,N],[12,"mode","","",229,N],[12,"rotation","","",229,N],[12,"connection","","",229,N],[12,"subpixel_order","","",229,N],[3,"XRRCrtcChangeNotifyEvent","","",N,N],[12,"type_","","",230,N],[12,"serial","","",230,N],[12,"send_event","","",230,N],[12,"display","","",230,N],[12,"window","","",230,N],[12,"subtype","","",230,N],[12,"crtc","","",230,N],[12,"mode","","",230,N],[12,"rotation","","",230,N],[12,"x","","",230,N],[12,"y","","",230,N],[12,"width","","",230,N],[12,"height","","",230,N],[3,"XRROutputPropertyNotifyEvent","","",N,N],[12,"type_","","",231,N],[12,"serial","","",231,N],[12,"send_event","","",231,N],[12,"display","","",231,N],[12,"window","","",231,N],[12,"subtype","","",231,N],[12,"output","","",231,N],[12,"property","","",231,N],[12,"timestamp","","",231,N],[12,"state","","",231,N],[3,"XRRProviderChangeNotifyEvent","","",N,N],[12,"type_","","",232,N],[12,"serial","","",232,N],[12,"send_event","","",232,N],[12,"display","","",232,N],[12,"window","","",232,N],[12,"subtype","","",232,N],[12,"provider","","",232,N],[12,"timestamp","","",232,N],[12,"current_role","","",232,N],[3,"XRRProviderPropertyNotifyEvent","","",N,N],[12,"type_","","",233,N],[12,"serial","","",233,N],[12,"send_event","","",233,N],[12,"display","","",233,N],[12,"window","","",233,N],[12,"subtype","","",233,N],[12,"provider","","",233,N],[12,"property","","",233,N],[12,"timestamp","","",233,N],[12,"state","","",233,N],[3,"XRRResourceChangeNotifyEvent","","",N,N],[12,"type_","","",234,N],[12,"serial","","",234,N],[12,"send_event","","",234,N],[12,"display","","",234,N],[12,"window","","",234,N],[12,"subtype","","",234,N],[12,"timestamp","","",234,N],[3,"Xrandr_2_2_0","","",N,N],[12,"XRRAddOutputMode","","",235,N],[12,"XRRAllocGamma","","",235,N],[12,"XRRAllocModeInfo","","",235,N],[12,"XRRChangeOutputProperty","","",235,N],[12,"XRRChangeProviderProperty","","",235,N],[12,"XRRConfigCurrentConfiguration","","",235,N],[12,"XRRConfigCurrentRate","","",235,N],[12,"XRRConfigRates","","",235,N],[12,"XRRConfigRotations","","",235,N],[12,"XRRConfigSizes","","",235,N],[12,"XRRConfigTimes","","",235,N],[12,"XRRConfigureOutputProperty","","",235,N],[12,"XRRConfigureProviderProperty","","",235,N],[12,"XRRCreateMode","","",235,N],[12,"XRRDeleteOutputMode","","",235,N],[12,"XRRDeleteOutputProperty","","",235,N],[12,"XRRDeleteProviderProperty","","",235,N],[12,"XRRDestroyMode","","",235,N],[12,"XRRFreeCrtcInfo","","",235,N],[12,"XRRFreeGamma","","",235,N],[12,"XRRFreeModeInfo","","",235,N],[12,"XRRFreeOutputInfo","","",235,N],[12,"XRRFreePanning","","",235,N],[12,"XRRFreeProviderInfo","","",235,N],[12,"XRRFreeProviderResources","","",235,N],[12,"XRRFreeScreenConfigInfo","","",235,N],[12,"XRRFreeScreenResources","","",235,N],[12,"XRRGetCrtcGamma","","",235,N],[12,"XRRGetCrtcGammaSize","","",235,N],[12,"XRRGetCrtcInfo","","",235,N],[12,"XRRGetCrtcTransform","","",235,N],[12,"XRRGetOutputInfo","","",235,N],[12,"XRRGetOutputPrimary","","",235,N],[12,"XRRGetOutputProperty","","",235,N],[12,"XRRGetPanning","","",235,N],[12,"XRRGetProviderInfo","","",235,N],[12,"XRRGetProviderProperty","","",235,N],[12,"XRRGetProviderResources","","",235,N],[12,"XRRGetScreenInfo","","",235,N],[12,"XRRGetScreenResources","","",235,N],[12,"XRRGetScreenResourcesCurrent","","",235,N],[12,"XRRGetScreenSizeRange","","",235,N],[12,"XRRListOutputProperties","","",235,N],[12,"XRRListProviderProperties","","",235,N],[12,"XRRQueryExtension","","",235,N],[12,"XRRQueryOutputProperty","","",235,N],[12,"XRRQueryProviderProperty","","",235,N],[12,"XRRQueryVersion","","",235,N],[12,"XRRRates","","",235,N],[12,"XRRRootToScreen","","",235,N],[12,"XRRRotations","","",235,N],[12,"XRRSelectInput","","",235,N],[12,"XRRSetCrtcConfig","","",235,N],[12,"XRRSetCrtcGamma","","",235,N],[12,"XRRSetCrtcTransform","","",235,N],[12,"XRRSetOutputPrimary","","",235,N],[12,"XRRSetPanning","","",235,N],[12,"XRRSetProviderOffloadSink","","",235,N],[12,"XRRSetProviderOutputSource","","",235,N],[12,"XRRSetScreenConfig","","",235,N],[12,"XRRSetScreenConfigAndRate","","",235,N],[12,"XRRSetScreenSize","","",235,N],[12,"XRRSizes","","",235,N],[12,"XRRTimes","","",235,N],[12,"XRRUpdateConfiguration","","",235,N],[6,"Connection","","",N,N],[6,"Rotation","","",N,N],[6,"SizeID","","",N,N],[6,"SubpixelOrder","","",N,N],[6,"RROutput","","",N,N],[6,"RRCrtc","","",N,N],[6,"RRMode","","",N,N],[6,"RRProvider","","",N,N],[6,"XRRModeFlags","","",N,N],[17,"RANDR_NAME","","",N,N],[17,"RANDR_MAJOR","","",N,N],[17,"RANDR_MINOR","","",N,N],[17,"RRNumberErrors","","",N,N],[17,"RRNumberEvents","","",N,N],[17,"RRNumberRequests","","",N,N],[17,"X_RRQueryVersion","","",N,N],[17,"X_RROldGetScreenInfo","","",N,N],[17,"X_RRSetScreenConfig","","",N,N],[17,"X_RROldScreenChangeSelectInput","","",N,N],[17,"X_RRSelectInput","","",N,N],[17,"X_RRGetScreenInfo","","",N,N],[17,"X_RRGetScreenSizeRange","","",N,N],[17,"X_RRSetScreenSize","","",N,N],[17,"X_RRGetScreenResources","","",N,N],[17,"X_RRGetOutputInfo","","",N,N],[17,"X_RRListOutputProperties","","",N,N],[17,"X_RRQueryOutputProperty","","",N,N],[17,"X_RRConfigureOutputProperty","","",N,N],[17,"X_RRChangeOutputProperty","","",N,N],[17,"X_RRDeleteOutputProperty","","",N,N],[17,"X_RRGetOutputProperty","","",N,N],[17,"X_RRCreateMode","","",N,N],[17,"X_RRDestroyMode","","",N,N],[17,"X_RRAddOutputMode","","",N,N],[17,"X_RRDeleteOutputMode","","",N,N],[17,"X_RRGetCrtcInfo","","",N,N],[17,"X_RRSetCrtcConfig","","",N,N],[17,"X_RRGetCrtcGammaSize","","",N,N],[17,"X_RRGetCrtcGamma","","",N,N],[17,"X_RRSetCrtcGamma","","",N,N],[17,"X_RRGetScreenResourcesCurrent","","",N,N],[17,"X_RRSetCrtcTransform","","",N,N],[17,"X_RRGetCrtcTransform","","",N,N],[17,"X_RRGetPanning","","",N,N],[17,"X_RRSetPanning","","",N,N],[17,"X_RRSetOutputPrimary","","",N,N],[17,"X_RRGetOutputPrimary","","",N,N],[17,"X_RRGetProviders","","",N,N],[17,"X_RRGetProviderInfo","","",N,N],[17,"X_RRSetProviderOffloadSink","","",N,N],[17,"X_RRSetProviderOutputSource","","",N,N],[17,"X_RRListProviderProperties","","",N,N],[17,"X_RRQueryProviderProperty","","",N,N],[17,"X_RRConfigureProviderProperty","","",N,N],[17,"X_RRChangeProviderProperty","","",N,N],[17,"X_RRDeleteProviderProperty","","",N,N],[17,"X_RRGetProviderProperty","","",N,N],[17,"X_RRGetMonitors","","",N,N],[17,"X_RRSetMonitor","","",N,N],[17,"X_RRDeleteMonitor","","",N,N],[17,"RRTransformUnit","","",N,N],[17,"RRTransformScaleUp","","",N,N],[17,"RRTransformScaleDown","","",N,N],[17,"RRTransformProjective","","",N,N],[17,"RRScreenChangeNotifyMask","","",N,N],[17,"RRCrtcChangeNotifyMask","","",N,N],[17,"RROutputChangeNotifyMask","","",N,N],[17,"RROutputPropertyNotifyMask","","",N,N],[17,"RRProviderChangeNotifyMask","","",N,N],[17,"RRProviderPropertyNotifyMask","","",N,N],[17,"RRResourceChangeNotifyMask","","",N,N],[17,"RRScreenChangeNotify","","",N,N],[17,"RRNotify","","",N,N],[17,"RRNotify_CrtcChange","","",N,N],[17,"RRNotify_OutputChange","","",N,N],[17,"RRNotify_OutputProperty","","",N,N],[17,"RRNotify_ProviderChange","","",N,N],[17,"RRNotify_ProviderProperty","","",N,N],[17,"RRNotify_ResourceChange","","",N,N],[17,"RR_Rotate_0","","",N,N],[17,"RR_Rotate_90","","",N,N],[17,"RR_Rotate_180","","",N,N],[17,"RR_Rotate_270","","",N,N],[17,"RR_Reflect_X","","",N,N],[17,"RR_Reflect_Y","","",N,N],[17,"RRSetConfigSuccess","","",N,N],[17,"RRSetConfigInvalidConfigTime","","",N,N],[17,"RRSetConfigInvalidTime","","",N,N],[17,"RRSetConfigFailed","","",N,N],[17,"RR_HSyncPositive","","",N,N],[17,"RR_HSyncNegative","","",N,N],[17,"RR_VSyncPositive","","",N,N],[17,"RR_VSyncNegative","","",N,N],[17,"RR_Interlace","","",N,N],[17,"RR_DoubleScan","","",N,N],[17,"RR_CSync","","",N,N],[17,"RR_CSyncPositive","","",N,N],[17,"RR_CSyncNegative","","",N,N],[17,"RR_HSkewPresent","","",N,N],[17,"RR_BCast","","",N,N],[17,"RR_PixelMultiplex","","",N,N],[17,"RR_DoubleClock","","",N,N],[17,"RR_ClockDivideBy2","","",N,N],[17,"RR_Connected","","",N,N],[17,"RR_Disconnected","","",N,N],[17,"RR_UnknownConnection","","",N,N],[17,"BadRROutput","","",N,N],[17,"BadRRCrtc","","",N,N],[17,"BadRRMode","","",N,N],[17,"BadRRProvider","","",N,N],[17,"RR_PROPERTY_BACKLIGHT","","",N,N],[17,"RR_PROPERTY_RANDR_EDID","","",N,N],[17,"RR_PROPERTY_SIGNAL_FORMAT","","",N,N],[17,"RR_PROPERTY_SIGNAL_PROPERTIES","","",N,N],[17,"RR_PROPERTY_CONNECTOR_TYPE","","",N,N],[17,"RR_PROPERTY_CONNECTOR_NUMBER","","",N,N],[17,"RR_PROPERTY_COMPATIBILITY_LIST","","",N,N],[17,"RR_PROPERTY_CLONE_LIST","","",N,N],[17,"RR_PROPERTY_BORDER","","",N,N],[17,"RR_PROPERTY_BORDER_DIMENSIONS","","",N,N],[17,"RR_PROPERTY_GUID","","",N,N],[17,"RR_PROPERTY_RANDR_TILE","","",N,N],[17,"RR_Capability_None","","",N,N],[17,"RR_Capability_SourceOutput","","",N,N],[17,"RR_Capability_SinkOutput","","",N,N],[17,"RR_Capability_SourceOffload","","",N,N],[17,"RR_Capability_SinkOffload","","",N,N],[11,"open","","",214,[[],["result",["xrandr","openerror"]]]],[11,"fmt","","",215,[[["self"],["formatter"]],["result"]]],[11,"clone","","",215,[[["self"]],["xrrscreensize"]]],[11,"eq","","",215,[[["self"],["xrrscreensize"]],["bool"]]],[11,"ne","","",215,[[["self"],["xrrscreensize"]],["bool"]]],[11,"fmt","","",216,[[["self"],["formatter"]],["result"]]],[11,"clone","","",216,[[["self"]],["xrrmodeinfo"]]],[11,"eq","","",216,[[["self"],["xrrmodeinfo"]],["bool"]]],[11,"ne","","",216,[[["self"],["xrrmodeinfo"]],["bool"]]],[11,"fmt","","",217,[[["self"],["formatter"]],["result"]]],[11,"clone","","",217,[[["self"]],["xrrscreenresources"]]],[11,"eq","","",217,[[["self"],["xrrscreenresources"]],["bool"]]],[11,"ne","","",217,[[["self"],["xrrscreenresources"]],["bool"]]],[11,"fmt","","",218,[[["self"],["formatter"]],["result"]]],[11,"clone","","",218,[[["self"]],["xrroutputinfo"]]],[11,"eq","","",218,[[["self"],["xrroutputinfo"]],["bool"]]],[11,"ne","","",218,[[["self"],["xrroutputinfo"]],["bool"]]],[11,"fmt","","",219,[[["self"],["formatter"]],["result"]]],[11,"clone","","",219,[[["self"]],["xrrpropertyinfo"]]],[11,"eq","","",219,[[["self"],["xrrpropertyinfo"]],["bool"]]],[11,"ne","","",219,[[["self"],["xrrpropertyinfo"]],["bool"]]],[11,"fmt","","",220,[[["self"],["formatter"]],["result"]]],[11,"clone","","",220,[[["self"]],["xrrcrtcinfo"]]],[11,"eq","","",220,[[["self"],["xrrcrtcinfo"]],["bool"]]],[11,"ne","","",220,[[["self"],["xrrcrtcinfo"]],["bool"]]],[11,"fmt","","",221,[[["self"],["formatter"]],["result"]]],[11,"clone","","",221,[[["self"]],["xrrcrtcgamma"]]],[11,"eq","","",221,[[["self"],["xrrcrtcgamma"]],["bool"]]],[11,"ne","","",221,[[["self"],["xrrcrtcgamma"]],["bool"]]],[11,"fmt","","",222,[[["self"],["formatter"]],["result"]]],[11,"clone","","",222,[[["self"]],["xrrcrtctransformattributes"]]],[11,"eq","","",222,[[["self"],["xrrcrtctransformattributes"]],["bool"]]],[11,"ne","","",222,[[["self"],["xrrcrtctransformattributes"]],["bool"]]],[11,"fmt","","",223,[[["self"],["formatter"]],["result"]]],[11,"clone","","",223,[[["self"]],["xrrpanning"]]],[11,"eq","","",223,[[["self"],["xrrpanning"]],["bool"]]],[11,"ne","","",223,[[["self"],["xrrpanning"]],["bool"]]],[11,"fmt","","",224,[[["self"],["formatter"]],["result"]]],[11,"clone","","",224,[[["self"]],["xrrproviderresources"]]],[11,"eq","","",224,[[["self"],["xrrproviderresources"]],["bool"]]],[11,"ne","","",224,[[["self"],["xrrproviderresources"]],["bool"]]],[11,"fmt","","",225,[[["self"],["formatter"]],["result"]]],[11,"clone","","",225,[[["self"]],["xrrproviderinfo"]]],[11,"eq","","",225,[[["self"],["xrrproviderinfo"]],["bool"]]],[11,"ne","","",225,[[["self"],["xrrproviderinfo"]],["bool"]]],[11,"fmt","","",226,[[["self"],["formatter"]],["result"]]],[11,"clone","","",226,[[["self"]],["xrrmonitorinfo"]]],[11,"eq","","",226,[[["self"],["xrrmonitorinfo"]],["bool"]]],[11,"ne","","",226,[[["self"],["xrrmonitorinfo"]],["bool"]]],[11,"fmt","","",227,[[["self"],["formatter"]],["result"]]],[11,"clone","","",227,[[["self"]],["xrrscreenchangenotifyevent"]]],[11,"eq","","",227,[[["self"],["xrrscreenchangenotifyevent"]],["bool"]]],[11,"ne","","",227,[[["self"],["xrrscreenchangenotifyevent"]],["bool"]]],[11,"fmt","","",228,[[["self"],["formatter"]],["result"]]],[11,"clone","","",228,[[["self"]],["xrrnotifyevent"]]],[11,"eq","","",228,[[["self"],["xrrnotifyevent"]],["bool"]]],[11,"ne","","",228,[[["self"],["xrrnotifyevent"]],["bool"]]],[11,"fmt","","",229,[[["self"],["formatter"]],["result"]]],[11,"clone","","",229,[[["self"]],["xrroutputchangenotifyevent"]]],[11,"eq","","",229,[[["self"],["xrroutputchangenotifyevent"]],["bool"]]],[11,"ne","","",229,[[["self"],["xrroutputchangenotifyevent"]],["bool"]]],[11,"fmt","","",230,[[["self"],["formatter"]],["result"]]],[11,"clone","","",230,[[["self"]],["xrrcrtcchangenotifyevent"]]],[11,"eq","","",230,[[["self"],["xrrcrtcchangenotifyevent"]],["bool"]]],[11,"ne","","",230,[[["self"],["xrrcrtcchangenotifyevent"]],["bool"]]],[11,"fmt","","",231,[[["self"],["formatter"]],["result"]]],[11,"clone","","",231,[[["self"]],["xrroutputpropertynotifyevent"]]],[11,"eq","","",231,[[["self"],["xrroutputpropertynotifyevent"]],["bool"]]],[11,"ne","","",231,[[["self"],["xrroutputpropertynotifyevent"]],["bool"]]],[11,"fmt","","",232,[[["self"],["formatter"]],["result"]]],[11,"clone","","",232,[[["self"]],["xrrproviderchangenotifyevent"]]],[11,"eq","","",232,[[["self"],["xrrproviderchangenotifyevent"]],["bool"]]],[11,"ne","","",232,[[["self"],["xrrproviderchangenotifyevent"]],["bool"]]],[11,"fmt","","",233,[[["self"],["formatter"]],["result"]]],[11,"clone","","",233,[[["self"]],["xrrproviderpropertynotifyevent"]]],[11,"eq","","",233,[[["self"],["xrrproviderpropertynotifyevent"]],["bool"]]],[11,"ne","","",233,[[["self"],["xrrproviderpropertynotifyevent"]],["bool"]]],[11,"fmt","","",234,[[["self"],["formatter"]],["result"]]],[11,"clone","","",234,[[["self"]],["xrrresourcechangenotifyevent"]]],[11,"eq","","",234,[[["self"],["xrrresourcechangenotifyevent"]],["bool"]]],[11,"ne","","",234,[[["self"],["xrrresourcechangenotifyevent"]],["bool"]]],[11,"as_mut","x11_dl::xlib","",99,[[["self"]],["xrrscreenchangenotifyevent"]]],[11,"as_ref","","",99,[[["self"]],["xrrscreenchangenotifyevent"]]],[11,"from","","",99,[[["xrrscreenchangenotifyevent"]],["xevent"]]],[11,"from","","",99,[[["xrrscreenchangenotifyevent"]],["xevent"]]],[11,"from","x11_dl::xrandr","",227,[[["xevent"]],["xrrscreenchangenotifyevent"]]],[11,"from","","",227,[[["xevent"]],["xrrscreenchangenotifyevent"]]],[11,"as_mut","x11_dl::xlib","",99,[[["self"]],["xrrnotifyevent"]]],[11,"as_ref","","",99,[[["self"]],["xrrnotifyevent"]]],[11,"from","","",99,[[["xrrnotifyevent"]],["xevent"]]],[11,"from","","",99,[[["xrrnotifyevent"]],["xevent"]]],[11,"from","x11_dl::xrandr","",228,[[["xevent"]],["xrrnotifyevent"]]],[11,"from","","",228,[[["xevent"]],["xrrnotifyevent"]]],[11,"as_mut","x11_dl::xlib","",99,[[["self"]],["xrroutputchangenotifyevent"]]],[11,"as_ref","","",99,[[["self"]],["xrroutputchangenotifyevent"]]],[11,"from","","",99,[[["xrroutputchangenotifyevent"]],["xevent"]]],[11,"from","","",99,[[["xrroutputchangenotifyevent"]],["xevent"]]],[11,"from","x11_dl::xrandr","",229,[[["xevent"]],["xrroutputchangenotifyevent"]]],[11,"from","","",229,[[["xevent"]],["xrroutputchangenotifyevent"]]],[11,"as_mut","x11_dl::xlib","",99,[[["self"]],["xrrcrtcchangenotifyevent"]]],[11,"as_ref","","",99,[[["self"]],["xrrcrtcchangenotifyevent"]]],[11,"from","","",99,[[["xrrcrtcchangenotifyevent"]],["xevent"]]],[11,"from","","",99,[[["xrrcrtcchangenotifyevent"]],["xevent"]]],[11,"from","x11_dl::xrandr","",230,[[["xevent"]],["xrrcrtcchangenotifyevent"]]],[11,"from","","",230,[[["xevent"]],["xrrcrtcchangenotifyevent"]]],[11,"as_mut","x11_dl::xlib","",99,[[["self"]],["xrroutputpropertynotifyevent"]]],[11,"as_ref","","",99,[[["self"]],["xrroutputpropertynotifyevent"]]],[11,"from","","",99,[[["xrroutputpropertynotifyevent"]],["xevent"]]],[11,"from","","",99,[[["xrroutputpropertynotifyevent"]],["xevent"]]],[11,"from","x11_dl::xrandr","",231,[[["xevent"]],["xrroutputpropertynotifyevent"]]],[11,"from","","",231,[[["xevent"]],["xrroutputpropertynotifyevent"]]],[11,"as_mut","x11_dl::xlib","",99,[[["self"]],["xrrproviderchangenotifyevent"]]],[11,"as_ref","","",99,[[["self"]],["xrrproviderchangenotifyevent"]]],[11,"from","","",99,[[["xrrproviderchangenotifyevent"]],["xevent"]]],[11,"from","","",99,[[["xrrproviderchangenotifyevent"]],["xevent"]]],[11,"from","x11_dl::xrandr","",232,[[["xevent"]],["xrrproviderchangenotifyevent"]]],[11,"from","","",232,[[["xevent"]],["xrrproviderchangenotifyevent"]]],[11,"as_mut","x11_dl::xlib","",99,[[["self"]],["xrrproviderpropertynotifyevent"]]],[11,"as_ref","","",99,[[["self"]],["xrrproviderpropertynotifyevent"]]],[11,"from","","",99,[[["xrrproviderpropertynotifyevent"]],["xevent"]]],[11,"from","","",99,[[["xrrproviderpropertynotifyevent"]],["xevent"]]],[11,"from","x11_dl::xrandr","",233,[[["xevent"]],["xrrproviderpropertynotifyevent"]]],[11,"from","","",233,[[["xevent"]],["xrrproviderpropertynotifyevent"]]],[11,"as_mut","x11_dl::xlib","",99,[[["self"]],["xrrresourcechangenotifyevent"]]],[11,"as_ref","","",99,[[["self"]],["xrrresourcechangenotifyevent"]]],[11,"from","","",99,[[["xrrresourcechangenotifyevent"]],["xevent"]]],[11,"from","","",99,[[["xrrresourcechangenotifyevent"]],["xevent"]]],[11,"from","x11_dl::xrandr","",234,[[["xevent"]],["xrrresourcechangenotifyevent"]]],[11,"from","","",234,[[["xevent"]],["xrrresourcechangenotifyevent"]]],[11,"open","","",235,[[],["result",["xrandr_2_2_0","openerror"]]]]],"paths":[[4,"OpenErrorKind"],[3,"OpenError"],[3,"Xlib"],[3,"XAnyEvent"],[3,"XButtonEvent"],[3,"XCirculateEvent"],[3,"XCirculateRequestEvent"],[3,"XClientMessageEvent"],[3,"XColormapEvent"],[3,"XConfigureEvent"],[3,"XConfigureRequestEvent"],[3,"XCreateWindowEvent"],[3,"XCrossingEvent"],[3,"XDestroyWindowEvent"],[3,"XErrorEvent"],[3,"XExposeEvent"],[3,"XFocusChangeEvent"],[3,"XGraphicsExposeEvent"],[3,"XGravityEvent"],[3,"XKeyEvent"],[3,"XKeymapEvent"],[3,"XMapEvent"],[3,"XMappingEvent"],[3,"XMapRequestEvent"],[3,"XMotionEvent"],[3,"XNoExposeEvent"],[3,"XPropertyEvent"],[3,"XReparentEvent"],[3,"XResizeRequestEvent"],[3,"XSelectionClearEvent"],[3,"XSelectionEvent"],[3,"XSelectionRequestEvent"],[3,"XUnmapEvent"],[3,"XVisibilityEvent"],[3,"_XkbCompatMapRec"],[3,"_XkbDesc"],[3,"_XkbIndicatorRec"],[3,"_XkbKeyAliasRec"],[3,"_XkbKeyNameRec"],[3,"_XkbNamesRec"],[3,"XkbAnyEvent"],[3,"XkbNewKeyboardNotifyEvent"],[3,"_XkbMapNotifyEvent"],[3,"XkbStateNotifyEvent"],[3,"_XkbControlsNotifyEvent"],[3,"XkbIndicatorNotifyEvent"],[3,"_XkbNamesNotifyEvent"],[3,"XkbCompatMapNotifyEvent"],[3,"XkbBellNotifyEvent"],[3,"XkbActionMessageEvent"],[3,"XkbAccessXNotifyEvent"],[3,"_XkbExtensionDeviceNotifyEvent"],[3,"Depth"],[3,"Screen"],[3,"ScreenFormat"],[3,"Visual"],[3,"XArc"],[3,"XChar2b"],[3,"XCharStruct"],[3,"XClassHint"],[3,"XColor"],[3,"XComposeStatus"],[3,"XExtCodes"],[3,"XExtData"],[3,"XFontProp"],[3,"XFontSetExtents"],[3,"XFontStruct"],[3,"XGCValues"],[3,"XGenericEventCookie"],[3,"XHostAddress"],[3,"XIconSize"],[3,"XImage"],[3,"XKeyboardControl"],[3,"XKeyboardState"],[3,"XmbTextItem"],[3,"XModifierKeymap"],[3,"XOMCharSetList"],[3,"XPixmapFormatValues"],[3,"XPoint"],[3,"XRectangle"],[3,"XrmOptionDescRec"],[3,"XrmValue"],[3,"XSegment"],[3,"XSetWindowAttributes"],[3,"XSizeHints"],[3,"XStandardColormap"],[3,"XTextItem"],[3,"XTextItem16"],[3,"XTextProperty"],[3,"XTimeCoord"],[3,"XVisualInfo"],[3,"XwcTextItem"],[3,"XWindowAttributes"],[3,"XWindowChanges"],[3,"XWMHints"],[3,"XIMCallback"],[3,"XICCallback"],[3,"AspectRatio"],[3,"ImageFns"],[19,"XEvent"],[3,"XkbEvent"],[3,"ClientMessageData"],[3,"Xext"],[3,"Glx"],[3,"Xcursor"],[3,"_XcursorAnimate"],[3,"_XcursorChunkHeader"],[3,"_XcursorComment"],[3,"_XcursorComments"],[3,"_XcursorCursors"],[3,"_XcursorFile"],[3,"_XcursorFileHeader"],[3,"_XcursorFileToc"],[3,"_XcursorImage"],[3,"_XcursorImages"],[3,"Xf86vmode"],[3,"XF86VidModeGamma"],[3,"XF86VidModeModeInfo"],[3,"XF86VidModeModeLine"],[3,"XF86VidModeMonitor"],[3,"XF86VidModeSyncRange"],[3,"XF86VidModeNotifyEvent"],[3,"Xft"],[3,"XftFont"],[3,"XftColor"],[3,"XftCharSpec"],[3,"XftCharFontSpec"],[3,"XftFontSet"],[3,"XftGlyphSpec"],[3,"XftGlyphFontSpec"],[4,"FcEndian"],[4,"FcResult"],[3,"Xlib"],[3,"XineramaScreenInfo"],[3,"XPanoramiXInfo"],[3,"XInput"],[3,"XDevice"],[3,"XDeviceControl"],[3,"XDeviceInfo"],[3,"XDeviceState"],[3,"XDeviceTimeCoord"],[3,"XExtensionVersion"],[3,"XFeedbackControl"],[3,"XFeedbackState"],[3,"XInputClass"],[3,"XInputClassInfo"],[3,"XInput2"],[3,"XIAddMasterInfo"],[3,"XIRemoveMasterInfo"],[3,"XIAttachSlaveInfo"],[3,"XIDetachSlaveInfo"],[3,"XIAnyHierarchyChangeInfo"],[3,"XIModifierState"],[3,"XIButtonState"],[3,"XIValuatorState"],[3,"XIEventMask"],[3,"XIAnyClassInfo"],[3,"XIButtonClassInfo"],[3,"XIKeyClassInfo"],[3,"XIValuatorClassInfo"],[3,"XIScrollClassInfo"],[3,"XITouchClassInfo"],[3,"XIDeviceInfo"],[3,"XIGrabModifiers"],[3,"XIBarrierReleasePointerInfo"],[3,"XIEvent"],[3,"XIHierarchyInfo"],[3,"XIHierarchyEvent"],[3,"XIDeviceChangedEvent"],[3,"XIDeviceEvent"],[3,"XIRawEvent"],[3,"XIEnterEvent"],[3,"XIPropertyEvent"],[3,"XITouchOwnershipEvent"],[3,"XIBarrierEvent"],[3,"Xmu"],[3,"Xf86vmode"],[3,"XRecordClientInfo"],[3,"XRecordExtRange"],[3,"XRecordInterceptData"],[3,"XRecordRange"],[3,"XRecordRange8"],[3,"XRecordRange16"],[3,"XRecordState"],[3,"Xrender"],[3,"_XAnimCursor"],[3,"_XCircle"],[3,"_XConicalGradient"],[3,"_XFilters"],[3,"_XGlyphElt8"],[3,"_XGlyphElt16"],[3,"_XGlyphElt32"],[3,"_XGlyphInfo"],[3,"_XIndexValue"],[3,"_XLinearGradient"],[3,"_XLineFixed"],[3,"_XPointDouble"],[3,"_XPointFixed"],[3,"_XRadialGradient"],[3,"XRenderColor"],[3,"XRenderDirectFormat"],[3,"XRenderPictFormat"],[3,"_XRenderPictureAttributes"],[3,"_XSpanFix"],[3,"_XTrap"],[3,"_XTrapezoid"],[3,"_XTriangle"],[3,"_XTransform"],[3,"Xss"],[3,"XScreenSaverInfo"],[3,"XScreenSaverNotifyEvent"],[3,"Xt"],[3,"Xf86vmode"],[3,"Xlib_xcb"],[3,"Xrandr"],[3,"XRRScreenSize"],[3,"XRRModeInfo"],[3,"XRRScreenResources"],[3,"XRROutputInfo"],[3,"XRRPropertyInfo"],[3,"XRRCrtcInfo"],[3,"XRRCrtcGamma"],[3,"XRRCrtcTransformAttributes"],[3,"XRRPanning"],[3,"XRRProviderResources"],[3,"XRRProviderInfo"],[3,"XRRMonitorInfo"],[3,"XRRScreenChangeNotifyEvent"],[3,"XRRNotifyEvent"],[3,"XRROutputChangeNotifyEvent"],[3,"XRRCrtcChangeNotifyEvent"],[3,"XRROutputPropertyNotifyEvent"],[3,"XRRProviderChangeNotifyEvent"],[3,"XRRProviderPropertyNotifyEvent"],[3,"XRRResourceChangeNotifyEvent"],[3,"Xrandr_2_2_0"]]};
initSearch(searchIndex);
