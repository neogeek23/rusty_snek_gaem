{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,97,100,95,99,111,108,111,114,45,49,46,48,46,48],"program":"/home/brad/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","read_color","/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=2cfb16539645d3ec","-C","extra-filename=-2cfb16539645d3ec","--out-dir","/home/brad/Development/rusty_snek_gaem/target/rls/debug/deps","-L","dependency=/home/brad/Development/rusty_snek_gaem/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/brad/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":[47,104,111,109,101,47,98,114,97,100,47,68,101,118,101,108,111,112,109,101,110,116,47,114,117,115,116,121,95,115,110,101,107,95,103,97,101,109,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,114,101,97,100,95,99,111,108,111,114,45,50,99,102,98,49,54,53,51,57,54,52,53,100,51,101,99,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"read_color","disambiguator":[16307546150682782146,4148977250215927969]},"crate_root":"/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src","external_crates":[{"file_name":"/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[13207157035321610514,1601512537482633728]}},{"file_name":"/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[7623312343418098386,5842227285171027081]}},{"file_name":"/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15062483144693841030,3160817630090790886]}},{"file_name":"/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[436745421963593417,1808485874600938246]}},{"file_name":"/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14785001670989826495,12996925471203689162]}},{"file_name":"/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9965434524793337566,8042345761937100773]}},{"file_name":"/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[15482981957725683232,16126164733460801089]}},{"file_name":"/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[12401856028840807657,14789254441426287527]}},{"file_name":"/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[13858858106744831426,15797026455235720829]}},{"file_name":"/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[7931781289263694084,224457116430056702]}}],"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,97,100,95,99,111,108,111,114,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":2450,"line_start":1,"line_end":100,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,97,100,95,99,111,108,111,114,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":2450,"line_start":1,"line_end":100,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/read_color-1.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18}],"decl_id":null,"docs":" A simple library for reading hex colors.\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,97,100,95,99,111,108,111,114,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":22,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":8},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,97,100,95,99,111,108,111,114,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":141,"byte_end":152,"line_start":8,"line_end":8,"column_start":8,"column_end":19},"name":"char_to_hex","qualname":"::char_to_hex","value":"fn (ch: char) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Converts a character into a u8 value.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":10},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,97,100,95,99,111,108,111,114,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":630,"byte_end":633,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"hex","qualname":"::hex","value":"fn (chars: &mut Chars) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Reads a hex value from an iterator of characters.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":12},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,97,100,95,99,111,108,111,114,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":846,"byte_end":854,"line_start":39,"line_end":39,"column_start":8,"column_end":16},"name":"hex_pair","qualname":"::hex_pair","value":"fn (chars: &mut Chars) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Reads a pair of hex values, joining them in value range 0-255.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":14},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,97,100,95,99,111,108,111,114,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1165,"byte_end":1168,"line_start":52,"line_end":52,"column_start":8,"column_end":11},"name":"rgb","qualname":"::rgb","value":"fn (chars: &mut Chars) -> Option<[u8; 3]>","parent":null,"children":[],"decl_id":null,"docs":" Reads RGB colors from iterator of characters.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":16},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,97,100,95,99,111,108,111,114,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1599,"byte_end":1603,"line_start":69,"line_end":69,"column_start":8,"column_end":12},"name":"rgba","qualname":"::rgba","value":"fn (chars: &mut Chars) -> Option<[u8; 4]>","parent":null,"children":[],"decl_id":null,"docs":" Reads RGBA colors from iterator of characters.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":18},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,97,100,95,99,111,108,111,114,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2154,"byte_end":2165,"line_start":90,"line_end":90,"column_start":8,"column_end":19},"name":"rgb_maybe_a","qualname":"::rgb_maybe_a","value":"fn (chars: &mut Chars) -> Option<([u8; 3], Option<u8>)>","parent":null,"children":[],"decl_id":null,"docs":" Reads RGB with optional alpha from iterator of characters.\n","sig":null,"attributes":[]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}