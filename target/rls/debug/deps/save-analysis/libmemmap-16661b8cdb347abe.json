{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"memmap","disambiguator":[2627618738625383978,14983331846856237674]},"crate_root":"/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.6.2/src","external_crates":[{"file_name":"/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.6.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9585301629330894657,2988139860475965212]}},{"file_name":"/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.6.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[6357402705278437736,15396228000174385779]}},{"file_name":"/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.6.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15656677349667522462,981408973859384302]}},{"file_name":"/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.6.2/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[10867707675671826130,15962273691783661441]}},{"file_name":"/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.6.2/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[12150198854270067491,9945263365427243254]}},{"file_name":"/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.6.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8689393118962671966,13316658367717829988]}},{"file_name":"/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.6.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[11087397179380250019,16173628695450963038]}},{"file_name":"/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.6.2/src/lib.rs","num":8,"id":{"name":"alloc_jemalloc","disambiguator":[15668163579258084147,15586271759104334837]}},{"file_name":"/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.6.2/src/lib.rs","num":9,"id":{"name":"panic_unwind","disambiguator":[5446911583689922829,16172663846372972649]}},{"file_name":"/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.6.2/src/unix.rs","num":10,"id":{"name":"libc","disambiguator":[10362433695265254093,12413538083043142068]}}],"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":30589,"line_start":1,"line_end":1017,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":30589,"line_start":1,"line_end":1017,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/brad/.cargo/registry/src/github.com-1ecc6299db9ec823/memmap-0.6.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":180},{"krate":0,"index":190},{"krate":0,"index":186},{"krate":0,"index":182},{"krate":0,"index":94},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":124},{"krate":0,"index":130},{"krate":0,"index":134},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":158},{"krate":0,"index":164},{"krate":0,"index":168},{"krate":0,"index":172},{"krate":0,"index":176}],"decl_id":null,"docs":" A cross-platform Rust API for memory mapped buffers.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":180},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":808,"byte_end":819,"line_start":30,"line_end":30,"column_start":12,"column_end":23},"name":"MmapOptions","qualname":"::MmapOptions","value":"MmapOptions {  }","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":43}],"decl_id":null,"docs":" A memory map builder, providing advanced options and flags for specifying memory map behavior.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1809,"byte_end":1812,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"new","qualname":"<MmapOptions>::new","value":"fn () -> MmapOptions","parent":null,"children":[],"decl_id":null,"docs":" Creates a new set of options for configuring and creating a memory map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2611,"byte_end":2617,"line_start":89,"line_end":89,"column_start":12,"column_end":18},"name":"offset","qualname":"<MmapOptions>::offset","value":"fn (&mut self, offset: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the memory map to start at byte `offset` from the beginning of the file.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3410,"byte_end":3413,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"len","qualname":"<MmapOptions>::len","value":"fn (&mut self, len: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the created memory mapped buffer to be `len` bytes long.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4530,"byte_end":4535,"line_start":153,"line_end":153,"column_start":12,"column_end":17},"name":"stack","qualname":"<MmapOptions>::stack","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Configures the anonymous memory map to be suitable for a process or thread stack.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5459,"byte_end":5462,"line_start":187,"line_end":187,"column_start":19,"column_end":22},"name":"map","qualname":"<MmapOptions>::map","value":"fn (&self, file: &File) -> Result<Mmap>","parent":null,"children":[],"decl_id":null,"docs":" Creates a read-only memory map backed by a file.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5912,"byte_end":5920,"line_start":197,"line_end":197,"column_start":19,"column_end":27},"name":"map_exec","qualname":"<MmapOptions>::map_exec","value":"fn (&self, file: &File) -> Result<Mmap>","parent":null,"children":[],"decl_id":null,"docs":" Creates a readable and executable memory map backed by a file.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7171,"byte_end":7178,"line_start":236,"line_end":236,"column_start":19,"column_end":26},"name":"map_mut","qualname":"<MmapOptions>::map_mut","value":"fn (&self, file: &File) -> Result<MmapMut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a writeable memory map backed by a file.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8243,"byte_end":8251,"line_start":266,"line_end":266,"column_start":19,"column_end":27},"name":"map_copy","qualname":"<MmapOptions>::map_copy","value":"fn (&self, file: &File) -> Result<MmapMut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a copy-on-write memory map backed by a file.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8740,"byte_end":8748,"line_start":279,"line_end":279,"column_start":12,"column_end":20},"name":"map_anon","qualname":"<MmapOptions>::map_anon","value":"fn (&self) -> Result<MmapMut>","parent":null,"children":[],"decl_id":null,"docs":" Creates an anonymous memory map.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":116},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9700,"byte_end":9704,"line_start":309,"line_end":309,"column_start":12,"column_end":16},"name":"Mmap","qualname":"::Mmap","value":"Mmap {  }","parent":null,"children":[{"krate":0,"index":35}],"decl_id":null,"docs":" An immutable memory mapped buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10641,"byte_end":10644,"line_start":344,"line_end":344,"column_start":19,"column_end":22},"name":"map","qualname":"<Mmap>::map","value":"fn (file: &File) -> Result<Mmap>","parent":null,"children":[],"decl_id":null,"docs":" Creates a read-only memory map backed by a file.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12112,"byte_end":12120,"line_start":386,"line_end":386,"column_start":12,"column_end":20},"name":"make_mut","qualname":"<Mmap>::make_mut","value":"fn (mut self) -> Result<MmapMut>","parent":null,"children":[],"decl_id":null,"docs":" Transition the memory map to be writable.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":138},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13072,"byte_end":13079,"line_start":424,"line_end":424,"column_start":12,"column_end":19},"name":"MmapMut","qualname":"::MmapMut","value":"MmapMut {  }","parent":null,"children":[{"krate":0,"index":37}],"decl_id":null,"docs":" A mutable memory mapped buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14387,"byte_end":14394,"line_start":467,"line_end":467,"column_start":19,"column_end":26},"name":"map_mut","qualname":"<MmapMut>::map_mut","value":"fn (file: &File) -> Result<MmapMut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a writeable memory map backed by a file.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14729,"byte_end":14737,"line_start":478,"line_end":478,"column_start":12,"column_end":20},"name":"map_anon","qualname":"<MmapMut>::map_anon","value":"fn (length: usize) -> Result<MmapMut>","parent":null,"children":[],"decl_id":null,"docs":" Creates an anonymous memory map.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15962,"byte_end":15967,"line_start":515,"line_end":515,"column_start":12,"column_end":17},"name":"flush","qualname":"<MmapMut>::flush","value":"fn (&self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Flushes outstanding memory map modifications to disk.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16396,"byte_end":16407,"line_start":525,"line_end":525,"column_start":12,"column_end":23},"name":"flush_async","qualname":"<MmapMut>::flush_async","value":"fn (&self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously flushes outstanding memory map modifications to disk.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17094,"byte_end":17105,"line_start":539,"line_end":539,"column_start":12,"column_end":23},"name":"flush_range","qualname":"<MmapMut>::flush_range","value":"fn (&self, offset: usize, len: usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Flushes outstanding memory map modifications in the range to disk.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17797,"byte_end":17814,"line_start":552,"line_end":552,"column_start":12,"column_end":29},"name":"flush_async_range","qualname":"<MmapMut>::flush_async_range","value":"fn (&self, offset: usize, len: usize) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously flushes outstanding memory map modifications in the range to disk.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18821,"byte_end":18835,"line_start":585,"line_end":585,"column_start":12,"column_end":26},"name":"make_read_only","qualname":"<MmapMut>::make_read_only","value":"fn (mut self) -> Result<Mmap>","parent":null,"children":[],"decl_id":null,"docs":" Returns an immutable version of this memory mapped buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19359,"byte_end":19368,"line_start":598,"line_end":598,"column_start":12,"column_end":21},"name":"make_exec","qualname":"<MmapMut>::make_exec","value":"fn (mut self) -> Result<Mmap>","parent":null,"children":[],"decl_id":null,"docs":" Transition the memory map to be readable and executable.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,117,110,105,120,46,114,115],"byte_start":31102,"byte_end":31111,"line_start":20,"line_end":20,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,117,110,105,120,46,114,115],"byte_start":35811,"byte_end":35820,"line_start":187,"line_end":187,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,117,110,105,120,46,114,115],"byte_start":36258,"byte_end":36267,"line_start":203,"line_end":203,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,117,110,105,120,46,114,115],"byte_start":36292,"byte_end":36301,"line_start":204,"line_end":204,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":890,"byte_end":901,"line_start":36,"line_end":36,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9737,"byte_end":9741,"line_start":313,"line_end":313,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12250,"byte_end":12254,"line_start":392,"line_end":392,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12434,"byte_end":12438,"line_start":401,"line_end":401,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12537,"byte_end":12541,"line_start":408,"line_end":408,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13112,"byte_end":13119,"line_start":428,"line_end":428,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19493,"byte_end":19500,"line_start":604,"line_end":604,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19677,"byte_end":19684,"line_start":613,"line_end":613,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19859,"byte_end":19866,"line_start":620,"line_end":620,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19966,"byte_end":19973,"line_start":627,"line_end":627,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20084,"byte_end":20091,"line_start":634,"line_end":634,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,117,110,105,120,46,114,115],"byte_start":31102,"byte_end":31111,"line_start":20,"line_end":20,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":26},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,117,110,105,120,46,114,115],"byte_start":35811,"byte_end":35820,"line_start":187,"line_end":187,"column_start":15,"column_end":24},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":26},"to":{"krate":2,"index":1984}},{"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,117,110,105,120,46,114,115],"byte_start":36258,"byte_end":36267,"line_start":203,"line_end":203,"column_start":22,"column_end":31},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":26},"to":{"krate":2,"index":1724}},{"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,117,110,105,120,46,114,115],"byte_start":36292,"byte_end":36301,"line_start":204,"line_end":204,"column_start":22,"column_end":31},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":26},"to":{"krate":2,"index":1712}},{"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":890,"byte_end":901,"line_start":36,"line_end":36,"column_start":6,"column_end":17},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9737,"byte_end":9741,"line_start":313,"line_end":313,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12250,"byte_end":12254,"line_start":392,"line_end":392,"column_start":16,"column_end":20},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":116},"to":{"krate":2,"index":1956}},{"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12434,"byte_end":12438,"line_start":401,"line_end":401,"column_start":22,"column_end":26},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":116},"to":{"krate":2,"index":2622}},{"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12537,"byte_end":12541,"line_start":408,"line_end":408,"column_start":21,"column_end":25},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":116},"to":{"krate":2,"index":7828}},{"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13112,"byte_end":13119,"line_start":428,"line_end":428,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":138},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19493,"byte_end":19500,"line_start":604,"line_end":604,"column_start":16,"column_end":23},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":138},"to":{"krate":2,"index":1956}},{"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19677,"byte_end":19684,"line_start":613,"line_end":613,"column_start":19,"column_end":26},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":138},"to":{"krate":2,"index":1974}},{"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19859,"byte_end":19866,"line_start":620,"line_end":620,"column_start":22,"column_end":29},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":138},"to":{"krate":2,"index":2622}},{"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19966,"byte_end":19973,"line_start":627,"line_end":627,"column_start":22,"column_end":29},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":138},"to":{"krate":2,"index":2626}},{"span":{"file_name":[47,104,111,109,101,47,98,114,97,100,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,109,101,109,109,97,112,45,48,46,54,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20084,"byte_end":20091,"line_start":634,"line_end":634,"column_start":21,"column_end":28},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":138},"to":{"krate":2,"index":7828}}]}